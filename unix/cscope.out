cscope 15 $HOME/Desktop/umoria/unix               0001199526
	@config.h

9 
	#CONFIG_H_INCLUDED


	)

10 #ifde‡
CONSTANT_H_INCLUDED


11 
	gC⁄°™t
.
h
 
should
 
Æways
 
be
 
ö˛uded
 
a·î
 
	gc⁄fig
.
	gh
, 
beˇu£
 
ô
 
u£s


12 
some
 
of
 
the
 
sy°em
 
deföes
 
£t
 
up
 
	ghîe
.

17 
	#WIZARD
 "David Gøböî"

	)

60 #ifde‡
THINK_C


61 
	#MAC


	)

65 #ifde‡
M_XENIX


66 
	#SYS_V


	)

67 
	#unix


	)

71 #ifde‡
__hpux


72 
	#HPUX


	)

83 #i‡
deföed
(
MSDOS
Ë&& deföed(
__TURBOC__
)

84 
	#USING_TCIO


	)

90 #ifde‡
MSDOS


92 
	#MORIA_SAV
 
m‹üßv


	)

93 
	#MORIA_TOP
 
m‹üt›


	)

94 
	#MORIA_MOR
 "√ws"

	)

95 
	#MORIA_TOP_NAME
 "sc‹es"

	)

96 
	#MORIA_SAV_NAME
 "MORIA.SAV"

	)

97 
	#MORIA_CNF_NAME
 "MORIA.CNF"

	)

98 
	#MORIA_HELP
 "roglcmds.hÕ"

	)

99 
	#MORIA_ORIG_HELP
 "‹igcmds.hÕ"

	)

100 
	#MORIA_WIZ_HELP
 "rwizcmds.hÕ"

	)

101 
	#MORIA_OWIZ_HELP
 "owizcmds.hÕ"

	)

102 
	#MORIA_WELCOME
 "wñcome.hÕ"

	)

103 
	#MORIA_VER
 "vîsi⁄.hÕ"

	)

106 #ifde‡
MAC


110 
	#MORIA_MOR
 "√ws"

	)

111 
	#MORIA_HELP
 "roglcmds.hÕ"

	)

112 
	#MORIA_ORIG_HELP
 "‹igcmds.hÕ"

	)

113 
	#MORIA_WIZ_HELP
 "rwizcmds.hÕ"

	)

114 
	#MORIA_OWIZ_HELP
 "owizcmds.hÕ"

	)

115 
	#MORIA_WELCOME
 "wñcome.hÕ"

	)

116 
	#MORIA_VER
 "vîsi⁄.hÕ"

	)

118 
	#MORIA_TOP
 "M‹ü High Sc‹es"

	)

120 
	#MORIA_FCREATOR
 'MRIA'

	)

121 
	#SAVE_FTYPE
 'SAVE'

	)

122 
	#INFO_FTYPE
 'TEXT'

	)

123 
	#SCORE_FTYPE
 'SCOR'

	)

124 
	#CONFIG_FTYPE
 'CNFG'

	)

131 #ifde‡
THINK_C


142 #ifde‡
VMS


143 
	#MORIA_SAV
 "m‹ü.ßv"

	)

146 
	#MORIA_HOU
 "m‹ü:hours."

	)

147 
	#MORIA_MOR
 "m‹ü:√ws."

	)

148 
	#MORIA_TOP
 "m‹ü:sc‹es."

	)

149 
	#MORIA_HELP
 "m‹ü:roglcmds.hÕ"

	)

150 
	#MORIA_ORIG_HELP
 "m‹ü:‹igcmds.hÕ"

	)

151 
	#MORIA_WIZ_HELP
 "m‹ü:rwizcmds.hÕ"

	)

152 
	#MORIA_OWIZ_HELP
 "m‹ü:owizcmds.hÕ"

	)

153 
	#MORIA_WELCOME
 "m‹ü:wñcome.hÕ"

	)

154 
	#MORIA_VER
 "m‹ü:vîsi⁄.hÕ"

	)

158 #ifde‡
AMIGA


159 
	#MORIA_SAV
 "m‹ü.ßv"

	)

160 
	#MORIA_HOU
 "m‹ü:hours"

	)

161 
	#MORIA_MOR
 "m‹ü:√ws"

	)

162 
	#MORIA_TOP
 "m‹ü:sc‹es"

	)

163 
	#MORIA_HELP
 "m‹ü:roglcmds.hÕ"

	)

164 
	#MORIA_ORIG_HELP
 "m‹ü:‹igcmds.hÕ"

	)

165 
	#MORIA_WIZ_HELP
 "m‹ü:rwizcmds.hÕ"

	)

166 
	#MORIA_OWIZ_HELP
 "m‹ü:owizcmds.hÕ"

	)

167 
	#MORIA_WELCOME
 "m‹ü:wñcome.hÕ"

	)

168 
	#MORIA_VER
 "m‹ü:vîsi⁄.hÕ"

	)

171 #i‡
deföed
(
GEMDOS
)

173 
	#MORIA_SAV
 "m‹ü.ßv"

	)

174 
	#MORIA_HOU
 "fûes\\hours"

	)

175 
	#MORIA_MOR
 "fûes\\√ws"

	)

176 
	#MORIA_TOP
 "fûes\\sc‹es"

	)

177 
	#MORIA_HELP
 "fûes\\roglcmds.hÕ"

	)

178 
	#MORIA_ORIG_HELP
 "fûes\\‹igcmds.hÕ"

	)

179 
	#MORIA_WIZ_HELP
 "fûes\\rwizcmds.hÕ"

	)

180 
	#MORIA_OWIZ_HELP
 "fûes\\owizcmds.hÕ"

	)

181 
	#MORIA_WELCOME
 "fûes\\wñcome.hÕ"

	)

182 
	#MORIA_VER
 "fûes\\vîsi⁄.hÕ"

	)

185 #i‡
deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

188 
	#MORIA_SAV
 "m‹ü.ßve"

	)

189 
	#MORIA_HOU
 (*)
	`¥efix_fûe
("fûes/hours")

	)

190 
	#MORIA_MOR
 (*)
	`¥efix_fûe
("fûes/√ws")

	)

191 
	#MORIA_TOP
 (*)
	`¥efix_fûe
("fûes/sc‹es")

	)

192 
	#MORIA_HELP
 (*)
	`¥efix_fûe
("fûes/roglcmds.hÕ")

	)

193 
	#MORIA_ORIG_HELP
 (*)
	`¥efix_fûe
("fûes/‹igcmds.hÕ")

	)

194 
	#MORIA_WIZ_HELP
 (*)
	`¥efix_fûe
("fûes/rwizcmds.hÕ")

	)

195 
	#MORIA_OWIZ_HELP
 (*)
	`¥efix_fûe
("fûes/owizcmds.hÕ")

	)

196 
	#MORIA_WELCOME
 (*)
	`¥efix_fûe
("fûes/wñcome.hÕ")

	)

197 
	#MORIA_VER
 (*)
	`¥efix_fûe
("fûes/vîsi⁄.hÕ")

	)

202 
	#MORIA_SAV
 "m‹ü.ßve"

	)

203 
	#MORIA_LIB
(
xxx
Ë"/home/m©h/gøböî/m‹ü/fûes/xxx"

	)

204 
	#MORIA_HOU
 
	`MORIA_LIB
(
hours
)

	)

205 
	#MORIA_MOR
 
	`MORIA_LIB
(
√ws
)

	)

206 
	#MORIA_TOP
 
	`MORIA_LIB
(
sc‹es
)

	)

207 
	#MORIA_HELP
 
	`MORIA_LIB
(
roglcmds
.
hÕ
)

	)

208 
	#MORIA_ORIG_HELP
 
	`MORIA_LIB
(
‹igcmds
.
hÕ
)

	)

209 
	#MORIA_WIZ_HELP
 
	`MORIA_LIB
(
rwizcmds
.
hÕ
)

	)

210 
	#MORIA_OWIZ_HELP
 
	`MORIA_LIB
(
owizcmds
.
hÕ
)

	)

211 
	#MORIA_WELCOME
 
	`MORIA_LIB
(
wñcome
.
hÕ
)

	)

212 
	#MORIA_VER
 
	`MORIA_LIB
(
vîsi⁄
.
hÕ
)

	)

227 
	#ROGUE_LIKE
 
FALSE


	)

242 #ifde‡
ATARIST_TC


243 
	#USG


	)

244 
	~<°dio.h
>

247 #i‡
deföed
(
ATARIST_TC
Ë|| deföed(
ATARIST_MWC
)

248 
	#ATARI_ST


	)

251 #i‡
deföed
(
__löux__
)

252 
	#SYS_V


	)

256 #i‡
deföed
(
SYS_V
Ë|| deföed(
MSDOS
Ë|| deföed(
MAC
Ë|| deföed(
VMS
)

257 
	#ödex
 
°rchr


	)

259 #i‡
deföed
(
ATARIST_TC
Ë|| (deföed(
AMIGA
Ë&& deföed(
LATTICE
))

260 
	#ödex
 
°rchr


	)

263 #ifde‡
SYS_III


264 *
ödex
();

269 #i‡
deföed
(
SYS_III
Ë|| deföed(
SYS_V
Ë|| deföed(
MSDOS
Ë|| deföed(
MAC
)

270 #i‚de‡
USG


271 
	#USG


	)

275 #i‡
deföed
(
ATARIST_MWC
Ë|| deföed(
AMIGA
Ë|| deföed(
VMS
)

276 
	#USG


	)

279 #ifde‡
AMIGA


280 #i‚de‡
u…rix


281 
	#u…rix


	)

286 #i‡
deföed
(
Pyømid
)

287 
	#u…rix


	)

290 #i‡
deföed
(
_MSC_VER
) && (_MSC_VER < 600)

291 

	)

294 #ifde‡
MAC


295 #ifde‡
RSRC


296 
	#MACRSRC


	)

298 
	#MACGAME


	)

302 #ifde‡
MAC


304 
	#SCRN_ROWS
 24

	)

305 
	#SCRN_COLS
 80

	)

308 #ifde‡
VMS


309 
	#u∆ök
 
dñëe


	)

310 
	#ödex
 
°rchr


	)

311 
	#exô
 
uexô


	)

316 #i‡
deföed
(
SYS_V
Ë&& deföed(
löt
)

319 
	#RTPC_NO_NLS


	)

322 #ifde‡
SECURE


323 
PœyîUID
;

324 
	#gëuid
(Ë
PœyîUID


	)

325 
	#gëeuid
(Ë
PœyîUID


	)

328 #ifde‡
THINK_C


333 #i‚de‡
__STDC__


334 
	#__STDC__
 0

	)

	@constant.h

24 
	#CONSTANT_H_INCLUDED


	)

25 #i‚de‡
CONFIG_H_INCLUDED


26 
	gC⁄°™t
.
h
 
should
 
Æways
 
be
 
ö˛uded
 
a·î
 
	gc⁄fig
.
	gh
, 
beˇu£
 
ô
 
u£s


27 
some
 
of
 
the
 
sy°em
 
deföes
 
£t
 
up
 
	gthîe
.

31 
	#CUR_VERSION_MAJ
 5

	)

32 
	#CUR_VERSION_MIN
 5

	)

33 
	#PATCH_LEVEL
 2

	)

35 #i‚de‡
TRUE


36 
	#TRUE
 1

	)

38 #i‚de‡
FALSE


39 
	#FALSE
 0

	)

42 
	#MAX_UCHAR
 255

	)

43 
	#MAX_SHORT
 32767

	)

44 
	#MAX_LONG
 0x7FFFFFFFL

	)

49 
	#MSG_LINE
 0

	)

52 
	#MAX_SAVE_MSG
 22

	)

55 
	#MAX_HEIGHT
 66

	)

56 
	#MAX_WIDTH
 198

	)

57 
	#SCREEN_HEIGHT
 22

	)

58 
	#SCREEN_WIDTH
 66

	)

59 
	#QUART_HEIGHT
 (
SCREEN_HEIGHT
 / 4)

	)

60 
	#QUART_WIDTH
 (
SCREEN_WIDTH
 / 4)

	)

65 
	#DUN_TUN_RND
 9

	)

66 
	#DUN_TUN_CHG
 70

	)

67 
	#DUN_TUN_CON
 15

	)

68 
	#DUN_ROO_MEA
 32

	)

69 
	#DUN_TUN_PEN
 25

	)

70 
	#DUN_TUN_JCT
 15

	)

71 
	#DUN_STR_DEN
 5

	)

72 
	#DUN_STR_RNG
 2

	)

73 
	#DUN_STR_MAG
 3

	)

74 
	#DUN_STR_MC
 90

	)

75 
	#DUN_STR_QUA
 2

	)

76 
	#DUN_STR_QC
 40

	)

77 
	#DUN_UNUSUAL
 300

	)

80 
	#MAX_OWNERS
 18

	)

81 
	#MAX_STORES
 6

	)

82 
	#STORE_INVEN_MAX
 24

	)

83 
	#STORE_CHOICES
 26

	)

84 
	#STORE_MAX_INVEN
 18

	)

85 
	#STORE_MIN_INVEN
 10

	)

86 
	#STORE_TURN_AROUND
 9

	)

87 
	#COST_ADJ
 100

	)

90 
	#INVEN_ARRAY_SIZE
 34

	)

91 
	#MAX_OBJ_LEVEL
 50

	)

92 
	#OBJ_GREAT
 12

	)

96 
	#MAX_OBJECTS
 420

	)

97 
	#MAX_DUNGEON_OBJ
 344

	)

98 
	#OBJ_OPEN_DOOR
 367

	)

99 
	#OBJ_CLOSED_DOOR
 368

	)

100 
	#OBJ_SECRET_DOOR
 369

	)

101 
	#OBJ_UP_STAIR
 370

	)

102 
	#OBJ_DOWN_STAIR
 371

	)

103 
	#OBJ_STORE_DOOR
 372

	)

104 
	#OBJ_TRAP_LIST
 378

	)

105 
	#OBJ_RUBBLE
 396

	)

106 
	#OBJ_MUSH
 397

	)

107 
	#OBJ_SCARE_MON
 398

	)

108 
	#OBJ_GOLD_LIST
 399

	)

109 
	#OBJ_NOTHING
 417

	)

110 
	#OBJ_RUINED_CHEST
 418

	)

111 
	#OBJ_WIZARD
 419

	)

112 
	#OBJECT_IDENT_SIZE
 448

	)

114 
	#MAX_GOLD
 18

	)

117 
	#MAX_TALLOC
 175

	)

118 
	#MIN_TRIX
 1

	)

119 
	#TREAS_ROOM_ALLOC
 7

	)

120 
	#TREAS_ANY_ALLOC
 2

	)

121 
	#TREAS_GOLD_ALLOC
 2

	)

126 
	#OBJ_STD_ADJ
 125

	)

127 
	#OBJ_STD_MIN
 7

	)

128 
	#OBJ_TOWN_LEVEL
 7

	)

129 
	#OBJ_BASE_MAGIC
 15

	)

130 
	#OBJ_BASE_MAX
 70

	)

131 
	#OBJ_DIV_SPECIAL
 6

	)

132 
	#OBJ_DIV_CURSED
 13

	)

135 
	#OBJ_LAMP_MAX
 15000

	)

136 
	#OBJ_BOLT_RANGE
 18

	)

137 
	#OBJ_RUNE_PROT
 3000

	)

140 
	#MAX_CREATURES
 279

	)

141 
	#N_MONS_ATTS
 215

	)

144 
	#MAX_MALLOC
 125

	)

145 
	#MAX_MALLOC_CHANCE
 160

	)

146 
	#MAX_MONS_LEVEL
 40

	)

147 
	#MAX_SIGHT
 20

	)

148 
	#MAX_SPELL_DIS
 20

	)

149 
	#MAX_MON_MULT
 75

	)

150 
	#MON_MULT_ADJ
 7

	)

151 
	#MON_NASTY
 50

	)

152 
	#MIN_MALLOC_LEVEL
 14

	)

153 
	#MIN_MALLOC_TD
 4

	)

154 
	#MIN_MALLOC_TN
 8

	)

155 
	#WIN_MON_TOT
 2

	)

156 
	#WIN_MON_APPEAR
 50

	)

157 
	#MON_SUMMON_ADJ
 2

	)

158 
	#MON_DRAIN_LIFE
 2

	)

159 
	#MAX_MON_NATTACK
 4

	)

160 
	#MIN_MONIX
 2

	)

163 
	#MAX_TRAP
 18

	)

165 
	#SCARE_MONSTER
 99

	)

168 
	#MAX_COLORS
 49

	)

169 
	#MAX_MUSH
 22

	)

170 
	#MAX_WOODS
 25

	)

171 
	#MAX_METALS
 25

	)

172 
	#MAX_ROCKS
 32

	)

173 
	#MAX_AMULETS
 11

	)

174 
	#MAX_TITLES
 45

	)

175 
	#MAX_SYLLABLES
 153

	)

178 
	#MAX_PLAYER_LEVEL
 40

	)

179 
	#MAX_EXP
 9999999L

	)

180 
	#MAX_RACES
 8

	)

181 
	#MAX_CLASS
 6

	)

182 
	#USE_DEVICE
 3

	)

183 
	#MAX_BACKGROUND
 128

	)

184 
	#PLAYER_FOOD_FULL
 10000

	)

185 
	#PLAYER_FOOD_MAX
 15000

	)

186 
	#PLAYER_FOOD_FAINT
 300

	)

187 
	#PLAYER_FOOD_WEAK
 1000

	)

188 
	#PLAYER_FOOD_ALERT
 2000

	)

189 
	#PLAYER_REGEN_FAINT
 33

	)

190 
	#PLAYER_REGEN_WEAK
 98

	)

191 
	#PLAYER_REGEN_NORMAL
 197

	)

192 
	#PLAYER_REGEN_HPBASE
 1442

	)

193 
	#PLAYER_REGEN_MNBASE
 524

	)

194 
	#PLAYER_WEIGHT_CAP
 130

	)

195 
	#PLAYER_EXIT_PAUSE
 2

	)

198 
	#CLA_BTH
 0

	)

199 
	#CLA_BTHB
 1

	)

200 
	#CLA_DEVICE
 2

	)

201 
	#CLA_DISARM
 3

	)

202 
	#CLA_SAVE
 4

	)

205 
	#CLA_MISC_HIT
 4

	)

206 
	#MAX_LEV_ADJ
 5

	)

209 
	#BTH_PLUS_ADJ
 3

	)

212 
	#INVEN_WIELD
 22

	)

213 
	#INVEN_HEAD
 23

	)

214 
	#INVEN_NECK
 24

	)

215 
	#INVEN_BODY
 25

	)

216 
	#INVEN_ARM
 26

	)

217 
	#INVEN_HANDS
 27

	)

218 
	#INVEN_RIGHT
 28

	)

219 
	#INVEN_LEFT
 29

	)

220 
	#INVEN_FEET
 30

	)

221 
	#INVEN_OUTER
 31

	)

222 
	#INVEN_LIGHT
 32

	)

223 
	#INVEN_AUX
 33

	)

227 
	#A_STR
 0

	)

228 
	#A_INT
 1

	)

229 
	#A_WIS
 2

	)

230 
	#A_DEX
 3

	)

231 
	#A_CON
 4

	)

232 
	#A_CHR
 5

	)

235 #unde‡
CTRL


236 
	#CTRL
(
x
Ë(x & 0x1F)

	)

237 
	#DELETE
 0x7f

	)

238 #ifde‡
VMS


239 
	#ESCAPE
 '\032'

	)

241 
	#ESCAPE
 '\033'

	)

246 #i‚de‡
CNIL


247 
	#CNIL
 (*)0

	)

254 
	#NULL_WALL
 0

	)

255 
	#DARK_FLOOR
 1

	)

256 
	#LIGHT_FLOOR
 2

	)

257 
	#MAX_CAVE_ROOM
 2

	)

258 
	#CORR_FLOOR
 3

	)

259 
	#BLOCKED_FLOOR
 4

	)

260 
	#MAX_CAVE_FLOOR
 4

	)

262 
	#MAX_OPEN_SPACE
 3

	)

263 
	#MIN_CLOSED_SPACE
 4

	)

265 
	#TMP1_WALL
 8

	)

266 
	#TMP2_WALL
 9

	)

268 
	#MIN_CAVE_WALL
 12

	)

269 
	#GRANITE_WALL
 12

	)

270 
	#MAGMA_WALL
 13

	)

271 
	#QUARTZ_WALL
 14

	)

272 
	#BOUNDARY_WALL
 15

	)

275 
	#STAT_COLUMN
 0

	)

278 
	#NONE
 0

	)

279 
	#MAGE
 1

	)

280 
	#PRIEST
 2

	)

283 
	#SPELL_OFFSET
 0

	)

284 
	#PRAYER_OFFSET
 31

	)

287 
	#NORMAL_TABLE_SIZE
 256

	)

288 
	#NORMAL_TABLE_SD
 64

	)

291 
	#PY_HUNGRY
 0x00000001L

	)

292 
	#PY_WEAK
 0x00000002L

	)

293 
	#PY_BLIND
 0x00000004L

	)

294 
	#PY_CONFUSED
 0x00000008L

	)

295 
	#PY_FEAR
 0x00000010L

	)

296 
	#PY_POISONED
 0x00000020L

	)

297 
	#PY_FAST
 0x00000040L

	)

298 
	#PY_SLOW
 0x00000080L

	)

299 
	#PY_SEARCH
 0x00000100L

	)

300 
	#PY_REST
 0x00000200L

	)

301 
	#PY_STUDY
 0x00000400L

	)

303 
	#PY_INVULN
 0x00001000L

	)

304 
	#PY_HERO
 0x00002000L

	)

305 
	#PY_SHERO
 0x00004000L

	)

306 
	#PY_BLESSED
 0x00008000L

	)

307 
	#PY_DET_INV
 0x00010000L

	)

308 
	#PY_TIM_INFRA
 0x00020000L

	)

309 
	#PY_SPEED
 0x00040000L

	)

310 
	#PY_STR_WGT
 0x00080000L

	)

311 
	#PY_PARALYSED
 0x00100000L

	)

312 
	#PY_REPEAT
 0x00200000L

	)

313 
	#PY_ARMOR
 0x00400000L

	)

315 
	#PY_STATS
 0x3F000000L

	)

316 
	#PY_STR
 0x01000000L

	)

317 
	#PY_INT
 0x02000000L

	)

318 
	#PY_WIS
 0x04000000L

	)

319 
	#PY_DEX
 0x08000000L

	)

320 
	#PY_CON
 0x10000000L

	)

321 
	#PY_CHR
 0x20000000L

	)

323 
	#PY_HP
 0x40000000L

	)

324 
	#PY_MANA
 0x80000000L

	)

327 
	#TR_STATS
 0x0000003FL

	)

328 
	#TR_STR
 0x00000001L

	)

329 
	#TR_INT
 0x00000002L

	)

330 
	#TR_WIS
 0x00000004L

	)

331 
	#TR_DEX
 0x00000008L

	)

332 
	#TR_CON
 0x00000010L

	)

333 
	#TR_CHR
 0x00000020L

	)

334 
	#TR_SEARCH
 0x00000040L

	)

335 
	#TR_SLOW_DIGEST
 0x00000080L

	)

336 
	#TR_STEALTH
 0x00000100L

	)

337 
	#TR_AGGRAVATE
 0x00000200L

	)

338 
	#TR_TELEPORT
 0x00000400L

	)

339 
	#TR_REGEN
 0x00000800L

	)

340 
	#TR_SPEED
 0x00001000L

	)

342 
	#TR_EGO_WEAPON
 0x0007E000L

	)

343 
	#TR_SLAY_DRAGON
 0x00002000L

	)

344 
	#TR_SLAY_ANIMAL
 0x00004000L

	)

345 
	#TR_SLAY_EVIL
 0x00008000L

	)

346 
	#TR_SLAY_UNDEAD
 0x00010000L

	)

347 
	#TR_FROST_BRAND
 0x00020000L

	)

348 
	#TR_FLAME_TONGUE
 0x00040000L

	)

350 
	#TR_RES_FIRE
 0x00080000L

	)

351 
	#TR_RES_ACID
 0x00100000L

	)

352 
	#TR_RES_COLD
 0x00200000L

	)

353 
	#TR_SUST_STAT
 0x00400000L

	)

354 
	#TR_FREE_ACT
 0x00800000L

	)

355 
	#TR_SEE_INVIS
 0x01000000L

	)

356 
	#TR_RES_LIGHT
 0x02000000L

	)

357 
	#TR_FFALL
 0x04000000L

	)

358 
	#TR_BLIND
 0x08000000L

	)

359 
	#TR_TIMID
 0x10000000L

	)

360 
	#TR_TUNNEL
 0x20000000L

	)

361 
	#TR_INFRA
 0x40000000L

	)

362 
	#TR_CURSED
 0x80000000L

	)

365 
	#CH_LOCKED
 0x00000001L

	)

366 
	#CH_TRAPPED
 0x000001F0L

	)

367 
	#CH_LOSE_STR
 0x00000010L

	)

368 
	#CH_POISON
 0x00000020L

	)

369 
	#CH_PARALYSED
 0x00000040L

	)

370 
	#CH_EXPLODE
 0x00000080L

	)

371 
	#CH_SUMMON
 0x00000100L

	)

374 
	#CM_ALL_MV_FLAGS
 0x0000003FL

	)

375 
	#CM_ATTACK_ONLY
 0x00000001L

	)

376 
	#CM_MOVE_NORMAL
 0x00000002L

	)

378 
	#CM_ONLY_MAGIC
 0x00000004L

	)

380 
	#CM_RANDOM_MOVE
 0x00000038L

	)

381 
	#CM_20_RANDOM
 0x00000008L

	)

382 
	#CM_40_RANDOM
 0x00000010L

	)

383 
	#CM_75_RANDOM
 0x00000020L

	)

385 
	#CM_SPECIAL
 0x003F0000L

	)

386 
	#CM_INVISIBLE
 0x00010000L

	)

387 
	#CM_OPEN_DOOR
 0x00020000L

	)

388 
	#CM_PHASE
 0x00040000L

	)

389 
	#CM_EATS_OTHER
 0x00080000L

	)

390 
	#CM_PICKS_UP
 0x00100000L

	)

391 
	#CM_MULTIPLY
 0x00200000L

	)

393 
	#CM_SMALL_OBJ
 0x00800000L

	)

394 
	#CM_CARRY_OBJ
 0x01000000L

	)

395 
	#CM_CARRY_GOLD
 0x02000000L

	)

396 
	#CM_TREASURE
 0x7C000000L

	)

397 
	#CM_TR_SHIFT
 26

	)

398 
	#CM_60_RANDOM
 0x04000000L

	)

399 
	#CM_90_RANDOM
 0x08000000L

	)

400 
	#CM_1D2_OBJ
 0x10000000L

	)

401 
	#CM_2D2_OBJ
 0x20000000L

	)

402 
	#CM_4D2_OBJ
 0x40000000L

	)

403 
	#CM_WIN
 0x80000000L

	)

406 
	#CS_FREQ
 0x0000000FL

	)

407 
	#CS_SPELLS
 0x0001FFF0L

	)

408 
	#CS_TEL_SHORT
 0x00000010L

	)

409 
	#CS_TEL_LONG
 0x00000020L

	)

410 
	#CS_TEL_TO
 0x00000040L

	)

411 
	#CS_LGHT_WND
 0x00000080L

	)

412 
	#CS_SER_WND
 0x00000100L

	)

413 
	#CS_HOLD_PER
 0x00000200L

	)

414 
	#CS_BLIND
 0x00000400L

	)

415 
	#CS_CONFUSE
 0x00000800L

	)

416 
	#CS_FEAR
 0x00001000L

	)

417 
	#CS_SUMMON_MON
 0x00002000L

	)

418 
	#CS_SUMMON_UND
 0x00004000L

	)

419 
	#CS_SLOW_PER
 0x00008000L

	)

420 
	#CS_DRAIN_MANA
 0x00010000L

	)

422 
	#CS_BREATHE
 0x00F80000L

	)

423 
	#CS_BR_LIGHT
 0x00080000L

	)

424 
	#CS_BR_GAS
 0x00100000L

	)

425 
	#CS_BR_ACID
 0x00200000L

	)

426 
	#CS_BR_FROST
 0x00400000L

	)

427 
	#CS_BR_FIRE
 0x00800000L

	)

430 
	#CD_DRAGON
 0x0001

	)

431 
	#CD_ANIMAL
 0x0002

	)

432 
	#CD_EVIL
 0x0004

	)

433 
	#CD_UNDEAD
 0x0008

	)

434 
	#CD_WEAKNESS
 0x03F0

	)

435 
	#CD_FROST
 0x0010

	)

436 
	#CD_FIRE
 0x0020

	)

437 
	#CD_POISON
 0x0040

	)

438 
	#CD_ACID
 0x0080

	)

439 
	#CD_LIGHT
 0x0100

	)

440 
	#CD_STONE
 0x0200

	)

442 
	#CD_NO_SLEEP
 0x1000

	)

443 
	#CD_INFRA
 0x2000

	)

444 
	#CD_MAX_HP
 0x4000

	)

448 
	#ITEM_NEVER_STACK_MIN
 0

	)

449 
	#ITEM_NEVER_STACK_MAX
 63

	)

452 
	#ITEM_SINGLE_STACK_MIN
 64

	)

453 
	#ITEM_SINGLE_STACK_MAX
 192

	)

456 
	#ITEM_GROUP_MIN
 192

	)

457 
	#ITEM_GROUP_MAX
 255

	)

463 
	#OD_TRIED
 0x1

	)

464 
	#OD_KNOWN1
 0x2

	)

467 
	#ID_MAGIK
 0x1

	)

468 
	#ID_DAMD
 0x2

	)

469 
	#ID_EMPTY
 0x4

	)

470 
	#ID_KNOWN2
 0x8

	)

471 
	#ID_STOREBOUGHT
 0x10

	)

472 
	#ID_SHOW_HITDAM
 0x20

	)

473 
	#ID_NOSHOW_P1
 0x40

	)

474 
	#ID_SHOW_P1
 0x80

	)

477 
	#SN_NULL
 0

	)

478 
	#SN_R
 1

	)

479 
	#SN_RA
 2

	)

480 
	#SN_RF
 3

	)

481 
	#SN_RC
 4

	)

482 
	#SN_RL
 5

	)

483 
	#SN_HA
 6

	)

484 
	#SN_DF
 7

	)

485 
	#SN_SA
 8

	)

486 
	#SN_SD
 9

	)

487 
	#SN_SE
 10

	)

488 
	#SN_SU
 11

	)

489 
	#SN_FT
 12

	)

490 
	#SN_FB
 13

	)

491 
	#SN_FREE_ACTION
 14

	)

492 
	#SN_SLAYING
 15

	)

493 
	#SN_CLUMSINESS
 16

	)

494 
	#SN_WEAKNESS
 17

	)

495 
	#SN_SLOW_DESCENT
 18

	)

496 
	#SN_SPEED
 19

	)

497 
	#SN_STEALTH
 20

	)

498 
	#SN_SLOWNESS
 21

	)

499 
	#SN_NOISE
 22

	)

500 
	#SN_GREAT_MASS
 23

	)

501 
	#SN_INTELLIGENCE
 24

	)

502 
	#SN_WISDOM
 25

	)

503 
	#SN_INFRAVISION
 26

	)

504 
	#SN_MIGHT
 27

	)

505 
	#SN_LORDLINESS
 28

	)

506 
	#SN_MAGI
 29

	)

507 
	#SN_BEAUTY
 30

	)

508 
	#SN_SEEING
 31

	)

509 
	#SN_REGENERATION
 32

	)

510 
	#SN_STUPIDITY
 33

	)

511 
	#SN_DULLNESS
 34

	)

512 
	#SN_BLINDNESS
 35

	)

513 
	#SN_TIMIDNESS
 36

	)

514 
	#SN_TELEPORTATION
 37

	)

515 
	#SN_UGLINESS
 38

	)

516 
	#SN_PROTECTION
 39

	)

517 
	#SN_IRRITATION
 40

	)

518 
	#SN_VULNERABILITY
 41

	)

519 
	#SN_ENVELOPING
 42

	)

520 
	#SN_FIRE
 43

	)

521 
	#SN_SLAY_EVIL
 44

	)

522 
	#SN_DRAGON_SLAYING
 45

	)

523 
	#SN_EMPTY
 46

	)

524 
	#SN_LOCKED
 47

	)

525 
	#SN_POISON_NEEDLE
 48

	)

526 
	#SN_GAS_TRAP
 49

	)

527 
	#SN_EXPLOSION_DEVICE
 50

	)

528 
	#SN_SUMMONING_RUNES
 51

	)

529 
	#SN_MULTIPLE_TRAPS
 52

	)

530 
	#SN_DISARMED
 53

	)

531 
	#SN_UNLOCKED
 54

	)

532 
	#SN_SLAY_ANIMAL
 55

	)

533 
	#SN_ARRAY_SIZE
 56

	)

536 
	#TV_NEVER
 -1

	)

537 
	#TV_NOTHING
 0

	)

538 
	#TV_MISC
 1

	)

539 
	#TV_CHEST
 2

	)

542 
	#TV_MIN_WEAR
 10

	)

545 
	#TV_MIN_ENCHANT
 10

	)

546 
	#TV_SLING_AMMO
 10

	)

547 
	#TV_BOLT
 11

	)

548 
	#TV_ARROW
 12

	)

549 
	#TV_SPIKE
 13

	)

550 
	#TV_LIGHT
 15

	)

551 
	#TV_BOW
 20

	)

552 
	#TV_HAFTED
 21

	)

553 
	#TV_POLEARM
 22

	)

554 
	#TV_SWORD
 23

	)

555 
	#TV_DIGGING
 25

	)

556 
	#TV_BOOTS
 30

	)

557 
	#TV_GLOVES
 31

	)

558 
	#TV_CLOAK
 32

	)

559 
	#TV_HELM
 33

	)

560 
	#TV_SHIELD
 34

	)

561 
	#TV_HARD_ARMOR
 35

	)

562 
	#TV_SOFT_ARMOR
 36

	)

564 
	#TV_MAX_ENCHANT
 39

	)

565 
	#TV_AMULET
 40

	)

566 
	#TV_RING
 45

	)

568 
	#TV_MAX_WEAR
 50

	)

569 
	#TV_STAFF
 55

	)

570 
	#TV_WAND
 65

	)

571 
	#TV_SCROLL1
 70

	)

572 
	#TV_SCROLL2
 71

	)

573 
	#TV_POTION1
 75

	)

574 
	#TV_POTION2
 76

	)

575 
	#TV_FLASK
 77

	)

576 
	#TV_FOOD
 80

	)

577 
	#TV_MAGIC_BOOK
 90

	)

578 
	#TV_PRAYER_BOOK
 91

	)

580 
	#TV_MAX_OBJECT
 99

	)

581 
	#TV_GOLD
 100

	)

583 
	#TV_MAX_PICK_UP
 100

	)

584 
	#TV_INVIS_TRAP
 101

	)

587 
	#TV_MIN_VISIBLE
 102

	)

588 
	#TV_VIS_TRAP
 102

	)

589 
	#TV_RUBBLE
 103

	)

592 
	#TV_MIN_DOORS
 104

	)

593 
	#TV_OPEN_DOOR
 104

	)

594 
	#TV_CLOSED_DOOR
 105

	)

595 
	#TV_UP_STAIR
 107

	)

596 
	#TV_DOWN_STAIR
 108

	)

597 
	#TV_SECRET_DOOR
 109

	)

598 
	#TV_STORE_DOOR
 110

	)

599 
	#TV_MAX_VISIBLE
 110

	)

602 
	#GF_MAGIC_MISSILE
 0

	)

603 
	#GF_LIGHTNING
 1

	)

604 
	#GF_POISON_GAS
 2

	)

605 
	#GF_ACID
 3

	)

606 
	#GF_FROST
 4

	)

607 
	#GF_FIRE
 5

	)

608 
	#GF_HOLY_ORB
 6

	)

611 
	#SCOREFILE_SIZE
 1000

	)

	@create.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

13 
	~"c⁄fig.h
"

14 
	~"c⁄°™t.h
"

15 
	~"ty≥s.h
"

16 
	~"exã∫s.h
"

18 #ifde‡
USG


19 #i‚de‡
ATARIST_MWC


20 
	~<°rög.h
>

23 
	~<°rögs.h
>

26 #i‡
deföed
(
LINT_ARGS
)

27 
gë_°©s
();

28 
ch™ge_°©
(, 
öt16
);

29 
gë_Æl_°©s
();

30 
choo£_ø˚
();

31 
¥öt_hi°‹y
();

32 
gë_hi°‹y
();

33 
gë_£x
();

34 
gë_ahw
();

35 
gë_˛ass
();

36 
m⁄vÆ
(
öt8u
);

37 
gë_m⁄ey
();

41 
	$gë_°©s
()

43 
i
, 
tŸ
;

44 
di˚
[18];

48 
tŸ
 = 0;

49 
i
 = 0; i < 18; i++)

51 
di˚
[
i
] = 
	`øndöt
 (3 + i % 3);

52 
tŸ
 +
di˚
[
i
];

55 
tŸ
 <= 42 ||Åot >= 54);

57 
i
 = 0; i < 6; i++)

58 
py
.
°©s
.
max_°©
[
i
] = 5 + 
di˚
[3*i] + dice[3*i+1] + dice[3*i+2];

59 
	}
}

63 
	$ch™ge_°©
(
°©
, 
amou¡
)

64 
°©
;

65 
öt16
 
amou¡
;

67 
i
;

68 
tmp_°©
;

70 
tmp_°©
 = 
py
.
°©s
.
max_°©
[
°©
];

71 i‡(
amou¡
 < 0)

72 
i
 = 0; i > 
amou¡
; i--)

74 i‡(
tmp_°©
 > 108)

75 
tmp_°©
--;

76 i‡(
tmp_°©
 > 88)

77 
tmp_°©
 +-
	`øndöt
(6) - 2;

78 i‡(
tmp_°©
 > 18)

80 
tmp_°©
 +-
	`øndöt
(15) - 5;

81 i‡(
tmp_°©
 < 18)

82 
tmp_°©
 = 18;

84 i‡(
tmp_°©
 > 3)

85 
tmp_°©
--;

88 
i
 = 0; i < 
amou¡
; i++)

90 i‡(
tmp_°©
 < 18)

91 
tmp_°©
++;

92 i‡(
tmp_°©
 < 88)

93 
tmp_°©
 +
	`øndöt
(15) + 5;

94 i‡(
tmp_°©
 < 108)

95 
tmp_°©
 +
	`øndöt
(6) + 2;

96 i‡(
tmp_°©
 < 118)

97 
tmp_°©
++;

99 
py
.
°©s
.
max_°©
[
°©
] = 
tmp_°©
;

100 
	}
}

105 
	$gë_Æl_°©s
 ()

107 
∂ayî_ty≥
 *
p_±r
;

108 
ø˚_ty≥
 *
r_±r
;

109 
j
;

111 
p_±r
 = &
py
;

112 
r_±r
 = &
ø˚
[
p_±r
->
misc
.
¥a˚
];

113 
	`gë_°©s
 ();

114 
	`ch™ge_°©
 (
A_STR
, 
r_±r
->
°r_adj
);

115 
	`ch™ge_°©
 (
A_INT
, 
r_±r
->
öt_adj
);

116 
	`ch™ge_°©
 (
A_WIS
, 
r_±r
->
wis_adj
);

117 
	`ch™ge_°©
 (
A_DEX
, 
r_±r
->
dex_adj
);

118 
	`ch™ge_°©
 (
A_CON
, 
r_±r
->
c⁄_adj
);

119 
	`ch™ge_°©
 (
A_CHR
, 
r_±r
->
chr_adj
);

120 
p_±r
->
misc
.
Àv
 = 1;

121 
j
 = 0; j < 6; j++)

123 
py
.
°©s
.
cur_°©
[
j
] =Öy.°©s.
max_°©
[j];

124 
	`£t_u£_°©
 (
j
);

127 
p_±r
->
misc
.
§h
 = 
r_±r
->srh;

128 
p_±r
->
misc
.
bth
 = 
r_±r
->bth;

129 
p_±r
->
misc
.
bthb
 = 
r_±r
->bthb;

130 
p_±r
->
misc
.
fos
 = 
r_±r
->fos;

131 
p_±r
->
misc
.
°l
 = 
r_±r
->stl;

132 
p_±r
->
misc
.
ßve
 = 
r_±r
->
bßv
;

133 
p_±r
->
misc
.
hôdõ
 = 
r_±r
->
bhôdõ
;

134 
p_±r
->
misc
.
±odam
 = 
	`todam_adj
();

135 
p_±r
->
misc
.
±ohô
 = 
	`tohô_adj
();

136 
p_±r
->
misc
.
±ﬂc
 = 0;

137 
p_±r
->
misc
.
∑c
 = 
	`tﬂc_adj
();

138 
p_±r
->
misc
.
expÁ˘
 = 
r_±r
->
b_exp
;

139 
p_±r
->
Êags
.
£e_ö‰a
 = 
r_±r
->
ö‰a
;

140 
	}
}

144 
	$choo£_ø˚
()

146 
j
, 
k
;

147 
l
, 
m
, 
exô_Êag
;

148 
s
;

149 
tmp_°r
[80];

150 
∂ayî_ty≥
 *
p_±r
;

151 
ø˚_ty≥
 *
r_±r
;

153 
j
 = 0;

154 
k
 = 0;

155 
l
 = 2;

156 
m
 = 21;

157 
	`˛ór_‰om
 (20);

158 
	`put_buf„r
("ChooseáÑace (? for Help):", 20, 2);

161 (Ë
	`•rötf
(
tmp_°r
, "%cË%s", 
k
+'a', 
ø˚
[
j
].
åa˚
);

162 
	`put_buf„r
(
tmp_°r
, 
m
, 
l
);

163 
k
++;

164 
l
 += 15;

165 i‡(
l
 > 70)

167 
l
 = 2;

168 
m
++;

170 
j
++;

172 
j
 < 
MAX_RACES
);

173 
exô_Êag
 = 
FALSE
;

176 
	`move_curs‹
 (20, 30);

177 
s
 = 
	`ökey
();

178 
j
 = 
s
 - 'a';

179 i‡((
j
 < 
MAX_RACES
) && (j >= 0))

180 
exô_Êag
 = 
TRUE
;

181 i‡(
s
 == '?')

182 
	`hñpfûe
 (
MORIA_WELCOME
);

184 
	`bñl
 ();

186 !
exô_Êag
);

188 
p_±r
 = &
py
;

189 
r_±r
 = &
ø˚
[
j
];

190 
p_±r
->
misc
.
¥a˚
 = 
j
;

191 
	`put_buf„r
(
r_±r
->
åa˚
, 3, 15);

192 
	}
}

196 
	$¥öt_hi°‹y
()

198 
i
;

200 
	`put_buf„r
("Character Background", 14, 27);

201 
i
 = 0; i < 4; i++)

202 
	`¥t
(
py
.
misc
.
hi°‹y
[
i
], i+15, 10);

203 
	}
}

210 
	$gë_hi°‹y
()

212 
hi°_±r
, 
cur_±r
, 
ã°_rﬁl
, 
Êag
;

213 
°¨t_pos
, 
íd_pos
, 
cur_Àn
;

214 
löe_˘r
, 
√w_°¨t
, 
socül_˛ass
;

215 
hi°‹y_block
[240];

216 
background_ty≥
 *
b_±r
;

219 
hi°_±r
 = 
py
.
misc
.
¥a˚
*3 + 1;

220 
hi°‹y_block
[0] = '\0';

221 
socül_˛ass
 = 
	`øndöt
(4);

222 
cur_±r
 = 0;

225 
Êag
 = 
FALSE
;

228 i‡(
background
[
cur_±r
].
ch¨t
 =
hi°_±r
)

230 
ã°_rﬁl
 = 
	`øndöt
(100);

231 
ã°_rﬁl
 > 
background
[
cur_±r
].
rﬁl
)

232 
cur_±r
++;

233 
b_±r
 = &
background
[
cur_±r
];

234 (Ë
	`°rˇt
(
hi°‹y_block
, 
b_±r
->
öfo
);

235 
socül_˛ass
 +
b_±r
->
b⁄us
 - 50;

236 i‡(
hi°_±r
 > 
b_±r
->
√xt
)

237 
cur_±r
 = 0;

238 
hi°_±r
 = 
b_±r
->
√xt
;

239 
Êag
 = 
TRUE
;

242 
cur_±r
++;

244 !
Êag
);

246 
hi°_±r
 >= 1);

249 
hi°_±r
 = 0; hist_ptr < 4; hist_ptr++)

250 
py
.
misc
.
hi°‹y
[
hi°_±r
][0] = '\0';

253 
°¨t_pos
 = 0;

254 
íd_pos
 = 
	`°æí
(
hi°‹y_block
) - 1;

255 
löe_˘r
 = 0;

256 
Êag
 = 
FALSE
;

257 
hi°‹y_block
[
íd_pos
] == ' ')

258 
íd_pos
--;

261 
hi°‹y_block
[
°¨t_pos
] == ' ')

262 
°¨t_pos
++;

263 
cur_Àn
 = 
íd_pos
 - 
°¨t_pos
 + 1;

264 i‡(
cur_Àn
 > 60)

266 
cur_Àn
 = 60;

267 
hi°‹y_block
[
°¨t_pos
+
cur_Àn
-1] != ' ')

268 
cur_Àn
--;

269 
√w_°¨t
 = 
°¨t_pos
 + 
cur_Àn
;

270 
hi°‹y_block
[
°¨t_pos
+
cur_Àn
-1] == ' ')

271 
cur_Àn
--;

274 
Êag
 = 
TRUE
;

275 (Ë
	`°∫˝y
(
py
.
misc
.
hi°‹y
[
löe_˘r
], &
hi°‹y_block
[
°¨t_pos
],

276 
cur_Àn
);

277 
py
.
misc
.
hi°‹y
[
löe_˘r
][
cur_Àn
] = '\0';

278 
löe_˘r
++;

279 
°¨t_pos
 = 
√w_°¨t
;

281 !
Êag
);

284 i‡(
socül_˛ass
 > 100)

285 
socül_˛ass
 = 100;

286 i‡(
socül_˛ass
 < 1)

287 
socül_˛ass
 = 1;

288 
py
.
misc
.
sc
 = 
socül_˛ass
;

289 
	}
}

293 
	$gë_£x
()

295 
exô_Êag
;

296 
c
;

298 
exô_Êag
 = 
FALSE
;

299 
	`˛ór_‰om
 (20);

300 
	`put_buf„r
("Chooseá sex (? for Help):", 20, 2);

301 
	`put_buf„r
("m) Male f) Female", 21, 2);

304 
	`move_curs‹
 (20, 29);

306 
c
 = 
	`ökey
();

307 i‡(
c
 == 'f' || c == 'F')

309 
py
.
misc
.
mÆe
 = 
FALSE
;

310 
	`put_buf„r
("Female", 4, 15);

311 
exô_Êag
 = 
TRUE
;

313 i‡(
c
 == 'm' || c == 'M')

315 
py
.
misc
.
mÆe
 = 
TRUE
;

316 
	`put_buf„r
("Male", 4, 15);

317 
exô_Êag
 = 
TRUE
;

319 i‡(
c
 == '?')

320 
	`hñpfûe
 (
MORIA_WELCOME
);

322 
	`bñl
 ();

324 !
exô_Êag
);

325 
	}
}

329 
	$gë_ahw
()

331 
i
;

333 
i
 = 
py
.
misc
.
¥a˚
;

334 
py
.
misc
.
age
 = 
ø˚
[
i
].
b_age
 + 
	`øndöt
((Ïa˚[i].
m_age
);

335 i‡(
py
.
misc
.
mÆe
)

337 
py
.
misc
.
ht
 = 
	`øndn‹
(()
ø˚
[
i
].
m_b_ht
, (Ïa˚[i].
m_m_ht
);

338 
py
.
misc
.
wt
 = 
	`øndn‹
(()
ø˚
[
i
].
m_b_wt
, (Ïa˚[i].
m_m_wt
);

342 
py
.
misc
.
ht
 = 
	`øndn‹
(()
ø˚
[
i
].
f_b_ht
, (Ïa˚[i].
f_m_ht
);

343 
py
.
misc
.
wt
 = 
	`øndn‹
(()
ø˚
[
i
].
f_b_wt
, (Ïa˚[i].
f_m_wt
);

345 
py
.
misc
.
dißrm
 = 
ø˚
[
i
].
b_dis
 + 
	`todis_adj
();

346 
	}
}

350 
	$gë_˛ass
()

352 
i
, 
j
;

353 
k
, 
l
, 
m
, 
mö_vÆue
, 
max_vÆue
;

354 
˛
[
MAX_CLASS
], 
exô_Êag
;

355 
misc
 *
m_±r
;

356 
∂ayî_ty≥
 *
p_±r
;

357 
˛ass_ty≥
 *
c_±r
;

358 
tmp_°r
[80], 
s
;

359 
öt32u
 
mask
;

361 
j
 = 0; j < 
MAX_CLASS
; j++)

362 
˛
[
j
] = 0;

363 
i
 = 
py
.
misc
.
¥a˚
;

364 
j
 = 0;

365 
k
 = 0;

366 
l
 = 2;

367 
m
 = 21;

368 
mask
 = 0x1;

369 
	`˛ór_‰om
 (20);

370 
	`put_buf„r
("Chooseá class (? for Help):", 20, 2);

373 i‡(
ø˚
[
i
].
π˛ass
 & 
mask
)

375 (Ë
	`•rötf
(
tmp_°r
, "%cË%s", 
k
+'a', 
˛ass
[
j
].
tôÀ
);

376 
	`put_buf„r
(
tmp_°r
, 
m
, 
l
);

377 
˛
[
k
] = 
j
;

378 
l
 += 15;

379 i‡(
l
 > 70)

381 
l
 = 2;

382 
m
++;

384 
k
++;

386 
j
++;

387 
mask
 <<= 1;

389 
j
 < 
MAX_CLASS
);

390 
py
.
misc
.
p˛ass
 = 0;

391 
exô_Êag
 = 
FALSE
;

394 
	`move_curs‹
 (20, 31);

395 
s
 = 
	`ökey
();

396 
j
 = 
s
 - 'a';

397 i‡((
j
 < 
k
) && (j >= 0))

399 
py
.
misc
.
p˛ass
 = 
˛
[
j
];

400 
c_±r
 = &
˛ass
[
py
.
misc
.
p˛ass
];

401 
exô_Êag
 = 
TRUE
;

402 
	`˛ór_‰om
 (20);

403 
	`put_buf„r
(
c_±r
->
tôÀ
, 5, 15);

406 
p_±r
 = &
py
;

407 
	`ch™ge_°©
 (
A_STR
, 
c_±r
->
madj_°r
);

408 
	`ch™ge_°©
 (
A_INT
, 
c_±r
->
madj_öt
);

409 
	`ch™ge_°©
 (
A_WIS
, 
c_±r
->
madj_wis
);

410 
	`ch™ge_°©
 (
A_DEX
, 
c_±r
->
madj_dex
);

411 
	`ch™ge_°©
 (
A_CON
, 
c_±r
->
madj_c⁄
);

412 
	`ch™ge_°©
 (
A_CHR
, 
c_±r
->
madj_chr
);

413 
i
 = 0; i < 6; i++)

415 
p_±r
->
°©s
.
cur_°©
[
i
] =Ö_±r->°©s.
max_°©
[i];

416 
	`£t_u£_°©
(
i
);

419 
p_±r
->
misc
.
±odam
 = 
	`todam_adj
();

420 
p_±r
->
misc
.
±ohô
 = 
	`tohô_adj
();

421 
p_±r
->
misc
.
±ﬂc
 = 
	`tﬂc_adj
();

422 
p_±r
->
misc
.
∑c
 = 0;

423 
p_±r
->
misc
.
dis_td
 =Ö_±r->misc.
±odam
;

424 
p_±r
->
misc
.
dis_th
 =Ö_±r->misc.
±ohô
;

425 
p_±r
->
misc
.
dis_èc
p_±r->misc.
±ﬂc
;

426 
p_±r
->
misc
.
dis_ac
 =Ö_±r->misc.
∑c
 +Ö_±r->misc.
dis_èc
;

430 
m_±r
 = &
py
.
misc
;

431 
m_±r
->
hôdõ
 +
c_±r
->
adj_hd
;

432 
m_±r
->
mhp
 = 
	`c⁄_adj
(Ë+ m_±r->
hôdõ
;

433 
m_±r
->
chp
 = m_±r->
mhp
;

434 
m_±r
->
chp_‰ac
 = 0;

439 
mö_vÆue
 = (
MAX_PLAYER_LEVEL
*3/8 * (
m_±r
->
hôdõ
-1)) +

440 
MAX_PLAYER_LEVEL
;

441 
max_vÆue
 = (
MAX_PLAYER_LEVEL
*5/8 * (
m_±r
->
hôdõ
-1)) +

442 
MAX_PLAYER_LEVEL
;

443 
∂ayî_hp
[0] = 
m_±r
->
hôdõ
;

446 
i
 = 1; i < 
MAX_PLAYER_LEVEL
; i++)

448 #ifde‡
AMIGA


449 
∂ayî_hp
[
i
] =Öœyî_hp[i-1] + 
	`øndöt
 (()
m_±r
->
hôdõ
);

451 
∂ayî_hp
[
i
] = 
	`øndöt
(()
m_±r
->
hôdõ
);

452 
∂ayî_hp
[
i
] +=Ölayer_hp[i-1];

456 (
∂ayî_hp
[
MAX_PLAYER_LEVEL
-1] < 
mö_vÆue
) ||

457 (
∂ayî_hp
[
MAX_PLAYER_LEVEL
-1] > 
max_vÆue
));

459 
m_±r
->
bth
 +
c_±r
->
mbth
;

460 
m_±r
->
bthb
 +
c_±r
->
mbthb
;

461 
m_±r
->
§h
 +
c_±r
->
m§h
;

462 
m_±r
->
dißrm
 +
c_±r
->
mdis
;

463 
m_±r
->
fos
 +
c_±r
->
mfos
;

464 
m_±r
->
°l
 +
c_±r
->
m°l
;

465 
m_±r
->
ßve
 +
c_±r
->
mßv
;

466 
m_±r
->
expÁ˘
 +
c_±r
->
m_exp
;

468 i‡(
s
 == '?')

469 
	`hñpfûe
 (
MORIA_WELCOME
);

471 
	`bñl
 ();

473 !
exô_Êag
);

474 
	}
}

479 
	$m⁄vÆ
 (
i
)

480 
öt8u
 
i
;

482  5 * (()
i
 - 10);

483 
	}
}

486 
	$gë_m⁄ey
()

488 
tmp
, 
gﬁd
;

489 
öt8u
 *
a_±r
;

491 
a_±r
 = 
py
.
°©s
.
max_°©
;

492 
tmp
 = 
	`m⁄vÆ
 (
a_±r
[
A_STR
]Ë+ m⁄vÆ (a_±r[
A_INT
])

493 + 
	`m⁄vÆ
 (
a_±r
[
A_WIS
]Ë+ m⁄vÆ (a_±r[
A_CON
])

494 + 
	`m⁄vÆ
 (
a_±r
[
A_DEX
]);

496 
gﬁd
 = 
py
.
misc
.
sc
*6 + 
	`øndöt
 (25) + 325;

497 
gﬁd
 -
tmp
;

498 
gﬁd
 +
	`m⁄vÆ
 (
a_±r
[
A_CHR
]);

499 i‡(!
py
.
misc
.
mÆe
)

500 
gﬁd
 += 50;

501 i‡(
gﬁd
 < 80)

502 
gﬁd
 = 80;

503 
py
.
misc
.
au
 = 
gﬁd
;

504 
	}
}

509 
	$¸óã_ch¨a˘î
()

511 
exô_Êag
 = 1;

512 
c
;

514 
	`put_ch¨a˘î
();

515 
	`choo£_ø˚
();

516 
	`gë_£x
();

519 
	`gë_Æl_°©s
 ();

520 
	`gë_hi°‹y
();

521 
	`gë_ahw
();

522 
	`¥öt_hi°‹y
();

523 
	`put_misc1
();

524 
	`put_°©s
();

526 
	`˛ór_‰om
 (20);

527 
	`put_buf„r
("Hit spaceÅoÑeroll or ESCÅoáccept characteristics: ", 20, 2);

530 
	`move_curs‹
 (20, 56);

531 
c
 = 
	`ökey
();

532 i‡(
c
 =
ESCAPE
)

533 
exô_Êag
 = 0;

534 i‡(
c
 == ' ')

536 
	`gë_Æl_°©s
 ();

537 
	`gë_hi°‹y
();

538 
	`gë_ahw
();

539 
	`¥öt_hi°‹y
();

540 
	`put_misc1
();

541 
	`put_°©s
();

544 
	`bñl
 ();

546 
exô_Êag
 == 1);

548 
	`gë_˛ass
();

549 
	`gë_m⁄ey
();

550 
	`put_°©s
();

551 
	`put_misc2
();

552 
	`put_misc3
();

553 
	`gë_«me
();

558 
	`∑u£_exô
(23, 
PLAYER_EXIT_PAUSE
);

559 
	}
}

	@creature.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

11 
	~<°dlib.h
>

14 
	~"c⁄fig.h
"

15 
	~"c⁄°™t.h
"

16 
	~"ty≥s.h
"

17 
	~"exã∫s.h
"

19 #ifde‡
USG


20 #i‚de‡
ATARIST_MWC


21 
	~<°rög.h
>

23 *
°rˇt
();

24 *
°r˝y
();

27 
	~<°rögs.h
>

30 #i‡
deföed
(
LINT_ARGS
)

31 
movemít_øã
(
öt16
);

32 
check_m⁄_lôe
(, );

33 
gë_moves
(, *);

34 
make_©èck
();

35 
make_move
(, *, 
öt32u
 *);

36 
m⁄_ˇ°_•ñl
(, *);

37 
m⁄_move
(, 
öt32u
 *);

40 #ifde‡
ATARIST_TC


42 
	~<°dlib.h
>

47 
	$upd©e_m⁄
(
m⁄±r
)

48 
m⁄±r
;

50 
Êag
;

51 
ˇve_ty≥
 *
c_±r
;

52 
m⁄°î_ty≥
 *
m_±r
;

53 
¸ótuª_ty≥
 *
r_±r
;

54 #ifde‡
ATARIST_MWC


55 
öt32u
 
hﬁdî
;

58 
m_±r
 = &
m_li°
[
m⁄±r
];

59 
Êag
 = 
FALSE
;

60 i‡((
m_±r
->
cdis
 <
MAX_SIGHT
) &&

61 !(
py
.
Êags
.
°©us
 & 
PY_BLIND
) &&

62 (
	`∑√l_c⁄èös
(()
m_±r
->
fy
, ()m_±r->
fx
)))

65 i‡(
wiz¨d
)

66 
Êag
 = 
TRUE
;

68 i‡(
	`los
(
ch¨_row
, 
ch¨_cﬁ
, ()
m_±r
->
fy
, ()m_±r->
fx
))

70 
c_±r
 = &
ˇve
[
m_±r
->
fy
][m_±r->
fx
];

71 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

72 i‡(
c_±r
->
∂
 || c_±r->
é
 ||

73 (
föd_Êag
 && 
m_±r
->
cdis
 < 2 && 
∂ayî_light
))

75 #ifde‡
ATARIST_MWC


76 
hﬁdî
 = 
CM_INVISIBLE
;

77 i‡((
hﬁdî
 & 
r_±r
->
cmove
) == 0)

79 i‡((
CM_INVISIBLE
 & 
r_±r
->
cmove
) == 0)

81 
Êag
 = 
TRUE
;

82 i‡(
py
.
Êags
.
£e_öv
)

84 
Êag
 = 
TRUE
;

85 #ifde‡
ATARIST_MWC


86 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 |
hﬁdî
;

88 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 |
CM_INVISIBLE
;

93 i‡((
py
.
Êags
.
£e_ö‰a
 > 0) &&

94 (
m_±r
->
cdis
 <
py
.
Êags
.
£e_ö‰a
) &&

95 (
CD_INFRA
 & 
r_±r
->
cde„n£
))

97 
Êag
 = 
TRUE
;

98 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
CD_INFRA
;

103 i‡(
Êag
)

105 i‡(!
m_±r
->
ml
)

107 
	`di°urb
 (1, 0);

108 
m_±r
->
ml
 = 
TRUE
;

109 
	`lôe_•Ÿ
(()
m_±r
->
fy
, ()m_±r->
fx
);

110 
s¸ìn_ch™ge
 = 
TRUE
;

114 i‡(
m_±r
->
ml
)

116 
m_±r
->
ml
 = 
FALSE
;

117 
	`lôe_•Ÿ
(()
m_±r
->
fy
, ()m_±r->
fx
);

118 
s¸ìn_ch™ge
 = 
TRUE
;

120 
	}
}

126 
	$movemít_øã
(
•ìd
)

127 
öt16
 
•ìd
;

129 i‡(
•ìd
 > 0)

131 i‡(
py
.
Êags
.
ª°
 != 0)

134  
•ìd
;

139  ((
tu∫
 % (2 - 
•ìd
)) == 0);

141 
	}
}

145 
	$check_m⁄_lôe
(
y
, 
x
)

146 
y
, 
x
;

148 
m⁄±r
;

150 
m⁄±r
 = 
ˇve
[
y
][
x
].
˝å
;

151 i‡(
m⁄±r
 <= 1)

152  
FALSE
;

155 
	`upd©e_m⁄
(
m⁄±r
);

156  
m_li°
[
m⁄±r
].
ml
;

158 
	}
}

162 
	$gë_moves
(
m⁄±r
, 
mm
)

163 
m⁄±r
;

164 *
mm
;

166 
y
, 
ay
, 
x
, 
ax
, 
move_vÆ
;

168 
y
 = 
m_li°
[
m⁄±r
].
fy
 - 
ch¨_row
;

169 
x
 = 
m_li°
[
m⁄±r
].
fx
 - 
ch¨_cﬁ
;

170 i‡(
y
 < 0)

172 
move_vÆ
 = 8;

173 
ay
 = -
y
;

177 
move_vÆ
 = 0;

178 
ay
 = 
y
;

180 i‡(
x
 > 0)

182 
move_vÆ
 += 4;

183 
ax
 = 
x
;

186 
ax
 = -
x
;

188 i‡(
ay
 > (
ax
 << 1))

189 
move_vÆ
 += 2;

190 i‡(
ax
 > (
ay
 << 1))

191 
move_vÆ
++;

192 
move_vÆ
)

195 
mm
[0] = 9;

196 i‡(
ay
 > 
ax
)

198 
mm
[1] = 8;

199 
mm
[2] = 6;

200 
mm
[3] = 7;

201 
mm
[4] = 3;

205 
mm
[1] = 6;

206 
mm
[2] = 8;

207 
mm
[3] = 3;

208 
mm
[4] = 7;

212 
mm
[0] = 6;

213 i‡(
y
 < 0)

215 
mm
[1] = 3;

216 
mm
[2] = 9;

217 
mm
[3] = 2;

218 
mm
[4] = 8;

222 
mm
[1] = 9;

223 
mm
[2] = 3;

224 
mm
[3] = 8;

225 
mm
[4] = 2;

229 
mm
[0] = 8;

230 i‡(
x
 < 0)

232 
mm
[1] = 9;

233 
mm
[2] = 7;

234 
mm
[3] = 6;

235 
mm
[4] = 4;

239 
mm
[1] = 7;

240 
mm
[2] = 9;

241 
mm
[3] = 4;

242 
mm
[4] = 6;

246 
mm
[0] = 7;

247 i‡(
ay
 > 
ax
)

249 
mm
[1] = 8;

250 
mm
[2] = 4;

251 
mm
[3] = 9;

252 
mm
[4] = 1;

256 
mm
[1] = 4;

257 
mm
[2] = 8;

258 
mm
[3] = 1;

259 
mm
[4] = 9;

263 
mm
[0] = 4;

264 i‡(
y
 < 0)

266 
mm
[1] = 1;

267 
mm
[2] = 7;

268 
mm
[3] = 2;

269 
mm
[4] = 8;

273 
mm
[1] = 7;

274 
mm
[2] = 1;

275 
mm
[3] = 8;

276 
mm
[4] = 2;

280 
mm
[0] = 3;

281 i‡(
ay
 > 
ax
)

283 
mm
[1] = 2;

284 
mm
[2] = 6;

285 
mm
[3] = 1;

286 
mm
[4] = 9;

290 
mm
[1] = 6;

291 
mm
[2] = 2;

292 
mm
[3] = 9;

293 
mm
[4] = 1;

297 
mm
[0] = 2;

298 i‡(
x
 < 0)

300 
mm
[1] = 3;

301 
mm
[2] = 1;

302 
mm
[3] = 6;

303 
mm
[4] = 4;

307 
mm
[1] = 1;

308 
mm
[2] = 3;

309 
mm
[3] = 4;

310 
mm
[4] = 6;

314 
mm
[0] = 1;

315 i‡(
ay
 > 
ax
)

317 
mm
[1] = 2;

318 
mm
[2] = 4;

319 
mm
[3] = 3;

320 
mm
[4] = 7;

324 
mm
[1] = 4;

325 
mm
[2] = 2;

326 
mm
[3] = 7;

327 
mm
[4] = 3;

331 
	}
}

335 
	$make_©èck
(
m⁄±r
)

336 
m⁄±r
;

338 
©ty≥
, 
adesc
, 
adi˚
, 
asides
;

339 
i
, 
j
, 
damage
, 
Êag
, 
©èckn
, 
nŸi˚
, 
visibÀ
;

340 
öt32
 
gﬁd
;

341 
öt8u
 *
©t°r
;

342 
vty≥
 
cdesc
, 
tmp_°r
, 
ddesc
;

343 
¸ótuª_ty≥
 *
r_±r
;

344 
m⁄°î_ty≥
 *
m_±r
;

345 
misc
 *
p_±r
;

346 
Êags
 *
f_±r
;

347 
öví_ty≥
 *
i_±r
;

348 #ifde‡
ATARIST_MWC


349 
öt32u
 
hﬁdî
;

352 i‡(
dóth
)

355 
m_±r
 = &
m_li°
[
m⁄±r
];

356 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

357 i‡(!
m_±r
->
ml
)

358 (Ë
	`°r˝y
(
cdesc
, "It ");

360 (Ë
	`•rötf
(
cdesc
, "Thê%†", 
r_±r
->
«me
);

362 #ifde‡
ATARIST_MWC


363 
hﬁdî
 = 
CM_WIN
;

364 i‡(
hﬁdî
 & 
r_±r
->
cmove
)

366 i‡(
CM_WIN
 & 
r_±r
->
cmove
)

368 (Ë
	`•rötf
(
ddesc
, "Thê%s", 
r_±r
->
«me
);

369 i‡(
	`is_a_vowñ
 (
r_±r
->
«me
[0]))

370 (Ë
	`•rötf
(
ddesc
, "™ %s", 
r_±r
->
«me
);

372 (Ë
	`•rötf
 (
ddesc
, "®%s", 
r_±r
->
«me
);

375 
©èckn
 = 0;

376 
©t°r
 = 
r_±r
->
damage
;

377 (*
©t°r
 !0Ë&& !
dóth
)

379 
©ty≥
 = 
m⁄°î_©ècks
[*
©t°r
].
©èck_ty≥
;

380 
adesc
 = 
m⁄°î_©ècks
[*
©t°r
].
©èck_desc
;

381 
adi˚
 = 
m⁄°î_©ècks
[*
©t°r
].
©èck_di˚
;

382 
asides
 = 
m⁄°î_©ècks
[*
©t°r
].
©èck_sides
;

383 
©t°r
++;

384 
Êag
 = 
FALSE
;

385 i‡((
py
.
Êags
.
¥Ÿevû
 > 0Ë&& (
r_±r
->
cde„n£
 & 
CD_EVIL
) &&

386 ((
py
.
misc
.
Àv
 + 1Ë> 
r_±r
->
Àvñ
))

388 i‡(
m_±r
->
ml
)

389 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
CD_EVIL
;

390 
©ty≥
 = 99;

391 
adesc
 = 99;

393 
p_±r
 = &
py
.
misc
;

394 
©ty≥
)

397 i‡(
	`ã°_hô
(60, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

398 
CLA_MISC_HIT
))

399 
Êag
 = 
TRUE
;

402 i‡(
	`ã°_hô
(-3, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

403 
CLA_MISC_HIT
))

404 
Êag
 = 
TRUE
;

407 i‡(
	`ã°_hô
(10, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

408 
CLA_MISC_HIT
))

409 
Êag
 = 
TRUE
;

412 i‡(
	`ã°_hô
(10, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

413 
CLA_MISC_HIT
))

414 
Êag
 = 
TRUE
;

417 i‡(
	`ã°_hô
(10, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

418 
CLA_MISC_HIT
))

419 
Êag
 = 
TRUE
;

422 i‡(
	`ã°_hô
(0, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

423 
CLA_MISC_HIT
))

424 
Êag
 = 
TRUE
;

427 i‡(
	`ã°_hô
(10, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

428 
CLA_MISC_HIT
))

429 
Êag
 = 
TRUE
;

432 i‡(
	`ã°_hô
(10, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

433 
CLA_MISC_HIT
))

434 
Êag
 = 
TRUE
;

437 i‡(
	`ã°_hô
(0, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

438 
CLA_MISC_HIT
))

439 
Êag
 = 
TRUE
;

442 i‡(
	`ã°_hô
(2, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

443 
CLA_MISC_HIT
))

444 
Êag
 = 
TRUE
;

447 i‡(
	`ã°_hô
(2, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

448 
CLA_MISC_HIT
))

449 
Êag
 = 
TRUE
;

452 i‡((
	`ã°_hô
(5, ()
r_±r
->
Àvñ
, 0, ()
py
.
misc
.
Àv
,

453 
CLA_MISC_HIT
))

454 && (
py
.
misc
.
au
 > 0))

455 
Êag
 = 
TRUE
;

458 i‡((
	`ã°_hô
(2, ()
r_±r
->
Àvñ
, 0, ()
py
.
misc
.
Àv
,

459 
CLA_MISC_HIT
))

460 && (
öví_˘r
 > 0))

461 
Êag
 = 
TRUE
;

464 i‡(
	`ã°_hô
(5, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

465 
CLA_MISC_HIT
))

466 
Êag
 = 
TRUE
;

469 i‡(
	`ã°_hô
(0, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

470 
CLA_MISC_HIT
))

471 
Êag
 = 
TRUE
;

474 i‡(
	`ã°_hô
(0, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

475 
CLA_MISC_HIT
))

476 
Êag
 = 
TRUE
;

479 i‡(
	`ã°_hô
(2, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

480 
CLA_MISC_HIT
))

481 
Êag
 = 
TRUE
;

484 i‡(
	`ã°_hô
(2, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

485 
CLA_MISC_HIT
))

486 
Êag
 = 
TRUE
;

489 i‡(
	`ã°_hô
(5, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

490 
CLA_MISC_HIT
))

491 
Êag
 = 
TRUE
;

494 
Êag
 = 
TRUE
;

497 i‡(
	`ã°_hô
(20, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

498 
CLA_MISC_HIT
))

499 
Êag
 = 
TRUE
;

502 i‡(
	`ã°_hô
(5, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

503 
CLA_MISC_HIT
))

504 
Êag
 = 
TRUE
;

507 i‡(
	`ã°_hô
(5, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

508 
CLA_MISC_HIT
))

509 
Êag
 = 
TRUE
;

512 i‡((
	`ã°_hô
(15, ()
r_±r
->
Àvñ
, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
,

513 
CLA_MISC_HIT
)) &&

514 (
öví_˘r
 > 0))

515 
Êag
 = 
TRUE
;

518 
Êag
 = 
TRUE
;

523 i‡(
Êag
)

527 
	`di°urb
 (1, 0);

528 (Ë
	`°r˝y
(
tmp_°r
, 
cdesc
);

529 
adesc
)

531 1: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "hits you.")); ;

532 2: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "bites you.")); ;

533 3: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "claws you.")); ;

534 4: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "stings you.")); ;

535 5: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "touches you.")); ;

537 6: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "kicks you.")); ;

539 7: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "gazesát you.")); ;

540 8: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "breathes on you.")); ;

541 9: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "spits on you.")); ;

542 10: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
,"makesá horrible wail."));;

544 11: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "embraces you.")); ;

546 12: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "crawls on you.")); ;

548 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "releasesá cloud of spores.")); ;

549 14: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "begs you for money.")); ;

550 15: 
	`msg_¥öt
("You've been slimed!"); ;

551 16: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "crushes you.")); ;

552 17: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "tramples you.")); ;

553 18: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "drools on you.")); ;

555 
	`øndöt
(9))

557 1: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "insults you!")); ;

559 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "insults your mother!")); ;

561 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "gives youÅhe finger!")); ;

562 4: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "humiliates you!")); ;

563 5: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "wets on yourÜeg!")); ;

564 6: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "defiles you!")); ;

565 7: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "dancesáround you!"));;

567 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "makes obscene gestures!")); ;

568 9: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "moons you!!!")); ;

571 99: 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "isÑepelled.")); ;

575 
nŸi˚
 = 
TRUE
;

579 i‡(!
m_±r
->
ml
)

581 
visibÀ
 = 
FALSE
;

582 
nŸi˚
 = 
FALSE
;

585 
visibÀ
 = 
TRUE
;

587 
damage
 = 
	`damrﬁl
 (
adi˚
, 
asides
);

588 
©ty≥
)

592 
damage
 -((
p_±r
->
∑c
+p_±r->
±ﬂc
) * damage) / 200;

593 
	`èke_hô
(
damage
, 
ddesc
);

596 
	`èke_hô
(
damage
, 
ddesc
);

597 i‡(
py
.
Êags
.
su°aö_°r
)

598 
	`msg_¥öt
("You feel weaker forá moment, but itÖasses.");

599 i‡(
	`øndöt
(2) == 1)

601 
	`msg_¥öt
("You feel weaker.");

602 (Ë
	`dec_°©
 (
A_STR
);

605 
nŸi˚
 = 
FALSE
;

608 
f_±r
 = &
py
.
Êags
;

609 
	`èke_hô
(
damage
, 
ddesc
);

610 i‡(
	`øndöt
(2) == 1)

612 i‡(
f_±r
->
c⁄fu£d
 < 1)

614 
	`msg_¥öt
("You feel confused.");

615 
f_±r
->
c⁄fu£d
 +
	`øndöt
(()
r_±r
->
Àvñ
);

618 
nŸi˚
 = 
FALSE
;

619 
f_±r
->
c⁄fu£d
 += 3;

622 
nŸi˚
 = 
FALSE
;

625 
f_±r
 = &
py
.
Êags
;

626 
	`èke_hô
(
damage
, 
ddesc
);

627 i‡(
	`∂ayî_ßves
())

628 
	`msg_¥öt
("YouÑesistÅheÉffects!");

629 i‡(
f_±r
->
a‰aid
 < 1)

631 
	`msg_¥öt
("Youáre suddenlyáfraid!");

632 
f_±r
->
a‰aid
 +3 + 
	`øndöt
(()
r_±r
->
Àvñ
);

636 
f_±r
->
a‰aid
 += 3;

637 
nŸi˚
 = 
FALSE
;

641 
	`msg_¥öt
("YouáreÉnveloped in flames!");

642 
	`fúe_dam
(
damage
, 
ddesc
);

645 
	`msg_¥öt
("Youáre covered inácid!");

646 
	`acid_dam
(
damage
, 
ddesc
);

649 
	`msg_¥öt
("Youáre covered with frost!");

650 
	`cﬁd_dam
(
damage
, 
ddesc
);

653 
	`msg_¥öt
("Lightning strikes you!");

654 
	`light_dam
(
damage
, 
ddesc
);

657 
	`msg_¥öt
("A stingingÑed gas swirlsábout you.");

658 
	`c‹rode_gas
(
ddesc
);

659 
	`èke_hô
(
damage
, 
ddesc
);

662 
f_±r
 = &
py
.
Êags
;

663 
	`èke_hô
(
damage
, 
ddesc
);

664 i‡(
f_±r
->
blöd
 < 1)

666 
f_±r
->
blöd
 +10 + 
	`øndöt
(()
r_±r
->
Àvñ
);

667 
	`msg_¥öt
("YourÉyes beginÅo sting.");

671 
f_±r
->
blöd
 += 5;

672 
nŸi˚
 = 
FALSE
;

676 
f_±r
 = &
py
.
Êags
;

677 
	`èke_hô
(
damage
, 
ddesc
);

678 i‡(
	`∂ayî_ßves
())

679 
	`msg_¥öt
("YouÑesistÅheÉffects!");

680 i‡(
f_±r
->
∑ølysis
 < 1)

682 i‡(
f_±r
->
‰ì_a˘
)

683 
	`msg_¥öt
("Youáre unaffected.");

686 
f_±r
->
∑ølysis
 = 
	`øndöt
(()
r_±r
->
Àvñ
) + 3;

687 
	`msg_¥öt
("YouáreÖaralyzed.");

691 
nŸi˚
 = 
FALSE
;

694 i‡((
py
.
Êags
.
∑ølysis
 < 1) &&

695 (
	`øndöt
(124Ë< 
py
.
°©s
.
u£_°©
[
A_DEX
]))

696 
	`msg_¥öt
("You quicklyÖrotect your moneyÖouch!");

699 
gﬁd
 = (
p_±r
->
au
/10Ë+ 
	`øndöt
(25);

700 i‡(
gﬁd
 > 
p_±r
->
au
)

701 
p_±r
->
au
 = 0;

703 
p_±r
->
au
 -
gﬁd
;

704 
	`msg_¥öt
("YourÖurse feelsÜighter.");

705 
	`¥t_gﬁd
();

707 i‡(
	`øndöt
(2) == 1)

709 
	`msg_¥öt
("There isáÖuff of smoke!");

710 
	`ãÀp‹t_away
(
m⁄±r
, 
MAX_SIGHT
);

714 i‡((
py
.
Êags
.
∑ølysis
 < 1) &&

715 (
	`øndöt
(124Ë< 
py
.
°©s
.
u£_°©
[
A_DEX
]))

716 
	`msg_¥öt
("You grab hold of your backpack!");

719 
i
 = 
	`øndöt
(
öví_˘r
) - 1;

720 
	`öví_de°roy
(
i
);

721 
	`msg_¥öt
("Your backpack feelsÜighter.");

723 i‡(
	`øndöt
(2) == 1)

725 
	`msg_¥öt
("There isáÖuff of smoke!");

726 
	`ãÀp‹t_away
(
m⁄±r
, 
MAX_SIGHT
);

730 
f_±r
 = &
py
.
Êags
;

731 
	`èke_hô
(
damage
, 
ddesc
);

732 
	`msg_¥öt
("You feel very sick.");

733 
f_±r
->
pois⁄ed
 +
	`øndöt
(()
r_±r
->
Àvñ
)+5;

736 
f_±r
 = &
py
.
Êags
;

737 
	`èke_hô
(
damage
, 
ddesc
);

738 i‡(
f_±r
->
su°aö_dex
)

739 
	`msg_¥öt
("You feel clumsy forá moment, but itÖasses.");

742 
	`msg_¥öt
("You feel more clumsy.");

743 (Ë
	`dec_°©
 (
A_DEX
);

747 
f_±r
 = &
py
.
Êags
;

748 
	`èke_hô
(
damage
, 
ddesc
);

749 i‡(
f_±r
->
su°aö_c⁄
)

750 
	`msg_¥öt
("Your bodyÑesistsÅheÉffects ofÅhe disease.");

753 
	`msg_¥öt
("Your health is damaged!");

754 (Ë
	`dec_°©
 (
A_CON
);

758 
f_±r
 = &
py
.
Êags
;

759 
	`èke_hô
(
damage
, 
ddesc
);

760 
	`msg_¥öt
("You haveÅroubleÅhinking clearly.");

761 i‡(
f_±r
->
su°aö_öt
)

762 
	`msg_¥öt
("But your mind quickly clears.");

764 (Ë
	`dec_°©
 (
A_INT
);

767 
f_±r
 = &
py
.
Êags
;

768 
	`èke_hô
(
damage
, 
ddesc
);

769 i‡(
f_±r
->
su°aö_wis
)

770 
	`msg_¥öt
("Your wisdom is sustained.");

773 
	`msg_¥öt
("Your wisdom is drained.");

774 (Ë
	`dec_°©
 (
A_WIS
);

778 
	`msg_¥öt
("You feel yourÜife drainingáway!");

779 
	`lo£_exp
(
damage
 + (
py
.
misc
.
exp
 / 100)*
MON_DRAIN_LIFE
);

782 (Ë
	`aggøv©e_m⁄°î
(20);

785 
Êag
 = 
FALSE
;

786 
	`øndöt
(7))

788 1: 
i
 = 
INVEN_WIELD
; ;

789 2: 
i
 = 
INVEN_BODY
; ;

790 3: 
i
 = 
INVEN_ARM
; ;

791 4: 
i
 = 
INVEN_OUTER
; ;

792 5: 
i
 = 
INVEN_HANDS
; ;

793 6: 
i
 = 
INVEN_HEAD
; ;

794 7: 
i
 = 
INVEN_FEET
; ;

796 
i_±r
 = &
övít‹y
[
i
];

797 i‡(
i_±r
->
tohô
 > 0)

799 
i_±r
->
tohô
 -
	`øndöt
(2);

801 i‡(
i_±r
->
tohô
 < 0)

802 
i_±r
->
tohô
 = 0;

803 
Êag
 = 
TRUE
;

805 i‡(
i_±r
->
todam
 > 0)

807 
i_±r
->
todam
 -
	`øndöt
(2);

809 i‡(
i_±r
->
todam
 < 0)

810 
i_±r
->
todam
 = 0;

811 
Êag
 = 
TRUE
;

813 i‡(
i_±r
->
tﬂc
 > 0)

815 
i_±r
->
tﬂc
 -
	`øndöt
(2);

817 i‡(
i_±r
->
tﬂc
 < 0)

818 
i_±r
->
tﬂc
 = 0;

819 
Êag
 = 
TRUE
;

821 i‡(
Êag
)

823 
	`msg_¥öt
("There isá static feeling inÅheáir.");

824 
	`ˇlc_b⁄u£s
 ();

827 
nŸi˚
 = 
FALSE
;

830 i‡(
	`föd_ønge
(
TV_FOOD
, 
TV_NEVER
, &
i
, &
j
))

832 
	`öví_de°roy
(
i
);

833 
	`msg_¥öt
 ("It gotát yourÑations!");

836 
nŸi˚
 = 
FALSE
;

839 
i_±r
 = &
övít‹y
[
INVEN_LIGHT
];

840 i‡(
i_±r
->
p1
 > 0)

842 
i_±r
->
p1
 -(250 + 
	`øndöt
(250));

843 i‡(
i_±r
->
p1
 < 1) i_ptr->p1 = 1;

844 i‡(
py
.
Êags
.
blöd
 < 1)

845 
	`msg_¥öt
("YourÜight dims.");

847 
nŸi˚
 = 
FALSE
;

850 
nŸi˚
 = 
FALSE
;

853 
i
 = 
	`øndöt
(
öví_˘r
) - 1;

854 
j
 = 
r_±r
->
Àvñ
;

855 
i_±r
 = &
övít‹y
[
i
];

856 i‡(((
i_±r
->
tvÆ
 =
TV_STAFF
Ë|| (i_±r->tvÆ =
TV_WAND
))

857 && (
i_±r
->
p1
 > 0))

859 
m_±r
->
hp
 +
j
*
i_±r
->
p1
;

860 
i_±r
->
p1
 = 0;

861 i‡(! 
	`known2_p
 (
i_±r
))

862 
	`add_ös¸ibe
 (
i_±r
, 
ID_EMPTY
);

863 
	`msg_¥öt
("Energy drains from yourÖack!");

866 
nŸi˚
 = 
FALSE
;

869 
nŸi˚
 = 
FALSE
;

872 
nŸi˚
 = 
FALSE
;

879 i‡(
py
.
Êags
.
c⁄fu£_m⁄°î
 && 
adesc
 != 99)

881 
	`msg_¥öt
("Your hands stop glowing.");

882 
py
.
Êags
.
c⁄fu£_m⁄°î
 = 
FALSE
;

883 i‡((
	`øndöt
(
MAX_MONS_LEVEL
Ë< 
r_±r
->
Àvñ
) ||

884 (
CD_NO_SLEEP
 & 
r_±r
->
cde„n£
))

885 (Ë
	`•rötf
(
tmp_°r
, "%si†u«f„˘ed.", 
cdesc
);

888 (Ë
	`•rötf
(
tmp_°r
, "%ßµór†c⁄fu£d.", 
cdesc
);

889 i‡(
m_±r
->
c⁄fu£d
)

890 
m_±r
->
c⁄fu£d
 += 3;

892 
m_±r
->
c⁄fu£d
 = 2 + 
	`øndöt
(16);

894 
	`msg_¥öt
(
tmp_°r
);

895 i‡(
visibÀ
 && !
dóth
 && 
	`øndöt
(4) == 1)

896 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
r_±r
->
cde„n£
 &

897 
CD_NO_SLEEP
;

904 i‡((
nŸi˚
 ||

905 (
visibÀ
 && 
c_ªˇŒ
[
m_±r
->
m±r
].
r_©ècks
[
©èckn
] != 0 &&

906 
©ty≥
 != 99))

907 && 
c_ªˇŒ
[
m_±r
->
m±r
].
r_©ècks
[
©èckn
] < 
MAX_UCHAR
)

908 
c_ªˇŒ
[
m_±r
->
m±r
].
r_©ècks
[
©èckn
]++;

909 i‡(
dóth
 && 
c_ªˇŒ
[
m_±r
->
m±r
].
r_dóths
 < 
MAX_SHORT
)

910 
c_ªˇŒ
[
m_±r
->
m±r
].
r_dóths
++;

914 i‡((
adesc
 >= 1 &&ádesc <= 3) || (adesc == 6))

916 
	`di°urb
 (1, 0);

917 (Ë
	`°r˝y
(
tmp_°r
, 
cdesc
);

918 
	`msg_¥öt
(
	`°rˇt
(
tmp_°r
, "misses you."));

921 i‡(
©èckn
 < 
MAX_MON_NATTACK
-1)

922 
©èckn
++;

926 
	}
}

930 
	$make_move
(
m⁄±r
, 
mm
, 
rcmove
)

931 
m⁄±r
;

932 *
mm
;

933 
öt32u
 *
rcmove
;

935 
i
, 
√wy
, 
√wx
, 
do_tu∫
, 
do_move
, 
°uck_do‹
;

936 
öt32u
 
movebôs
;

937 
ˇve_ty≥
 *
c_±r
;

938 
m⁄°î_ty≥
 *
m_±r
;

939 
öví_ty≥
 *
t_±r
;

940 #ifde‡
ATARIST_MWC


941 
öt32u
 
hﬁdî
;

944 
i
 = 0;

945 
do_tu∫
 = 
FALSE
;

946 
do_move
 = 
FALSE
;

947 
m_±r
 = &
m_li°
[
m⁄±r
];

948 
movebôs
 = 
c_li°
[
m_±r
->
m±r
].
cmove
;

952 
√wy
 = 
m_±r
->
fy
;

953 
√wx
 = 
m_±r
->
fx
;

954 (Ë
	`mmove
(
mm
[
i
], &
√wy
, &
√wx
);

955 
c_±r
 = &
ˇve
[
√wy
][
√wx
];

956 i‡(
c_±r
->
fvÆ
 !
BOUNDARY_WALL
)

959 i‡(
c_±r
->
fvÆ
 <
MAX_OPEN_SPACE
)

960 
do_move
 = 
TRUE
;

962 #ifde‡
ATARIST_MWC


963 i‡(
movebôs
 & (
hﬁdî
 = 
CM_PHASE
))

965 i‡(
movebôs
 & 
CM_PHASE
)

968 
do_move
 = 
TRUE
;

969 #ifde‡
ATARIST_MWC


970 *
rcmove
 |
hﬁdî
;

972 *
rcmove
 |
CM_PHASE
;

976 i‡(
c_±r
->
çå
 != 0)

978 
t_±r
 = &
t_li°
[
c_±r
->
çå
];

979 #ifde‡
ATARIST_MWC


980 i‡(
movebôs
 & (
hﬁdî
 = 
CM_OPEN_DOOR
))

982 i‡(
movebôs
 & 
CM_OPEN_DOOR
)

985 
°uck_do‹
 = 
FALSE
;

986 i‡(
t_±r
->
tvÆ
 =
TV_CLOSED_DOOR
)

988 
do_tu∫
 = 
TRUE
;

989 i‡(
t_±r
->
p1
 == 0)

990 
do_move
 = 
TRUE
;

991 i‡(
t_±r
->
p1
 > 0)

993 i‡(
	`øndöt
((
m_±r
->
hp
+1)*(50+
t_±r
->
p1
)) <

994 40*(
m_±r
->
hp
-10-
t_±r
->
p1
))

995 
t_±r
->
p1
 = 0;

997 i‡(
t_±r
->
p1
 < 0)

999 i‡(
	`øndöt
((
m_±r
->
hp
+1)*(50-
t_±r
->
p1
)) <

1000 40*(
m_±r
->
hp
-10+
t_±r
->
p1
))

1002 
	`msg_¥öt
("You heará door burst open!");

1003 
	`di°urb
 (1, 0);

1004 
°uck_do‹
 = 
TRUE
;

1005 
do_move
 = 
TRUE
;

1009 i‡(
t_±r
->
tvÆ
 =
TV_SECRET_DOOR
)

1011 
do_tu∫
 = 
TRUE
;

1012 
do_move
 = 
TRUE
;

1014 i‡(
do_move
)

1016 
	`övc›y
(
t_±r
, 
OBJ_OPEN_DOOR
);

1017 i‡(
°uck_do‹
)

1018 
t_±r
->
p1
 = 1 - 
	`øndöt
(2);

1019 
c_±r
->
fvÆ
 = 
CORR_FLOOR
;

1020 
	`lôe_•Ÿ
(
√wy
, 
√wx
);

1021 #ifde‡
ATARIST_MWC


1022 *
rcmove
 |
hﬁdî
;

1024 *
rcmove
 |
CM_OPEN_DOOR
;

1026 
do_move
 = 
FALSE
;

1031 i‡(
t_±r
->
tvÆ
 =
TV_CLOSED_DOOR
)

1033 
do_tu∫
 = 
TRUE
;

1034 i‡(
	`øndöt
((
m_±r
->
hp
+1)*(80+
	`abs
(
t_±r
->
p1
))) <

1035 40*(
m_±r
->
hp
-20-
	`abs
(
t_±r
->
p1
)))

1037 
	`övc›y
(
t_±r
, 
OBJ_OPEN_DOOR
);

1039 
t_±r
->
p1
 = 1 - 
	`øndöt
(2);

1040 
c_±r
->
fvÆ
 = 
CORR_FLOOR
;

1041 
	`lôe_•Ÿ
(
√wy
, 
√wx
);

1042 
	`msg_¥öt
 ("You heará door burst open!");

1043 
	`di°urb
 (1, 0);

1049 i‡(
do_move
 && (
c_±r
->
çå
 != 0) &&

1050 (
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_VIS_TRAP
) &&

1051 (
t_li°
[
c_±r
->
çå
].
subvÆ
 == 99))

1053 i‡(
	`øndöt
(
OBJ_RUNE_PROT
Ë< 
c_li°
[
m_±r
->
m±r
].
Àvñ
)

1055 i‡((
√wy
==
ch¨_row
Ë&& (
√wx
==
ch¨_cﬁ
))

1056 
	`msg_¥öt
("TheÑune ofÖrotection is broken!");

1057 (Ë
	`dñëe_obje˘
(
√wy
, 
√wx
);

1061 
do_move
 = 
FALSE
;

1065 i‡(
movebôs
 & 
CM_ATTACK_ONLY
)

1066 
do_tu∫
 = 
TRUE
;

1070 i‡(
do_move
)

1071 i‡(
c_±r
->
˝å
 == 1)

1076 i‡(!
m_±r
->
ml
)

1077 
	`upd©e_m⁄
(
m⁄±r
);

1078 
	`make_©èck
(
m⁄±r
);

1079 
do_move
 = 
FALSE
;

1080 
do_tu∫
 = 
TRUE
;

1083 i‡((
c_±r
->
˝å
 > 1) &&

1084 ((
√wy
 !
m_±r
->
fy
) ||

1085 (
√wx
 !
m_±r
->
fx
)))

1088 #ifde‡
ATARIST_MWC


1089 i‡((
movebôs
 & (
hﬁdî
 = 
CM_EATS_OTHER
)) &&

1091 i‡((
movebôs
 & 
CM_EATS_OTHER
) &&

1093 (
c_li°
[
m_±r
->
m±r
].
mexp
 >=

1094 
c_li°
[
m_li°
[
c_±r
->
˝å
].
m±r
].
mexp
))

1096 i‡(
m_li°
[
c_±r
->
˝å
].
ml
)

1097 #ifde‡
ATARIST_MWC


1098 *
rcmove
 |
hﬁdî
;

1100 *
rcmove
 |
CM_EATS_OTHER
;

1103 i‡(
m⁄±r
 < 
c_±r
->
˝å
)

1104 
	`dñëe_m⁄°î
((Ë
c_±r
->
˝å
);

1109 
	`fix1_dñëe_m⁄°î
((Ë
c_±r
->
˝å
);

1112 
do_move
 = 
FALSE
;

1115 i‡(
do_move
)

1118 #ifde‡
ATARIST_MWC


1119 i‡(
movebôs
 & (
hﬁdî
 = 
CM_PICKS_UP
))

1121 i‡(
movebôs
 & 
CM_PICKS_UP
)

1124 
c_±r
 = &
ˇve
[
√wy
][
√wx
];

1126 i‡((
c_±r
->
çå
 != 0)

1127 && (
t_li°
[
c_±r
->
çå
].
tvÆ
 <
TV_MAX_OBJECT
))

1129 #ifde‡
ATARIST_MWC


1130 *
rcmove
 |
hﬁdî
;

1132 *
rcmove
 |
CM_PICKS_UP
;

1134 (Ë
	`dñëe_obje˘
(
√wy
, 
√wx
);

1138 
	`move_ªc
(()
m_±r
->
fy
, ()m_±r->
fx
, 
√wy
, 
√wx
);

1139 i‡(
m_±r
->
ml
)

1141 
m_±r
->
ml
 = 
FALSE
;

1142 
	`lôe_•Ÿ
 (()
m_±r
->
fy
, ()m_±r->
fx
);

1144 
m_±r
->
fy
 = 
√wy
;

1145 
m_±r
->
fx
 = 
√wx
;

1146 
m_±r
->
cdis
 = 
	`di°™˚
 (
ch¨_row
, 
ch¨_cﬁ
, 
√wy
, 
√wx
);

1147 
do_tu∫
 = 
TRUE
;

1150 
i
++;

1153 (!
do_tu∫
Ë&& (
i
 < 5));

1154 
	}
}

1160 
	$m⁄_ˇ°_•ñl
(
m⁄±r
, 
took_tu∫
)

1161 
m⁄±r
;

1162 *
took_tu∫
;

1164 
öt32u
 
i
;

1165 
y
, 
x
, 
ch™˚
, 
thrown_•ñl
, 
r1
;

1166 
k
;

1167 
•ñl_choi˚
[30];

1168 
vty≥
 
cdesc
, 
outvÆ
, 
ddesc
;

1169 
m⁄°î_ty≥
 *
m_±r
;

1170 
¸ótuª_ty≥
 *
r_±r
;

1171 #ifde‡
ATARIST_MWC


1172 
öt32u
 
hﬁdî
;

1175 i‡(
dóth
)

1178 
m_±r
 = &
m_li°
[
m⁄±r
];

1179 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1180 
ch™˚
 = ()(
r_±r
->
•ñls
 & 
CS_FREQ
);

1182 i‡(
	`øndöt
(
ch™˚
) != 1)

1183 *
took_tu∫
 = 
FALSE
;

1185 i‡(
m_±r
->
cdis
 > 
MAX_SPELL_DIS
)

1186 *
took_tu∫
 = 
FALSE
;

1188 i‡(!
	`los
(
ch¨_row
, 
ch¨_cﬁ
, ()
m_±r
->
fy
, ()m_±r->
fx
))

1189 *
took_tu∫
 = 
FALSE
;

1192 *
took_tu∫
 = 
TRUE
;

1194 
	`upd©e_m⁄
 (
m⁄±r
);

1196 i‡(
m_±r
->
ml
)

1197 (Ë
	`•rötf
(
cdesc
, "Thê%†", 
r_±r
->
«me
);

1199 (Ë
	`°r˝y
(
cdesc
, "It ");

1201 #ifde‡
ATARIST_MWC


1202 
hﬁdî
 = 
CM_WIN
;

1203 i‡(
hﬁdî
 & 
r_±r
->
cmove
)

1205 i‡(
CM_WIN
 & 
r_±r
->
cmove
)

1207 (Ë
	`•rötf
(
ddesc
, "Thê%s", 
r_±r
->
«me
);

1208 i‡(
	`is_a_vowñ
 (
r_±r
->
«me
[0]))

1209 (Ë
	`•rötf
 (
ddesc
, "™ %s", 
r_±r
->
«me
);

1211 (Ë
	`•rötf
(
ddesc
, "®%s", 
r_±r
->
«me
);

1215 #ifde‡
ATARIST_MWC


1216 
hﬁdî
 = ~
CS_FREQ
;

1217 
i
 = (
r_±r
->
•ñls
 & 
hﬁdî
);

1219 
i
 = (
r_±r
->
•ñls
 & ~
CS_FREQ
);

1221 
k
 = 0;

1222 
i
 != 0)

1224 
•ñl_choi˚
[
k
] = 
	`bô_pos
(&
i
);

1225 
k
++;

1228 
thrown_•ñl
 = 
•ñl_choi˚
[
	`øndöt
(
k
) - 1];

1229 
thrown_•ñl
++;

1231 i‡(
thrown_•ñl
 > 6 &&Åhrown_spell != 17)

1232 
	`di°urb
 (1, 0);

1234 i‡((
thrown_•ñl
 < 14 &&Åhrown_spell > 6) || (thrown_spell == 16))

1236 (Ë
	`°rˇt
(
cdesc
, "castsá spell.");

1237 
	`msg_¥öt
(
cdesc
);

1240 
thrown_•ñl
)

1243 
	`ãÀp‹t_away
(
m⁄±r
, 5);

1246 
	`ãÀp‹t_away
(
m⁄±r
, 
MAX_SIGHT
);

1249 
	`ãÀp‹t_to
(()
m_±r
->
fy
, ()m_±r->
fx
);

1252 i‡(
	`∂ayî_ßves
())

1253 
	`msg_¥öt
("YouÑesistÅheÉffects ofÅhe spell.");

1255 
	`èke_hô
(
	`damrﬁl
(3, 8), 
ddesc
);

1258 i‡(
	`∂ayî_ßves
())

1259 
	`msg_¥öt
("YouÑesistÅheÉffects ofÅhe spell.");

1261 
	`èke_hô
(
	`damrﬁl
(8, 8), 
ddesc
);

1264 i‡(
py
.
Êags
.
‰ì_a˘
)

1265 
	`msg_¥öt
("Youáre unaffected.");

1266 i‡(
	`∂ayî_ßves
())

1267 
	`msg_¥öt
("YouÑesistÅheÉffects ofÅhe spell.");

1268 i‡(
py
.
Êags
.
∑ølysis
 > 0)

1269 
py
.
Êags
.
∑ølysis
 += 2;

1271 
py
.
Êags
.
∑ølysis
 = 
	`øndöt
(5)+4;

1274 i‡(
	`∂ayî_ßves
())

1275 
	`msg_¥öt
("YouÑesistÅheÉffects ofÅhe spell.");

1276 i‡(
py
.
Êags
.
blöd
 > 0)

1277 
py
.
Êags
.
blöd
 += 6;

1279 
py
.
Êags
.
blöd
 +12 + 
	`øndöt
(3);

1282 i‡(
	`∂ayî_ßves
())

1283 
	`msg_¥öt
("YouÑesistÅheÉffects ofÅhe spell.");

1284 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

1285 
py
.
Êags
.
c⁄fu£d
 += 2;

1287 
py
.
Êags
.
c⁄fu£d
 = 
	`øndöt
(5) + 3;

1290 i‡(
	`∂ayî_ßves
())

1291 
	`msg_¥öt
("YouÑesistÅheÉffects ofÅhe spell.");

1292 i‡(
py
.
Êags
.
a‰aid
 > 0)

1293 
py
.
Êags
.
a‰aid
 += 2;

1295 
py
.
Êags
.
a‰aid
 = 
	`øndöt
(5) + 3;

1298 (Ë
	`°rˇt
(
cdesc
, "magically summonsá monster!");

1299 
	`msg_¥öt
(
cdesc
);

1300 
y
 = 
ch¨_row
;

1301 
x
 = 
ch¨_cﬁ
;

1303 
hack_m⁄±r
 = 
m⁄±r
;

1304 (Ë
	`summ⁄_m⁄°î
(&
y
, &
x
, 
FALSE
);

1305 
hack_m⁄±r
 = -1;

1306 
	`upd©e_m⁄
 (()
ˇve
[
y
][
x
].
˝å
);

1309 (Ë
	`°rˇt
(
cdesc
, "magically summonsán undead!");

1310 
	`msg_¥öt
(
cdesc
);

1311 
y
 = 
ch¨_row
;

1312 
x
 = 
ch¨_cﬁ
;

1314 
hack_m⁄±r
 = 
m⁄±r
;

1315 (Ë
	`summ⁄_undód
(&
y
, &
x
);

1316 
hack_m⁄±r
 = -1;

1317 
	`upd©e_m⁄
 (()
ˇve
[
y
][
x
].
˝å
);

1320 i‡(
py
.
Êags
.
‰ì_a˘
)

1321 
	`msg_¥öt
("Youáre unaffected.");

1322 i‡(
	`∂ayî_ßves
())

1323 
	`msg_¥öt
("YouÑesistÅheÉffects ofÅhe spell.");

1324 i‡(
py
.
Êags
.
¶ow
 > 0)

1325 
py
.
Êags
.
¶ow
 += 2;

1327 
py
.
Êags
.
¶ow
 = 
	`øndöt
(5) + 3;

1330 i‡(
py
.
misc
.
cm™a
 > 0)

1332 
	`di°urb
 (1, 0);

1333 (Ë
	`•rötf
(
outvÆ
, "%sdøw†psychi¯íîgy from you!",
cdesc
);

1334 
	`msg_¥öt
(
outvÆ
);

1335 i‡(
m_±r
->
ml
)

1337 (Ë
	`•rötf
(
outvÆ
, "%ßµór†hó…hõr.", 
cdesc
);

1338 
	`msg_¥öt
(
outvÆ
);

1340 
r1
 = (
	`øndöt
(()
r_±r
->
Àvñ
) >> 1) + 1;

1341 i‡(
r1
 > 
py
.
misc
.
cm™a
)

1343 
r1
 = 
py
.
misc
.
cm™a
;

1344 
py
.
misc
.
cm™a
 = 0;

1345 
py
.
misc
.
cm™a_‰ac
 = 0;

1348 
py
.
misc
.
cm™a
 -
r1
;

1349 
	`¥t_cm™a
();

1350 
m_±r
->
hp
 +6*(
r1
);

1354 (Ë
	`°rˇt
(
cdesc
, "breathesÜightning.");

1355 
	`msg_¥öt
(
cdesc
);

1356 
	`bª©h
(
GF_LIGHTNING
, 
ch¨_row
, 
ch¨_cﬁ
, (
m_±r
->
hp
 / 4), 
ddesc
,

1357 
m⁄±r
);

1360 (Ë
	`°rˇt
(
cdesc
, "breathes gas.");

1361 
	`msg_¥öt
(
cdesc
);

1362 
	`bª©h
(
GF_POISON_GAS
, 
ch¨_row
, 
ch¨_cﬁ
, (
m_±r
->
hp
 / 3), 
ddesc
,

1363 
m⁄±r
);

1366 (Ë
	`°rˇt
(
cdesc
, "breathesácid.");

1367 
	`msg_¥öt
(
cdesc
);

1368 
	`bª©h
(
GF_ACID
, 
ch¨_row
, 
ch¨_cﬁ
, (
m_±r
->
hp
 / 3), 
ddesc
, 
m⁄±r
);

1371 (Ë
	`°rˇt
(
cdesc
, "breathes frost.");

1372 
	`msg_¥öt
(
cdesc
);

1373 
	`bª©h
(
GF_FROST
, 
ch¨_row
, 
ch¨_cﬁ
, (
m_±r
->
hp
 / 3), 
ddesc
, 
m⁄±r
);

1376 (Ë
	`°rˇt
(
cdesc
, "breathes fire.");

1377 
	`msg_¥öt
(
cdesc
);

1378 
	`bª©h
(
GF_FIRE
, 
ch¨_row
, 
ch¨_cﬁ
, (
m_±r
->
hp
 / 3), 
ddesc
, 
m⁄±r
);

1381 (Ë
	`°rˇt
 (
cdesc
, "cast unknown spell.");

1382 
	`msg_¥öt
(
cdesc
);

1385 i‡(
m_±r
->
ml
)

1387 
c_ªˇŒ
[
m_±r
->
m±r
].
r_•ñls
 |1L << (
thrown_•ñl
-1);

1388 i‡((
c_ªˇŒ
[
m_±r
->
m±r
].
r_•ñls
 & 
CS_FREQ
) != CS_FREQ)

1389 
c_ªˇŒ
[
m_±r
->
m±r
].
r_•ñls
++;

1390 i‡(
dóth
 && 
c_ªˇŒ
[
m_±r
->
m±r
].
r_dóths
 < 
MAX_SHORT
)

1391 
c_ªˇŒ
[
m_±r
->
m±r
].
r_dóths
++;

1394 
	}
}

1399 
	$mu…ùly_m⁄°î
(
y
, 
x
, 
¸_ödex
, 
m⁄±r
)

1400 
y
, 
x
, 
¸_ödex
;

1401 
m⁄±r
;

1403 
i
, 
j
, 
k
;

1404 
ˇve_ty≥
 *
c_±r
;

1405 
ªsu…
;

1406 #ifde‡
ATARIST_MWC


1407 
öt32u
 
hﬁdî
;

1410 
i
 = 0;

1413 
j
 = 
y
 - 2 + 
	`øndöt
(3);

1414 
k
 = 
x
 - 2 + 
	`øndöt
(3);

1417 i‡(
	`ö_bounds
(
j
, 
k
Ë&& (j !
y
 || k !
x
))

1419 
c_±r
 = &
ˇve
[
j
][
k
];

1420 i‡((
c_±r
->
fvÆ
 <
MAX_OPEN_SPACE
Ë&& (c_±r->
çå
 == 0) &&

1421 (
c_±r
->
˝å
 != 1))

1423 i‡(
c_±r
->
˝å
 > 1)

1426 #ifde‡
ATARIST_MWC


1427 
hﬁdî
 = 
CM_EATS_OTHER
;

1428 i‡((
c_li°
[
¸_ödex
].
cmove
 & 
hﬁdî
)

1430 i‡((
c_li°
[
¸_ödex
].
cmove
 & 
CM_EATS_OTHER
)

1433 && 
c_li°
[
¸_ödex
].
mexp
 >=

1434 
c_li°
[
m_li°
[
c_±r
->
˝å
].
m±r
].
mexp
)

1437 i‡(
m⁄±r
 < 
c_±r
->
˝å
)

1438 
	`dñëe_m⁄°î
((Ë
c_±r
->
˝å
);

1443 
	`fix1_dñëe_m⁄°î
((Ë
c_±r
->
˝å
);

1446 
hack_m⁄±r
 = 
m⁄±r
;

1448 
ªsu…
 = 
	`∂a˚_m⁄°î
(
j
, 
k
, 
¸_ödex
, 
FALSE
);

1449 
hack_m⁄±r
 = -1;

1450 i‡(! 
ªsu…
)

1451  
FALSE
;

1452 
m⁄_tŸ_mu…
++;

1453  
	`check_m⁄_lôe
(
j
, 
k
);

1460 
hack_m⁄±r
 = 
m⁄±r
;

1462 
ªsu…
 = 
	`∂a˚_m⁄°î
(
j
, 
k
, 
¸_ödex
, 
FALSE
);

1463 
hack_m⁄±r
 = -1;

1464 i‡(! 
ªsu…
)

1465  
FALSE
;

1466 
m⁄_tŸ_mu…
++;

1467  
	`check_m⁄_lôe
(
j
, 
k
);

1471 
i
++;

1473 
i
 <= 18);

1474  
FALSE
;

1475 
	}
}

1479 
	$m⁄_move
(
m⁄±r
, 
rcmove
)

1480 
m⁄±r
;

1481 
öt32u
 *
rcmove
;

1483 
i
, 
j
;

1484 
k
, 
move_ã°
, 
dú
;

1485 #ifde‡
M_XENIX


1487 
¸ótuª_ty≥
 *
r_±r
;

1489 
¸ótuª_ty≥
 *
r_±r
;

1491 
m⁄°î_ty≥
 *
m_±r
;

1492 
mm
[9];

1493 #ifde‡
ATARIST_MWC


1494 
öt32u
 
hﬁdî
;

1496 
ª°_vÆ
;

1498 
m_±r
 = &
m_li°
[
m⁄±r
];

1499 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1502 
ª°_vÆ
 = 
	`abs
 (
py
.
Êags
.
ª°
);

1503 #ifde‡
ATARIST_MWC


1504 
hﬁdî
 = 
CM_MULTIPLY
;

1505 i‡((
r_±r
->
cmove
 & 
hﬁdî
Ë&& (
MAX_MON_MULT
 >
m⁄_tŸ_mu…
) &&

1507 i‡((
r_±r
->
cmove
 & 
CM_MULTIPLY
Ë&& (
MAX_MON_MULT
 >
m⁄_tŸ_mu…
) &&

1509 ((
ª°_vÆ
 % 
MON_MULT_ADJ
) == 0))

1511 
k
 = 0;

1512 
i
 = 
m_±r
->
fy
-1; i <= m_ptr->fy+1; i++)

1513 
j
 = 
m_±r
->
fx
-1; j <= m_ptr->fx+1; j++)

1514 i‡(
	`ö_bounds
(
i
, 
j
Ë&& (
ˇve
[i][j].
˝å
 > 1))

1515 
k
++;

1518 i‡(
k
 == 0)

1519 
k
++;

1520 i‡((
k
 < 4Ë&& (
	`øndöt
(k*
MON_MULT_ADJ
) == 1))

1521 i‡(
	`mu…ùly_m⁄°î
(()
m_±r
->
fy
, ()m_±r->
fx
,

1522 ()
m_±r
->
m±r
, 
m⁄±r
))

1523 #ifde‡
ATARIST_MWC


1524 *
rcmove
 |
hﬁdî
;

1526 *
rcmove
 |
CM_MULTIPLY
;

1529 
move_ã°
 = 
FALSE
;

1532 #ifde‡
ATARIST_MWC


1533 
hﬁdî
 = 
CM_PHASE
;

1534 i‡(!(
r_±r
->
cmove
 & 
hﬁdî
) &&

1536 i‡(!(
r_±r
->
cmove
 & 
CM_PHASE
) &&

1538 (
ˇve
[
m_±r
->
fy
][m_±r->
fx
].
fvÆ
 >
MIN_CAVE_WALL
))

1544 i‡(
m_±r
->
hp
 < 0)

1547 
k
 = 0;

1548 
dú
 = 1;

1553 
i
 = 
m_±r
->
fy
+1; i >= ()(m_ptr->fy-1); i--)

1554 
j
 = 
m_±r
->
fx
-1; j <= m_ptr->fx+1; j++)

1556 i‡((
dú
 !5Ë&& (
ˇve
[
i
][
j
].
fvÆ
 <
MAX_OPEN_SPACE
)

1557 && (
ˇve
[
i
][
j
].
˝å
 != 1))

1558 
mm
[
k
++] = 
dú
;

1559 
dú
++;

1561 i‡(
k
 != 0)

1564 
dú
 = 
	`øndöt
 (
k
) - 1;

1565 
i
 = 
mm
[0];

1566 
mm
[0] = mm[
dú
];

1567 
mm
[
dú
] = 
i
;

1568 
	`make_move
 (
m⁄±r
, 
mm
, 
rcmove
);

1573 i‡(
ˇve
[
m_±r
->
fy
][m_±r->
fx
].
fvÆ
 >
MIN_CAVE_WALL
)

1577 
hack_m⁄±r
 = 
m⁄±r
;

1578 
i
 = 
	`m⁄_èke_hô
(
m⁄±r
, 
	`damrﬁl
 (8, 8));

1579 
hack_m⁄±r
 = -1;

1580 i‡(
i
 >= 0)

1582 
	`msg_¥öt
("You heará scream muffled byÑock!");

1583 
	`¥t_ex≥rõn˚
();

1587 
	`msg_¥öt
 ("A creature digs itself out fromÅheÑock!");

1588 (Ë
	`twÆl
 (()
m_±r
->
fy
, ()m_±r->
fx
, 1, 0);

1594 i‡(
m_±r
->
c⁄fu£d
)

1596 i‡(
r_±r
->
cde„n£
 & 
CD_UNDEAD
)

1599 
	`gë_moves
(
m⁄±r
,
mm
);

1600 
mm
[0] = 10-mm[0];

1601 
mm
[1] = 10-mm[1];

1602 
mm
[2] = 10-mm[2];

1603 
mm
[3] = 
	`øndöt
(9);

1604 
mm
[4] = 
	`øndöt
(9);

1608 
mm
[0] = 
	`øndöt
(9);

1609 
mm
[1] = 
	`øndöt
(9);

1610 
mm
[2] = 
	`øndöt
(9);

1611 
mm
[3] = 
	`øndöt
(9);

1612 
mm
[4] = 
	`øndöt
(9);

1615 i‡(!(
r_±r
->
cmove
 & 
CM_ATTACK_ONLY
))

1616 
	`make_move
(
m⁄±r
, 
mm
, 
rcmove
);

1617 
m_±r
->
c⁄fu£d
--;

1618 
move_ã°
 = 
TRUE
;

1621 #ifde‡
ATARIST_MWC


1622 i‡(
r_±r
->
•ñls
 & (
hﬁdî
 = 
CS_FREQ
))

1624 i‡(
r_±r
->
•ñls
 & 
CS_FREQ
)

1626 
	`m⁄_ˇ°_•ñl
(
m⁄±r
, &
move_ã°
);

1627 i‡(!
move_ã°
)

1630 i‡((
r_±r
->
cmove
 & 
CM_75_RANDOM
Ë&& (
	`øndöt
(100) < 75))

1632 
mm
[0] = 
	`øndöt
(9);

1633 
mm
[1] = 
	`øndöt
(9);

1634 
mm
[2] = 
	`øndöt
(9);

1635 
mm
[3] = 
	`øndöt
(9);

1636 
mm
[4] = 
	`øndöt
(9);

1637 *
rcmove
 |
CM_75_RANDOM
;

1638 
	`make_move
(
m⁄±r
, 
mm
, 
rcmove
);

1641 i‡((
r_±r
->
cmove
 & 
CM_40_RANDOM
Ë&& (
	`øndöt
(100) < 40))

1643 
mm
[0] = 
	`øndöt
(9);

1644 
mm
[1] = 
	`øndöt
(9);

1645 
mm
[2] = 
	`øndöt
(9);

1646 
mm
[3] = 
	`øndöt
(9);

1647 
mm
[4] = 
	`øndöt
(9);

1648 *
rcmove
 |
CM_40_RANDOM
;

1649 
	`make_move
(
m⁄±r
, 
mm
, 
rcmove
);

1652 i‡((
r_±r
->
cmove
 & 
CM_20_RANDOM
Ë&& (
	`øndöt
(100) < 20))

1654 
mm
[0] = 
	`øndöt
(9);

1655 
mm
[1] = 
	`øndöt
(9);

1656 
mm
[2] = 
	`øndöt
(9);

1657 
mm
[3] = 
	`øndöt
(9);

1658 
mm
[4] = 
	`øndöt
(9);

1659 *
rcmove
 |
CM_20_RANDOM
;

1660 
	`make_move
(
m⁄±r
, 
mm
, 
rcmove
);

1663 i‡(
r_±r
->
cmove
 & 
CM_MOVE_NORMAL
)

1665 i‡(
	`øndöt
(200) == 1)

1667 
mm
[0] = 
	`øndöt
(9);

1668 
mm
[1] = 
	`øndöt
(9);

1669 
mm
[2] = 
	`øndöt
(9);

1670 
mm
[3] = 
	`øndöt
(9);

1671 
mm
[4] = 
	`øndöt
(9);

1674 
	`gë_moves
(
m⁄±r
, 
mm
);

1675 *
rcmove
 |
CM_MOVE_NORMAL
;

1676 
	`make_move
(
m⁄±r
, 
mm
, 
rcmove
);

1679 i‡(
r_±r
->
cmove
 & 
CM_ATTACK_ONLY
)

1681 i‡(
m_±r
->
cdis
 < 2)

1683 
	`gë_moves
(
m⁄±r
, 
mm
);

1684 
	`make_move
(
m⁄±r
, 
mm
, 
rcmove
);

1689 *
rcmove
 |
CM_ATTACK_ONLY
;

1691 i‡((
r_±r
->
cmove
 & 
CM_ONLY_MAGIC
Ë&& (
m_±r
->
cdis
 < 2))

1695 i‡(
c_ªˇŒ
[
m_±r
->
m±r
].
r_©ècks
[0] < 
MAX_UCHAR
)

1696 
c_ªˇŒ
[
m_±r
->
m±r
].
r_©ècks
[0]++;

1699 i‡(
c_ªˇŒ
[
m_±r
->
m±r
].
r_©ècks
[0] > 20)

1700 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 |
CM_ONLY_MAGIC
;

1703 
	}
}

1707 
	$¸ótuªs
(
©èck
)

1708 
©èck
;

1710 
i
, 
k
;

1711 
m⁄°î_ty≥
 *
m_±r
;

1712 
ªˇŒ_ty≥
 *
r_±r
;

1713 
öt32u
 
nŸi˚
, 
rcmove
;

1714 
wake
, 
ign‹e
;

1715 
vty≥
 
cdesc
;

1716 #ifde‡
ATARIST_MWC


1717 
öt32u
 
hﬁdî
;

1721 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
 && !
dóth
; i--)

1723 
m_±r
 = &
m_li°
[
i
];

1727 i‡(
m_±r
->
hp
 < 0)

1729 
	`fix2_dñëe_m⁄°î
(
i
);

1733 
m_±r
->
cdis
 = 
	`di°™˚
(
ch¨_row
, 
ch¨_cﬁ
,

1734 ()
m_±r
->
fy
, ()m_±r->
fx
);

1735 i‡(
©èck
)

1737 
k
 = 
	`movemít_øã
(
m_±r
->
c•ìd
);

1738 i‡(
k
 <= 0)

1739 
	`upd©e_m⁄
(
i
);

1741 
k
 > 0)

1743 
k
--;

1744 
wake
 = 
FALSE
;

1745 
ign‹e
 = 
FALSE
;

1746 
rcmove
 = 0;

1747 i‡(
m_±r
->
ml
 || (m_±r->
cdis
 <
c_li°
[m_±r->
m±r
].
Øf
)

1750 #ifde‡
ATARIST_MWC


1751 || ((! (
c_li°
[
m_±r
->
m±r
].
cmove
 & (
hﬁdî
 = 
CM_PHASE
)))

1753 || ((! (
c_li°
[
m_±r
->
m±r
].
cmove
 & 
CM_PHASE
))

1755 && 
ˇve
[
m_±r
->
fy
][m_±r->
fx
].
fvÆ
 >
MIN_CAVE_WALL
))

1757 i‡(
m_±r
->
c¶ìp
 > 0)

1758 i‡(
py
.
Êags
.
aggøv©e
)

1759 
m_±r
->
c¶ìp
 = 0;

1760 i‡((
py
.
Êags
.
ª°
 =0 &&Öy.Êags.
∑ølysis
 < 1)

1761 || (
	`øndöt
(50) == 1))

1763 
nŸi˚
 = 
	`øndöt
(1024);

1764 i‡(
nŸi˚
*nŸi˚*nŸi˚ <(1L << (29 - 
py
.
misc
.
°l
)))

1766 
m_±r
->
c¶ìp
 -(100 / m_±r->
cdis
);

1767 i‡(
m_±r
->
c¶ìp
 > 0)

1768 
ign‹e
 = 
TRUE
;

1771 
wake
 = 
TRUE
;

1773 
m_±r
->
c¶ìp
 = 0;

1777 i‡(
m_±r
->
°u¬ed
 != 0)

1781 i‡(
	`øndöt
(5000Ë< 
c_li°
[
m_±r
->
m±r
].
Àvñ


1782 * 
c_li°
[
m_±r
->
m±r
].
Àvñ
)

1783 
m_±r
->
°u¬ed
 = 0;

1785 
m_±r
->
°u¬ed
--;

1786 i‡(
m_±r
->
°u¬ed
 == 0)

1788 i‡(
m_±r
->
ml
)

1790 (Ë
	`•rötf
(
cdesc
, "The %s ",

1791 
c_li°
[
m_±r
->
m±r
].
«me
);

1792 
	`msg_¥öt
(
	`°rˇt
(
cdesc
,

1797 i‡((
m_±r
->
c¶ìp
 =0Ë&& (m_±r->
°u¬ed
 == 0))

1798 
	`m⁄_move
 (
i
, &
rcmove
);

1801 
	`upd©e_m⁄
(
i
);

1802 i‡(
m_±r
->
ml
)

1804 
r_±r
 = &
c_ªˇŒ
[
m_±r
->
m±r
];

1805 i‡(
wake
)

1807 i‡(
r_±r
->
r_wake
 < 
MAX_UCHAR
)

1808 
r_±r
->
r_wake
++;

1810 i‡(
ign‹e
)

1812 i‡(
r_±r
->
r_ign‹e
 < 
MAX_UCHAR
)

1813 
r_±r
->
r_ign‹e
++;

1815 
r_±r
->
r_cmove
 |
rcmove
;

1820 
	`upd©e_m⁄
(
i
);

1825 i‡(
m_±r
->
hp
 < 0)

1827 
	`fix2_dñëe_m⁄°î
(
i
);

1832 
	}
}

	@death.c

10 
	~<°dio.h
>

12 #i‚de‡
STDIO_LOADED


13 
	#STDIO_LOADED


	)

16 
	~"c⁄fig.h
"

17 
	~"c⁄°™t.h
"

18 
	~"ty≥s.h
"

20 #ifde‡
Pyømid


21 
	~<sys/time.h
>

23 
	~<time.h
>

26 
	~<˘y≥.h
>

28 #i‚de‡
USG


30 
	~<sys/∑øm.h
>

31 
	~<sys/ty≥s.h
>

32 
	~<sys/fûe.h
>

34 #ifde‡
SYS_V


35 
	~<sys/ty≥s.h
>

39 #ifde‡
MSDOS


40 
	~<io.h
>

42 #i‡!
deföed
(
ATARIST_MWC
Ë&& !deföed(
MAC
Ë&& !deföed(
AMIGA
)

43 #i‡!
deföed
(
ATARIST_TC
)

44 #i‚de‡
VMS


45 
	~<pwd.h
>

47 
	~<fûe.h
>

53 #ifde‡
VMS


54 
gëuid
(), 
gëgid
();

56 #ifde‡
unix


57 #ifde‡
USG


58 
gëuid
(), 
gëgid
();

60 #i‚de‡
SECURE


61 #ifde‡
BSD4_3


62 
uid_t
 
gëuid
(), 
gëgid
();

64 
gëuid
(), 
gëgid
();

71 #ifde‡
USG


72 #i‚de‡
ATARIST_MWC


73 
	~<°rög.h
>

74 #i‚de‡
VMS


75 #i‚de‡
ATARIST_TC


76 
	~<f˙é.h
>

81 
	~<°rögs.h
>

87 
	~"exã∫s.h
"

89 #i‚de‡
BSD4_3


90 #i‚de‡
ATARIST_TC


91 
l£ek
();

94 
off_t
 
l£ek
();

97 #i‡
deföed
(
USG
Ë|| deföed(
VMS
Ë|| deföed(
©¨i°
)

98 #i‚de‡
L_SET


99 
	#L_SET
 0

	)

101 #i‚de‡
L_INCR


102 
	#L_INCR
 1

	)

106 #i‚de‡
VMS


107 #i‚de‡
MAC


108 #i‡
deföed
(
u…rix
Ë|| deföed(
USG
)

109 
exô
 ();

114 #i‡
deföed
(
LINT_ARGS
)

115 
d©e
(*);

116 *
˚¡î_°rög
(*, *);

117 
¥öt_tomb
();

118 
kögly
();

121 #ifde‡
ATARIST_TC


123 
	~<°dlib.h
>

126 #i‚de‡
VMS


127 #i‚de‡
MAC


128 #i‡!
deföed
(
ATARIST_MWC
Ë&& !deföed(
AMIGA
)

129 
time
();

134 
	$d©e
(
day
)

135 *
day
;

137 *
tmp
;

138 #ifde‡
MAC


139 
time_t
 
˛ockv¨
;

141 
˛ockv¨
;

144 #ifde‡
MAC


145 
˛ockv¨
 = 
	`time
((
time_t
 *) 0);

147 
˛ockv¨
 = 
	`time
((*) 0);

149 
tmp
 = 
	`˘ime
(&
˛ockv¨
);

150 
tmp
[10] = '\0';

151 (Ë
	`°r˝y
(
day
, 
tmp
);

152 
	}
}

155 *
	$˚¡î_°rög
(
˚¡îed_°r
, 
ö_°r
)

156 *
˚¡îed_°r
;

157 *
ö_°r
;

159 
i
, 
j
;

161 
i
 = 
	`°æí
(
ö_°r
);

162 
j
 = 15 - 
i
/2;

163 (Ë
	`•rötf
 (
˚¡îed_°r
, "%*s%s%*s", 
j
, "", 
ö_°r
, 31 - 
i
 - j, "");

164  
˚¡îed_°r
;

165 
	}
}

168 #i‚de‡
__TURBOC__


169 #i‡(
deföed
(
USG
Ë|| deföed(
©¨i°
Ë|| deföed(
HPUX
)Ë&& !deföed(
VMS
)

170 #i‡!
deföed
(
AMIGA
Ë&& !deföed(
MAC
Ë&& !deföed(
ATARIST_TC
)

172 
	~<sys/°©.h
>

173 
	~<î∫o.h
>

178 
	#LOCK_EX
 1

	)

179 
	#LOCK_SH
 2

	)

180 
	#LOCK_NB
 4

	)

181 
	#LOCK_UN
 8

	)

185 
	$Êock
(
f
, 
l
)

186 
f
, 
l
;

188 
°©
 
sbuf
;

189 
lock«me
[80];

191 i‡(
	`f°©
 (
f
, &
sbuf
) < 0)

193 #ifde‡
©¨i°


194 (Ë
	`•rötf
 (
lock«me
, (*)
	`¥efix_fûe
((*)"moria.%d"),

195 
sbuf
.
°_öo
);

197 #ifde‡
__löux__


198 (Ë
	`•rötf
 (
lock«me
, "/tmp/m‹ü.%ld", 
sbuf
.
°_öo
);

200 (Ë
	`•rötf
 (
lock«me
, "/tmp/m‹ü.%d", 
sbuf
.
°_öo
);

203 i‡(
l
 & 
LOCK_UN
)

204  
	`u∆ök
(
lock«me
);

206 
	`›í
 (
lock«me
, 
O_WRONLY
|
O_CREAT
|
O_EXCL
, 0644) < 0)

208 i‡(
î∫o
 !
EEXIST
)

210 i‡(
	`°©
(
lock«me
, &
sbuf
) < 0)

213 i‡(
	`time
((*)0Ë- 
sbuf
.
°_mtime
 > 10)

215 i‡(
	`u∆ök
(
lock«me
) < 0)

218 i‡(
l
 & 
LOCK_NB
)

221 (Ë
	`¶ìp
(1);

224 
	}
}

229 
	$di•œy_sc‹es
(
show_∂ayî
)

230 
show_∂ayî
;

232 
i
, 
ønk
;

233 
high_sc‹es
 
sc‹e
;

234 
öput
;

235 
°rög
[100];

236 
öt8u
 
vîsi⁄_maj
, 
vîsi⁄_mö
, 
∑tch_Àvñ
;

237 #i‡
	`deföed
(
unix
Ë|| deföed(
VMS
)

238 
öt16
 
∂ayî_uid
;

241 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
Ë|| deföed(
MAC
Ë|| deföed(
APOLLO
)

242 #i‡
	`deföed
(
MAC
Ë|| deföed(
MSDOS
)

243 i‡((
highsc‹e_Â
 = 
	`f›í
(
MORIA_TOP
, "rb")Ë=
NULL
)

245 i‡((
highsc‹e_Â
 = 
	`f›í
(
MORIA_TOP
, "r")Ë=
NULL
)

248 (Ë
	`•rötf
 (
°rög
, "Eº‹ o≥nög sc‹êfûê\"%s\"\n", 
MORIA_TOP
);

249 
	`msg_¥öt
(
°rög
);

250 
	`msg_¥öt
(
CNIL
);

255 #i‚de‡
BSD4_3


256 (Ë
	`f£ek
(
highsc‹e_Â
, ()0, 
L_SET
);

258 (Ë
	`f£ek
(
highsc‹e_Â
, (
off_t
)0, 
L_SET
);

262 
vîsi⁄_maj
 = 
	`gëc
 (
highsc‹e_Â
);

263 
vîsi⁄_mö
 = 
	`gëc
 (
highsc‹e_Â
);

264 
∑tch_Àvñ
 = 
	`gëc
 (
highsc‹e_Â
);

266 i‡(
	`„of
 (
highsc‹e_Â
))

269 i‡((
vîsi⁄_maj
 !
CUR_VERSION_MAJ
)

270 || (
vîsi⁄_mö
 > 
CUR_VERSION_MIN
)

271 || (
vîsi⁄_mö
 =
CUR_VERSION_MIN
 && 
∑tch_Àvñ
 > 
PATCH_LEVEL
)

272 || (
vîsi⁄_mö
 =2 && 
∑tch_Àvñ
 < 2)

273 || (
vîsi⁄_mö
 < 2))

275 
	`msg_¥öt
("Sorry. This scorefile is fromá different version of \
.");

277 
	`msg_¥öt
 (
CNIL
);

278 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
Ë|| deföed(
MAC
)

279 (Ë
	`f˛o£
 (
highsc‹e_Â
);

284 #ifde‡
unix


285 
∂ayî_uid
 = 
	`gëuid
 ();

287 #ifde‡
VMS


288 
∂ayî_uid
 = (
	`gëgid
()*1000Ë+ 
	`gëuid
();

295 
	`£t_fûïå
(
highsc‹e_Â
);

297 
ønk
 = 1;

298 
	`rd_highsc‹e
(&
sc‹e
);

299 !
	`„of
(
highsc‹e_Â
))

301 
i
 = 1;

302 
	`˛ór_s¸ìn
();

304 !
	`„of
(
highsc‹e_Â
Ë&& 
i
 < 21)

308 i‡(! 
show_∂ayî
 ||

309 #i‡
	`deföed
(
unix
Ë|| deföed(
VMS
)

310 
sc‹e
.
uid
 =
∂ayî_uid


313 
TRUE


317 (Ë
	`•rötf
(
°rög
,

319 
ønk
, 
sc‹e
.
poöts
, sc‹e.
«me
, sc‹e.
£x
,

320 
ø˚
[
sc‹e
.ø˚].
åa˚
, 
˛ass
[sc‹e.˛ass].
tôÀ
,

321 
sc‹e
.
Àv
, sc‹e.
dõd_‰om
);

322 
	`¥t
(
°rög
, ++
i
, 0);

324 
ønk
++;

325 
	`rd_highsc‹e
(&
sc‹e
);

327 
	`¥t
("Rank Points Name Sex Race Class Lvl Killed By"

329 
	`îa£_löe
 (1, 0);

330 
	`¥t
("[Pressány keyÅo continue.]", 23, 23);

331 
öput
 = 
	`ökey
();

332 i‡(
öput
 =
ESCAPE
)

335 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
Ë|| deföed(
MAC
Ë|| deföed(
APOLLO
)

336 (Ë
	`f˛o£
 (
highsc‹e_Â
);

338 
	}
}

341 
	$du∂iˇã_ch¨a˘î
 ()

344 #i‡!
	`deföed
 (
unix
Ë&& !deföed(
VMS
)

345  
FALSE
;

349 
high_sc‹es
 
sc‹e
;

350 
öt8u
 
vîsi⁄_maj
, 
vîsi⁄_mö
, 
∑tch_Àvñ
;

351 
öt16
 
∂ayî_uid
;

352 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
Ë|| deföed(
MAC
Ë|| deföed(
APOLLO
)

353 
°rög
[80];

356 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
Ë|| deföed(
MAC
Ë|| deföed(
APOLLO
)

357 #i‡
	`deföed
(
MAC
Ë|| deföed(
MSDOS
)

358 i‡((
highsc‹e_Â
 = 
	`f›í
(
MORIA_TOP
, "rb")Ë=
NULL
)

360 i‡((
highsc‹e_Â
 = 
	`f›í
(
MORIA_TOP
, "r")Ë=
NULL
)

363 (Ë
	`•rötf
 (
°rög
, "Eº‹ o≥nög sc‹êfûê\"%s\"\n", 
MORIA_TOP
);

364 
	`msg_¥öt
(
°rög
);

365 
	`msg_¥öt
(
CNIL
);

366  
FALSE
;

370 #i‚de‡
BSD4_3


371 (Ë
	`f£ek
(
highsc‹e_Â
, ()0, 
L_SET
);

373 (Ë
	`f£ek
(
highsc‹e_Â
, (
off_t
)0, 
L_SET
);

377 
vîsi⁄_maj
 = 
	`gëc
 (
highsc‹e_Â
);

378 
vîsi⁄_mö
 = 
	`gëc
 (
highsc‹e_Â
);

379 
∑tch_Àvñ
 = 
	`gëc
 (
highsc‹e_Â
);

381 i‡(
	`„of
 (
highsc‹e_Â
))

383  
FALSE
;

384 i‡((
vîsi⁄_maj
 !
CUR_VERSION_MAJ
)

385 || (
vîsi⁄_mö
 > 
CUR_VERSION_MIN
)

386 || (
vîsi⁄_mö
 =
CUR_VERSION_MIN
 && 
∑tch_Àvñ
 > 
PATCH_LEVEL
)

387 || (
vîsi⁄_mö
 =2 && 
∑tch_Àvñ
 < 2)

388 || (
vîsi⁄_mö
 < 2))

390 
	`msg_¥öt
("Sorry. This scorefile is fromá different version of \
.");

392 
	`msg_¥öt
 (
CNIL
);

393 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
Ë|| deföed(
MAC
Ë|| deföed(
APOLLO
)

394 (Ë
	`f˛o£
 (
highsc‹e_Â
);

396  
FALSE
;

400 
	`£t_fûïå
(
highsc‹e_Â
);

402 #ifde‡
unix


403 
∂ayî_uid
 = 
	`gëuid
 ();

405 #ifde‡
VMS


406 
∂ayî_uid
 = (
	`gëgid
()*1000Ë+ 
	`gëuid
();

408 
∂ayî_uid
 = 0;

412 
	`rd_highsc‹e
(&
sc‹e
);

413 !
	`„of
(
highsc‹e_Â
))

415 i‡(
sc‹e
.
uid
 =
∂ayî_uid
 && sc‹e.
búth_d©e
 == birth_date

416 && 
sc‹e
.
˛ass
 =
py
.
misc
.
p˛ass
 && sc‹e.
ø˚
 =py.misc.
¥a˚


417 && 
sc‹e
.
£x
 =(
py
.
misc
.
mÆe
 ? 'M' : 'F')

418 && 
	`°rcmp
 (
sc‹e
.
dõd_‰om
, "(saved)"))

419  
TRUE
;

421 
	`rd_highsc‹e
(&
sc‹e
);

423 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
Ë|| deföed(
MAC
)

424 (Ë
	`f˛o£
 (
highsc‹e_Â
);

427  
FALSE
;

429 
	}
}

434 
	$¥öt_tomb
()

436 
vty≥
 
°r
, 
tmp_°r
;

437 
i
;

438 
day
[11];

439 *
p
;

440 #ifde‡
MAC


441 
func
;

442 
ok
;

445 
	`˛ór_s¸ìn
();

446 
	`put_buf„r
 ("_______________________", 1, 15);

447 
	`put_buf„r
 ("/", 2, 14);

448 
	`put_buf„r
 ("\\ ___", 2, 38);

449 
	`put_buf„r
 ("/", 3, 13);

450 
	`put_buf„r
 ("\\ ___ / \\ ___", 3, 39);

451 
	`put_buf„r
 ("/ RIP \\ \\ : : / \\", 4, 12);

452 
	`put_buf„r
 ("/", 5, 11);

453 
	`put_buf„r
 ("\\ : _;,,,;_ : :", 5, 41);

454 (Ë
	`•rötf
 (
°r
, "/%s\\,;_ _;,,,;_",

455 
	`˚¡î_°rög
 (
tmp_°r
, 
py
.
misc
.
«me
));

456 
	`put_buf„r
 (
°r
, 6, 10);

457 
	`put_buf„r
 ("|Åhe | ___", 7, 9);

458 i‡(!
tŸÆ_wö√r
)

459 
p
 = 
	`tôÀ_°rög
 ();

461 
p
 = "Magnificent";

462 (Ë
	`•rötf
 (
°r
, "| %†| / \\", 
	`˚¡î_°rög
 (
tmp_°r
, 
p
));

463 
	`put_buf„r
 (
°r
, 8, 9);

464 
	`put_buf„r
 ("|", 9, 9);

465 
	`put_buf„r
 ("| : :", 9, 43);

466 i‡(!
tŸÆ_wö√r
)

467 
p
 = 
˛ass
[
py
.
misc
.
p˛ass
].
tôÀ
;

468 i‡(
py
.
misc
.
mÆe
)

469 
p
 = "*King*";

471 
p
 = "*Queen*";

472 (Ë
	`•rötf
(
°r
,"| %†| _;,,,;_ ____", 
	`˚¡î_°rög
 (
tmp_°r
, 
p
));

473 
	`put_buf„r
 (
°r
, 10, 9);

474 (Ë
	`•rötf
 (
°r
, "Levñ : %d", (Ë
py
.
misc
.
Àv
);

475 (Ë
	`•rötf
 (
°r
,"| %s | / \\",

476 
	`˚¡î_°rög
 (
tmp_°r
, 
°r
));

477 
	`put_buf„r
 (
°r
, 11, 9);

478 (Ë
	`•rötf
(
°r
, "%ld Exp", 
py
.
misc
.
exp
);

479 (Ë
	`•rötf
(
°r
,"| %†| : :", 
	`˚¡î_°rög
 (
tmp_°r
, str));

480 
	`put_buf„r
 (
°r
, 12, 9);

481 (Ë
	`•rötf
(
°r
, "%ld Au", 
py
.
misc
.
au
);

482 (Ë
	`•rötf
(
°r
,"| %†| : :", 
	`˚¡î_°rög
 (
tmp_°r
, str));

483 
	`put_buf„r
 (
°r
, 13, 9);

484 (Ë
	`•rötf
(
°r
, "Dõd o¿Levñ : %d", 
dun_Àvñ
);

485 (Ë
	`•rötf
(
°r
,"| %†| _;,,,,;_", 
	`˚¡î_°rög
 (
tmp_°r
, str));

486 
	`put_buf„r
 (
°r
, 14, 9);

487 
	`put_buf„r
 ("| killed by |", 15, 9);

488 
p
 = 
dõd_‰om
;

489 
i
 = 
	`°æí
 (
p
);

490 
p
[
i
] = '.';

491 
p
[
i
+1] = '\0';

492 (Ë
	`•rötf
(
°r
, "| %†|", 
	`˚¡î_°rög
 (
tmp_°r
, 
p
));

493 
	`put_buf„r
 (
°r
, 16, 9);

494 
p
[
i
] = '\0';

495 
	`d©e
(
day
);

496 (Ë
	`•rötf
(
°r
, "| %†|", 
	`˚¡î_°rög
 (
tmp_°r
, 
day
));

497 
	`put_buf„r
 (
°r
, 17, 9);

498 
	`put_buf„r
 ("*| * * * * * * | *", 18, 8);

499 
	`put_buf„r
 ("________)/\\\\_)_/___(\\/___(//_\\)/_\\//__\\\\(/_|_)_______",

502 
ªåy
:

503 
	`Êush
();

504 #ifde‡
MAC


507 
	`put_buf„r
 ("('F' - SaveÑecord in file / 'Y' - DisplayÑecord on screen \
/ 'N' - Abort)", 23, 0);

509 
	`put_buf„r
 ("CharacterÑecord [F/Y/N]?", 22, 0);

512 
func
 = 
	`ökey
();

513 
func
)

516 
func
 = 'F';

517 
ok
 = 
TRUE
;

520 
func
 = 'Y';

521 
ok
 = 
TRUE
;

524 
func
 = 'N';

525 
ok
 = 
TRUE
;

528 
	`bñl
();

529 
ok
 = 
FALSE
;

533 !
ok
);

534 i‡(
func
 != 'N')

536 
	`put_buf„r
 ("(ESCÅoábort,ÑeturnÅoÖrint on screen, or fileÇame)",

538 
	`put_buf„r
 ("CharacterÑecord?", 22, 0);

539 i‡(
	`gë_°rög
 (
°r
, 22, 18, 60))

542 
i
 = 0; i < 
INVEN_ARRAY_SIZE
; i++)

544 
	`known1
(&
övít‹y
[
i
]);

545 
	`known2
(&
övít‹y
[
i
]);

547 
	`ˇlc_b⁄u£s
 ();

548 #ifde‡
MAC


549 i‡(
func
 == 'F')

551 i‡(!
	`fûe_ch¨a˘î
())

552 
ªåy
;

555 i‡(
°r
[0])

557 i‡(!
	`fûe_ch¨a˘î
 (
°r
))

558 
ªåy
;

563 
	`˛ór_s¸ìn
 ();

564 
	`di•œy_ch¨
 ();

565 
	`put_buf„r
 ("Type ESCÅo skipÅhe inventory:", 23, 0);

566 i‡(
	`ökey
(Ë!
ESCAPE
)

568 
	`˛ór_s¸ìn
 ();

569 
	`msg_¥öt
 ("Youáre using:");

570 (Ë
	`show_equù
 (
TRUE
, 0);

571 
	`msg_¥öt
 (
CNIL
);

572 
	`msg_¥öt
 ("Youáre carrying:");

573 
	`˛ór_‰om
 (1);

574 (Ë
	`show_öví
 (0, 
öví_˘r
-1, 
TRUE
, 0, 
CNIL
);

575 
	`msg_¥öt
 (
CNIL
);

579 
	}
}

583 
öt32
 
	$tŸÆ_poöts
()

585 
öt32
 
tŸÆ
;

586 
i
;

588 
tŸÆ
 = 
py
.
misc
.
max_exp
 + (100 *Öy.misc.
max_dlv
);

589 
tŸÆ
 +
py
.
misc
.
au
 / 100;

590 
i
 = 0; i < 
INVEN_ARRAY_SIZE
; i++)

591 
tŸÆ
 +
	`ôem_vÆue
(&
övít‹y
[
i
]);

592 
tŸÆ
 +
dun_Àvñ
*50;

595 i‡(
max_sc‹e
 > 
tŸÆ
)

596  
max_sc‹e
;

598  
tŸÆ
;

599 
	}
}

603 
	$highsc‹es
()

605 
high_sc‹es
 
ﬁd_íåy
, 
√w_íåy
, 
íåy
;

606 
i
;

607 *
tmp
;

608 
öt8u
 
vîsi⁄_maj
, 
vîsi⁄_mö
, 
∑tch_Àvñ
;

609 
cuΩos
;

610 #i‡
	`deföed
(
VMS
Ë|| deföed(
MSDOS
Ë|| deföed(
AMIGA
Ë|| deföed(
MAC
Ë|| deföed(
APOLLO
)

611 
°rög
[100];

614 
	`˛ór_s¸ìn
();

616 i‡(
nosc‹e
)

619 i‡(
∑nic_ßve
 == 1)

621 
	`msg_¥öt
("Sorry, scores for gamesÑestored fromÖanic save files \
Çot saved.");

626 
√w_íåy
.
poöts
 = 
	`tŸÆ_poöts
();

627 
√w_íåy
.
búth_d©e
 = birth_date;

628 #ifde‡
unix


629 
√w_íåy
.
uid
 = 
	`gëuid
();

631 #ifde‡
VMS


632 
√w_íåy
.
uid
 = (
	`gëgid
()*1000Ë+ 
	`gëuid
();

634 
√w_íåy
.
uid
 = 0;

637 
√w_íåy
.
mhp
 = 
py
.
misc
.mhp;

638 
√w_íåy
.
chp
 = 
py
.
misc
.chp;

639 
√w_íåy
.
dun_Àvñ
 = dun_level;

640 
√w_íåy
.
Àv
 = 
py
.
misc
.lev;

641 
√w_íåy
.
max_dlv
 = 
py
.
misc
.max_dlv;

642 
√w_íåy
.
£x
 = (
py
.
misc
.
mÆe
 ? 'M' : 'F');

643 
√w_íåy
.
ø˚
 = 
py
.
misc
.
¥a˚
;

644 
√w_íåy
.
˛ass
 = 
py
.
misc
.
p˛ass
;

645 (Ë
	`°r˝y
(
√w_íåy
.
«me
, 
py
.
misc
.name);

646 
tmp
 = 
dõd_‰om
;

647 i‡('a' =*
tmp
)

649 i‡('n' =*(++
tmp
))

651 
tmp
++;

653 
	`is•a˚
(*
tmp
))

655 
tmp
++;

658 (Ë
	`°r˝y
(
√w_íåy
.
dõd_‰om
, 
tmp
);

663 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
Ë|| deföed(
MAC
)

664 #i‡
	`deföed
(
MAC
Ë|| deföed(
MSDOS
)

665 i‡((
highsc‹e_Â
 = 
	`f›í
(
MORIA_TOP
, "rb+")Ë=
NULL
)

667 i‡((
highsc‹e_Â
 = 
	`f›í
(
MORIA_TOP
, "r+")Ë=
NULL
)

670 (Ë
	`•rötf
 (
°rög
, "Eº‹ o≥nög sc‹êfûê\"%s\"\n", 
MORIA_TOP
);

671 
	`msg_¥öt
(
°rög
);

672 
	`msg_¥öt
(
CNIL
);

676 #ifde‡
ATARIST_TC


679 i‡(0 !
	`Êock
(()
	`fûío
(
highsc‹e_Â
), 
LOCK_EX
))

681 
	`msg_¥öt
("Error gainingÜock for score file");

682 
	`msg_¥öt
(
CNIL
);

691 #i‚de‡
BSD4_3


692 (Ë
	`f£ek
(
highsc‹e_Â
, ()0, 
L_SET
);

694 (Ë
	`f£ek
(
highsc‹e_Â
, (
off_t
)0, 
L_SET
);

698 
vîsi⁄_maj
 = 
	`gëc
 (
highsc‹e_Â
);

699 
vîsi⁄_mö
 = 
	`gëc
 (
highsc‹e_Â
);

700 
∑tch_Àvñ
 = 
	`gëc
 (
highsc‹e_Â
);

703 i‡(
	`„of
 (
highsc‹e_Â
))

706 #i‚de‡
BSD4_3


707 (Ë
	`f£ek
(
highsc‹e_Â
, ()0, 
L_SET
);

709 (Ë
	`f£ek
(
highsc‹e_Â
, (
off_t
)0, 
L_SET
);

712 (Ë
	`putc
 (
CUR_VERSION_MAJ
, 
highsc‹e_Â
);

713 (Ë
	`putc
 (
CUR_VERSION_MIN
, 
highsc‹e_Â
);

714 (Ë
	`putc
 (
PATCH_LEVEL
, 
highsc‹e_Â
);

717 #i‚de‡
BSD4_3


718 #ifde‡
ATARIST_TC


720 (Ë
	`f£ek
 (
highsc‹e_Â
, ()
	`·ñl
 (highsc‹e_Â), 
L_SET
);

722 (Ë
	`f£ek
(
highsc‹e_Â
, ()0, 
L_INCR
);

725 (Ë
	`f£ek
(
highsc‹e_Â
, (
off_t
)0, 
L_INCR
);

729 i‡((
vîsi⁄_maj
 !
CUR_VERSION_MAJ
)

730 || (
vîsi⁄_mö
 > 
CUR_VERSION_MIN
)

731 || (
vîsi⁄_mö
 =
CUR_VERSION_MIN
 && 
∑tch_Àvñ
 > 
PATCH_LEVEL
)

732 || (
vîsi⁄_mö
 =2 && 
∑tch_Àvñ
 < 2)

733 || (
vîsi⁄_mö
 < 2))

737 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
Ë|| deföed(
MAC
)

738 (Ë
	`f˛o£
 (
highsc‹e_Â
);

744 
	`£t_fûïå
(
highsc‹e_Â
);

746 
i
 = 0;

747 
cuΩos
 = 
	`·ñl
 (
highsc‹e_Â
);

748 
	`rd_highsc‹e
(&
ﬁd_íåy
);

749 !
	`„of
(
highsc‹e_Â
))

751 i‡(
√w_íåy
.
poöts
 >
ﬁd_íåy
.points)

758 i‡(((
√w_íåy
.
uid
 !0 &&Çew_íåy.uid =
ﬁd_íåy
.uid)

759 || (
√w_íåy
.
uid
 =0 &&!
	`°rcmp
(
ﬁd_íåy
.
dõd_‰om
,"(saved)")

760 && 
√w_íåy
.
búth_d©e
 =
ﬁd_íåy
.birth_date))

761 && 
√w_íåy
.
£x
 =
ﬁd_íåy
.sex

762 && 
√w_íåy
.
ø˚
 =
ﬁd_íåy
.race

763 && 
√w_íåy
.
˛ass
 =
ﬁd_íåy
.class)

765 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
Ë|| deföed(
MAC
Ë|| deföed(
APOLLO
)

766 (Ë
	`f˛o£
 (
highsc‹e_Â
);

770 i‡(++
i
 >
SCOREFILE_SIZE
)

773 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
Ë|| deföed(
AMIGA
Ë|| deföed(
MAC
)

774 (Ë
	`f˛o£
 (
highsc‹e_Â
);

778 
cuΩos
 = 
	`·ñl
 (
highsc‹e_Â
);

779 
	`rd_highsc‹e
(&
ﬁd_íåy
);

782 i‡(
	`„of
(
highsc‹e_Â
))

785 #i‚de‡
BSD4_3


786 (Ë
	`f£ek
 (
highsc‹e_Â
, 
cuΩos
, 
L_SET
);

788 (Ë
	`f£ek
 (
highsc‹e_Â
, (
off_t
)
cuΩos
, 
L_SET
);

790 
	`wr_highsc‹e
(&
√w_íåy
);

794 
íåy
 = 
√w_íåy
;

795 !
	`„of
(
highsc‹e_Â
))

797 #i‚de‡
BSD4_3


798 #i‡
	`deföed
(
ATARIST_TC
Ë|| deföed(
__TURBOC__
)

800 (Ë
	`f£ek
(
highsc‹e_Â
, ()
	`·ñl
(highscore_fp) -

801 (
high_sc‹es
Ë-  (), 
L_SET
);

803 (Ë
	`f£ek
(
highsc‹e_Â
,

804 -()(
high_sc‹es
)-()(),

805 
L_INCR
);

808 (Ë
	`f£ek
(
highsc‹e_Â
,

809 -(
off_t
)(
high_sc‹es
)-(off_t)(),

810 
L_INCR
);

812 
	`wr_highsc‹e
(&
íåy
);

818 i‡(((
√w_íåy
.
uid
 !0 &&Çew_íåy.uid =
ﬁd_íåy
.uid)

819 || (
√w_íåy
.
uid
 =0 &&!
	`°rcmp
(
ﬁd_íåy
.
dõd_‰om
,"(saved)")

820 && 
√w_íåy
.
búth_d©e
 =
ﬁd_íåy
.birth_date))

821 && 
√w_íåy
.
£x
 =
ﬁd_íåy
.sex

822 && 
√w_íåy
.
ø˚
 =
ﬁd_íåy
.race

823 && 
√w_íåy
.
˛ass
 =
ﬁd_íåy
.class)

825 
íåy
 = 
ﬁd_íåy
;

827 #i‚de‡
BSD4_3


828 #ifde‡
ATARIST_TC


830 (Ë
	`f£ek
(
highsc‹e_Â
, ()
	`·ñl
(highsc‹e_Â), 
L_SET
);

832 (Ë
	`f£ek
(
highsc‹e_Â
, ()0, 
L_INCR
);

835 (Ë
	`f£ek
(
highsc‹e_Â
, (
off_t
)0, 
L_INCR
);

837 
cuΩos
 = 
	`·ñl
 (
highsc‹e_Â
);

838 
	`rd_highsc‹e
(&
ﬁd_íåy
);

840 i‡(
	`„of
(
highsc‹e_Â
))

842 #i‚de‡
BSD4_3


843 (Ë
	`f£ek
 (
highsc‹e_Â
, 
cuΩos
, 
L_SET
);

845 (Ë
	`f£ek
 (
highsc‹e_Â
, (
off_t
)
cuΩos
, 
L_SET
);

847 
	`wr_highsc‹e
(&
íåy
);

851 #i‡!
	`deföed
(
VMS
Ë&& !deföed(
MSDOS
Ë&& !deföed(
AMIGA
Ë&& !deföed(
MAC
Ë&& !deföed(
APOLLO
)

852 #ifde‡
ATARIST_TC


855 (Ë
	`Êock
(()
	`fûío
(
highsc‹e_Â
), 
LOCK_UN
);

858 (Ë
	`f˛o£
 (
highsc‹e_Â
);

860 
	}
}

864 
	$kögly
()

866 
misc
 *
p_±r
;

867 *
p
;

870 
dun_Àvñ
 = 0;

871 (Ë
	`°r˝y
(
dõd_‰om
, "Ripe Old Age");

872 
p_±r
 = &
py
.
misc
;

873 (Ë
	`ª°‹e_Àvñ
 ();

874 
p_±r
->
Àv
 +
MAX_PLAYER_LEVEL
;

875 
p_±r
->
au
 += 250000L;

876 
p_±r
->
max_exp
 += 5000000L;

877 
p_±r
->
exp
 =Ö_±r->
max_exp
;

880 
	`˛ór_s¸ìn
();

881 
	`put_buf„r
("#", 1, 34);

882 
	`put_buf„r
("#####", 2, 32);

883 
	`put_buf„r
("#", 3, 34);

884 
	`put_buf„r
(",,, $$$ ,,,", 4, 28);

885 
	`put_buf„r
(",,=$ \"$$$$$\" $=,,", 5, 24);

886 
	`put_buf„r
(",$$ $$$ $$,", 6, 22);

887 
	`put_buf„r
("*> <*> <*", 7, 22);

888 
	`put_buf„r
("$$ $$$ $$", 8, 22);

889 
	`put_buf„r
("\"$$ $$$ $$\"", 9, 22);

890 
	`put_buf„r
("\"$$ $$$ $$\"", 10, 23);

891 
p
 = "*#########*#########*";

892 
	`put_buf„r
(
p
, 11, 24);

893 
	`put_buf„r
(
p
, 12, 24);

894 
	`put_buf„r
("Veni, Vidi, Vici!", 15, 26);

895 
	`put_buf„r
("I came, I saw, I conquered!", 16, 21);

896 i‡(
p_±r
->
mÆe
)

897 
	`put_buf„r
("All HailÅhe Mighty King!", 17, 22);

899 
	`put_buf„r
("All HailÅhe Mighty Queen!", 17, 22);

900 
	`Êush
();

901 
	`∑u£_löe
(23);

902 
	}
}

906 
	$exô_game
 ()

908 #ifde‡
MAC


910 
	`íabÀfûemíu
(
FALSE
);

914 
	`msg_¥öt
(
CNIL
);

915 
	`Êush
 ();

916 
	`nosig«ls
 ();

919 i‡(
tu∫
 >= 0)

921 i‡(
tŸÆ_wö√r
)

922 
	`kögly
();

923 
	`¥öt_tomb
();

925 i‡(
ch¨a˘î_gíî©ed
 && !
ch¨a˘î_ßved
)

926 #ifde‡
MAC


927 (Ë
	`ßve_ch¨
 (
TRUE
);

929 (Ë
	`ßve_ch¨
 ();

932 i‡(
ch¨a˘î_gíî©ed
)

937 
ch¨a˘î_ßved
 = 
FALSE
;

938 
	`highsc‹es
();

939 
	`di•œy_sc‹es
 (
TRUE
);

941 
	`îa£_löe
 (23, 0);

942 
	`ª°‹e_ãrm
 ();

943 #ifde‡
MAC


945 
	`íabÀfûemíu
(
TRUE
);

947 
	`goback
();

949 
	`exô
 (0);

951 
	}
}

	@desc.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

11 
	~<°dlib.h
>

14 
	~"c⁄fig.h
"

15 
	~"c⁄°™t.h
"

16 
	~"ty≥s.h
"

17 
	~"exã∫s.h
"

19 #ifde‡
USG


20 #i‚de‡
ATARIST_MWC


21 
	~<°rög.h
>

24 
	~<°rögs.h
>

27 #i‡
deföed
(
LINT_ARGS
)

28 
unßm∂e
(
öví_ty≥
 *);

30 
unßm∂e
();

33 #ifde‡
ATARIST_TC


35 
	~<°dlib.h
>

38 
	gtôÀs
[
MAX_TITLES
][10];

42 
	$is_a_vowñ
(
ch
)

43 
ch
;

45 
ch
)

49 (
TRUE
);

51 (
FALSE
);

53 
	}
}

56 
	$magic_öô
()

58 
h
, 
i
, 
j
, 
k
;

59 *
tmp
;

60 
vty≥
 
°rög
;

62 
	`£t_£ed
(
øndes_£ed
);

65 
i
 = 3; i < 
MAX_COLORS
; i++)

67 
j
 = 
	`øndöt
(
MAX_COLORS
 - 3) + 2;

68 
tmp
 = 
cﬁ‹s
[
i
];

69 
cﬁ‹s
[
i
] = cﬁ‹s[
j
];

70 
cﬁ‹s
[
j
] = 
tmp
;

72 
i
 = 0; i < 
MAX_WOODS
; i++)

74 
j
 = 
	`øndöt
(
MAX_WOODS
) - 1;

75 
tmp
 = 
woods
[
i
];

76 
woods
[
i
] = woods[
j
];

77 
woods
[
j
] = 
tmp
;

79 
i
 = 0; i < 
MAX_METALS
; i++)

81 
j
 = 
	`øndöt
(
MAX_METALS
) - 1;

82 
tmp
 = 
mëÆs
[
i
];

83 
mëÆs
[
i
] = mëÆs[
j
];

84 
mëÆs
[
j
] = 
tmp
;

86 
i
 = 0; i < 
MAX_ROCKS
; i++)

88 
j
 = 
	`øndöt
(
MAX_ROCKS
) - 1;

89 
tmp
 = 
rocks
[
i
];

90 
rocks
[
i
] =Ñocks[
j
];

91 
rocks
[
j
] = 
tmp
;

93 
i
 = 0; i < 
MAX_AMULETS
; i++)

95 
j
 = 
	`øndöt
(
MAX_AMULETS
) - 1;

96 
tmp
 = 
amuÀts
[
i
];

97 
amuÀts
[
i
] =ámuÀts[
j
];

98 
amuÀts
[
j
] = 
tmp
;

100 
i
 = 0; i < 
MAX_MUSH
; i++)

102 
j
 = 
	`øndöt
(
MAX_MUSH
) - 1;

103 
tmp
 = 
mushrooms
[
i
];

104 
mushrooms
[
i
] = mushrooms[
j
];

105 
mushrooms
[
j
] = 
tmp
;

107 
h
 = 0; h < 
MAX_TITLES
; h++)

109 
°rög
[0] = '\0';

110 
k
 = 
	`øndöt
(2) + 1;

111 
i
 = 0; i < 
k
; i++)

113 
j
 = 
	`øndöt
(2); j > 0; j--)

114 (Ë
	`°rˇt
(
°rög
, 
syŒabÀs
[
	`øndöt
(
MAX_SYLLABLES
) - 1]);

115 i‡(
i
 < 
k
-1)

116 (Ë
	`°rˇt
(
°rög
, " ");

118 i‡(
°rög
[8] == ' ')

119 
°rög
[8] = '\0';

121 
°rög
[9] = '\0';

122 (Ë
	`°r˝y
(
tôÀs
[
h
], 
°rög
);

124 
	`ª£t_£ed
();

125 
	}
}

127 
öt16
 
	$obje˘_off£t
(
t_±r
)

128 
öví_ty≥
 *
t_±r
;

130 
t_±r
->
tvÆ
)

132 
TV_AMULET
: (0);

133 
TV_RING
: (1);

134 
TV_STAFF
: (2);

135 
TV_WAND
: (3);

136 
TV_SCROLL1
:

137 
TV_SCROLL2
: (4);

138 
TV_POTION1
:

139 
TV_POTION2
: (5);

140 
TV_FOOD
:

141 i‡((
t_±r
->
subvÆ
 & (
ITEM_SINGLE_STACK_MIN
 - 1)Ë< 
MAX_MUSH
)

146 
	}
}

149 
	$known1
(
i_±r
)

150 
öví_ty≥
 *
i_±r
;

152 
öt16
 
off£t
;

153 
öt8u
 
ödexx
;

155 i‡((
off£t
 = 
	`obje˘_off£t
(
i_±r
)) < 0)

157 
off£t
 <<= 6;

158 
ödexx
 = 
i_±r
->
subvÆ
 & (
ITEM_SINGLE_STACK_MIN
 - 1);

159 
obje˘_idít
[
off£t
 + 
ödexx
] |
OD_KNOWN1
;

161 
obje˘_idít
[
off£t
 + 
ödexx
] &~
OD_TRIED
;

162 
	}
}

164 
	$known1_p
(
i_±r
)

165 
öví_ty≥
 *
i_±r
;

167 
öt16
 
off£t
;

168 
öt8u
 
ödexx
;

172 i‡((
off£t
 = 
	`obje˘_off£t
(
i_±r
)) < 0)

173  
OD_KNOWN1
;

174 i‡(
	`°‹e_bought_p
(
i_±r
))

175  
OD_KNOWN1
;

176 
off£t
 <<= 6;

177 
ödexx
 = 
i_±r
->
subvÆ
 & (
ITEM_SINGLE_STACK_MIN
 - 1);

178 (
obje˘_idít
[
off£t
 + 
ödexx
] & 
OD_KNOWN1
);

179 
	}
}

182 
	$known2
(
i_±r
)

183 
öví_ty≥
 *
i_±r
;

185 
	`unßm∂e
(
i_±r
);

186 
i_±r
->
idít
 |
ID_KNOWN2
;

187 
	}
}

189 
	$known2_p
(
i_±r
)

190 
öví_ty≥
 *
i_±r
;

192  (
i_±r
->
idít
 & 
ID_KNOWN2
);

193 
	}
}

195 
	$˛ór_known2
(
i_±r
)

196 
öví_ty≥
 *
i_±r
;

198 
i_±r
->
idít
 &~
ID_KNOWN2
;

199 
	}
}

201 
	$˛ór_em±y
(
i_±r
)

202 
öví_ty≥
 *
i_±r
;

204 
i_±r
->
idít
 &~
ID_EMPTY
;

205 
	}
}

207 
	$°‹e_bought
(
i_±r
)

208 
öví_ty≥
 *
i_±r
;

210 
i_±r
->
idít
 |
ID_STOREBOUGHT
;

211 
	`known2
(
i_±r
);

212 
	}
}

214 
	$°‹e_bought_p
(
i_±r
)

215 
öví_ty≥
 *
i_±r
;

217  (
i_±r
->
idít
 & 
ID_STOREBOUGHT
);

218 
	}
}

221 
	$unßm∂e
(
i_±r
)

222 
öví_ty≥
 *
i_±r
;

224 
öt16
 
off£t
;

225 
öt8u
 
ödexx
;

228 
i_±r
->
idít
 &~(
ID_MAGIK
|
ID_EMPTY
);

229 i‡((
off£t
 = 
	`obje˘_off£t
(
i_±r
)) < 0)

231 
off£t
 <<= 6;

232 
ödexx
 = 
i_±r
->
subvÆ
 & (
ITEM_SINGLE_STACK_MIN
 - 1);

233 
obje˘_idít
[
off£t
 + 
ödexx
] &~
OD_TRIED
;

234 
	}
}

239 
	$ßm∂e
 (
i_±r
)

240 
öví_ty≥
 *
i_±r
;

242 
öt16
 
off£t
;

243 
öt8u
 
ödexx
;

245 i‡((
off£t
 = 
	`obje˘_off£t
(
i_±r
)) < 0)

247 
off£t
 <<= 6;

248 
ödexx
 = 
i_±r
->
subvÆ
 & (
ITEM_SINGLE_STACK_MIN
 - 1);

249 
obje˘_idít
[
off£t
 + 
ödexx
] |
OD_TRIED
;

250 
	}
}

255 
	$idítify
(
ôem
)

256 *
ôem
;

258 
i
, 
x1
, 
x2
;

259 
j
;

260 
öví_ty≥
 *
i_±r
, *
t_±r
;

261 #ifde‡
ATARIST_MWC


262 
öt32u
 
hﬁdî
;

265 
i_±r
 = &
övít‹y
[*
ôem
];

267 #ifde‡
ATARIST_MWC


268 i‡(
i_±r
->
Êags
 & (
hﬁdî
 = 
TR_CURSED
))

270 i‡(
i_±r
->
Êags
 & 
TR_CURSED
)

272 
	`add_ös¸ibe
(
i_±r
, 
ID_DAMD
);

274 i‡(!
	`known1_p
(
i_±r
))

276 
	`known1
(
i_±r
);

277 
x1
 = 
i_±r
->
tvÆ
;

278 
x2
 = 
i_±r
->
subvÆ
;

279 i‡(
x2
 < 
ITEM_SINGLE_STACK_MIN
 || x2 >
ITEM_GROUP_MIN
)

283 
i
 = 0; i < 
öví_˘r
; i++)

285 
t_±r
 = &
övít‹y
[
i
];

286 i‡(
t_±r
->
tvÆ
 =
x1
 &&Å_±r->
subvÆ
 =
x2
 && 
i
 !*
ôem


287 && (()
t_±r
->
numbî
 + ()
i_±r
->number < 256))

290 i‡(*
ôem
 > 
i
)

292 
j
 = *
ôem
; *ôem = 
i
; i = j;

294 
	`msg_¥öt
 ("You combine similar objects fromÅhe shopánd dungeon.");

296 
övít‹y
[*
ôem
].
numbî
 +övít‹y[
i
].number;

297 
öví_˘r
--;

298 
j
 = 
i
; j < 
öví_˘r
; j++)

299 
övít‹y
[
j
] = inventory[j+1];

300 
	`övc›y
(&
övít‹y
[
j
], 
OBJ_NOTHING
);

304 
	}
}

309 
	$unmagic_«me
(
i_±r
)

310 
öví_ty≥
 *
i_±r
;

312 
i_±r
->
«me2
 = 
SN_NULL
;

313 
	}
}

316 
	#IGNORED
 0

	)

317 
	#CHARGES
 1

	)

318 
	#PLUSSES
 2

	)

319 
	#LIGHT
 3

	)

320 
	#FLAGS
 4

	)

321 
	#Z_PLUSSES
 5

	)

327 
	$objdes
(
out_vÆ
, 
i_±r
, 
¥ef
)

328 *
out_vÆ
;

329 
öví_ty≥
 *
i_±r
;

330 
¥ef
;

333 *
ba£nm
, *
mod°r
;

334 
bigvty≥
 
tmp_vÆ
;

335 
vty≥
 
tmp_°r
, 
dam°r
;

336 
ödexx
, 
p1_u£
, 
modify
, 
≠≥nd_«me
, 
tmp
;

338 
ödexx
 = 
i_±r
->
subvÆ
 & (
ITEM_SINGLE_STACK_MIN
 - 1);

339 
ba£nm
 = 
obje˘_li°
[
i_±r
->
ödex
].
«me
;

340 
mod°r
 = 
CNIL
;

341 
dam°r
[0] = '\0';

342 
p1_u£
 = 
IGNORED
;

343 
modify
 = (
	`known1_p
(
i_±r
Ë? 
FALSE
 : 
TRUE
);

344 
≠≥nd_«me
 = 
FALSE
;

345 
i_±r
->
tvÆ
)

347 
TV_MISC
:

348 
TV_CHEST
:

350 
TV_SLING_AMMO
:

351 
TV_BOLT
:

352 
TV_ARROW
:

353 (Ë
	`•rötf
(
dam°r
, " (%dd%d)", 
i_±r
->
damage
[0], i_ptr->damage[1]);

355 
TV_LIGHT
:

356 
p1_u£
 = 
LIGHT
;

358 
TV_SPIKE
:

360 
TV_BOW
:

361 i‡(
i_±r
->
p1
 == 1 || i_ptr->p1 == 2)

362 
tmp
 = 2;

363 i‡(
i_±r
->
p1
 == 3 || i_ptr->p1 == 5)

364 
tmp
 = 3;

365 i‡(
i_±r
->
p1
 == 4 || i_ptr->p1 == 6)

366 
tmp
 = 4;

368 
tmp
 = -1;

369 (Ë
	`•rötf
 (
dam°r
, " (x%d)", 
tmp
);

371 
TV_HAFTED
:

372 
TV_POLEARM
:

373 
TV_SWORD
:

374 (Ë
	`•rötf
(
dam°r
, " (%dd%d)", 
i_±r
->
damage
[0], i_ptr->damage[1]);

375 
p1_u£
 = 
FLAGS
;

377 
TV_DIGGING
:

378 
p1_u£
 = 
Z_PLUSSES
;

379 (Ë
	`•rötf
(
dam°r
, " (%dd%d)", 
i_±r
->
damage
[0], i_ptr->damage[1]);

381 
TV_BOOTS
:

382 
TV_GLOVES
:

383 
TV_CLOAK
:

384 
TV_HELM
:

385 
TV_SHIELD
:

386 
TV_HARD_ARMOR
:

387 
TV_SOFT_ARMOR
:

389 
TV_AMULET
:

390 i‡(
modify
)

392 
ba£nm
 = "& %s Amulet";

393 
mod°r
 = 
amuÀts
[
ödexx
];

397 
ba£nm
 = "& Amulet";

398 
≠≥nd_«me
 = 
TRUE
;

400 
p1_u£
 = 
PLUSSES
;

402 
TV_RING
:

403 i‡(
modify
)

405 
ba£nm
 = "& %s Ring";

406 
mod°r
 = 
rocks
[
ödexx
];

410 
ba£nm
 = "& Ring";

411 
≠≥nd_«me
 = 
TRUE
;

413 
p1_u£
 = 
PLUSSES
;

415 
TV_STAFF
:

416 i‡(
modify
)

418 
ba£nm
 = "& %s Staff";

419 
mod°r
 = 
woods
[
ödexx
];

423 
ba£nm
 = "& Staff";

424 
≠≥nd_«me
 = 
TRUE
;

426 
p1_u£
 = 
CHARGES
;

428 
TV_WAND
:

429 i‡(
modify
)

431 
ba£nm
 = "& %s Wand";

432 
mod°r
 = 
mëÆs
[
ödexx
];

436 
ba£nm
 = "& Wand";

437 
≠≥nd_«me
 = 
TRUE
;

439 
p1_u£
 = 
CHARGES
;

441 
TV_SCROLL1
:

442 
TV_SCROLL2
:

443 i‡(
modify
)

445 
ba£nm
 = "& Scroll~Åitled \"%s\"";

446 
mod°r
 = 
tôÀs
[
ödexx
];

450 
ba£nm
 = "& Scroll~";

451 
≠≥nd_«me
 = 
TRUE
;

454 
TV_POTION1
:

455 
TV_POTION2
:

456 i‡(
modify
)

458 
ba£nm
 = "& %s Potion~";

459 
mod°r
 = 
cﬁ‹s
[
ödexx
];

463 
ba£nm
 = "& Potion~";

464 
≠≥nd_«me
 = 
TRUE
;

467 
TV_FLASK
:

469 
TV_FOOD
:

470 i‡(
modify
)

472 i‡(
ödexx
 <= 15)

473 
ba£nm
 = "& %s Mushroom~";

474 i‡(
ödexx
 <= 20)

475 
ba£nm
 = "& Hairy %s Mold~";

476 i‡(
ödexx
 <= 20)

477 
mod°r
 = 
mushrooms
[
ödexx
];

481 
≠≥nd_«me
 = 
TRUE
;

482 i‡(
ödexx
 <= 15)

483 
ba£nm
 = "& Mushroom~";

484 i‡(
ödexx
 <= 20)

485 
ba£nm
 = "& Hairy Mold~";

488 
≠≥nd_«me
 = 
FALSE
;

491 
TV_MAGIC_BOOK
:

492 
mod°r
 = 
ba£nm
;

493 
ba£nm
 = "& Book~ of Magic Spells %s";

495 
TV_PRAYER_BOOK
:

496 
mod°r
 = 
ba£nm
;

497 
ba£nm
 = "& Holy Book~ of Prayers %s";

499 
TV_OPEN_DOOR
:

500 
TV_CLOSED_DOOR
:

501 
TV_SECRET_DOOR
:

502 
TV_RUBBLE
:

504 
TV_GOLD
:

505 
TV_INVIS_TRAP
:

506 
TV_VIS_TRAP
:

507 
TV_UP_STAIR
:

508 
TV_DOWN_STAIR
:

509 (Ë
	`°r˝y
(
out_vÆ
, 
obje˘_li°
[
i_±r
->
ödex
].
«me
);

510 (Ë
	`°rˇt
(
out_vÆ
, ".");

512 
TV_STORE_DOOR
:

513 (Ë
	`•rötf
(
out_vÆ
, "theÉntranceÅoÅhe %s.",

514 
obje˘_li°
[
i_±r
->
ödex
].
«me
);

517 (Ë
	`°r˝y
(
out_vÆ
, "Error in objdes()");

520 i‡(
mod°r
 !
CNIL
)

521 (Ë
	`•rötf
(
tmp_vÆ
, 
ba£nm
, 
mod°r
);

523 (Ë
	`°r˝y
(
tmp_vÆ
, 
ba£nm
);

524 i‡(
≠≥nd_«me
)

526 (Ë
	`°rˇt
(
tmp_vÆ
, " of ");

527 (Ë
	`°rˇt
(
tmp_vÆ
, 
obje˘_li°
[
i_±r
->
ödex
].
«me
);

529 i‡(
i_±r
->
numbî
 != 1)

531 
	`ö£π_°r
(
tmp_vÆ
, "ch~", "ches");

532 
	`ö£π_°r
(
tmp_vÆ
, "~", "s");

535 
	`ö£π_°r
(
tmp_vÆ
, "~", 
CNIL
);

536 i‡(!
¥ef
)

538 i‡(!
	`°∫cmp
("some", 
tmp_vÆ
, 4))

539 (Ë
	`°r˝y
(
out_vÆ
, &
tmp_vÆ
[5]);

540 i‡(
tmp_vÆ
[0] == '&')

542 (Ë
	`°r˝y
(
out_vÆ
, &
tmp_vÆ
[2]);

544 (Ë
	`°r˝y
(
out_vÆ
, 
tmp_vÆ
);

548 i‡(
i_±r
->
«me2
 !
SN_NULL
 && 
	`known2_p
(i_ptr))

550 (Ë
	`°rˇt
(
tmp_vÆ
, " ");

551 (Ë
	`°rˇt
(
tmp_vÆ
, 
•ecül_«mes
[
i_±r
->
«me2
]);

553 i‡(
dam°r
[0] != '\0')

554 (Ë
	`°rˇt
(
tmp_vÆ
, 
dam°r
);

555 i‡(
	`known2_p
(
i_±r
))

558 i‡(
i_±r
->
idít
 & 
ID_SHOW_HITDAM
)

559 (Ë
	`•rötf
(
tmp_°r
, " (%c%d,%c%d)",

560 (
i_±r
->
tohô
 < 0Ë? '-' : '+', 
	`abs
(i_ptr->tohit),

561 (
i_±r
->
todam
 < 0Ë? '-' : '+', 
	`abs
(i_ptr->todam));

562 i‡(
i_±r
->
tohô
 != 0)

563 (Ë
	`•rötf
(
tmp_°r
, " (%c%d)",

564 (
i_±r
->
tohô
 < 0Ë? '-' : '+', 
	`abs
(i_ptr->tohit));

565 i‡(
i_±r
->
todam
 != 0)

566 (Ë
	`•rötf
(
tmp_°r
, " (%c%d)",

567 (
i_±r
->
todam
 < 0Ë? '-' : '+', 
	`abs
(i_ptr->todam));

569 
tmp_°r
[0] = '\0';

570 (Ë
	`°rˇt
(
tmp_vÆ
, 
tmp_°r
);

573 i‡(
i_±r
->
ac
 !0 || (i_±r->
tvÆ
 =
TV_HELM
))

575 (Ë
	`•rötf
(
tmp_°r
, " [%d", 
i_±r
->
ac
);

576 (Ë
	`°rˇt
(
tmp_vÆ
, 
tmp_°r
);

577 i‡(
	`known2_p
(
i_±r
))

580 (Ë
	`•rötf
(
tmp_°r
, ",%c%d",

581 (
i_±r
->
tﬂc
 < 0Ë? '-' : '+', 
	`abs
(i_ptr->toac));

582 (Ë
	`°rˇt
(
tmp_vÆ
, 
tmp_°r
);

584 (Ë
	`°rˇt
(
tmp_vÆ
, "]");

586 i‡((
i_±r
->
tﬂc
 !0Ë&& 
	`known2_p
(i_ptr))

589 (Ë
	`•rötf
(
tmp_°r
, " [%c%d]",

590 (
i_±r
->
tﬂc
 < 0Ë? '-' : '+', 
	`abs
(i_ptr->toac));

591 (Ë
	`°rˇt
(
tmp_vÆ
, 
tmp_°r
);

595 i‡(
i_±r
->
idít
 & 
ID_NOSHOW_P1
)

596 
p1_u£
 = 
IGNORED
;

597 i‡(
i_±r
->
idít
 & 
ID_SHOW_P1
)

598 
p1_u£
 = 
Z_PLUSSES
;

599 
tmp_°r
[0] = '\0';

600 i‡(
p1_u£
 =
LIGHT
)

601 (Ë
	`•rötf
(
tmp_°r
, " wôh %dÅu∫†o‡light", 
i_±r
->
p1
);

602 i‡(
p1_u£
 =
IGNORED
)

604 i‡(
	`known2_p
(
i_±r
))

606 i‡(
p1_u£
 =
Z_PLUSSES
)

608 (Ë
	`•rötf
(
tmp_°r
, " (%c%d)",

609 (
i_±r
->
p1
 < 0Ë? '-' : '+', 
	`abs
(i_ptr->p1));

610 i‡(
p1_u£
 =
CHARGES
)

611 (Ë
	`•rötf
(
tmp_°r
, " (%d ch¨ges)", 
i_±r
->
p1
);

612 i‡(
i_±r
->
p1
 != 0)

614 i‡(
p1_u£
 =
PLUSSES
)

615 (Ë
	`•rötf
(
tmp_°r
, " (%c%d)",

616 (
i_±r
->
p1
 < 0Ë? '-' : '+', 
	`abs
(i_ptr->p1));

617 i‡(
p1_u£
 =
FLAGS
)

619 i‡(
i_±r
->
Êags
 & 
TR_STR
)

620 (Ë
	`•rötf
(
tmp_°r
, " (%c%dÅo STR)",

621 (
i_±r
->
p1
 < 0Ë? '-' : '+',
	`abs
(i_ptr->p1));

622 i‡(
i_±r
->
Êags
 & 
TR_STEALTH
)

623 (Ë
	`•rötf
(
tmp_°r
, " (%c%dÅo stealth)",

624 (
i_±r
->
p1
 < 0Ë? '-' : '+',
	`abs
(i_ptr->p1));

628 (Ë
	`°rˇt
(
tmp_vÆ
, 
tmp_°r
);

631 i‡(
tmp_vÆ
[0] == '&')

634 i‡(
i_±r
->
numbî
 > 1)

635 (Ë
	`•rötf
(
out_vÆ
, "%d%s", ()
i_±r
->
numbî
, &
tmp_vÆ
[1]);

636 i‡(
i_±r
->
numbî
 < 1)

637 (Ë
	`•rötf
(
out_vÆ
, "%s%s", "nÿm‹e", &
tmp_vÆ
[1]);

638 i‡(
	`is_a_vowñ
(
tmp_vÆ
[2]))

639 (Ë
	`•rötf
(
out_vÆ
, "™%s", &
tmp_vÆ
[1]);

641 (Ë
	`•rötf
(
out_vÆ
, "a%s", &
tmp_vÆ
[1]);

644 i‡(
i_±r
->
numbî
 < 1)

647 i‡(!
	`°∫cmp
("some", 
tmp_vÆ
, 4))

648 (Ë
	`•rötf
(
out_vÆ
, "nÿm‹ê%s", &
tmp_vÆ
[5]);

651 (Ë
	`•rötf
(
out_vÆ
, "nÿm‹ê%s", 
tmp_vÆ
);

654 (Ë
	`°r˝y
(
out_vÆ
, 
tmp_vÆ
);

656 
tmp_°r
[0] = '\0';

657 i‡((
ödexx
 = 
	`obje˘_off£t
(
i_±r
)) >= 0)

659 
ödexx
 = (indexx <<= 6) +

660 (
i_±r
->
subvÆ
 & (
ITEM_SINGLE_STACK_MIN
 - 1));

662 i‡((
obje˘_idít
[
ödexx
] & 
OD_TRIED
Ë&& !
	`°‹e_bought_p
(
i_±r
))

663 (Ë
	`°rˇt
(
tmp_°r
, "tried ");

665 i‡(
i_±r
->
idít
 & (
ID_MAGIK
|
ID_EMPTY
|
ID_DAMD
))

667 i‡(
i_±r
->
idít
 & 
ID_MAGIK
)

668 (Ë
	`°rˇt
(
tmp_°r
, "magik ");

669 i‡(
i_±r
->
idít
 & 
ID_EMPTY
)

670 (Ë
	`°rˇt
(
tmp_°r
, "empty ");

671 i‡(
i_±r
->
idít
 & 
ID_DAMD
)

672 (Ë
	`°rˇt
(
tmp_°r
, "damned ");

674 i‡(
i_±r
->
ös¸ù
[0] != '\0')

675 (Ë
	`°rˇt
(
tmp_°r
, 
i_±r
->
ös¸ù
);

676 i‡((
ödexx
 = 
	`°æí
(
tmp_°r
)) > 0)

678 
tmp_°r
[
ödexx
-1] = '\0';

679 i‡(
tmp_°r
[0])

681 (Ë
	`•rötf
(
tmp_vÆ
, " {%s}", 
tmp_°r
);

682 (Ë
	`°rˇt
(
out_vÆ
, 
tmp_vÆ
);

684 (Ë
	`°rˇt
(
out_vÆ
, ".");

686 
	}
}

688 
	$övc›y
(
to
, 
‰om_ödex
)

689 
öví_ty≥
 *
to
;

690 
‰om_ödex
;

692 
åósuª_ty≥
 *
‰om
;

694 
‰om
 = &
obje˘_li°
[
‰om_ödex
];

695 
to
->
ödex
 = 
‰om_ödex
;

696 
to
->
«me2
 = 
SN_NULL
;

697 
to
->
ös¸ù
[0] = '\0';

698 
to
->
Êags
 = 
‰om
->flags;

699 
to
->
tvÆ
 = 
‰om
->tval;

700 
to
->
tch¨
 = 
‰om
->tchar;

701 
to
->
p1
 = 
‰om
->p1;

702 
to
->
co°
 = 
‰om
->cost;

703 
to
->
subvÆ
 = 
‰om
->subval;

704 
to
->
numbî
 = 
‰om
->number;

705 
to
->
weight
 = 
‰om
->weight;

706 
to
->
tohô
 = 
‰om
->tohit;

707 
to
->
todam
 = 
‰om
->todam;

708 
to
->
ac
 = 
‰om
->ac;

709 
to
->
tﬂc
 = 
‰om
->toac;

710 
to
->
damage
[0] = 
‰om
->damage[0];

711 
to
->
damage
[1] = 
‰om
->damage[1];

712 
to
->
Àvñ
 = 
‰om
->level;

713 
to
->
idít
 = 0;

714 
	}
}

718 
	$desc_ch¨ges
(
ôem_vÆ
)

719 
ôem_vÆ
;

721 
ªm_num
;

722 
vty≥
 
out_vÆ
;

724 i‡(
	`known2_p
(&
övít‹y
[
ôem_vÆ
]))

726 
ªm_num
 = 
övít‹y
[
ôem_vÆ
].
p1
;

727 (Ë
	`•rötf
(
out_vÆ
, "You havê%d ch¨ge†ªmaöög.", 
ªm_num
);

728 
	`msg_¥öt
(
out_vÆ
);

730 
	}
}

734 
	$desc_ªmaö
(
ôem_vÆ
)

735 
ôem_vÆ
;

737 
bigvty≥
 
out_vÆ
, 
tmp_°r
;

738 
öví_ty≥
 *
i_±r
;

740 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

741 
i_±r
->
numbî
--;

742 
	`objdes
(
tmp_°r
, 
i_±r
, 
TRUE
);

743 
i_±r
->
numbî
++;

745 (Ë
	`•rötf
(
out_vÆ
, "You havê%s", 
tmp_°r
);

746 
	`msg_¥öt
(
out_vÆ
);

747 
	}
}

	@dungeon.c

9 #ifde‡
__TURBOC__


10 
	~<c⁄io.h
>

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

15 
	~"c⁄fig.h
"

16 
	~"c⁄°™t.h
"

17 
	~"ty≥s.h
"

18 
	~"exã∫s.h
"

20 #ifde‡
USG


21 #i‚de‡
ATARIST_MWC


22 
	~<°rög.h
>

25 
	~<°rögs.h
>

28 #i‡
deföed
(
LINT_ARGS
)

29 
‹igöÆ_comm™ds
();

30 
do_comm™d
();

31 
vÆid_cou¡comm™d
();

32 
ªgíhp
();

33 
ªgím™a
();

34 
ích™ãd
(
öví_ty≥
 *);

35 
examöe_book
();

36 
go_up
();

37 
go_down
();

38 
jamdo‹
();

39 
ªfûl_œmp
();

41 
‹igöÆ_comm™ds
();

42 
do_comm™d
();

43 
vÆid_cou¡comm™d
();

44 
ªgíhp
();

45 
ªgím™a
();

46 
ích™ãd
();

47 
examöe_book
();

48 
go_up
();

49 
go_down
();

50 
jamdo‹
();

51 
ªfûl_œmp
();

54 #ifde‡
ATARIST_TC


56 
	~<°dlib.h
>

65 
	$dunge⁄
()

67 
föd_cou¡
, 
i
;

68 
ªgí_amou¡
;

69 
comm™d
;

70 
misc
 *
p_±r
;

71 
öví_ty≥
 *
i_±r
;

72 
Êags
 *
f_±r
;

73 #ifde‡
ATARIST_WMC


74 
öt32u
 
hﬁdî
;

81 
f_±r
 = &
py
.
Êags
;

82 
p_±r
 = &
py
.
misc
;

85 
i_±r
 = &
övít‹y
[
INVEN_LIGHT
];

86 i‡(
i_±r
->
p1
 > 0)

87 
∂ayî_light
 = 
TRUE
;

89 
∂ayî_light
 = 
FALSE
;

91 i‡(
dun_Àvñ
 > 
p_±r
->
max_dlv
)

92 
p_±r
->
max_dlv
 = 
dun_Àvñ
;

95 
comm™d_cou¡
 = 0;

96 
föd_cou¡
 = 0;

97 
√w_Àvñ_Êag
 = 
FALSE
;

98 
föd_Êag
 = 
FALSE
;

99 
ãÀp‹t_Êag
 = 
FALSE
;

100 
m⁄_tŸ_mu…
 = 0;

101 
ˇve
[
ch¨_row
][
ch¨_cﬁ
].
˝å
 = 1;

103 
∑√l_row
 = 
∑√l_cﬁ
 = -1;

105 
	`check_võw
 ();

109 i‡(
py
.
Êags
.
°©us
 & 
PY_SEARCH
)

110 
	`£¨ch_off
();

112 
	`¸ótuªs
(
FALSE
);

114 
	`¥t_dïth
();

117 #ifde‡
ATARIST_MWC


118 
	`¥t_m≠
();

126 
tu∫
++;

127 #i‚de‡
MAC


130 i‡(((
tu∫
 % 250Ë=1Ë&& !
	`check_time
())

131 i‡(
˛osög_Êag
 > 4)

133 
	`msg_¥öt
("The gatesÅo MoriaáreÇow closed.");

134 (Ë
	`°r˝y
 (
dõd_‰om
, "(closing gate: saved)");

135 i‡(!
	`ßve_ch¨
())

137 (Ë
	`°r˝y
 (
dõd_‰om
, "a slammed gate");

138 
dóth
 = 
TRUE
;

140 
	`exô_game
();

144 
	`di°urb
 (0, 0);

145 
˛osög_Êag
++;

146 
	`msg_¥öt
("The gatesÅo Moriaáre closing.");

147 
	`msg_¥öt
("Please finish up or save your game.");

152 i‡((
dun_Àvñ
 !0Ë&& ((
tu∫
 % 1000) == 0))

153 
	`°‹e_maöt
();

156 i‡(
	`øndöt
(
MAX_MALLOC_CHANCE
) == 1)

157 
	`Æloc_m⁄°î
(1, 
MAX_SIGHT
, 
FALSE
);

159 
i_±r
 = &
övít‹y
[
INVEN_LIGHT
];

160 i‡(
∂ayî_light
)

161 i‡(
i_±r
->
p1
 > 0)

163 
i_±r
->
p1
--;

164 i‡(
i_±r
->
p1
 == 0)

166 
∂ayî_light
 = 
FALSE
;

167 
	`msg_¥öt
("YourÜight has gone out!");

168 
	`di°urb
 (0, 1);

170 
	`¸ótuªs
(
FALSE
);

172 i‡((
i_±r
->
p1
 < 40Ë&& (
	`øndöt
(5) == 1) &&

173 (
py
.
Êags
.
blöd
 < 1))

175 
	`di°urb
 (0, 0);

176 
	`msg_¥öt
("YourÜight is growing faint.");

181 
∂ayî_light
 = 
FALSE
;

182 
	`di°urb
 (0, 1);

184 
	`¸ótuªs
(
FALSE
);

186 i‡(
i_±r
->
p1
 > 0)

188 
i_±r
->
p1
--;

189 
∂ayî_light
 = 
TRUE
;

190 
	`di°urb
 (0, 1);

192 
	`¸ótuªs
(
FALSE
);

197 i‡(
f_±r
->
hîo
 > 0)

199 i‡((
PY_HERO
 & 
f_±r
->
°©us
) == 0)

201 
f_±r
->
°©us
 |
PY_HERO
;

202 
	`di°urb
 (0, 0);

203 
p_±r
->
mhp
 += 10;

204 
p_±r
->
chp
 += 10;

205 
p_±r
->
bth
 += 12;

206 
p_±r
->
bthb
+= 12;

207 
	`msg_¥öt
("You feelÜikeá HERO!");

208 
	`¥t_mhp
();

209 
	`¥t_chp
();

211 
f_±r
->
hîo
--;

212 i‡(
f_±r
->
hîo
 == 0)

214 #ifde‡
ATARIST_MWC


215 
f_±r
->
°©us
 &~(
hﬁdî
 = 
PY_HERO
);

217 
f_±r
->
°©us
 &~
PY_HERO
;

219 
	`di°urb
 (0, 0);

220 
p_±r
->
mhp
 -= 10;

221 i‡(
p_±r
->
chp
 >Ö_±r->
mhp
)

223 
p_±r
->
chp
 =Ö_±r->
mhp
;

224 
p_±r
->
chp_‰ac
 = 0;

225 
	`¥t_chp
();

227 
p_±r
->
bth
 -= 12;

228 
p_±r
->
bthb
-= 12;

229 
	`msg_¥öt
("The heroism wears off.");

230 
	`¥t_mhp
();

234 i‡(
f_±r
->
shîo
 > 0)

236 i‡((
PY_SHERO
 & 
f_±r
->
°©us
) == 0)

238 
f_±r
->
°©us
 |
PY_SHERO
;

239 
	`di°urb
 (0, 0);

240 
p_±r
->
mhp
 += 20;

241 
p_±r
->
chp
 += 20;

242 
p_±r
->
bth
 += 24;

243 
p_±r
->
bthb
+= 24;

244 
	`msg_¥öt
("You feelÜikeá SUPER HERO!");

245 
	`¥t_mhp
();

246 
	`¥t_chp
();

248 
f_±r
->
shîo
--;

249 i‡(
f_±r
->
shîo
 == 0)

251 #ifde‡
ATARIST_MWC


252 
f_±r
->
°©us
 &~(
hﬁdî
 = 
PY_SHERO
);

254 
f_±r
->
°©us
 &~
PY_SHERO
;

256 
	`di°urb
 (0, 0);

257 
p_±r
->
mhp
 -= 20;

258 i‡(
p_±r
->
chp
 >Ö_±r->
mhp
)

260 
p_±r
->
chp
 =Ö_±r->
mhp
;

261 
p_±r
->
chp_‰ac
 = 0;

262 
	`¥t_chp
();

264 
p_±r
->
bth
 -= 24;

265 
p_±r
->
bthb
-= 24;

266 
	`msg_¥öt
("The super heroism wears off.");

267 
	`¥t_mhp
();

271 
ªgí_amou¡
 = 
PLAYER_REGEN_NORMAL
;

272 i‡(
f_±r
->
food
 < 
PLAYER_FOOD_ALERT
)

274 i‡(
f_±r
->
food
 < 
PLAYER_FOOD_WEAK
)

276 i‡(
f_±r
->
food
 < 0)

277 
ªgí_amou¡
 = 0;

278 i‡(
f_±r
->
food
 < 
PLAYER_FOOD_FAINT
)

279 
ªgí_amou¡
 = 
PLAYER_REGEN_FAINT
;

280 i‡(
f_±r
->
food
 < 
PLAYER_FOOD_WEAK
)

281 
ªgí_amou¡
 = 
PLAYER_REGEN_WEAK
;

282 i‡((
PY_WEAK
 & 
f_±r
->
°©us
) == 0)

284 
f_±r
->
°©us
 |
PY_WEAK
;

285 
	`msg_¥öt
("Youáre getting weak from hunger.");

286 
	`di°urb
 (0, 0);

287 
	`¥t_hungî
();

289 i‡((
f_±r
->
food
 < 
PLAYER_FOOD_FAINT
Ë&& (
	`øndöt
(8) == 1))

291 
f_±r
->
∑ølysis
 +
	`øndöt
(5);

292 
	`msg_¥öt
("You faint fromÅheÜack of food.");

293 
	`di°urb
 (1, 0);

296 i‡((
PY_HUNGRY
 & 
f_±r
->
°©us
) == 0)

298 
f_±r
->
°©us
 |
PY_HUNGRY
;

299 
	`msg_¥öt
("Youáre getting hungry.");

300 
	`di°urb
 (0, 0);

301 
	`¥t_hungî
();

306 i‡(
f_±r
->
•ìd
 < 0)

307 
f_±r
->
food
 -f_±r->
•ìd
*f_ptr->speed;

308 
f_±r
->
food
 -f_±r->
food_dige°ed
;

309 i‡(
f_±r
->
food
 < 0)

311 
	`èke_hô
 (-
f_±r
->
food
/16, "starvation");

312 
	`di°urb
(1, 0);

315 i‡(
f_±r
->
ªgíî©e
Ë
ªgí_amou¡
 =Ñegen_amount * 3 / 2;

316 i‡((
py
.
Êags
.
°©us
 & 
PY_SEARCH
Ë|| 
f_±r
->
ª°
 != 0)

317 
ªgí_amou¡
 =Ñegen_amount * 2;

318 i‡((
py
.
Êags
.
pois⁄ed
 < 1Ë&& (
p_±r
->
chp
 <Ö_±r->
mhp
))

319 
	`ªgíhp
(
ªgí_amou¡
);

320 i‡(
p_±r
->
cm™a
 <Ö_±r->
m™a
)

321 
	`ªgím™a
(
ªgí_amou¡
);

323 i‡(
f_±r
->
blöd
 > 0)

325 i‡((
PY_BLIND
 & 
f_±r
->
°©us
) == 0)

327 
f_±r
->
°©us
 |
PY_BLIND
;

328 
	`¥t_m≠
();

329 
	`¥t_blöd
();

330 
	`di°urb
 (0, 1);

332 
	`¸ótuªs
 (
FALSE
);

334 
f_±r
->
blöd
--;

335 i‡(
f_±r
->
blöd
 == 0)

337 #ifde‡
ATARIST_MWC


338 
f_±r
->
°©us
 &~(
hﬁdî
 = 
PY_BLIND
);

340 
f_±r
->
°©us
 &~
PY_BLIND
;

342 
	`¥t_blöd
();

343 
	`¥t_m≠
();

345 
	`di°urb
 (0, 1);

346 
	`¸ótuªs
(
FALSE
);

347 
	`msg_¥öt
("The veil of darknessÜifts.");

351 i‡(
f_±r
->
c⁄fu£d
 > 0)

353 i‡((
PY_CONFUSED
 & 
f_±r
->
°©us
) == 0)

355 
f_±r
->
°©us
 |
PY_CONFUSED
;

356 
	`¥t_c⁄fu£d
();

358 
f_±r
->
c⁄fu£d
--;

359 i‡(
f_±r
->
c⁄fu£d
 == 0)

361 #ifde‡
ATARIST_MWC


362 
f_±r
->
°©us
 &~(
hﬁdî
 = 
PY_CONFUSED
);

364 
f_±r
->
°©us
 &~
PY_CONFUSED
;

366 
	`¥t_c⁄fu£d
();

367 
	`msg_¥öt
("You feelÜess confusedÇow.");

368 i‡(
py
.
Êags
.
ª°
 != 0)

369 
	`ª°_off
 ();

373 i‡(
f_±r
->
a‰aid
 > 0)

375 i‡((
PY_FEAR
 & 
f_±r
->
°©us
) == 0)

377 i‡((
f_±r
->
shîo
+f_±r->
hîo
) > 0)

378 
f_±r
->
a‰aid
 = 0;

381 
f_±r
->
°©us
 |
PY_FEAR
;

382 
	`¥t_a‰aid
();

385 i‡((
f_±r
->
shîo
+f_±r->
hîo
) > 0)

386 
f_±r
->
a‰aid
 = 1;

387 
f_±r
->
a‰aid
--;

388 i‡(
f_±r
->
a‰aid
 == 0)

390 #ifde‡
ATARIST_MWC


391 
f_±r
->
°©us
 &~(
hﬁdî
 = 
PY_FEAR
);

393 
f_±r
->
°©us
 &~
PY_FEAR
;

395 
	`¥t_a‰aid
();

396 
	`msg_¥öt
("You feel bolderÇow.");

397 
	`di°urb
 (0, 0);

401 i‡(
f_±r
->
pois⁄ed
 > 0)

403 i‡((
PY_POISONED
 & 
f_±r
->
°©us
) == 0)

405 
f_±r
->
°©us
 |
PY_POISONED
;

406 
	`¥t_pois⁄ed
();

408 
f_±r
->
pois⁄ed
--;

409 i‡(
f_±r
->
pois⁄ed
 == 0)

411 #ifde‡
ATARIST_MWC


412 
f_±r
->
°©us
 &~(
hﬁdî
 = 
PY_POISONED
);

414 
f_±r
->
°©us
 &~
PY_POISONED
;

416 
	`¥t_pois⁄ed
();

417 
	`msg_¥öt
("You feel better.");

418 
	`di°urb
 (0, 0);

422 
	`c⁄_adj
())

424 -4: 
i
 = 4; ;

426 -2: 
i
 = 3; ;

427 -1: 
i
 = 2; ;

428 0: 
i
 = 1; ;

430 
i
 = ((
tu∫
 % 2) == 0);

433 
i
 = ((
tu∫
 % 3) == 0);

436 
i
 = ((
tu∫
 % 4) == 0);

439 
	`èke_hô
 (
i
, "poison");

440 
	`di°urb
 (1, 0);

444 i‡(
f_±r
->
Á°
 > 0)

446 i‡((
PY_FAST
 & 
f_±r
->
°©us
) == 0)

448 
f_±r
->
°©us
 |
PY_FAST
;

449 
	`ch™ge_•ìd
(-1);

450 
	`msg_¥öt
("You feel yourself moving faster.");

451 
	`di°urb
 (0, 0);

453 
f_±r
->
Á°
--;

454 i‡(
f_±r
->
Á°
 == 0)

456 #ifde‡
ATARIST_MWC


457 
f_±r
->
°©us
 &~(
hﬁdî
 = 
PY_FAST
);

459 
f_±r
->
°©us
 &~
PY_FAST
;

461 
	`ch™ge_•ìd
(1);

462 
	`msg_¥öt
("You feel yourself slow down.");

463 
	`di°urb
 (0, 0);

467 i‡(
f_±r
->
¶ow
 > 0)

469 i‡((
PY_SLOW
 & 
f_±r
->
°©us
) == 0)

471 
f_±r
->
°©us
 |
PY_SLOW
;

472 
	`ch™ge_•ìd
(1);

473 
	`msg_¥öt
("You feel yourself moving slower.");

474 
	`di°urb
 (0, 0);

476 
f_±r
->
¶ow
--;

477 i‡(
f_±r
->
¶ow
 == 0)

479 #ifde‡
ATARIST_MWC


480 
f_±r
->
°©us
 &~(
hﬁdî
 = 
PY_SLOW
);

482 
f_±r
->
°©us
 &~
PY_SLOW
;

484 
	`ch™ge_•ìd
(-1);

485 
	`msg_¥öt
("You feel yourself speed up.");

486 
	`di°urb
 (0, 0);

490 i‡(
f_±r
->
ª°
 > 0)

492 
f_±r
->
ª°
--;

493 i‡(
f_±r
->
ª°
 == 0)

494 
	`ª°_off
();

496 i‡(
f_±r
->
ª°
 < 0)

499 
f_±r
->
ª°
++;

500 i‡((
p_±r
->
chp
 =p_±r->
mhp
 &&Ö_±r->
cm™a
 =p_±r->
m™a
)

501 || 
f_±r
->
ª°
 == 0)

502 
	`ª°_off
();

506 #ifde‡
MAC


509 i‡(!(
tu∫
 & 0xFË&& ((
comm™d_cou¡
 > 0Ë|| 
föd_Êag


510 || (
f_±r
->
ª°
 != 0)))

511 i‡(
	`macgëkey
(
CNIL
, 
TRUE
))

512 
	`di°urb
(0, 0);

514 i‡((
comm™d_cou¡
 > 0 || 
föd_Êag
 || 
f_±r
->
ª°
 != 0)

515 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
)

516 && 
	`kbhô
()

518 && (
	`check_öput
 (
föd_Êag
 ? 0 : 10000))

522 #ifde‡
MSDOS


523 (Ë
	`msdos_gëch
();

525 #ifde‡
VMS


527 (Ë
	`vms_gëch
 ();

529 
	`di°urb
 (0, 0);

534 i‡(
f_±r
->
image
 > 0)

536 
	`íd_föd
 ();

537 
f_±r
->
image
--;

538 i‡(
f_±r
->
image
 == 0)

539 
	`¥t_m≠
 ();

542 i‡(
f_±r
->
∑ølysis
 > 0)

545 
f_±r
->
∑ølysis
--;

546 
	`di°urb
 (1, 0);

549 i‡(
f_±r
->
¥Ÿevû
 > 0)

551 
f_±r
->
¥Ÿevû
--;

552 i‡(
f_±r
->
¥Ÿevû
 == 0)

553 
	`msg_¥öt
 ("YouÇoÜonger feel safe fromÉvil.");

556 i‡(
f_±r
->
övu 
 > 0)

558 i‡((
PY_INVULN
 & 
f_±r
->
°©us
) == 0)

560 
f_±r
->
°©us
 |
PY_INVULN
;

561 
	`di°urb
 (0, 0);

562 
py
.
misc
.
∑c
 += 100;

563 
py
.
misc
.
dis_ac
 += 100;

564 
	`¥t_∑c
();

565 
	`msg_¥öt
("Your skinÅurns into steel!");

567 
f_±r
->
övu 
--;

568 i‡(
f_±r
->
övu 
 == 0)

570 #ifde‡
ATARIST_MWC


571 
f_±r
->
°©us
 &~(
hﬁdî
 = 
PY_INVULN
);

573 
f_±r
->
°©us
 &~
PY_INVULN
;

575 
	`di°urb
 (0, 0);

576 
py
.
misc
.
∑c
 -= 100;

577 
py
.
misc
.
dis_ac
 -= 100;

578 
	`¥t_∑c
();

579 
	`msg_¥öt
("Your skinÑeturnsÅoÇormal.");

583 i‡(
f_±r
->
bÀs£d
 > 0)

585 i‡((
PY_BLESSED
 & 
f_±r
->
°©us
) == 0)

587 
f_±r
->
°©us
 |
PY_BLESSED
;

588 
	`di°urb
 (0, 0);

589 
p_±r
->
bth
 += 5;

590 
p_±r
->
bthb
+= 5;

591 
p_±r
->
∑c
 += 2;

592 
p_±r
->
dis_ac
+= 2;

593 
	`msg_¥öt
("You feelÑighteous!");

594 
	`¥t_∑c
();

596 
f_±r
->
bÀs£d
--;

597 i‡(
f_±r
->
bÀs£d
 == 0)

599 #ifde‡
ATARIST_MWC


600 
f_±r
->
°©us
 &~(
hﬁdî
 = 
PY_BLESSED
);

602 
f_±r
->
°©us
 &~
PY_BLESSED
;

604 
	`di°urb
 (0, 0);

605 
p_±r
->
bth
 -= 5;

606 
p_±r
->
bthb
-= 5;

607 
p_±r
->
∑c
 -= 2;

608 
p_±r
->
dis_ac
 -= 2;

609 
	`msg_¥öt
("TheÖrayer hasÉxpired.");

610 
	`¥t_∑c
();

614 i‡(
f_±r
->
ªsi°_hót
 > 0)

616 
f_±r
->
ªsi°_hót
--;

617 i‡(
f_±r
->
ªsi°_hót
 == 0)

618 
	`msg_¥öt
 ("YouÇoÜonger feel safe from flame.");

621 i‡(
f_±r
->
ªsi°_cﬁd
 > 0)

623 
f_±r
->
ªsi°_cﬁd
--;

624 i‡(
f_±r
->
ªsi°_cﬁd
 == 0)

625 
	`msg_¥öt
 ("YouÇoÜonger feel safe from cold.");

628 i‡(
f_±r
->
dëe˘_öv
 > 0)

630 #ifde‡
ATARIST_MWC


631 i‡(((
hﬁdî
 = 
PY_DET_INV
Ë& 
f_±r
->
°©us
) == 0)

633 i‡((
PY_DET_INV
 & 
f_±r
->
°©us
) == 0)

636 #ifde‡
ATARIST_MWC


637 
f_±r
->
°©us
 |
hﬁdî
;

639 
f_±r
->
°©us
 |
PY_DET_INV
;

641 
f_±r
->
£e_öv
 = 
TRUE
;

643 
	`¸ótuªs
 (
FALSE
);

645 
f_±r
->
dëe˘_öv
--;

646 i‡(
f_±r
->
dëe˘_öv
 == 0)

648 #ifde‡
ATARIST_MWC


649 
f_±r
->
°©us
 &~
hﬁdî
;

651 
f_±r
->
°©us
 &~
PY_DET_INV
;

654 
	`ˇlc_b⁄u£s
();

656 
	`¸ótuªs
 (
FALSE
);

660 i‡(
f_±r
->
tim_ö‰a
 > 0)

662 #ifde‡
ATARIST_MWC


663 i‡(((
hﬁdî
 = 
PY_TIM_INFRA
Ë& 
f_±r
->
°©us
) == 0)

665 i‡((
PY_TIM_INFRA
 & 
f_±r
->
°©us
) == 0)

668 #ifde‡
ATARIST_MWC


669 
f_±r
->
°©us
 |
hﬁdî
;

671 
f_±r
->
°©us
 |
PY_TIM_INFRA
;

673 
f_±r
->
£e_ö‰a
++;

675 
	`¸ótuªs
 (
FALSE
);

677 
f_±r
->
tim_ö‰a
--;

678 i‡(
f_±r
->
tim_ö‰a
 == 0)

680 #ifde‡
ATARIST_MWC


681 
f_±r
->
°©us
 &~
hﬁdî
;

683 
f_±r
->
°©us
 &~
PY_TIM_INFRA
;

685 
f_±r
->
£e_ö‰a
--;

687 
	`¸ótuªs
 (
FALSE
);

691 i‡(
f_±r
->
w‹d_ªˇŒ
 > 0)

692 i‡(
f_±r
->
w‹d_ªˇŒ
 == 1)

694 
√w_Àvñ_Êag
 = 
TRUE
;

695 
f_±r
->
∑ølysis
++;

696 
f_±r
->
w‹d_ªˇŒ
 = 0;

697 i‡(
dun_Àvñ
 > 0)

699 
dun_Àvñ
 = 0;

700 
	`msg_¥öt
("You feel yourself yanked upwards!");

702 i‡(
py
.
misc
.
max_dlv
 != 0)

704 
dun_Àvñ
 = 
py
.
misc
.
max_dlv
;

705 
	`msg_¥öt
("You feel yourself yanked downwards!");

709 
f_±r
->
w‹d_ªˇŒ
--;

712 i‡((
py
.
Êags
.
ãÀp‹t
Ë&& (
	`øndöt
(100) == 1))

714 
	`di°urb
 (0, 0);

715 
	`ãÀp‹t
(40);

719 #ifde‡
ATARIST_MWC


720 i‡(
py
.
Êags
.
°©us
 & (
hﬁdî
 = 
PY_STR_WGT
))

722 i‡(
py
.
Êags
.
°©us
 & 
PY_STR_WGT
)

724 
	`check_°ªngth
();

725 i‡(
py
.
Êags
.
°©us
 & 
PY_STUDY
)

726 
	`¥t_°udy
();

727 #ifde‡
ATARIST_MWC


728 i‡(
py
.
Êags
.
°©us
 & (
hﬁdî
 = 
PY_SPEED
))

730 i‡(
py
.
Êags
.
°©us
 & 
PY_SPEED
)

733 #ifde‡
ATARIST_MWC


734 
py
.
Êags
.
°©us
 &~
hﬁdî
;

736 
py
.
Êags
.
°©us
 &~
PY_SPEED
;

738 
	`¥t_•ìd
();

740 #ifde‡
ATARIST_MWC


741 i‡((
py
.
Êags
.
°©us
 & (
hﬁdî
 = 
PY_PARALYSED
))

742 && (
py
.
Êags
.
∑ølysis
 < 1))

744 i‡((
py
.
Êags
.
°©us
 & 
PY_PARALYSED
Ë&& (py.Êags.
∑ølysis
 < 1))

747 
	`¥t_°©e
();

748 #ifde‡
ATARIST_MWC


749 
py
.
Êags
.
°©us
 &~
hﬁdî
;

751 
py
.
Êags
.
°©us
 &~
PY_PARALYSED
;

754 i‡(
py
.
Êags
.
∑ølysis
 > 0)

756 
	`¥t_°©e
();

757 #ifde‡
ATARIST_MWC


758 
py
.
Êags
.
°©us
 |(
hﬁdî
 = 
PY_PARALYSED
);

760 
py
.
Êags
.
°©us
 |
PY_PARALYSED
;

763 i‡(
py
.
Êags
.
ª°
 != 0)

764 
	`¥t_°©e
();

766 #ifde‡
ATARIST_MWC


767 i‡((
py
.
Êags
.
°©us
 & (
hﬁdî
 = 
PY_ARMOR
)) != 0)

769 i‡((
py
.
Êags
.
°©us
 & 
PY_ARMOR
) != 0)

772 
	`¥t_∑c
();

773 #ifde‡
ATARIST_MWC


774 
py
.
Êags
.
°©us
 &~
hﬁdî
;

776 
py
.
Êags
.
°©us
 &~
PY_ARMOR
;

779 #ifde‡
ATARIST_MWC


780 i‡((
py
.
Êags
.
°©us
 & (
hﬁdî
 = 
PY_STATS
)) != 0)

782 i‡((
py
.
Êags
.
°©us
 & 
PY_STATS
) != 0)

785 
i
 = 0; i < 6; i++)

786 #ifde‡
ATARIST_MWC


787 i‡(((
hﬁdî
 = 
PY_STR
Ë<< 
i
Ë& 
py
.
Êags
.
°©us
)

789 i‡((
PY_STR
 << 
i
Ë& 
py
.
Êags
.
°©us
)

791 
	`¥t_°©
(
i
);

792 #ifde‡
ATARIST_MWC


793 
py
.
Êags
.
°©us
 &~(
hﬁdî
 = 
PY_STATS
);

795 
py
.
Êags
.
°©us
 &~
PY_STATS
;

798 #ifde‡
ATARIST_MWC


799 i‡(
py
.
Êags
.
°©us
 & (
hﬁdî
 = 
PY_HP
))

801 i‡(
py
.
Êags
.
°©us
 & 
PY_HP
)

804 
	`¥t_mhp
();

805 
	`¥t_chp
();

806 #ifde‡
ATARIST_MWC


807 
py
.
Êags
.
°©us
 &~
hﬁdî
;

809 
py
.
Êags
.
°©us
 &~
PY_HP
;

812 #ifde‡
ATARIST_MWC


813 i‡(
py
.
Êags
.
°©us
 & (
hﬁdî
 = 
PY_MANA
))

815 i‡(
py
.
Êags
.
°©us
 & 
PY_MANA
)

818 
	`¥t_cm™a
();

819 #ifde‡
ATARIST_MWC


820 
py
.
Êags
.
°©us
 &~
hﬁdî
;

822 
py
.
Êags
.
°©us
 &~
PY_MANA
;

829 i‡(((
tu∫
 & 0xFË=0Ë&& (
f_±r
->
c⁄fu£d
 == 0)

830 && (
	`øndöt
(()(10 + 750 / (5 + 
py
.
misc
.
Àv
))) == 1))

832 
vty≥
 
tmp_°r
;

834 
i
 = 0; i < 
INVEN_ARRAY_SIZE
; i++)

836 i‡(
i
 =
öví_˘r
)

837 
i
 = 22;

838 
i_±r
 = &
övít‹y
[
i
];

841 i‡((
i_±r
->
tvÆ
 !
TV_NOTHING
Ë&& 
	`ích™ãd
(i_ptr) &&

842 (
	`øndöt
(
i
 < 22 ? 50 : 10) == 1))

844 *
	`des¸ibe_u£
();

846 (Ë
	`•rötf
(
tmp_°r
,

848 
	`des¸ibe_u£
(
i
));

849 
	`di°urb
(0, 0);

850 
	`msg_¥öt
(
tmp_°r
);

851 
	`add_ös¸ibe
(
i_±r
, 
ID_MAGIK
);

861 i‡(
MAX_MALLOC
 - 
mÂå
 < 10)

862 (Ë
	`com∑˘_m⁄°îs
 ();

864 i‡((
py
.
Êags
.
∑ølysis
 < 1) &&

865 (
py
.
Êags
.
ª°
 == 0) &&

866 (!
dóth
))

871 #ifde‡
ATARIST_MWC


872 i‡(
py
.
Êags
.
°©us
 & (
hﬁdî
 = 
PY_REPEAT
))

874 i‡(
py
.
Êags
.
°©us
 & 
PY_REPEAT
)

876 
	`¥t_°©e
 ();

877 
deÁu…_dú
 = 
FALSE
;

878 
‰ì_tu∫_Êag
 = 
FALSE
;

880 i‡(
föd_Êag
)

882 
	`föd_run
();

883 
föd_cou¡
--;

884 i‡(
föd_cou¡
 == 0)

885 
	`íd_föd
();

886 
	`put_qio
();

888 i‡(
doög_öví
)

889 
	`öví_comm™d
 (
doög_öví
);

893 
	`move_curs‹_ªœtive
 (
ch¨_row
, 
ch¨_cﬁ
);

894 i‡(
comm™d_cou¡
 > 0)

896 
msg_Êag
 = 
FALSE
;

897 
deÁu…_dú
 = 
TRUE
;

901 
msg_Êag
 = 
FALSE
;

902 #ifde‡
MAC


903 
	`u∆ﬂd£gmíts
();

904 
	`íabÀßvecmd
(
TRUE
);

905 
comm™d
 = 
	`ökeydú
();

906 
	`íabÀßvecmd
(
FALSE
);

908 
comm™d
 = 
	`ökey
();

910 
i
 = 0;

912 i‡((
rogue_like_comm™ds


913 && 
comm™d
 >= '0' && command <= '9')

914 || (!
rogue_like_comm™ds
 && 
comm™d
 == '#'))

916 
tmp
[8];

918 
	`¥t
("Repeat count:", 0, 0);

919 i‡(
comm™d
 == '#')

920 
comm™d
 = '0';

921 
i
 = 0;

922 
TRUE
)

924 i‡(
comm™d
 =
DELETE
 || comm™d =
	`CTRL
('H'))

926 
i
 = i / 10;

927 (Ë
	`•rötf
(
tmp
, "%d", 
i
);

928 
	`¥t
 (
tmp
, 0, 14);

930 i‡(
comm™d
 >= '0' && command <= '9')

932 i‡(
i
 > 99)

933 
	`bñl
 ();

936 
i
 = i * 10 + 
comm™d
 - '0';

937 (Ë
	`•rötf
 (
tmp
, "%d", 
i
);

938 
	`¥t
 (
tmp
, 0, 14);

943 #ifde‡
MAC


944 
comm™d
 = 
	`ökeydú
();

946 
comm™d
 = 
	`ökey
();

949 i‡(
i
 == 0)

951 
i
 = 99;

952 (Ë
	`•rötf
 (
tmp
, "%d", 
i
);

953 
	`¥t
 (
tmp
, 0, 14);

956 i‡(
comm™d
 == ' ')

958 
	`¥t
 ("Command:", 0, 20);

959 #ifde‡
MAC


960 
comm™d
 = 
	`ökeydú
();

962 
comm™d
 = 
	`ökey
();

967 i‡(
comm™d
 == '^')

969 i‡(
comm™d_cou¡
 > 0)

970 
	`¥t_°©e
();

971 i‡(
	`gë_com
("C⁄åﬁ-", &
comm™d
))

973 i‡(
comm™d
 >= 'A' && command <= 'Z')

974 
comm™d
 -= 'A' - 1;

975 i‡(
comm™d
 >= 'a' && command <= 'z')

976 
comm™d
 -= 'a' - 1;

979 
	`msg_¥öt
("Type ^ <letter> forá control char");

980 
comm™d
 = ' ';

984 
comm™d
 = ' ';

987 
	`move_curs‹_ªœtive
 (
ch¨_row
, 
ch¨_cﬁ
);

989 i‡(
rogue_like_comm™ds
 =
FALSE
)

990 
comm™d
 = 
	`‹igöÆ_comm™ds
 (command);

991 i‡(
i
 > 0)

993 i‡(!
	`vÆid_cou¡comm™d
(
comm™d
))

995 
‰ì_tu∫_Êag
 = 
TRUE
;

996 
	`msg_¥öt
 ("Invalid command withá count.");

997 
comm™d
 = ' ';

1001 
comm™d_cou¡
 = 
i
;

1002 
	`¥t_°©e
 ();

1007 
	`îa£_löe
(
MSG_LINE
, 0);

1008 
	`move_curs‹_ªœtive
(
ch¨_row
, 
ch¨_cﬁ
);

1009 
	`put_qio
();

1011 
	`do_comm™d
 (
comm™d
);

1013 i‡(
föd_Êag
)

1015 
föd_cou¡
 = 
comm™d_cou¡
 - 1;

1016 
comm™d_cou¡
 = 0;

1018 i‡(
‰ì_tu∫_Êag
)

1019 
comm™d_cou¡
 = 0;

1020 i‡(
comm™d_cou¡
)

1021 
comm™d_cou¡
--;

1025 
‰ì_tu∫_Êag
 && !
√w_Àvñ_Êag
 && !
eof_Êag
);

1031 
	`move_curs‹_ªœtive
 (
ch¨_row
, 
ch¨_cﬁ
);

1032 
	`put_qio
 ();

1036 i‡(
ãÀp‹t_Êag
Ë
	`ãÀp‹t
(100);

1038 i‡(!
√w_Àvñ_Êag
Ë
	`¸ótuªs
(
TRUE
);

1041 !
√w_Àvñ_Êag
 && !
eof_Êag
);

1042 
	}
}

1045 
	$‹igöÆ_comm™ds
(
com_vÆ
)

1046 
com_vÆ
;

1048 
dú_vÆ
;

1050 
com_vÆ
)

1052 
	`CTRL
('K'):

1053 
com_vÆ
 = 'Q';

1055 
	`CTRL
('J'):

1056 
	`CTRL
('M'):

1057 
com_vÆ
 = '+';

1059 
	`CTRL
('P'):

1060 
	`CTRL
('W'):

1061 
	`CTRL
('X'):

1067 i‡(
	`gë_dú
(
CNIL
, &
dú_vÆ
))

1068 
dú_vÆ
)

1070 1: 
com_vÆ
 = 'B'; ;

1071 2: 
com_vÆ
 = 'J'; ;

1072 3: 
com_vÆ
 = 'N'; ;

1073 4: 
com_vÆ
 = 'H'; ;

1074 6: 
com_vÆ
 = 'L'; ;

1075 7: 
com_vÆ
 = 'Y'; ;

1076 8: 
com_vÆ
 = 'K'; ;

1077 9: 
com_vÆ
 = 'U'; ;

1078 : 
com_vÆ
 = ' '; ;

1081 
com_vÆ
 = ' ';

1093 
com_vÆ
 = 'b';

1096 
com_vÆ
 = 'j';

1099 
com_vÆ
 = 'n';

1102 
com_vÆ
 = 'h';

1105 
com_vÆ
 = '.';

1108 
com_vÆ
 = 'l';

1111 
com_vÆ
 = 'y';

1114 
com_vÆ
 = 'k';

1117 
com_vÆ
 = 'u';

1120 
com_vÆ
 = 'f';

1129 
com_vÆ
 = 'W';

1136 
com_vÆ
 = '#';

1139 i‡(
	`gë_dú
(
CNIL
, &
dú_vÆ
))

1140 
dú_vÆ
)

1142 1: 
com_vÆ
 = 
	`CTRL
('B'); ;

1143 2: 
com_vÆ
 = 
	`CTRL
('J'); ;

1144 3: 
com_vÆ
 = 
	`CTRL
('N'); ;

1145 4: 
com_vÆ
 = 
	`CTRL
('H'); ;

1146 6: 
com_vÆ
 = 
	`CTRL
('L'); ;

1147 7: 
com_vÆ
 = 
	`CTRL
('Y'); ;

1148 8: 
com_vÆ
 = 
	`CTRL
('K'); ;

1149 9: 
com_vÆ
 = 
	`CTRL
('U'); ;

1150 : 
com_vÆ
 = ' '; ;

1153 
com_vÆ
 = ' ';

1158 
com_vÆ
 = 'z';

1161 
com_vÆ
 = 'P';

1168 
com_vÆ
 = 't';

1171 
com_vÆ
 = '?';

1176 
com_vÆ
 = 'S';

1179 
com_vÆ
 = 'x';

1189 
com_vÆ
 = 'T';

1192 
com_vÆ
 = 'Z';

1198 
com_vÆ
 = 'X';

1202 
	`CTRL
('A'):

1204 
	`CTRL
('B'):

1205 
com_vÆ
 = 
	`CTRL
('O');

1207 
	`CTRL
('D'):

1209 
	`CTRL
('H'):

1210 
com_vÆ
 = '\\';

1212 
	`CTRL
('I'):

1214 
	`CTRL
('L'):

1215 
com_vÆ
 = '*';

1218 
	`CTRL
('T'):

1219 
	`CTRL
('E'):

1220 
	`CTRL
('F'):

1221 
	`CTRL
('G'):

1225 
	`CTRL
('U'):

1226 
com_vÆ
 = '&';

1229 
com_vÆ
 = '~';

1232  
com_vÆ
;

1233 
	}
}

1236 
	$do_comm™d
(
com_vÆ
)

1237 
com_vÆ
;

1239 
dú_vÆ
, 
do_pickup
;

1240 
y
, 
x
, 
i
, 
j
;

1241 
vty≥
 
out_vÆ
, 
tmp_°r
;

1242 
Êags
 *
f_±r
;

1245 i‡(
com_vÆ
 == '-')

1247 
do_pickup
 = 
FALSE
;

1248 
i
 = 
comm™d_cou¡
;

1249 i‡(
	`gë_dú
(
CNIL
, &
dú_vÆ
))

1251 
comm™d_cou¡
 = 
i
;

1252 
dú_vÆ
)

1254 1: 
com_vÆ
 = 'b'; ;

1255 2: 
com_vÆ
 = 'j'; ;

1256 3: 
com_vÆ
 = 'n'; ;

1257 4: 
com_vÆ
 = 'h'; ;

1258 6: 
com_vÆ
 = 'l'; ;

1259 7: 
com_vÆ
 = 'y'; ;

1260 8: 
com_vÆ
 = 'k'; ;

1261 9: 
com_vÆ
 = 'u'; ;

1262 : 
com_vÆ
 = '~'; ;

1266 
com_vÆ
 = ' ';

1269 
do_pickup
 = 
TRUE
;

1271 
com_vÆ
)

1274 
	`Êush
();

1275 i‡(
	`gë_check
("Do youÑeally wantÅo quit?"))

1277 
√w_Àvñ_Êag
 = 
TRUE
;

1278 
dóth
 = 
TRUE
;

1279 (Ë
	`°r˝y
(
dõd_‰om
, "Quitting");

1281 
‰ì_tu∫_Êag
 = 
TRUE
;

1283 
	`CTRL
('P'):

1284 i‡(
comm™d_cou¡
 > 0)

1286 
i
 = 
comm™d_cou¡
;

1287 i‡(
i
 > 
MAX_SAVE_MSG
)

1288 
i
 = 
MAX_SAVE_MSG
;

1289 
comm™d_cou¡
 = 0;

1291 i‡(
œ°_comm™d
 !
	`CTRL
('P'))

1292 
i
 = 1;

1294 
i
 = 
MAX_SAVE_MSG
;

1295 
j
 = 
œ°_msg
;

1296 i‡(
i
 > 1)

1298 
	`ßve_s¸ìn
();

1299 
x
 = 
i
;

1300 
i
 > 0)

1302 
i
--;

1303 
	`¥t
(
ﬁd_msg
[
j
], 
i
, 0);

1304 i‡(
j
 == 0)

1305 
j
 = 
MAX_SAVE_MSG
-1;

1307 
j
--;

1309 
	`îa£_löe
 (
x
, 0);

1310 
	`∑u£_löe
(
x
);

1311 
	`ª°‹e_s¸ìn
();

1316 
	`put_buf„r
(">", 0, 0);

1317 
	`¥t
(
ﬁd_msg
[
j
], 0, 1);

1319 
‰ì_tu∫_Êag
 = 
TRUE
;

1321 
	`CTRL
('W'):

1322 i‡(
wiz¨d
)

1324 
wiz¨d
 = 
FALSE
;

1325 
	`msg_¥öt
("Wizard mode off.");

1327 i‡(
	`íãr_wiz_mode
())

1328 
	`msg_¥öt
("Wizard mode on.");

1329 
	`¥t_wö√r
();

1330 
‰ì_tu∫_Êag
 = 
TRUE
;

1332 
	`CTRL
('X'):

1333 i‡(
tŸÆ_wö√r
)

1335 
	`msg_¥öt
("Youáreá Total Winner, your character must beÑetired.");

1336 i‡(
rogue_like_comm™ds
)

1337 
	`msg_¥öt
("Use 'Q'Åo when youáreÑeadyÅo quit.");

1339 
	`msg_¥öt
 ("Use <Control>-K when youáreÑeadyÅo quit.");

1343 (Ë
	`°r˝y
 (
dõd_‰om
, "(saved)");

1344 
	`msg_¥öt
 ("Saving game...");

1345 #ifde‡
MAC


1346 i‡(
	`ßve_ch¨
 (
TRUE
))

1347 
	`exô_game
();

1349 i‡(
	`ßve_ch¨
 ())

1350 
	`exô_game
();

1352 (Ë
	`°r˝y
 (
dõd_‰om
, "(aliveánd well)");

1354 
‰ì_tu∫_Êag
 = 
TRUE
;

1357 
	`ßve_s¸ìn
();

1358 
	`£t_›ti⁄s
();

1359 
	`ª°‹e_s¸ìn
();

1360 
‰ì_tu∫_Êag
 = 
TRUE
;

1363 
	`s¸ibe_obje˘
 ();

1364 
‰ì_tu∫_Êag
 = 
TRUE
;

1368 #ifde‡
SECURE


1369 
	`msg_¥öt
("Sorry, inferior shellsáreÇotállowed from Moria.");

1371 
	`shñl_out
();

1373 
‰ì_tu∫_Êag
 = 
TRUE
;

1375 
ESCAPE
:

1377 
‰ì_tu∫_Êag
 = 
TRUE
;

1380 
	`move_ch¨
(1, 
do_pickup
);

1383 
	`move_ch¨
(2, 
do_pickup
);

1386 
	`move_ch¨
(3, 
do_pickup
);

1389 
	`move_ch¨
(4, 
do_pickup
);

1392 
	`move_ch¨
(6, 
do_pickup
);

1395 
	`move_ch¨
(7, 
do_pickup
);

1398 
	`move_ch¨
(8, 
do_pickup
);

1401 
	`move_ch¨
(9, 
do_pickup
);

1404 
	`föd_öô
(1);

1407 
	`föd_öô
(2);

1410 
	`föd_öô
(3);

1413 
	`föd_öô
(4);

1416 
	`föd_öô
(6);

1419 
	`föd_öô
(7);

1422 
	`föd_öô
(8);

1425 
	`föd_öô
(9);

1428 
	`idít_ch¨
();

1429 
‰ì_tu∫_Êag
 = 
TRUE
;

1432 
	`move_ch¨
 (5, 
do_pickup
);

1433 i‡(
comm™d_cou¡
 > 1)

1435 
comm™d_cou¡
--;

1436 
	`ª°
();

1440 
	`go_up
();

1443 
	`go_down
();

1446 i‡(
rogue_like_comm™ds
)

1447 
	`hñpfûe
(
MORIA_HELP
);

1449 
	`hñpfûe
(
MORIA_ORIG_HELP
);

1450 
‰ì_tu∫_Êag
 = 
TRUE
;

1453 
	`bash
();

1456 
	`ßve_s¸ìn
();

1457 
	`ch™ge_«me
();

1458 
	`ª°‹e_s¸ìn
();

1459 
‰ì_tu∫_Êag
 = 
TRUE
;

1462 
	`dißrm_å≠
();

1465 
	`ót
();

1468 
	`ªfûl_œmp
();

1471 
	`gaö_•ñls
();

1474 i‡(
œ°_comm™d
 != 'V')

1475 
i
 = 
TRUE
;

1477 
i
 = 
FALSE
;

1478 
	`ßve_s¸ìn
();

1479 
	`di•œy_sc‹es
(
i
);

1480 
	`ª°‹e_s¸ìn
();

1481 
‰ì_tu∫_Êag
 = 
TRUE
;

1484 i‡((
py
.
Êags
.
blöd
 > 0Ë|| 
	`no_light
())

1485 
	`msg_¥öt
("You can't see your map.");

1488 
cy
, 
cx
, 
p_y
, 
p_x
;

1490 
y
 = 
ch¨_row
;

1491 
x
 = 
ch¨_cﬁ
;

1492 i‡(
	`gë_∑√l
(
y
, 
x
, 
TRUE
))

1493 
	`¥t_m≠
();

1494 
cy
 = 
∑√l_row
;

1495 
cx
 = 
∑√l_cﬁ
;

1498 
p_y
 = 
∑√l_row
;

1499 
p_x
 = 
∑√l_cﬁ
;

1500 i‡(
p_y
 =
cy
 && 
p_x
 =
cx
)

1501 
tmp_°r
[0] = '\0';

1503 (Ë
	`•rötf
(
tmp_°r
, "%s%s of",

1504 
p_y
 < 
cy
 ? " North" :Ö_y > cy ? " South" : "",

1505 
p_x
 < 
cx
 ? " West" :Ö_x > cx ? " East" : "");

1506 (Ë
	`•rötf
(
out_vÆ
,

1508 
p_y
, 
p_x
, 
tmp_°r
);

1509 i‡(!
	`gë_dú
(
out_vÆ
, &
dú_vÆ
))

1517 
x
 +((
dú_vÆ
-1)%3 - 1Ë* 
SCREEN_WIDTH
/2;

1518 
y
 -((
dú_vÆ
-1)/3 - 1Ë* 
SCREEN_HEIGHT
/2;

1519 i‡(
x
 < 0 || 
y
 < 0 || x >
cur_width
 || y >= cur_width)

1521 
	`msg_¥öt
("You've goneÖastÅheÉnd of your map.");

1522 
x
 -((
dú_vÆ
-1)%3 - 1Ë* 
SCREEN_WIDTH
/2;

1523 
y
 +((
dú_vÆ
-1)/3 - 1Ë* 
SCREEN_HEIGHT
/2;

1526 i‡(
	`gë_∑√l
(
y
, 
x
, 
TRUE
))

1528 
	`¥t_m≠
();

1534 i‡(
	`gë_∑√l
(
ch¨_row
, 
ch¨_cﬁ
, 
FALSE
))

1535 
	`¥t_m≠
();

1537 
‰ì_tu∫_Êag
 = 
TRUE
;

1540 
	`ª°
();

1543 i‡(
py
.
Êags
.
°©us
 & 
PY_SEARCH
)

1544 
	`£¨ch_off
();

1546 
	`£¨ch_⁄
();

1547 
‰ì_tu∫_Êag
 = 
TRUE
;

1549 
	`CTRL
('B'):

1550 
	`tu¬ñ
(1);

1552 
	`CTRL
('M'):

1553 
	`CTRL
('J'):

1554 
	`tu¬ñ
(2);

1556 
	`CTRL
('N'):

1557 
	`tu¬ñ
(3);

1559 
	`CTRL
('H'):

1560 
	`tu¬ñ
(4);

1562 
	`CTRL
('L'):

1563 
	`tu¬ñ
(6);

1565 
	`CTRL
('Y'):

1566 
	`tu¬ñ
(7);

1568 
	`CTRL
('K'):

1569 
	`tu¬ñ
(8);

1571 
	`CTRL
('U'):

1572 
	`tu¬ñ
(9);

1575 
	`aim
();

1578 
	`s¸ìn_m≠
();

1579 
‰ì_tu∫_Êag
 = 
TRUE
;

1582 
	`examöe_book
();

1583 
‰ì_tu∫_Êag
 = 
TRUE
;

1586 
	`˛o£obje˘
();

1589 
	`öví_comm™d
('d');

1592 
	`öví_comm™d
('e');

1595 
	`throw_obje˘
();

1598 
	`öví_comm™d
('i');

1601 
	`jamdo‹
();

1604 
	`look
();

1605 
‰ì_tu∫_Êag
 = 
TRUE
;

1608 
	`ˇ°
();

1611 
	`›íobje˘
();

1614 
	`¥ay
();

1617 
	`quaff
();

1620 
	`ªad_s¸ﬁl
();

1623 
	`£¨ch
(
ch¨_row
, 
ch¨_cﬁ
, 
py
.
misc
.
§h
);

1626 
	`öví_comm™d
('t');

1629 
	`u£
();

1632 
	`hñpfûe
(
MORIA_VER
);

1633 
‰ì_tu∫_Êag
 = 
TRUE
;

1636 
	`öví_comm™d
('w');

1639 
	`öví_comm™d
('x');

1642 i‡(
wiz¨d
)

1644 
‰ì_tu∫_Êag
 = 
TRUE
;

1645 
com_vÆ
)

1647 
	`CTRL
('A'):

1648 (Ë
	`ªmove_cur£
();

1649 (Ë
	`cuª_blöd√ss
();

1650 (Ë
	`cuª_c⁄fusi⁄
();

1651 (Ë
	`cuª_pois⁄
();

1652 (Ë
	`ªmove_„¨
();

1653 (Ë
	`ªs_°©
(
A_STR
);

1654 (Ë
	`ªs_°©
(
A_INT
);

1655 (Ë
	`ªs_°©
(
A_WIS
);

1656 (Ë
	`ªs_°©
(
A_CON
);

1657 (Ë
	`ªs_°©
(
A_DEX
);

1658 (Ë
	`ªs_°©
(
A_CHR
);

1659 
f_±r
 = &
py
.
Êags
;

1660 i‡(
f_±r
->
¶ow
 > 1)

1661 
f_±r
->
¶ow
 = 1;

1662 i‡(
f_±r
->
image
 > 1)

1663 
f_±r
->
image
 = 1;

1665 
	`CTRL
('E'):

1666 
	`ch™ge_ch¨a˘î
();

1667 
	`îa£_löe
(
MSG_LINE
, 0);

1669 
	`CTRL
('F'):

1670 (Ë
	`mass_gíocide
();

1672 
	`CTRL
('G'):

1673 i‡(
comm™d_cou¡
 > 0)

1675 
i
 = 
comm™d_cou¡
;

1676 
comm™d_cou¡
 = 0;

1679 
i
 = 1;

1680 
	`øndom_obje˘
(
ch¨_row
, 
ch¨_cﬁ
, 
i
);

1681 
	`¥t_m≠
();

1683 
	`CTRL
('D'):

1684 i‡(
comm™d_cou¡
 > 0)

1686 i‡(
comm™d_cou¡
 > 99)

1687 
i
 = 0;

1689 
i
 = 
comm™d_cou¡
;

1690 
comm™d_cou¡
 = 0;

1694 
	`¥t
("GoÅo whichÜevel (0-99) ? ", 0, 0);

1695 
i
 = -1;

1696 i‡(
	`gë_°rög
(
tmp_°r
, 0, 27, 10))

1697 
i
 = 
	`©oi
(
tmp_°r
);

1699 i‡(
i
 > -1)

1701 
dun_Àvñ
 = 
i
;

1702 i‡(
dun_Àvñ
 > 99)

1703 
dun_Àvñ
 = 99;

1704 
√w_Àvñ_Êag
 = 
TRUE
;

1707 
	`îa£_löe
(
MSG_LINE
, 0);

1709 
	`CTRL
('O'):

1710 
	`¥öt_obje˘s
();

1713 i‡(
rogue_like_comm™ds
)

1714 
	`hñpfûe
(
MORIA_WIZ_HELP
);

1716 
	`hñpfûe
(
MORIA_OWIZ_HELP
);

1718 
	`CTRL
('I'):

1719 (Ë
	`idít_•ñl
();

1722 
	`wiz¨d_light
();

1725 
	`m≠_¨ó
();

1727 
	`CTRL
('T'):

1728 
	`ãÀp‹t
(100);

1731 i‡(
comm™d_cou¡
 > 0)

1733 
py
.
misc
.
exp
 = 
comm™d_cou¡
;

1734 
comm™d_cou¡
 = 0;

1736 i‡(
py
.
misc
.
exp
 == 0)

1737 
py
.
misc
.
exp
 = 1;

1739 
py
.
misc
.
exp
 =Öy.misc.exp * 2;

1740 
	`¥t_ex≥rõn˚
();

1743 
y
 = 
ch¨_row
;

1744 
x
 = 
ch¨_cﬁ
;

1745 (Ë
	`summ⁄_m⁄°î
(&
y
, &
x
, 
TRUE
);

1746 
	`¸ótuªs
(
FALSE
);

1749 
	`wiz¨d_¸óã
();

1752 i‡(
rogue_like_comm™ds
)

1753 
	`¥t
("Type '?' or '\\' for help.", 0, 0);

1755 
	`¥t
("Type '?' or ^H for help.", 0, 0);

1760 
	`¥t
("Type '?' for help.", 0, 0);

1761 
‰ì_tu∫_Êag
 = 
TRUE
;

1764 
œ°_comm™d
 = 
com_vÆ
;

1765 
	}
}

1768 
	$vÆid_cou¡comm™d
(
c
)

1769 
c
;

1771 
c
)

1774 
	`CTRL
('W'):

1775 
	`CTRL
('X'):

1806 
	`CTRL
('A'):

1808 
	`CTRL
('I'):

1811 
	`CTRL
('T'):

1812 
	`CTRL
('E'):

1813 
	`CTRL
('F'):

1814 
	`CTRL
('S'):

1815 
	`CTRL
('Q'):

1816  
FALSE
;

1817 
	`CTRL
('P'):

1818 
ESCAPE
:

1841 
	`CTRL
('Y'):

1842 
	`CTRL
('K'):

1843 
	`CTRL
('U'):

1844 
	`CTRL
('L'):

1845 
	`CTRL
('N'):

1846 
	`CTRL
('J'):

1847 
	`CTRL
('B'):

1848 
	`CTRL
('H'):

1852 
	`CTRL
('D'):

1853 
	`CTRL
('G'):

1855  
TRUE
;

1857  
FALSE
;

1859 
	}
}

1863 
	$ªgíhp
(
≥r˚¡
)

1864 
≥r˚¡
;

1866 
misc
 *
p_±r
;

1867 
öt32
 
√w_chp
, 
√w_chp_‰ac
;

1868 
ﬁd_chp
;

1870 
p_±r
 = &
py
.
misc
;

1871 
ﬁd_chp
 = 
p_±r
->
chp
;

1872 
√w_chp
 = (()
p_±r
->
mhp
Ë* 
≥r˚¡
 + 
PLAYER_REGEN_HPBASE
;

1873 
p_±r
->
chp
 +
√w_chp
 >> 16;

1875 i‡(
p_±r
->
chp
 < 0 && 
ﬁd_chp
 > 0)

1876 
p_±r
->
chp
 = 
MAX_SHORT
;

1877 
√w_chp_‰ac
 = (
√w_chp
 & 0xFFFFË+ 
p_±r
->
chp_‰ac
;

1878 i‡(
√w_chp_‰ac
 >= 0x10000L)

1880 
p_±r
->
chp_‰ac
 = 
√w_chp_‰ac
 - 0x10000L;

1881 
p_±r
->
chp
++;

1884 
p_±r
->
chp_‰ac
 = 
√w_chp_‰ac
;

1887 i‡(
p_±r
->
chp
 >p_±r->
mhp
)

1889 
p_±r
->
chp
 =Ö_±r->
mhp
;

1890 
p_±r
->
chp_‰ac
 = 0;

1892 i‡(
ﬁd_chp
 !
p_±r
->
chp
)

1893 
	`¥t_chp
();

1894 
	}
}

1898 
	$ªgím™a
(
≥r˚¡
)

1899 
≥r˚¡
;

1901 
misc
 *
p_±r
;

1902 
öt32
 
√w_m™a
, 
√w_m™a_‰ac
;

1903 
ﬁd_cm™a
;

1905 
p_±r
 = &
py
.
misc
;

1906 
ﬁd_cm™a
 = 
p_±r
->
cm™a
;

1907 
√w_m™a
 = (()
p_±r
->
m™a
Ë* 
≥r˚¡
 + 
PLAYER_REGEN_MNBASE
;

1908 
p_±r
->
cm™a
 +
√w_m™a
 >> 16;

1910 i‡(
p_±r
->
cm™a
 < 0 && 
ﬁd_cm™a
 > 0)

1911 
p_±r
->
cm™a
 = 
MAX_SHORT
;

1912 
√w_m™a_‰ac
 = (
√w_m™a
 & 0xFFFFË+ 
p_±r
->
cm™a_‰ac
;

1913 i‡(
√w_m™a_‰ac
 >= 0x10000L)

1915 
p_±r
->
cm™a_‰ac
 = 
√w_m™a_‰ac
 - 0x10000L;

1916 
p_±r
->
cm™a
++;

1919 
p_±r
->
cm™a_‰ac
 = 
√w_m™a_‰ac
;

1922 i‡(
p_±r
->
cm™a
 >p_±r->
m™a
)

1924 
p_±r
->
cm™a
 =Ö_±r->
m™a
;

1925 
p_±r
->
cm™a_‰ac
 = 0;

1927 i‡(
ﬁd_cm™a
 !
p_±r
->
cm™a
)

1928 
	`¥t_cm™a
();

1929 
	}
}

1934 
	$ích™ãd
 (
t_±r
)

1935 
öví_ty≥
 *
t_±r
;

1937 #ifde‡
ATARIST_MWC


1938 
öt32u
 
hﬁdî
;

1941 i‡(
t_±r
->
tvÆ
 < 
TV_MIN_ENCHANT
 ||Å_±r->tvÆ > 
TV_MAX_ENCHANT


1942 #ifde‡
ATARIST_MWC


1943 || 
t_±r
->
Êags
 & (
hﬁdî
 = 
TR_CURSED
))

1945 || 
t_±r
->
Êags
 & 
TR_CURSED
)

1947  
FALSE
;

1948 i‡(
	`known2_p
(
t_±r
))

1949  
FALSE
;

1950 i‡(
t_±r
->
idít
 & 
ID_MAGIK
)

1951  
FALSE
;

1952 i‡(
t_±r
->
tohô
 > 0 ||Å_±r->
todam
 > 0 ||Å_±r->
tﬂc
 > 0)

1953  
TRUE
;

1954 i‡((0x4000107fL & 
t_±r
->
Êags
Ë&&Å_±r->
p1
 > 0)

1955  
TRUE
;

1956 i‡(0x07f„980L & 
t_±r
->
Êags
)

1957  
TRUE
;

1959  
FALSE
;

1960 
	}
}

1964 
	$examöe_book
()

1966 
öt32u
 
j
;

1967 
i
, 
k
, 
ôem_vÆ
, 
Êag
;

1968 
•ñl_ödex
[31];

1969 
öví_ty≥
 *
i_±r
;

1970 
•ñl_ty≥
 *
s_±r
;

1972 i‡(!
	`föd_ønge
(
TV_MAGIC_BOOK
, 
TV_PRAYER_BOOK
, &
i
, &
k
))

1973 
	`msg_¥öt
("YouáreÇot carryingány books.");

1974 i‡(
py
.
Êags
.
blöd
 > 0)

1975 
	`msg_¥öt
("You can't seeÅoÑead your spell book!");

1976 i‡(
	`no_light
())

1977 
	`msg_¥öt
("You haveÇoÜightÅoÑead by.");

1978 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

1979 
	`msg_¥öt
("YouáreÅoo confused.");

1980 i‡(
	`gë_ôem
(&
ôem_vÆ
, "Which Book?", 
i
, 
k
, 
CNIL
, CNIL))

1982 
Êag
 = 
TRUE
;

1983 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

1984 i‡(
˛ass
[
py
.
misc
.
p˛ass
].
•ñl
 =
MAGE
)

1986 i‡(
i_±r
->
tvÆ
 !
TV_MAGIC_BOOK
)

1987 
Êag
 = 
FALSE
;

1989 i‡(
˛ass
[
py
.
misc
.
p˛ass
].
•ñl
 =
PRIEST
)

1991 i‡(
i_±r
->
tvÆ
 !
TV_PRAYER_BOOK
)

1992 
Êag
 = 
FALSE
;

1995 
Êag
 = 
FALSE
;

1997 i‡(!
Êag
)

1998 
	`msg_¥öt
("You doÇot understandÅheÜanguage.");

2001 
i
 = 0;

2002 
j
 = 
övít‹y
[
ôem_vÆ
].
Êags
;

2003 
j
)

2005 
k
 = 
	`bô_pos
(&
j
);

2006 
s_±r
 = &
magic_•ñl
[
py
.
misc
.
p˛ass
-1][
k
];

2007 i‡(
s_±r
->
¶evñ
 < 99)

2009 
•ñl_ödex
[
i
] = 
k
;

2010 
i
++;

2013 
	`ßve_s¸ìn
();

2014 
	`¥öt_•ñls
(
•ñl_ödex
, 
i
, 
TRUE
, -1);

2015 
	`∑u£_löe
(0);

2016 
	`ª°‹e_s¸ìn
();

2019 
	}
}

2023 
	$go_up
()

2025 
ˇve_ty≥
 *
c_±r
;

2026 
no_°aús
 = 
FALSE
;

2028 
c_±r
 = &
ˇve
[
ch¨_row
][
ch¨_cﬁ
];

2029 i‡(
c_±r
->
çå
 != 0)

2030 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_UP_STAIR
)

2032 
dun_Àvñ
--;

2033 
√w_Àvñ_Êag
 = 
TRUE
;

2034 
	`msg_¥öt
("YouÉnterá maze of up staircases.");

2035 
	`msg_¥öt
("YouÖassÅhroughá one-way door.");

2038 
no_°aús
 = 
TRUE
;

2040 
no_°aús
 = 
TRUE
;

2042 i‡(
no_°aús
)

2044 
	`msg_¥öt
("I seeÇo up staircase here.");

2045 
‰ì_tu∫_Êag
 = 
TRUE
;

2047 
	}
}

2051 
	$go_down
()

2053 
ˇve_ty≥
 *
c_±r
;

2054 
no_°aús
 = 
FALSE
;

2056 
c_±r
 = &
ˇve
[
ch¨_row
][
ch¨_cﬁ
];

2057 i‡(
c_±r
->
çå
 != 0)

2058 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_DOWN_STAIR
)

2060 
dun_Àvñ
++;

2061 
√w_Àvñ_Êag
 = 
TRUE
;

2062 
	`msg_¥öt
("YouÉnterá maze of down staircases.");

2063 
	`msg_¥öt
("YouÖassÅhroughá one-way door.");

2066 
no_°aús
 = 
TRUE
;

2068 
no_°aús
 = 
TRUE
;

2070 i‡(
no_°aús
)

2072 
	`msg_¥öt
("I seeÇo down staircase here.");

2073 
‰ì_tu∫_Êag
 = 
TRUE
;

2075 
	}
}

2079 
	$jamdo‹
()

2081 
y
, 
x
, 
dú
, 
i
, 
j
;

2082 
ˇve_ty≥
 *
c_±r
;

2083 
öví_ty≥
 *
t_±r
, *
i_±r
;

2084 
tmp_°r
[80];

2086 
‰ì_tu∫_Êag
 = 
TRUE
;

2087 
y
 = 
ch¨_row
;

2088 
x
 = 
ch¨_cﬁ
;

2089 i‡(
	`gë_dú
(
CNIL
, &
dú
))

2091 (Ë
	`mmove
(
dú
, &
y
, &
x
);

2092 
c_±r
 = &
ˇve
[
y
][
x
];

2093 i‡(
c_±r
->
çå
 != 0)

2095 
t_±r
 = &
t_li°
[
c_±r
->
çå
];

2096 i‡(
t_±r
->
tvÆ
 =
TV_CLOSED_DOOR
)

2097 i‡(
c_±r
->
˝å
 == 0)

2099 i‡(
	`föd_ønge
(
TV_SPIKE
, 
TV_NEVER
, &
i
, &
j
))

2101 
‰ì_tu∫_Êag
 = 
FALSE
;

2102 
	`cou¡_msg_¥öt
("You jamÅhe door withá spike.");

2103 i‡(
t_±r
->
p1
 > 0)

2104 
t_±r
->
p1
 = -t_ptr->p1;

2107 
t_±r
->
p1
 -= 1 + 190 / (10 -Å_ptr->p1);

2108 
i_±r
 = &
övít‹y
[
i
];

2109 i‡(
i_±r
->
numbî
 > 1)

2111 
i_±r
->
numbî
--;

2112 
öví_weight
 -
i_±r
->
weight
;

2115 
	`öví_de°roy
(
i
);

2118 
	`msg_¥öt
("But you haveÇo spikes.");

2122 
‰ì_tu∫_Êag
 = 
FALSE
;

2123 (Ë
	`•rötf
(
tmp_°r
, "The %s is in your way!",

2124 
c_li°
[
m_li°
[
c_±r
->
˝å
].
m±r
].
«me
);

2125 
	`msg_¥öt
(
tmp_°r
);

2127 i‡(
t_±r
->
tvÆ
 =
TV_OPEN_DOOR
)

2128 
	`msg_¥öt
("The door must be closed first.");

2130 
	`msg_¥öt
("That isn'tá door!");

2133 
	`msg_¥öt
("That isn'tá door!");

2135 
	}
}

2139 
	$ªfûl_œmp
()

2141 
i
, 
j
;

2142 
k
;

2143 
öví_ty≥
 *
i_±r
;

2145 
‰ì_tu∫_Êag
 = 
TRUE
;

2146 
k
 = 
övít‹y
[
INVEN_LIGHT
].
subvÆ
;

2147 i‡(
k
 != 0)

2148 
	`msg_¥öt
("But youáreÇot usingáÜamp.");

2149 i‡(!
	`föd_ønge
(
TV_FLASK
, 
TV_NEVER
, &
i
, &
j
))

2150 
	`msg_¥öt
("You haveÇo oil.");

2153 
‰ì_tu∫_Êag
 = 
FALSE
;

2154 
i_±r
 = &
övít‹y
[
INVEN_LIGHT
];

2155 
i_±r
->
p1
 +
övít‹y
[
i
].p1;

2156 i‡(
i_±r
->
p1
 > 
OBJ_LAMP_MAX
)

2158 
i_±r
->
p1
 = 
OBJ_LAMP_MAX
;

2159 
	`msg_¥öt
 ("YourÜamp overflows, spilling oil onÅhe ground.");

2160 
	`msg_¥öt
("YourÜamp is full.");

2162 i‡(
i_±r
->
p1
 > 
OBJ_LAMP_MAX
/2)

2163 
	`msg_¥öt
 ("YourÜamp is moreÅhan half full.");

2164 i‡(
i_±r
->
p1
 =
OBJ_LAMP_MAX
/2)

2165 
	`msg_¥öt
 ("YourÜamp is half full.");

2167 
	`msg_¥öt
 ("YourÜamp isÜessÅhan half full.");

2168 
	`desc_ªmaö
(
i
);

2169 
	`öví_de°roy
(
i
);

2171 
	}
}

	@eat.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

12 
	~"exã∫s.h
"

14 #ifde‡
USG


15 
	~<°rög.h
>

17 
	~<°rögs.h
>

21 
	$ót
()

23 
öt32u
 
i
;

24 
j
, 
k
, 
ôem_vÆ
, 
idít
;

25 
Êags
 *
f_±r
;

26 
misc
 *
m_±r
;

27 
öví_ty≥
 *
i_±r
;

28 #ifde‡
ATARIST_MWC


29 
öt32u
 
hﬁdî
;

32 
‰ì_tu∫_Êag
 = 
TRUE
;

33 i‡(
öví_˘r
 == 0)

34 
	`msg_¥öt
("But youáreÇot carryingánything.");

35 i‡(!
	`föd_ønge
(
TV_FOOD
, 
TV_NEVER
, &
j
, &
k
))

36 
	`msg_¥öt
("YouáreÇot carryingány food.");

37 i‡(
	`gë_ôem
(&
ôem_vÆ
, "E© wh©?", 
j
, 
k
, 
CNIL
, CNIL))

39 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

40 
‰ì_tu∫_Êag
 = 
FALSE
;

41 
i
 = 
i_±r
->
Êags
;

42 
idít
 = 
FALSE
;

43 
i
 != 0)

45 
j
 = 
	`bô_pos
(&
i
) + 1;

47 
j
)

50 
f_±r
 = &
py
.
Êags
;

51 
f_±r
->
pois⁄ed
 +
	`øndöt
(10Ë+ 
i_±r
->
Àvñ
;

52 
idít
 = 
TRUE
;

55 
f_±r
 = &
py
.
Êags
;

56 
f_±r
->
blöd
 +
	`øndöt
(250Ë+ 10*
i_±r
->
Àvñ
 + 100;

57 
	`døw_ˇve
();

58 
	`msg_¥öt
("A veil of darkness surrounds you.");

59 
idít
 = 
TRUE
;

62 
f_±r
 = &
py
.
Êags
;

63 
f_±r
->
a‰aid
 +
	`øndöt
(10Ë+ 
i_±r
->
Àvñ
;

64 
	`msg_¥öt
("You feelÅerrified!");

65 
idít
 = 
TRUE
;

68 
f_±r
 = &
py
.
Êags
;

69 
f_±r
->
c⁄fu£d
 +
	`øndöt
(10Ë+ 
i_±r
->
Àvñ
;

70 
	`msg_¥öt
("You feel drugged.");

71 
idít
 = 
TRUE
;

74 
f_±r
 = &
py
.
Êags
;

75 
f_±r
->
image
 +
	`øndöt
(200Ë+ 25*
i_±r
->
Àvñ
 + 200;

76 
	`msg_¥öt
("You feel drugged.");

77 
idít
 = 
TRUE
;

80 
idít
 = 
	`cuª_pois⁄
();

83 
idít
 = 
	`cuª_blöd√ss
();

86 
f_±r
 = &
py
.
Êags
;

87 i‡(
f_±r
->
a‰aid
 > 1)

89 
f_±r
->
a‰aid
 = 1;

90 
idít
 = 
TRUE
;

94 
idít
 = 
	`cuª_c⁄fusi⁄
();

97 
idít
 = 
TRUE
;

98 
	`lo£_°r
();

101 
idít
 = 
TRUE
;

102 
	`lo£_c⁄
();

106 
idít
 = 
TRUE
;

107 
	`lo£_öt
();

110 
idít
 = 
TRUE
;

111 
	`lo£_wis
();

114 
idít
 = 
TRUE
;

115 
	`lo£_dex
();

118 
idít
 = 
TRUE
;

119 
	`lo£_chr
();

123 i‡(
	`ªs_°©
 (
A_STR
))

125 
	`msg_¥öt
("You feel your strengthÑeturning.");

126 
idít
 = 
TRUE
;

130 i‡(
	`ªs_°©
 (
A_CON
))

132 
	`msg_¥öt
("You feel your healthÑeturning.");

133 
idít
 = 
TRUE
;

137 i‡(
	`ªs_°©
 (
A_INT
))

139 
	`msg_¥öt
("Your head spinsá moment.");

140 
idít
 = 
TRUE
;

144 i‡(
	`ªs_°©
 (
A_WIS
))

146 
	`msg_¥öt
("You feel your wisdomÑeturning.");

147 
idít
 = 
TRUE
;

151 i‡(
	`ªs_°©
 (
A_DEX
))

153 
	`msg_¥öt
("You feel more dextrous.");

154 
idít
 = 
TRUE
;

158 i‡(
	`ªs_°©
 (
A_CHR
))

160 
	`msg_¥öt
("Your skin stops itching.");

161 
idít
 = 
TRUE
;

165 
idít
 = 
	`hp_∂ayî
(
	`øndöt
(6));

168 
idít
 = 
	`hp_∂ayî
(
	`øndöt
(12));

171 
idít
 = 
	`hp_∂ayî
(
	`øndöt
(18));

175 
idít
 = 
	`hp_∂ayî
(
	`damrﬁl
(3, 6));

179 
idít
 = 
	`hp_∂ayî
(
	`damrﬁl
(3, 12));

182 
	`èke_hô
(
	`øndöt
(18), "poisonous food.");

183 
idít
 = 
TRUE
;

187 
	`èke_hô
(
	`øndöt
(8), "poisonous food.");

188 
idít
 = 
TRUE
;

191 
	`èke_hô
(
	`damrﬁl
(2, 8), "poisonous food.");

192 
idít
 = 
TRUE
;

195 
	`èke_hô
(
	`damrﬁl
(3, 8), "poisonous food.");

196 
idít
 = 
TRUE
;

200 
	`msg_¥öt
("InternalÉrror inÉat()");

205 i‡(
idít
)

207 i‡(!
	`known1_p
(
i_±r
))

210 
m_±r
 = &
py
.
misc
;

212 
m_±r
->
exp
 +(
i_±r
->
Àvñ
 + (m_±r->
Àv
 >> 1)) / m_ptr->lev;

213 
	`¥t_ex≥rõn˚
();

215 
	`idítify
 (&
ôem_vÆ
);

216 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

219 i‡(!
	`known1_p
(
i_±r
))

220 
	`ßm∂e
 (
i_±r
);

221 
	`add_food
(
i_±r
->
p1
);

222 #ifde‡
ATARIST_MWC


223 
py
.
Êags
.
°©us
 &~(
hﬁdî
 = 
PY_WEAK
|
PY_HUNGRY
);

225 
py
.
Êags
.
°©us
 &~(
PY_WEAK
|
PY_HUNGRY
);

227 
	`¥t_hungî
();

228 
	`desc_ªmaö
(
ôem_vÆ
);

229 
	`öví_de°roy
(
ôem_vÆ
);

231 
	}
}

	@externs.h

11 
	~<î∫o.h
>

15 #ifde‡
ATARIST_TC


16 
	#LINT_ARGS


	)

23 #i‚de‡
NeXT


24 #i‚de‡
AMIGA


25 #i‡!
deföed
(
©¨i°
Ë|| !deföed(
__GNUC__
)

26 #i‚de‡
__TURBOC__


27 #i‡
deföed
(
USG
Ë|| deföed(
DGUX
)

28 
•rötf
();

30 *
•rötf
();

39 #i‚de‡
VMS


40 
î∫o
;

43 *
c›yright
[5];

47 
hack_m⁄±r
;

49 
vty≥
 
dõd_‰om
;

50 
vty≥
 
ßvefûe
;

51 
öt32
 
búth_d©e
;

54 
rogue_like_comm™ds
;

55 
föd_cut
;

56 
föd_examöe
;

57 
föd_¥£lf
;

58 
föd_bound
;

59 
¥om±_ˇºy_Êag
;

60 
show_weight_Êag
;

61 
highlight_£ams
;

62 
föd_ign‹e_do‹s
;

63 
sound_bìp_Êag
;

64 
di•œy_cou¡s
;

67 
√w_Àvñ_Êag
;

68 
ãÀp‹t_Êag
;

69 
eof_Êag
;

70 
∂ayî_light
;

71 
föd_Êag
;

72 
‰ì_tu∫_Êag
;

73 
wóp⁄_hóvy
;

74 
∑ck_hóvy
;

75 
doög_öví
;

76 
s¸ìn_ch™ge
;

78 
ch¨a˘î_gíî©ed
;

79 
ch¨a˘î_ßved
;

80 #i‡
deföed
(
STDIO_LOADED
)

81 
FILE
 *
highsc‹e_Â
;

83 
comm™d_cou¡
;

84 
deÁu…_dú
;

85 
öt16
 
nosc‹e
;

86 
öt32u
 
øndes_£ed
;

87 
öt32u
 
town_£ed
;

88 
öt16
 
dun_Àvñ
;

89 
öt16
 
missûe_˘r
;

90 
msg_Êag
;

91 
vty≥
 
ﬁd_msg
[
MAX_SAVE_MSG
];

92 
öt16
 
œ°_msg
;

93 
dóth
;

94 
öt32
 
tu∫
;

95 
wiz¨d
;

96 
to_be_wiz¨d
;

97 
öt16
 
∑nic_ßve
;

99 
waô_f‹_m‹e
;

101 
days
[7][29];

102 
˛osög_Êag
;

104 
öt16
 
cur_height
, 
cur_width
;

106 
öt16
 
max_∑√l_rows
, 
max_∑√l_cﬁs
;

107 
∑√l_row
, 
∑√l_cﬁ
;

108 
∑√l_row_mö
, 
∑√l_row_max
;

109 
∑√l_cﬁ_mö
, 
∑√l_cﬁ_max
;

110 
∑√l_cﬁ_¥t
, 
∑√l_row_¥t
;

113 #ifde‡
MAC


114 
ˇve_ty≥
 (*
ˇve
)[
MAX_WIDTH
];

116 
ˇve_ty≥
 
ˇve
[
MAX_HEIGHT
][
MAX_WIDTH
];

120 
∂ayî_ty≥
 
py
;

121 #ifde‡
MACGAME


122 *(*
∂ayî_tôÀ
)[
MAX_PLAYER_LEVEL
];

123 
ø˚_ty≥
 *
ø˚
;

124 
background_ty≥
 *
background
;

126 *
∂ayî_tôÀ
[
MAX_CLASS
][
MAX_PLAYER_LEVEL
];

127 
ø˚_ty≥
 
ø˚
[
MAX_RACES
];

128 
background_ty≥
 
background
[
MAX_BACKGROUND
];

130 
öt32u
 
∂ayî_exp
[
MAX_PLAYER_LEVEL
];

131 
öt16u
 
∂ayî_hp
[
MAX_PLAYER_LEVEL
];

132 
öt16
 
ch¨_row
;

133 
öt16
 
ch¨_cﬁ
;

135 
öt8u
 
rgﬁd_adj
[
MAX_RACES
][MAX_RACES];

137 
˛ass_ty≥
 
˛ass
[
MAX_CLASS
];

138 
öt16
 
˛ass_Àvñ_adj
[
MAX_CLASS
][
MAX_LEV_ADJ
];

141 #ifde‡
MACGAME


142 
•ñl_ty≥
 (*
magic_•ñl
)[31];

144 
•ñl_ty≥
 
magic_•ñl
[
MAX_CLASS
-1][31];

146 *
•ñl_«mes
[62];

147 
öt32u
 
•ñl_À¨√d
;

148 
öt32u
 
•ñl_w‹ked
;

149 
öt32u
 
•ñl_f‹gŸãn
;

150 
öt8u
 
•ñl_‹dî
[32];

151 
öt16u
 
∂ayî_öô
[
MAX_CLASS
][5];

152 
öt16
 
tŸÆ_wö√r
;

153 
öt32
 
max_sc‹e
;

156 #ifde‡
MACGAME


157 
ow√r_ty≥
 *
ow√rs
;

159 
ow√r_ty≥
 
ow√rs
[
MAX_OWNERS
];

161 #ifde‡
MAC


162 
°‹e_ty≥
 *
°‹e
;

164 
°‹e_ty≥
 
°‹e
[
MAX_STORES
];

166 
öt16u
 
°‹e_choi˚
[
MAX_STORES
][
STORE_CHOICES
];

167 #i‚de‡
MAC


168 (*
°‹e_buy
[
MAX_STORES
])();

172 #ifde‡
MACGAME


173 
åósuª_ty≥
 *
obje˘_li°
;

175 
åósuª_ty≥
 
obje˘_li°
[
MAX_OBJECTS
];

177 
öt8u
 
obje˘_idít
[
OBJECT_IDENT_SIZE
];

178 
öt16
 
t_Àvñ
[
MAX_OBJ_LEVEL
+1];

179 
öví_ty≥
 
t_li°
[
MAX_TALLOC
];

180 
öví_ty≥
 
övít‹y
[
INVEN_ARRAY_SIZE
];

181 *
•ecül_«mes
[
SN_ARRAY_SIZE
];

182 
öt16
 
s‹ãd_obje˘s
[
MAX_DUNGEON_OBJ
];

183 
öt16
 
öví_˘r
;

184 
öt16
 
öví_weight
;

185 
öt16
 
equù_˘r
;

186 
öt16
 
t˝å
;

189 #ifde‡
MACGAME


190 
¸ótuª_ty≥
 *
c_li°
;

192 
¸ótuª_ty≥
 
c_li°
[
MAX_CREATURES
];

194 
m⁄°î_ty≥
 
m_li°
[
MAX_MALLOC
];

195 
öt16
 
m_Àvñ
[
MAX_MONS_LEVEL
+1];

196 
m_©èck_ty≥
 
m⁄°î_©ècks
[
N_MONS_ATTS
];

197 #ifde‡
MAC


198 
ªˇŒ_ty≥
 *
c_ªˇŒ
;

200 
ªˇŒ_ty≥
 
c_ªˇŒ
[
MAX_CREATURES
];

202 
m⁄°î_ty≥
 
bœnk_m⁄°î
;

203 
öt16
 
mÂå
;

204 
öt16
 
m⁄_tŸ_mu…
;

207 #ifde‡
MACGAME


208 **
cﬁ‹s
;

209 **
mushrooms
;

210 **
woods
;

211 **
mëÆs
;

212 **
rocks
;

213 **
amuÀts
;

214 **
syŒabÀs
;

216 *
cﬁ‹s
[
MAX_COLORS
];

217 *
mushrooms
[
MAX_MUSH
];

218 *
woods
[
MAX_WOODS
];

219 *
mëÆs
[
MAX_METALS
];

220 *
rocks
[
MAX_ROCKS
];

221 *
amuÀts
[
MAX_AMULETS
];

222 *
syŒabÀs
[
MAX_SYLLABLES
];

225 
öt8u
 
blows_èbÀ
[7][6];

227 
öt16u
 
n‹mÆ_èbÀ
[
NORMAL_TABLE_SIZE
];

233 
œ°_comm™d
;

236 
light_Êag
;

238 #ifde‡
MSDOS


239 
öt8u
 
Êo‹sym
, 
wÆlsym
;

240 
™si
, 
ßvïrom±
;

241 
m‹üt›
[], 
m‹üßv
[];

247 #i‡
deföed
(
LINT_ARGS
)

255 #ifde‡
ATARI_ST


257 
check_öput
(
mi¸o£c
);

258 
u£r_«me
(* 
buf
);

259 
ac˚ss
(* 
«me
, 
dum
);

260 
chmod
(* 
«me
, 
mode
);

264 
¸óã_ch¨a˘î
();

267 
upd©e_m⁄
();

268 
mu…ùly_m⁄°î
(, , , );

269 
¸ótuªs
();

272 
di•œy_sc‹es
();

273 
du∂iˇã_ch¨a˘î
();

274 
öt32
 
tŸÆ_poöts
();

275 
exô_game
();

278 
is_a_vowñ
();

279 
magic_öô
();

280 
öt16
 
obje˘_off£t
(
öví_ty≥
 *);

281 
known1
(
öví_ty≥
 *);

282 
known1_p
(
öví_ty≥
 *);

283 
known2
(
öví_ty≥
 *);

284 
known2_p
(
öví_ty≥
 *);

285 
˛ór_known2
(
öví_ty≥
 *);

286 
˛ór_em±y
(
öví_ty≥
 *);

287 
°‹e_bought
(
öví_ty≥
 *);

288 
°‹e_bought_p
(
öví_ty≥
 *);

289 
ßm∂e
(
öví_ty≥
 *);

290 
idítify
(*);

291 
unmagic_«me
(
öví_ty≥
 *);

292 
objdes
(*, 
öví_ty≥
 *, );

293 
övc›y
(
öví_ty≥
 *, );

294 
desc_ch¨ges
();

295 
desc_ªmaö
();

298 
dunge⁄
();

301 
ót
();

304 
öô_sc‹efûe
();

305 
ªad_times
();

306 
hñpfûe
(*);

307 
¥öt_obje˘s
();

308 #ifde‡
MAC


309 
fûe_ch¨a˘î
();

311 
fûe_ch¨a˘î
(*);

315 
gíî©e_ˇve
();

317 #ifde‡
VMS


319 
kbhô
 ();

320 
u£r_«me
 (*);

321 
vms_¸mode
 ();

322 
vms_no¸mode
 ();

323 
›ígëch
 ();

324 
˛o£gëch
 ();

325 
vms_gëch
 ();

329 
idít_ch¨
();

332 #ifde‡
SIGTSTP


333 
su•íd
();

335 
öô_cur£s
();

336 
m‹üãrm
();

337 
put_buf„r
(*, , );

338 
put_qio
();

339 
ª°‹e_ãrm
();

340 
shñl_out
();

341 
ökey
();

342 
Êush
();

343 
îa£_löe
(, );

344 
˛ór_s¸ìn
();

345 
˛ór_‰om
();

346 
¥öt
(, , );

347 
move_curs‹_ªœtive
(, );

348 
cou¡_msg_¥öt
(*);

349 
¥t
(*, , );

350 
move_curs‹
(, );

351 
msg_¥öt
(*);

352 
gë_check
(*);

353 
gë_com
(*, *);

354 
gë_°rög
(*, , , );

355 
∑u£_löe
();

356 
∑u£_exô
(, );

357 
ßve_s¸ìn
();

358 
ª°‹e_s¸ìn
();

359 
bñl
();

360 
s¸ìn_m≠
();

363 
ˇ°
();

366 
maö
(, **);

369 
öô_£eds
(
öt32u
);

370 
£t_£ed
(
öt32u
);

371 
ª£t_£ed
();

372 
check_time
();

373 
øndöt
();

374 
øndn‹
(, );

375 
bô_pos
(
öt32u
 *);

376 
ö_bounds
(, );

377 
∑√l_bounds
();

378 
gë_∑√l
(, , );

379 
∑√l_c⁄èös
(, );

380 
di°™˚
(, , , );

381 
√xt_to_wÆl
(, );

382 
√xt_to_c‹r
(, );

383 
damrﬁl
(, );

384 
pdamrﬁl
(*);

385 
los
(, , , );

386 
loc_symbﬁ
(, );

387 
ã°_light
(, );

388 
¥t_m≠
();

389 
com∑˘_m⁄°îs
();

390 
add_food
();

391 
p›m
();

392 
max_hp
(*);

393 
∂a˚_m⁄°î
(, , , );

394 
∂a˚_wö_m⁄°î
();

395 
gë_m⁄s_num
();

396 
Æloc_m⁄°î
(, , );

397 
summ⁄_m⁄°î
(* ,*, );

398 
summ⁄_undód
(*, *);

399 
p›t
();

400 
pusht
(
öt8u
);

401 
magik
();

402 
m_b⁄us
(, , );

405 
magic_åósuª
(, );

406 
£t_›ti⁄s
();

409 
∂a˚_å≠
(, , );

410 
∂a˚_rubbÀ
(, );

411 
∂a˚_gﬁd
(, );

412 
gë_obj_num
(, );

413 
∂a˚_obje˘
(, , );

414 
Æloc_obje˘
((*)(), , );

415 
øndom_obje˘
(, , );

416 
˙v_°©
(
öt8u
, *);

417 
¥t_°©
();

418 
¥t_fõld
(*, , );

419 
°©_adj
();

420 
chr_adj
();

421 
c⁄_adj
();

422 *
tôÀ_°rög
();

423 
¥t_tôÀ
();

424 
¥t_Àvñ
();

425 
¥t_cm™a
();

426 
¥t_mhp
();

427 
¥t_chp
();

428 
¥t_∑c
();

429 
¥t_gﬁd
();

430 
¥t_dïth
();

431 
¥t_hungî
();

432 
¥t_blöd
();

433 
¥t_c⁄fu£d
();

434 
¥t_a‰aid
();

435 
¥t_pois⁄ed
();

436 
¥t_°©e
();

437 
¥t_•ìd
();

438 
¥t_°udy
();

439 
¥t_wö√r
();

440 
öt8u
 
modify_°©
(, 
öt16
);

441 
£t_u£_°©
();

442 
öc_°©
();

443 
dec_°©
();

444 
ªs_°©
();

445 
b°_°©
(, );

446 
tohô_adj
();

447 
tﬂc_adj
();

448 
todis_adj
();

449 
todam_adj
();

450 
¥t_°©_block
();

451 
døw_ˇve
();

452 
put_ch¨a˘î
();

453 
put_°©s
();

454 *
likît
(, );

455 
put_misc1
();

456 
put_misc2
();

457 
put_misc3
();

458 
di•œy_ch¨
();

459 
gë_«me
();

460 
ch™ge_«me
();

461 
öví_de°roy
();

462 
èke_⁄e_ôem
(
öví_ty≥
 *, inven_type *);

463 
öví_dr›
(, );

464 
öví_damage
((*)(), );

465 
weight_limô
();

466 
öví_check_num
(
öví_ty≥
 *);

467 
öví_check_weight
(
öví_ty≥
 *);

468 
check_°ªngth
();

469 
öví_ˇºy
(
öví_ty≥
 *);

470 
•ñl_ch™˚
();

471 
¥öt_•ñls
(*, , , );

472 
gë_•ñl
(*, , *, *, *, );

473 
ˇlc_•ñls
();

474 
gaö_•ñls
();

475 
ˇlc_m™a
();

476 
¥t_ex≥rõn˚
();

477 
ˇlc_hôpoöts
();

478 
ö£π_°r
(*, *, *);

479 
ö£π_ um
(*, *, 
öt32
, );

480 
íãr_wiz_mode
();

481 
©èck_blows
(, *);

482 
tŸ_dam
(
öví_ty≥
 *, , );

483 
¸ôiˇl_blow
(, , , );

484 
mmove
(, *, *);

485 
∂ayî_ßves
();

486 
föd_ønge
(, , *, *);

487 
ãÀp‹t
();

490 
s¸ibe_obje˘
();

491 
add_ös¸ibe
(
öví_ty≥
 *, 
öt8u
);

492 
ös¸ibe
(
öví_ty≥
 *, *);

493 
check_võw
();

498 
ch™ge_•ìd
();

499 
py_b⁄u£s
(
öví_ty≥
 *, );

500 
ˇlc_b⁄u£s
();

501 
show_öví
(, , , , *);

502 *
des¸ibe_u£
();

503 
show_equù
(, );

504 
èkeoff
(, );

505 
vîify
(*, );

506 
öví_comm™d
();

507 
gë_ôem
(*, *, , , *, *);

508 
no_light
();

509 
gë_dú
(*, *);

510 
gë_Ældú
(*, *);

511 
move_ªc
(, , , );

512 
light_room
(, );

513 
lôe_•Ÿ
(, );

514 
move_light
(, , , );

515 
di°urb
(, );

516 
£¨ch_⁄
();

517 
£¨ch_off
();

518 
ª°
();

519 
ª°_off
();

520 
ã°_hô
(, , , , );

521 
èke_hô
(, *);

524 
ch™ge_å≠
(, );

525 
£¨ch
(, , );

526 
föd_öô
();

527 
föd_run
();

528 
íd_föd
();

529 
¨ó_af„˘
(, , );

530 
möus_ac
(
öt32u
);

531 
c‹rode_gas
(*);

532 
pois⁄_gas
(, *);

533 
fúe_dam
(, *);

534 
cﬁd_dam
(, *);

535 
light_dam
(, *);

536 
acid_dam
(, *);

539 
ˇ°_•ñl
(* ,, *, *);

540 
dñëe_m⁄°î
();

541 
fix1_dñëe_m⁄°î
();

542 
fix2_dñëe_m⁄°î
();

543 
dñëe_obje˘
(, );

544 
öt32u
 
m⁄°î_dóth
(, , int32u);

545 
m⁄_èke_hô
(, );

546 
py_©èck
(, );

547 
move_ch¨
(, );

548 
che°_å≠
(, );

549 
›íobje˘
();

550 
˛o£obje˘
();

551 
twÆl
(, , , );

554 
tu¬ñ
();

555 
dißrm_å≠
();

556 
look
();

557 
throw_obje˘
();

558 
bash
();

560 #ifde‡
MSDOS


562 
u£r_«me
(*);

563 *
gëlogö
();

564 #ifde‡
__TURBOC__


565 
¶ìp
();

567 
¶ìp
();

569 
îr‹
(*, ...);

570 
w¨n
(*, ...);

571 
msdos_öô
();

572 
msdos_øw
();

573 
msdos_n‹aw
();

574 
bios_gëch
();

575 
msdos_gëch
();

576 
bios_˛ór
();

577 
msdos_öåo
();

578 
bios_˛ór
();

582 
quaff
();

585 
¥ay
();

588 
boﬁ_roff_ªˇŒ
();

589 
roff_ªˇŒ
();

592 
öt32u
 
gë_∫d_£ed
();

593 
£t_∫d_£ed
(
öt32u
);

594 
öt32
 
∫d
();

597 #ifde‡
MAC


598 
ßve_ch¨
();

600 
ßve_ch¨
();

602 
_ßve_ch¨
(*);

603 
gë_ch¨
(*);

604 #i‡
deföed
(
STDIO_LOADED
)

605 
£t_fûïå
(
FILE
 *);

607 
wr_highsc‹e
(
high_sc‹es
 *);

608 
rd_highsc‹e
(
high_sc‹es
 *);

611 
ªad_s¸ﬁl
();

614 
£t_room
();

615 
£t_c‹r
();

616 
£t_Êo‹
();

617 
£t_c‹rodes
(
öví_ty≥
 *);

618 
£t_ÊammabÀ
(
öví_ty≥
 *);

619 
£t_‰o°_de°roy
(
öví_ty≥
 *);

620 
£t_acid_af„˘
(
öví_ty≥
 *);

621 
£t_lighäög_de°roy
(
öví_ty≥
 *);

622 
£t_nuŒ
(
öví_ty≥
 *);

623 
£t_acid_de°roy
(
öví_ty≥
 *);

624 
£t_fúe_de°roy
(
öví_ty≥
 *);

625 
£t_œrge
(
öví_ty≥
 *);

626 
gíîÆ_°‹e
();

627 
¨m‹y
();

628 
wóp⁄smôh
();

629 
ãm∂e
();

630 
Æchemi°
();

631 
magic_sh›
();

632 #ifde‡
MAC


633 
°‹e_buy
(, );

637 
nosig«ls
();

638 
sig«ls
();

639 
öô_sig«ls
();

640 
ign‹e_sig«ls
();

641 
deÁu…_sig«ls
();

642 
ª°‹e_sig«ls
();

645 
m⁄°î_«me
(*, 
m⁄°î_ty≥
 *, 
¸ótuª_ty≥
 *);

646 
lowî_m⁄°î_«me
(*, 
m⁄°î_ty≥
 *,

647 
¸ótuª_ty≥
 *);

648 
¶ìp_m⁄°îs1
(, );

649 
dëe˘_åósuª
();

650 
dëe˘_obje˘
();

651 
dëe˘_å≠
();

652 
dëe˘_sdo‹
();

653 
dëe˘_övisibÀ
();

654 
light_¨ó
(, );

655 
u∆ight_¨ó
(, );

656 
m≠_¨ó
();

657 
idít_•ñl
();

658 
aggøv©e_m⁄°î
();

659 
å≠_¸óti⁄
();

660 
do‹_¸óti⁄
();

661 
td_de°roy
();

662 
dëe˘_m⁄°îs
();

663 
light_löe
(, , );

664 
°¨lôe
(, );

665 
dißrm_Æl
(, , );

666 
gë_Êags
(, 
öt32u
 *, *, (**)());

667 
fúe_bﬁt
(, , , , , *);

668 
fúe_bÆl
(, , , , , *);

669 
bª©h
(, , , , *, );

670 
ªch¨ge
();

671 
hp_m⁄°î
(, , , );

672 
døö_li„
(, , );

673 
•ìd_m⁄°î
(, , , );

674 
c⁄fu£_m⁄°î
(, , );

675 
¶ìp_m⁄°î
(, , );

676 
wÆl_to_mud
(, , );

677 
td_de°roy2
(, , );

678 
pﬁy_m⁄°î
(, , );

679 
buûd_wÆl
(, , );

680 
˛⁄e_m⁄°î
(, , );

681 
ãÀp‹t_away
(, );

682 
ãÀp‹t_to
(, );

683 
ãÀp‹t_m⁄°î
(, , );

684 
mass_gíocide
();

685 
gíocide
();

686 
•ìd_m⁄°îs
();

687 
¶ìp_m⁄°îs2
();

688 
mass_pﬁy
();

689 
dëe˘_evû
();

690 
hp_∂ayî
();

691 
cuª_c⁄fusi⁄
();

692 
cuª_blöd√ss
();

693 
cuª_pois⁄
();

694 
ªmove_„¨
();

695 
óπhquake
();

696 
¥Ÿe˘_evû
();

697 
¸óã_food
();

698 
di•ñ_¸ótuª
(, );

699 
tu∫_undód
();

700 
w¨dög_glyph
();

701 
lo£_°r
();

702 
lo£_öt
();

703 
lo£_wis
();

704 
lo£_dex
();

705 
lo£_c⁄
();

706 
lo£_chr
();

707 
lo£_exp
(
öt32
);

708 
¶ow_pois⁄
();

709 
bÀss
();

710 
dëe˘_öv2
();

711 
de°roy_¨ó
(, );

712 
ích™t
(
öt16
 *, int16);

713 
ªmove_cur£
();

714 
ª°‹e_Àvñ
();

717 
u£
();

720 
öt32
 
ôem_vÆue
(
öví_ty≥
 *);

721 
öt32
 
£Œ_¥i˚
(, i¡32 *, i¡32 *, 
öví_ty≥
 *);

722 
°‹e_check_num
(
öví_ty≥
 *, );

723 
°‹e_ˇºy
(, *, 
öví_ty≥
 *);

724 
°‹e_de°roy
(, , );

725 
°‹e_öô
();

726 
°‹e_maöt
();

727 
n⁄ìdtob¨gaö
(, 
öt32
);

728 
upd©eb¨gaö
(, 
öt32
, int32);

731 
íãr_°‹e
();

737 #ifde‡
VMS


739 
uexô
 ();

742 #ifde‡
unix


744 
check_öput
();

746 
sy°em_cmd
(*);

748 
u£r_«me
(*);

749 
tûde
(*, *);

752 #i‡
deföed
(
STDIO_LOADED
)

753 
FILE
 *
tf›í
(*, *);

755 
t›í
(*, , );

761 
aim
();

764 
wiz¨d_light
();

765 
ch™ge_ch¨a˘î
();

766 
wiz¨d_¸óã
();

771 #ifde‡
ATARI_ST


773 
check_öput
 ();

774 
u£r_«me
 ();

775 
ac˚ss
 ();

776 
chmod
 ();

780 
¸óã_ch¨a˘î
();

783 
upd©e_m⁄
();

784 
mu…ùly_m⁄°î
();

785 
¸ótuªs
();

788 
di•œy_sc‹es
();

789 
du∂iˇã_ch¨a˘î
();

790 
öt32
 
tŸÆ_poöts
();

791 
exô_game
();

794 
is_a_vowñ
();

795 
magic_öô
();

796 
öt16
 
obje˘_off£t
();

797 
known1
();

798 
known1_p
();

799 
known2
();

800 
known2_p
();

801 
˛ór_known2
();

802 
˛ór_em±y
();

803 
°‹e_bought
();

804 
°‹e_bought_p
();

805 
ßm∂e
();

806 
idítify
();

807 
unmagic_«me
();

808 
objdes
();

809 
övc›y
();

810 
desc_ch¨ges
();

811 
desc_ªmaö
();

814 
dunge⁄
();

817 
ót
();

820 
öô_sc‹efûe
();

821 
ªad_times
();

822 
hñpfûe
();

823 
¥öt_obje˘s
();

824 
fûe_ch¨a˘î
();

827 
gíî©e_ˇve
();

829 #ifde‡
VMS


831 
kbhô
 ();

832 
u£r_«me
 ();

833 
vms_¸mode
 ();

834 
vms_no¸mode
 ();

835 
›ígëch
 ();

836 
˛o£gëch
 ();

837 
vms_gëch
 ();

841 
idít_ch¨
();

844 #ifde‡
SIGTSTP


845 
su•íd
();

847 
öô_cur£s
();

848 
m‹üãrm
();

849 
put_buf„r
();

850 
put_qio
();

851 
ª°‹e_ãrm
();

852 
shñl_out
();

853 
ökey
();

854 
Êush
();

855 
îa£_löe
();

856 
˛ór_s¸ìn
();

857 
˛ór_‰om
();

858 
¥öt
();

859 
move_curs‹_ªœtive
();

860 
cou¡_msg_¥öt
();

861 
¥t
();

862 
move_curs‹
();

863 
msg_¥öt
();

864 
gë_check
();

865 
gë_com
();

866 
gë_°rög
();

867 
∑u£_löe
();

868 
∑u£_exô
();

869 
ßve_s¸ìn
();

870 
ª°‹e_s¸ìn
();

871 
bñl
();

872 
s¸ìn_m≠
();

875 
ˇ°
();

878 
maö
();

881 
öô_£eds
();

882 
£t_£ed
();

883 
ª£t_£ed
();

884 
check_time
();

885 
øndöt
();

886 
øndn‹
();

887 
bô_pos
();

888 
ö_bounds
();

889 
∑√l_bounds
();

890 
gë_∑√l
();

891 
∑√l_c⁄èös
();

892 
di°™˚
();

893 
√xt_to_wÆls
();

894 
√xt_to_c‹r
();

895 
damrﬁl
();

896 
pdamrﬁl
();

897 
los
();

898 
loc_symbﬁ
();

899 
ã°_light
();

900 
¥t_m≠
();

901 
com∑˘_m⁄°îs
();

902 
add_food
();

903 
p›m
();

904 
max_hp
();

905 
∂a˚_m⁄°î
();

906 
∂a˚_wö_m⁄°î
();

907 
gë_m⁄s_num
();

908 
Æloc_m⁄°î
();

909 
summ⁄_m⁄°î
();

910 
summ⁄_undód
();

911 
p›t
();

912 
pusht
();

913 
magik
();

914 
m_b⁄us
();

917 
magic_åósuª
();

918 
£t_›ti⁄s
();

921 
∂a˚_å≠
();

922 
∂a˚_rubbÀ
();

923 
∂a˚_gﬁd
();

924 
gë_obj_num
();

925 
∂a˚_obje˘
();

926 
Æloc_obje˘
();

927 
øndom_obje˘
();

928 
˙v_°©
();

929 
¥t_°©
();

930 
¥t_fõld
();

931 
°©_adj
();

932 
chr_adj
();

933 
c⁄_adj
();

934 *
tôÀ_°rög
();

935 
¥t_tôÀ
();

936 
¥t_Àvñ
();

937 
¥t_cm™a
();

938 
¥t_mhp
();

939 
¥t_chp
();

940 
¥t_∑c
();

941 
¥t_gﬁd
();

942 
¥t_dïth
();

943 
¥t_hungî
();

944 
¥t_blöd
();

945 
¥t_c⁄fu£d
();

946 
¥t_a‰aid
();

947 
¥t_pois⁄ed
();

948 
¥t_°©e
();

949 
¥t_•ìd
();

950 
¥t_°udy
();

951 
¥t_wö√r
();

952 
öt8u
 
modify_°©
();

953 
£t_u£_°©
();

954 
öc_°©
();

955 
dec_°©
();

956 
ªs_°©
();

957 
b°_°©
();

958 
tohô_adj
();

959 
tﬂc_adj
();

960 
todis_adj
();

961 
todam_adj
();

962 
¥t_°©_block
();

963 
døw_ˇve
();

964 
put_ch¨a˘î
();

965 
put_°©s
();

966 *
likît
();

967 
put_misc1
();

968 
put_misc2
();

969 
put_misc3
();

970 
di•œy_ch¨
();

971 
gë_«me
();

972 
ch™ge_«me
();

973 
öví_de°roy
();

974 
èke_⁄e_ôem
();

975 
öví_dr›
();

976 
öví_damage
();

977 
weight_limô
();

978 
öví_check_num
();

979 
öví_check_weight
();

980 
check_°ªngth
();

981 
öví_ˇºy
();

982 
•ñl_ch™˚
();

983 
¥öt_•ñls
();

984 
gë_•ñl
();

985 
ˇlc_•ñls
();

986 
gaö_•ñls
();

987 
ˇlc_m™a
();

988 
¥t_ex≥rõn˚
();

989 
ˇlc_hôpoöts
();

990 
ö£π_°r
();

991 
ö£π_ um
();

992 
íãr_wiz_mode
();

993 
©èck_blows
();

994 
tŸ_dam
();

995 
¸ôiˇl_blow
();

996 
mmove
();

997 
∂ayî_ßves
();

998 
föd_ønge
();

999 
ãÀp‹t
();

1002 
s¸ibe_obje˘
();

1003 
add_ös¸ibe
();

1004 
ös¸ibe
();

1005 
check_võw
();

1010 
ch™ge_•ìd
();

1011 
py_b⁄u£s
();

1012 
ˇlc_b⁄u£s
();

1013 
show_öví
();

1014 *
des¸ibe_u£
();

1015 
show_equù
();

1016 
èkeoff
();

1017 
vîify
();

1018 
öví_comm™d
();

1019 
gë_ôem
();

1020 
no_light
();

1021 
gë_dú
();

1022 
gë_Ældú
();

1023 
move_ªc
();

1024 
light_room
();

1025 
lôe_•Ÿ
();

1026 
move_light
();

1027 
di°urb
();

1028 
£¨ch_⁄
();

1029 
£¨ch_off
();

1030 
ª°
();

1031 
ª°_off
();

1032 
ã°_hô
();

1033 
èke_hô
();

1036 
ch™ge_å≠
();

1037 
£¨ch
();

1038 
föd_öô
();

1039 
föd_run
();

1040 
íd_föd
();

1041 
¨ó_af„˘
();

1042 
möus_ac
();

1043 
c‹rode_gas
();

1044 
pois⁄_gas
();

1045 
fúe_dam
();

1046 
cﬁd_dam
();

1047 
light_dam
();

1048 
acid_dam
();

1051 
ˇ°_•ñl
();

1052 
dñëe_m⁄°î
();

1053 
fix1_dñëe_m⁄°î
();

1054 
fix2_dñëe_m⁄°î
();

1055 
dñëe_obje˘
();

1056 
öt32u
 
m⁄°î_dóth
();

1057 
m⁄_èke_hô
();

1058 
py_©èck
();

1059 
move_ch¨
();

1060 
che°_å≠
();

1061 
›íobje˘
();

1062 
˛o£obje˘
();

1063 
twÆl
();

1066 
tu¬ñ
();

1067 
dißrm_å≠
();

1068 
look
();

1069 
throw_obje˘
();

1070 
bash
();

1072 #ifde‡
MSDOS


1074 
u£r_«me
();

1075 *
gëlogö
();

1076 #ifde‡
__TURBOC__


1077 
¶ìp
();

1079 
¶ìp
();

1082 
îr‹
();

1083 
w¨n
();

1087 
îr‹
 (*
fmt
, ...);

1088 
w¨n
 (*
fmt
, ...);

1090 
msdos_öô
();

1091 
msdos_øw
();

1092 
msdos_n‹aw
();

1093 
bios_gëch
();

1094 
msdos_gëch
();

1095 
bios_˛ór
();

1096 
msdos_öåo
();

1097 
bios_˛ór
();

1101 
quaff
();

1104 
¥ay
();

1107 
boﬁ_roff_ªˇŒ
();

1108 
roff_ªˇŒ
();

1111 
öt32u
 
gë_∫d_£ed
();

1112 
£t_∫d_£ed
();

1113 
öt32
 
∫d
();

1116 
ßve_ch¨
();

1117 
_ßve_ch¨
();

1118 
gë_ch¨
();

1119 #i‡
deföed
(
STDIO_LOADED
)

1120 
£t_fûïå
();

1122 
wr_highsc‹e
();

1123 
rd_highsc‹e
();

1126 
ªad_s¸ﬁl
();

1129 
£t_room
();

1130 
£t_c‹r
();

1131 
£t_Êo‹
();

1132 
£t_c‹rodes
();

1133 
£t_ÊammabÀ
();

1134 
£t_‰o°_de°roy
();

1135 
£t_acid_af„˘
();

1136 
£t_lighäög_de°roy
();

1137 
£t_nuŒ
();

1138 
£t_acid_de°roy
();

1139 
£t_fúe_de°roy
();

1140 
£t_œrge
();

1141 
gíîÆ_°‹e
();

1142 
¨m‹y
();

1143 
wóp⁄smôh
();

1144 
ãm∂e
();

1145 
Æchemi°
();

1146 
magic_sh›
();

1147 #ifde‡
MAC


1148 
°‹e_buy
();

1152 
nosig«ls
();

1153 
sig«ls
();

1154 
öô_sig«ls
();

1155 
ign‹e_sig«ls
();

1156 
deÁu…_sig«ls
();

1157 
ª°‹e_sig«ls
();

1160 
m⁄°î_«me
();

1161 
lowî_m⁄°î_«me
();

1162 
¶ìp_m⁄°îs1
();

1163 
dëe˘_åósuª
();

1164 
dëe˘_obje˘
();

1165 
dëe˘_å≠
();

1166 
dëe˘_sdo‹
();

1167 
dëe˘_övisibÀ
();

1168 
light_¨ó
();

1169 
u∆ight_¨ó
();

1170 
m≠_¨ó
();

1171 
idít_•ñl
();

1172 
aggøv©e_m⁄°î
();

1173 
å≠_¸óti⁄
();

1174 
do‹_¸óti⁄
();

1175 
td_de°roy
();

1176 
dëe˘_m⁄°îs
();

1177 
light_löe
();

1178 
°¨lôe
();

1179 
dißrm_Æl
();

1180 
gë_Êags
();

1181 
fúe_bﬁt
();

1182 
fúe_bÆl
();

1183 
bª©h
();

1184 
ªch¨ge
();

1185 
hp_m⁄°î
();

1186 
døö_li„
();

1187 
•ìd_m⁄°î
();

1188 
c⁄fu£_m⁄°î
();

1189 
¶ìp_m⁄°î
();

1190 
wÆl_to_mud
();

1191 
td_de°roy2
();

1192 
pﬁy_m⁄°î
();

1193 
buûd_wÆl
();

1194 
˛⁄e_m⁄°î
();

1195 
ãÀp‹t_away
();

1196 
ãÀp‹t_to
();

1197 
ãÀp‹t_m⁄°î
();

1198 
mass_gíocide
();

1199 
gíocide
();

1200 
•ìd_m⁄°îs
();

1201 
¶ìp_m⁄°îs2
();

1202 
mass_pﬁy
();

1203 
dëe˘_evû
();

1204 
hp_∂ayî
();

1205 
cuª_c⁄fusi⁄
();

1206 
cuª_blöd√ss
();

1207 
cuª_pois⁄
();

1208 
ªmove_„¨
();

1209 
óπhquake
();

1210 
¥Ÿe˘_evû
();

1211 
¸óã_food
();

1212 
di•ñ_¸ótuª
();

1213 
tu∫_undód
();

1214 
w¨dög_glyph
();

1215 
lo£_°r
();

1216 
lo£_öt
();

1217 
lo£_wis
();

1218 
lo£_dex
();

1219 
lo£_c⁄
();

1220 
lo£_chr
();

1221 
lo£_exp
();

1222 
¶ow_pois⁄
();

1223 
bÀss
();

1224 
dëe˘_öv2
();

1225 
de°roy_¨ó
();

1226 
ích™t
();

1227 
ªmove_cur£
();

1228 
ª°‹e_Àvñ
();

1231 
u£
();

1234 
öt32
 
ôem_vÆue
();

1235 
öt32
 
£Œ_¥i˚
();

1236 
°‹e_check_num
();

1237 
°‹e_ˇºy
();

1238 
°‹e_de°roy
();

1239 
°‹e_öô
();

1240 
°‹e_maöt
();

1241 
n⁄ìdtob¨gaö
();

1242 
upd©eb¨gaö
();

1245 
íãr_°‹e
();

1251 #ifde‡
VMS


1253 
uexô
 ();

1256 #ifde‡
unix


1258 
check_öput
();

1260 
sy°em_cmd
();

1262 
u£r_«me
();

1263 
tûde
();

1266 #i‡
deföed
(
STDIO_LOADED
)

1267 
FILE
 *
tf›í
();

1269 
t›í
();

1275 
aim
();

1278 
wiz¨d_light
();

1279 
ch™ge_ch¨a˘î
();

1280 
wiz¨d_¸óã
();

1284 #ifde‡
unix


1286 
	#›í
 
t›í


	)

1287 
	#f›í
 
tf›í


	)

1291 #i‡
deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

1292 
exãnded_fûe_«me
[80];

	@files.c

9 
	~<°dio.h
>

11 #i‚de‡
STDIO_LOADED


12 
	#STDIO_LOADED


	)

17 
	~<î∫o.h
>

20 #ifde‡
__TURBOC__


21 
	~<io.h
>

22 
	~<°dlib.h
>

25 
	~"c⁄fig.h
"

26 
	~"c⁄°™t.h
"

27 
	~"ty≥s.h
"

29 #i‡
deföed
(
GEMDOS
Ë&& (
__STDC__
 =0Ë&& !deföed(
ATARIST_TC
)

30 
	~<ac˚ss.h
>

31 *
°rˇt
();

34 #ifde‡
VMS


35 
	~<°rög.h
>

36 
	~<fûe.h
>

38 #ifde‡
USG


39 #i‚de‡
ATARIST_MWC


40 
	~<°rög.h
>

41 #i‚de‡
ATARIST_TC


42 
	~<f˙é.h
>

46 
	~<°rögs.h
>

47 
	~<sys/fûe.h
>

49 #i‡
deföed
(
u…rix
Ë|| deföed(
USG
)

50 
exô
();

57 
	~"exã∫s.h
"

59 #ifde‡
ATARIST_TC


61 
	~<°dlib.h
>

64 #ifde‡
MAC


65 
	~"S¸nMgr.h
"

66 
	#GNRL_ALRT
 1024

	)

76 
	$öô_sc‹efûe
()

78 #ifde‡
MAC


79 
	`≠∂dúe˘‹y
 ();

82 #i‡
	`deföed
(
©¨i°
Ë|| deföed(
ATARI_ST
Ë|| deföed(
MAC
)

83 
highsc‹e_Â
 = 
	`f›í
(
MORIA_TOP
, "rb+");

85 
highsc‹e_Â
 = 
	`f›í
(
MORIA_TOP
, "r+");

88 i‡(
highsc‹e_Â
 =
NULL
)

90 #ifde‡
MAC


91 
highsc‹e_Â
 = 
	`f›í
 (
MORIA_TOP
, "wb");

92 i‡(
highsc‹e_Â
 =
NULL
)

94 
	`P¨amText
 ("\pC™'à¸óã sc‹êfûe!", 
NULL
, NULL, NULL);

95 
	`DoS¸ìnALRT
 (
GNRL_ALRT
, 
akSt›
, 
fixHÆf
, 
fixThúd
);

96 
	`ExôToShñl
 ();

98 
	`£tfûeöfo
 (
MORIA_TOP
, 
	`cuºítdúe˘‹y
 (), 
SCORE_FTYPE
);

100 (Ë
	`Ârötf
 (
°dîr
, "C™'à›í sc‹êfûê\"%s\"\n", 
MORIA_TOP
);

101 
	`exô
(1);

104 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
VMS
Ë|| deföed(
MAC
Ë|| deföed(
APOLLO
)

107 
	`f˛o£
 (
highsc‹e_Â
);

110 #ifde‡
MAC


111 
	`ª°‹edúe˘‹y
 ();

113 
	}
}

115 #i‚de‡
MAC


118 
	$ªad_times
()

120 
vty≥
 
ö_löe
;

121 
i
;

122 
FILE
 *
fûe1
;

124 #ifde‡
MORIA_HOU


127 i‡((
fûe1
 = 
	`f›í
(
MORIA_HOU
, "r")Ë!
NULL
)

129 
	`fgës
(
ö_löe
, 80, 
fûe1
Ë!
CNIL
)

130 i‡(
	`°æí
(
ö_löe
) > 3)

132 i‡(!
	`°∫cmp
(
ö_löe
, "SUN:", 4))

133 (Ë
	`°r˝y
(
days
[0], 
ö_löe
);

134 i‡(!
	`°∫cmp
(
ö_löe
, "MON:", 4))

135 (Ë
	`°r˝y
(
days
[1], 
ö_löe
);

136 i‡(!
	`°∫cmp
(
ö_löe
, "TUE:", 4))

137 (Ë
	`°r˝y
(
days
[2], 
ö_löe
);

138 i‡(!
	`°∫cmp
(
ö_löe
, "WED:", 4))

139 (Ë
	`°r˝y
(
days
[3], 
ö_löe
);

140 i‡(!
	`°∫cmp
(
ö_löe
, "THU:", 4))

141 (Ë
	`°r˝y
(
days
[4], 
ö_löe
);

142 i‡(!
	`°∫cmp
(
ö_löe
, "FRI:", 4))

143 (Ë
	`°r˝y
(
days
[5], 
ö_löe
);

144 i‡(!
	`°∫cmp
(
ö_löe
, "SAT:", 4))

145 (Ë
	`°r˝y
(
days
[6], 
ö_löe
);

147 (Ë
	`f˛o£
(
fûe1
);

151 
	`ª°‹e_ãrm
();

152 (Ë
	`Ârötf
(
°dîr
, "Thîêi†nÿhour†fûê\"%s\".\n", 
MORIA_HOU
);

153 (Ë
	`Ârötf
(
°dîr
, "PÀa£ inf‹mÅhêwiz¨d, %s, sÿhê", 
WIZARD
);

154 (Ë
	`Ârötf
(
°dîr
, "can correctÅhis!\n");

155 
	`exô
(1);

159 i‡(!
	`check_time
())

161 i‡((
fûe1
 = 
	`f›í
(
MORIA_HOU
, "r")Ë!
NULL
)

163 
	`˛ór_s¸ìn
();

164 #ifde‡
VMS


165 
	`ª°‹e_s¸ìn
();

167 
i
 = 0; 
	`fgës
(
ö_löe
, 80, 
fûe1
Ë!
CNIL
; i++)

168 
	`put_buf„r
(
ö_löe
, 
i
, 0);

169 
	`∑u£_löe
 (23);

170 (Ë
	`f˛o£
(
fûe1
);

172 
	`exô_game
();

177 i‡((
fûe1
 = 
	`f›í
(
MORIA_MOR
, "r")Ë!
NULL
)

179 
	`˛ór_s¸ìn
();

180 #ifde‡
VMS


181 
	`ª°‹e_s¸ìn
();

183 
i
 = 0; 
	`fgës
(
ö_löe
, 80, 
fûe1
Ë!
CNIL
; i++)

184 
	`put_buf„r
(
ö_löe
, 
i
, 0);

185 
	`∑u£_löe
(23);

186 (Ë
	`f˛o£
(
fûe1
);

188 
	}
}

193 
	$hñpfûe
(
fûíame
)

194 *
fûíame
;

195 #ifde‡
MAC


197 
	`mac_hñpfûe
(
fûíame
, 
TRUE
);

198 
	}
}

201 
bigvty≥
 
	gtmp_°r
;

202 
FILE
 *
	gfûe
;

203 
	göput
;

204 
	gi
;

206 
	gfûe
 = 
f›í
(
fûíame
, "r");

207 i‡(
	gfûe
 =
NULL
)

209 (Ë
•rötf
 (
tmp_°r
, "C™ÇŸ föd hñ∞fûê\"%s\".\n", 
fûíame
);

210 
¥t
 (
tmp_°r
, 0, 0);

214 
ßve_s¸ìn
();

216 !
„of
(
fûe
))

218 
˛ór_s¸ìn
();

219 
	gi
 = 0; i < 23; i++)

220 i‡(
fgës
 (
tmp_°r
, 
BIGVTYPESIZ
-1, 
fûe
Ë!
CNIL
)

221 
put_buf„r
 (
tmp_°r
, 
i
, 0);

222 
¥t
("[Pressány keyÅo continue.]", 23, 23);

223 
	göput
 = 
ökey
();

224 i‡(
	göput
 =
ESCAPE
)

228 (Ë
f˛o£
(
fûe
);

229 
ª°‹e_s¸ìn
();

236 
	$¥öt_obje˘s
()

238 
i
;

239 
nobj
, 
j
, 
Àvñ
, 
smÆl
;

240 
vty≥
 
fûíame1
; 
bigvty≥
 
tmp_°r
;

241 
FILE
 *
fûe1
;

242 
öví_ty≥
 *
i_±r
;

243 #ifde‡
MAC


244 
vª‚um
;

246 #ifde‡
ATARIST_MWC


247 
öt32u
 
hﬁdî
;

250 
	`¥t
("Produce objects on whatÜevel?: ", 0, 0);

251 
Àvñ
 = 0;

252 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 32, 10))

254 
Àvñ
 = 
	`©oi
(
tmp_°r
);

255 
	`¥t
("Produce how many objects?: ", 0, 0);

256 
nobj
 = 0;

257 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 27, 10))

259 
nobj
 = 
	`©oi
(
tmp_°r
);

260 
smÆl
 = 
	`gë_check
("Small objects only?");

261 i‡((
nobj
 > 0Ë&& (
Àvñ
 > -1) && (level < 1201))

263 i‡(
nobj
 > 10000)

264 
nobj
 = 10000;

265 #ifde‡
MAC


266 (Ë
	`°r˝y
(
fûíame1
, "Objects");

267 i‡(
	`d›utfûe
("Savêobje˘†ö:", 
fûíame1
, &
vª‚um
))

269 
	`¥t
("FileÇame: ", 0, 0);

270 i‡(
	`gë_°rög
(
fûíame1
, 0, 11, 64))

273 i‡(
	`°æí
(
fûíame1
) == 0)

275 #ifde‡
MAC


276 
	`ch™gedúe˘‹y
(
vª‚um
);

278 i‡((
fûe1
 = 
	`f›í
(
fûíame1
, "w")Ë!
NULL
)

280 #ifde‡
MAC


281 
	`macbegöwaô
 ();

284 (Ë
	`•rötf
(
tmp_°r
, "%d", 
nobj
);

285 
	`¥t
(
	`°rˇt
(
tmp_°r
, "Ñandom objects beingÖroduced..."), 0, 0);

286 
	`put_qio
();

287 (Ë
	`Ârötf
(
fûe1
, "*** Random Object Sampling:\n");

288 (Ë
	`Ârötf
(
fûe1
, "*** %d obje˘s\n", 
nobj
);

289 (Ë
	`Ârötf
(
fûe1
, "*** F‹ Levñ %d\n", 
Àvñ
);

290 (Ë
	`Ârötf
(
fûe1
, "\n");

291 (Ë
	`Ârötf
(
fûe1
, "\n");

292 
j
 = 
	`p›t
();

293 
i
 = 0; i < 
nobj
; i++)

295 
	`övc›y
(&
t_li°
[
j
],

296 
s‹ãd_obje˘s
[
	`gë_obj_num
(
Àvñ
,
smÆl
)]);

297 
	`magic_åósuª
(
j
, 
Àvñ
);

298 
i_±r
 = &
t_li°
[
j
];

299 
	`°‹e_bought
(
i_±r
);

300 #ifde‡
ATARIST_MWC


301 i‡(
i_±r
->
Êags
 & (
hﬁdî
 = 
TR_CURSED
))

303 i‡(
i_±r
->
Êags
 & 
TR_CURSED
)

305 
	`add_ös¸ibe
(
i_±r
, 
ID_DAMD
);

306 
	`objdes
(
tmp_°r
, 
i_±r
, 
TRUE
);

307 (Ë
	`Ârötf
(
fûe1
, "%d %s\n", 
i_±r
->
Àvñ
, 
tmp_°r
);

309 
	`pusht
((
öt8u
)
j
);

310 (Ë
	`f˛o£
(
fûe1
);

311 #ifde‡
MAC


312 
	`£tfûeöfo
(
fûíame1
, 
vª‚um
, 
INFO_FTYPE
);

313 
	`ma˚ndwaô
 ();

315 
	`¥t
("Completed.", 0, 0);

318 
	`¥t
("File couldÇot be opened.", 0, 0);

319 #ifde‡
MAC


320 
	`ª°‹edúe˘‹y
();

325 
	`¥t
 ("ParametersÇo good.", 0, 0);

326 
	}
}

330 #ifde‡
MAC


331 
	$fûe_ch¨a˘î
()

333 
	$fûe_ch¨a˘î
(
fûíame1
)

334 *
fûíame1
;

337 
i
;

338 
j
, 
xbth
, 
xbthb
, 
xfos
, 
x§h
, 
x°l
, 
xdis
, 
xßve
, 
xdev
;

339 
vty≥
 
xö‰a
;

340 
fd
;

341 
FILE
 *
fûe1
;

342 
bigvty≥
 
¥t2
;

343 
misc
 *
p_±r
;

344 
öví_ty≥
 *
i_±r
;

345 
vty≥
 
out_vÆ
, 
¥t1
;

346 *
p
, *
cﬁ⁄
, *
bœnk
;

347 #ifde‡
MAC


348 
vty≥
 
fûíame1
;

349 
vª‚um
;

352 #ifde‡
MAC


353 (Ë
	`makefûíame
(
fûíame1
, "Sèts", 
TRUE
);

354 i‡(!
	`d›utfûe
("Savêch¨a˘î des¸ùti⁄ in:", 
fûíame1
, &
vª‚um
))

355  (
FALSE
);

358 #i‚de‡
VMS


360 #ifde‡
MAC


361 
	`ch™gedúe˘‹y
(
vª‚um
);

362 
fd
 = 
	`›í
 (
fûíame1
, 
O_WRONLY
|
O_CREAT
|
O_TRUNC
);

363 
	`ª°‹edúe˘‹y
();

364 
	`macbegöwaô
 ();

366 #i‡
	`deföed
(
GEMDOS
Ë&& (
__STDC__
 =0Ë&& !deföed(
ATARIST_TC
)

367 i‡(!
	`ac˚ss
(
fûíame1
, 
AREAD
))

369 (Ë
	`•rötf
(
out_vÆ
, "Rïœ˚Éxi°ög fûê%s?", 
fûíame1
);

370 i‡(
	`gë_check
(
out_vÆ
))

371 
fd
 = 
	`¸ót
(
fûíame1
, 1);

374 
fd
 = 
	`¸ót
 (
fûíame1
, 1);

376 
fd
 = 
	`›í
 (
fûíame1
, 
O_WRONLY
|
O_CREAT
|
O_EXCL
, 0644);

377 i‡(
fd
 < 0 && 
î∫o
 =
EEXIST
)

379 (Ë
	`•rötf
(
out_vÆ
, "Rïœ˚Éxi°ög fûê%s?", 
fûíame1
);

380 i‡(
	`gë_check
(
out_vÆ
))

381 
fd
 = 
	`›í
(
fûíame1
, 
O_WRONLY
, 0644);

385 i‡(
fd
 >= 0)

389 (Ë
	`˛o£
(
fd
);

390 
fûe1
 = 
	`f›í
(
fûíame1
, "w");

393 
fûe1
 = 
NULL
;

395 
fd
 = -1;

396 
fûe1
 = 
	`f›í
 (
fûíame1
, "w");

399 i‡(
fûe1
 !
NULL
)

401 
	`¥t
("Writing character sheet...", 0, 0);

402 
	`put_qio
();

403 
cﬁ⁄
 = ":";

404 
bœnk
 = " ";

405 #ifde‡
MAC


406 (Ë
	`Ârötf
(
fûe1
, "\n\n");

408 (Ë
	`Ârötf
(
fûe1
, "%c\n\n", 
	`CTRL
('L'));

410 (Ë
	`Ârötf
(
fûe1
, " Name%9†%-23s", 
cﬁ⁄
, 
py
.
misc
.
«me
);

411 (Ë
	`Ârötf
(
fûe1
, " Age%11†%6d", 
cﬁ⁄
, ()
py
.
misc
.
age
);

412 
	`˙v_°©
(
py
.
°©s
.
u£_°©
[
A_STR
], 
¥t1
);

413 (Ë
	`Ârötf
(
fûe1
, " STR : %s\n", 
¥t1
);

414 (Ë
	`Ârötf
(
fûe1
, " Ra˚%9†%-23s", 
cﬁ⁄
,

415 
ø˚
[
py
.
misc
.
¥a˚
].
åa˚
);

416 (Ë
	`Ârötf
(
fûe1
, " Height%8†%6d", 
cﬁ⁄
, ()
py
.
misc
.
ht
);

417 
	`˙v_°©
(
py
.
°©s
.
u£_°©
[
A_INT
], 
¥t1
);

418 (Ë
	`Ârötf
(
fûe1
, " INT : %s\n", 
¥t1
);

419 (Ë
	`Ârötf
(
fûe1
, " Sex%10†%-23s", 
cﬁ⁄
,

420 (
py
.
misc
.
mÆe
 ? "Male" : "Female"));

421 (Ë
	`Ârötf
(
fûe1
, " Weight%8†%6d", 
cﬁ⁄
, ()
py
.
misc
.
wt
);

422 
	`˙v_°©
(
py
.
°©s
.
u£_°©
[
A_WIS
], 
¥t1
);

423 (Ë
	`Ârötf
(
fûe1
, " WIS : %s\n", 
¥t1
);

424 (Ë
	`Ârötf
(
fûe1
, " Cœss%8†%-23s", 
cﬁ⁄
,

425 
˛ass
[
py
.
misc
.
p˛ass
].
tôÀ
);

426 (Ë
	`Ârötf
(
fûe1
, " Socü»Cœs†: %6d", 
py
.
misc
.
sc
);

427 
	`˙v_°©
(
py
.
°©s
.
u£_°©
[
A_DEX
], 
¥t1
);

428 (Ë
	`Ârötf
(
fûe1
, " DEX : %s\n", 
¥t1
);

429 (Ë
	`Ârötf
(
fûe1
, " TôÀ%8†%-23s", 
cﬁ⁄
, 
	`tôÀ_°rög
());

430 (Ë
	`Ârötf
(
fûe1
, "%22s", 
bœnk
);

431 
	`˙v_°©
(
py
.
°©s
.
u£_°©
[
A_CON
], 
¥t1
);

432 (Ë
	`Ârötf
(
fûe1
, " CON : %s\n", 
¥t1
);

433 (Ë
	`Ârötf
(
fûe1
, "%34s", 
bœnk
);

434 (Ë
	`Ârötf
(
fûe1
, "%26s", 
bœnk
);

435 
	`˙v_°©
(
py
.
°©s
.
u£_°©
[
A_CHR
], 
¥t1
);

436 (Ë
	`Ârötf
(
fûe1
, " CHR : %s\n\n", 
¥t1
);

438 (Ë
	`Ârötf
(
fûe1
, " + TÿHô : %6d", 
py
.
misc
.
dis_th
);

439 (Ë
	`Ârötf
(
fûe1
, "%7sLevñ : %7d", 
bœnk
, ()
py
.
misc
.
Àv
);

440 (Ë
	`Ârötf
(
fûe1
, " Max Hô Poöt†: %6d\n", 
py
.
misc
.
mhp
);

441 (Ë
	`Ârötf
(
fûe1
, " + TÿDamagê: %6d", 
py
.
misc
.
dis_td
);

442 (Ë
	`Ârötf
(
fûe1
, "%7sEx≥rõn˚ : %7ld", 
bœnk
, 
py
.
misc
.
exp
);

443 (Ë
	`Ârötf
(
fûe1
, " Cu∏Hô Poöt†: %6d\n", 
py
.
misc
.
chp
);

444 (Ë
	`Ârötf
(
fûe1
, " + TÿAC : %6d", 
py
.
misc
.
dis_èc
);

445 (Ë
	`Ârötf
(
fûe1
, "%7sMax Ex∞ : %7ld", 
bœnk
, 
py
.
misc
.
max_exp
);

446 (Ë
	`Ârötf
(
fûe1
, " Max M™a%8†%6d\n", 
cﬁ⁄
, 
py
.
misc
.
m™a
);

447 (Ë
	`Ârötf
(
fûe1
, " TŸÆ AC : %6d", 
py
.
misc
.
dis_ac
);

448 i‡(
py
.
misc
.
Àv
 >
MAX_PLAYER_LEVEL
)

449 (Ë
	`Ârötf
 (
fûe1
, "%7sEx∞tÿAdv : *******", 
bœnk
);

451 (Ë
	`Ârötf
(
fûe1
, "%7sEx∞tÿAdv : %7ld", 
bœnk
,

452 (
öt32
)(
∂ayî_exp
[
py
.
misc
.
Àv
-1]

453 * 
py
.
misc
.
expÁ˘
 / 100));

454 (Ë
	`Ârötf
(
fûe1
, " Cu∏M™a%8†%6d\n", 
cﬁ⁄
, 
py
.
misc
.
cm™a
);

455 (Ë
	`Ârötf
(
fûe1
, "%28sGﬁd%8†%7ld\n\n", 
bœnk
, 
cﬁ⁄
,

456 
py
.
misc
.
au
);

458 
p_±r
 = &
py
.
misc
;

459 
xbth
 = 
p_±r
->
bth
 +Ö_±r->
±ohô
 * 
BTH_PLUS_ADJ


460 + (
˛ass_Àvñ_adj
[
p_±r
->
p˛ass
][
CLA_BTH
] *Ö_±r->
Àv
);

461 
xbthb
 = 
p_±r
->
bthb
 +Ö_±r->
±ohô
 * 
BTH_PLUS_ADJ


462 + (
˛ass_Àvñ_adj
[
p_±r
->
p˛ass
][
CLA_BTHB
] *Ö_±r->
Àv
);

464 
xfos
 = 40 - 
p_±r
->
fos
;

465 i‡(
xfos
 < 0)

466 
xfos
 = 0;

467 
x§h
 = 
p_±r
->
§h
;

469 
x°l
 = 
p_±r
->
°l
 + 1;

470 
xdis
 = 
p_±r
->
dißrm
 + 2 * 
	`todis_adj
(Ë+ 
	`°©_adj
(
A_INT
)

471 + (
˛ass_Àvñ_adj
[
p_±r
->
p˛ass
][
CLA_DISARM
] *Ö_±r->
Àv
 / 3);

472 
xßve
 = 
p_±r
->
ßve
 + 
	`°©_adj
(
A_WIS
)

473 + (
˛ass_Àvñ_adj
[
p_±r
->
p˛ass
][
CLA_SAVE
] *Ö_±r->
Àv
 / 3);

474 
xdev
 = 
p_±r
->
ßve
 + 
	`°©_adj
(
A_INT
)

475 + (
˛ass_Àvñ_adj
[
p_±r
->
p˛ass
][
CLA_DEVICE
] *Ö_±r->
Àv
 / 3);

477 (Ë
	`•rötf
(
xö‰a
, "%d fìt", 
py
.
Êags
.
£e_ö‰a
 * 10);

479 (Ë
	`Ârötf
(
fûe1
, "(Miscellaneous Abilities)\n\n");

480 (Ë
	`Ârötf
(
fûe1
, " Fightög : %-10s", 
	`likît
(
xbth
, 12));

481 (Ë
	`Ârötf
(
fûe1
, " SãÆth : %-10s", 
	`likît
(
x°l
, 1));

482 (Ë
	`Ârötf
(
fûe1
, " Pî˚±i⁄ : %s\n", 
	`likît
(
xfos
, 3));

483 (Ë
	`Ârötf
(
fûe1
, " Bows/Throw : %-10s", 
	`likît
(
xbthb
, 12));

484 (Ë
	`Ârötf
(
fûe1
, " Dißrmög : %-10s", 
	`likît
(
xdis
, 8));

485 (Ë
	`Ârötf
(
fûe1
, " Sórchög : %s\n", 
	`likît
(
x§h
, 6));

486 (Ë
	`Ârötf
(
fûe1
, " Savög Throw: %-10s", 
	`likît
(
xßve
, 6));

487 (Ë
	`Ârötf
(
fûe1
, " Magi¯Devi˚: %-10s", 
	`likît
(
xdev
, 6));

488 (Ë
	`Ârötf
(
fûe1
, " In‰a-Visi⁄: %s\n\n", 
xö‰a
);

490 (Ë
	`Ârötf
(
fûe1
, "Character Background\n");

491 
i
 = 0; i < 4; i++)

492 (Ë
	`Ârötf
(
fûe1
, " %s\n", 
py
.
misc
.
hi°‹y
[
i
]);

494 
j
 = 0;

495 (Ë
	`Ârötf
(
fûe1
, "\n [Character's Equipment List]\n\n");

496 i‡(
equù_˘r
 == 0)

497 (Ë
	`Ârötf
(
fûe1
, " Character hasÇoÉquipment in use.\n");

499 
i
 = 
INVEN_WIELD
; i < 
INVEN_ARRAY_SIZE
; i++)

501 
i_±r
 = &
övít‹y
[
i
];

502 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

504 
i
)

506 
INVEN_WIELD
: 
p
 = "Youáre wielding"; ;

507 
INVEN_HEAD
: 
p
 = "Worn on head"; ;

508 
INVEN_NECK
: 
p
 = "WornároundÇeck"; ;

509 
INVEN_BODY
: 
p
 = "Worn on body"; ;

510 
INVEN_ARM
: 
p
 = "Worn on shieldárm";;

511 
INVEN_HANDS
: 
p
 = "Worn on hands"; ;

512 
INVEN_RIGHT
: 
p
 = "RightÑing finger";;

513 
INVEN_LEFT
: 
p
 = "LeftÑing finger";;

514 
INVEN_FEET
: 
p
 = "Worn on feet"; ;

515 
INVEN_OUTER
: 
p
 = "Wornábout body"; ;

516 
INVEN_LIGHT
: 
p
 = "Light source is"; ;

517 
INVEN_AUX
: 
p
 = "Secondary weapon"; ;

518 : 
p
 = "*Unknown value*"; ;

520 
	`objdes
(
¥t2
, &
övít‹y
[
i
], 
TRUE
);

521 (Ë
	`Ârötf
(
fûe1
, " %cË%-19s: %s\n", 
j
+'a', 
p
, 
¥t2
);

522 
j
++;

527 #ifde‡
MAC


528 (Ë
	`Ârötf
(
fûe1
, "\n\n");

530 (Ë
	`Ârötf
(
fûe1
, "%c\n\n", 
	`CTRL
('L'));

532 (Ë
	`Ârötf
(
fûe1
, " [General Inventory List]\n\n");

533 i‡(
öví_˘r
 == 0)

534 (Ë
	`Ârötf
(
fûe1
, " Character hasÇo objects in inventory.\n");

537 
i
 = 0; i < 
öví_˘r
; i++)

539 
	`objdes
(
¥t2
, &
övít‹y
[
i
], 
TRUE
);

540 (Ë
	`Ârötf
(
fûe1
, "%cË%s\n", 
i
+'a', 
¥t2
);

543 #i‚de‡
MAC


544 (Ë
	`Ârötf
(
fûe1
, "%c", 
	`CTRL
('L'));

546 (Ë
	`f˛o£
(
fûe1
);

547 #ifde‡
MAC


548 
	`£tfûeöfo
(
fûíame1
, 
vª‚um
, 
INFO_FTYPE
);

549 
	`ma˚ndwaô
 ();

551 
	`¥t
("Completed.", 0, 0);

552  
TRUE
;

556 i‡(
fd
 >= 0)

557 (Ë
	`˛o£
 (
fd
);

558 (Ë
	`•rötf
 (
out_vÆ
, "C™'à›í fûê%s:", 
fûíame1
);

559 
	`msg_¥öt
(
out_vÆ
);

560  
FALSE
;

562 
	}
}

	@generate.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

12 
	~"exã∫s.h
"

14 #i‡
deföed
(
USG
Ë&& !deföed(
VMS
Ë&& !deföed(
MAC
)

15 #i‡!
deföed
(
ATARIST_MWC
Ë&& !deföed(
AMIGA
)

16 #i‡!
deföed
(
__TURBOC__
)

17 
	~<mem‹y.h
>

19 #i‚de‡
ATARIST_TC


20 
	~<mem.h
>

26 #i‡
deföed
(
MAC
)

27 
	~<°rög.h
>

30 #ifde‡
ATARIST_TC


31 
	~<°rög.h
>

34 
	sco‹ds
 {

35 
	mx
, 
	my
;

36 } 
	tco‹ds
;

38 #i‡
deföed
(
LINT_ARGS
)

39 
c‹ª˘_dú
(*, * , , , , );

40 
ønd_dú
(*,*);

41 
bœnk_ˇve
();

42 
fûl_ˇve
();

43 
∂a˚_bound¨y
();

44 
∂a˚_°ªamî
(, );

45 
∂a˚_›í_do‹
(, );

46 
∂a˚_brokí_do‹
(, );

47 
∂a˚_˛o£d_do‹
(, );

48 
∂a˚_locked_do‹
(, );

49 
∂a˚_°uck_do‹
(, );

50 
∂a˚_£¸ë_do‹
(, );

51 
∂a˚_do‹
(, );

52 
∂a˚_up_°aús
(, );

53 
∂a˚_down_°aús
(, );

54 
∂a˚_°aús
(, , );

55 
vau…_å≠
(, , , , );

56 
vau…_m⁄°î
(, , );

57 
buûd_room
(, );

58 
buûd_ty≥1
(, );

59 
buûd_ty≥2
(, );

60 
buûd_ty≥3
(, );

61 
buûd_tu¬ñ
(, , , );

62 
√xt_to
(, );

63 
åy_do‹
(, );

64 
√w_•Ÿ
(
öt16
 *, int16 *);

65 
ˇve_gí
();

66 
buûd_°‹e
(, , );

67 
éök
();

68 
mlök
();

69 
town_gí
();

72 
co‹ds
 
	gdo‹°k
[100];

73 
	gdo‹ödex
;

77 
	$c‹ª˘_dú
(
rdú
, 
cdú
, 
y1
, 
x1
, 
y2
, 
x2
)

78 *
rdú
, *
cdú
;

79 
y1
, 
x1
, 
y2
, 
x2
;

81 i‡(
y1
 < 
y2
)

82 *
rdú
 = 1;

83 i‡(
y1
 =
y2
)

84 *
rdú
 = 0;

86 *
rdú
 = -1;

87 i‡(
x1
 < 
x2
)

88 *
cdú
 = 1;

89 i‡(
x1
 =
x2
)

90 *
cdú
 = 0;

92 *
cdú
 = -1;

93 i‡((*
rdú
 !0Ë&& (*
cdú
 != 0))

95 i‡(
	`øndöt
 (2) == 1)

96 *
rdú
 = 0;

98 *
cdú
 = 0;

100 
	}
}

104 
	$ønd_dú
(
rdú
, 
cdú
)

105 *
rdú
, *
cdú
;

107 
tmp
;

109 
tmp
 = 
	`øndöt
(4);

110 i‡(
tmp
 < 3)

112 *
cdú
 = 0;

113 *
rdú
 = -3 + (
tmp
 << 1);

117 *
rdú
 = 0;

118 *
cdú
 = -7 + (
tmp
 << 1);

120 
	}
}

124 
	$bœnk_ˇve
()

126 #i‚de‡
USG


127 
	`bzîo
 ((*)&
ˇve
[0][0],  (cave));

129 #ifde‡
MAC


131 ()
	`mem£t
((*)&
ˇve
[0][0], 0,

132 (Ë(
ˇve_ty≥
Ë* 
MAX_HEIGHT
 * 
MAX_WIDTH
);

134 ()
	`mem£t
((*)&
ˇve
[0][0], 0,  (cave));

137 
	}
}

142 
	$fûl_ˇve
(
fvÆ
)

143 
fvÆ
;

145 
i
, 
j
;

146 
ˇve_ty≥
 *
c_±r
;

150 
i
 = 
cur_height
 - 2; i > 0; i--)

152 
c_±r
 = &
ˇve
[
i
][1];

153 
j
 = 
cur_width
 - 2; j > 0; j--)

155 i‡((
c_±r
->
fvÆ
 =
NULL_WALL
Ë|| (c_±r->fvÆ =
TMP1_WALL
) ||

156 (
c_±r
->
fvÆ
 =
TMP2_WALL
))

157 
c_±r
->
fvÆ
 = fval;

158 
c_±r
++;

161 
	}
}

163 #ifde‡
DEBUG


164 
	~<as£π.h
>

168 
	$∂a˚_bound¨y
()

170 
i
;

171 
ˇve_ty≥
 *
t›_±r
, *
bŸtom_±r
;

172 
	`ˇve_ty≥
 (*
À·_±r
)[
MAX_WIDTH
];

173 
	`ˇve_ty≥
 (*
right_±r
)[
MAX_WIDTH
];

176 
À·_±r
 = (
	`ˇve_ty≥
 (*)[
MAX_WIDTH
]Ë&
ˇve
[0][0];

177 
right_±r
 = (
	`ˇve_ty≥
 (*)[
MAX_WIDTH
]Ë&
ˇve
[0][
cur_width
 - 1];

179 
i
 = 0; i < 
cur_height
; i++)

181 #ifde‡
DEBUG


182 
	`as£π
 ((
ˇve_ty≥
 *)
À·_±r
 =&
ˇve
[
i
][0]);

183 
	`as£π
 ((
ˇve_ty≥
 *)
right_±r
 =&
ˇve
[
i
][
cur_width
-1]);

186 ((
ˇve_ty≥
 *)
À·_±r
)->
fvÆ
 = 
BOUNDARY_WALL
;

187 
À·_±r
++;

188 ((
ˇve_ty≥
 *)
right_±r
)->
fvÆ
 = 
BOUNDARY_WALL
;

189 
right_±r
++;

193 
t›_±r
 = &
ˇve
[0][0];

194 
bŸtom_±r
 = &
ˇve
[
cur_height
 - 1][0];

196 
i
 = 0; i < 
cur_width
; i++)

198 #ifde‡
DEBUG


199 
	`as£π
 (
t›_±r
 =&
ˇve
[0][
i
]);

200 
	`as£π
 (
bŸtom_±r
 =&
ˇve
[
cur_height
 - 1][
i
]);

203 
t›_±r
->
fvÆ
 = 
BOUNDARY_WALL
;

204 
t›_±r
++;

205 
bŸtom_±r
->
fvÆ
 = 
BOUNDARY_WALL
;

206 
bŸtom_±r
++;

208 
	}
}

212 
	$∂a˚_°ªamî
(
fvÆ
, 
åós_ch™˚
)

213 
fvÆ
;

214 
åós_ch™˚
;

216 
i
, 
tx
, 
ty
;

217 
y
, 
x
, 
t1
, 
t2
, 
dú
;

218 
ˇve_ty≥
 *
c_±r
;

221 
y
 = (
cur_height
 / 2Ë+ 11 - 
	`øndöt
(23);

222 
x
 = (
cur_width
 / 2Ë+ 16 - 
	`øndöt
(33);

224 
dú
 = 
	`øndöt
(8);

225 i‡(
dú
 > 4)

226 
dú
 = dir + 1;

229 
t1
 = 2*
DUN_STR_RNG
 + 1;

230 
t2
 = 
DUN_STR_RNG
 + 1;

233 
i
 = 0; i < 
DUN_STR_DEN
; i++)

235 
ty
 = 
y
 + 
	`øndöt
(
t1
Ë- 
t2
;

236 
tx
 = 
x
 + 
	`øndöt
(
t1
Ë- 
t2
;

237 i‡(
	`ö_bounds
(
ty
, 
tx
))

239 
c_±r
 = &
ˇve
[
ty
][
tx
];

240 i‡(
c_±r
->
fvÆ
 =
GRANITE_WALL
)

242 
c_±r
->
fvÆ
 = fval;

243 i‡(
	`øndöt
(
åós_ch™˚
) == 1)

244 
	`∂a˚_gﬁd
(
ty
, 
tx
);

249 
	`mmove
(
dú
, &
y
, &
x
));

250 
	}
}

253 
	$∂a˚_›í_do‹
(
y
, 
x
)

254 
y
, 
x
;

256 
cur_pos
;

257 
ˇve_ty≥
 *
ˇve_±r
;

259 
cur_pos
 = 
	`p›t
();

260 
ˇve_±r
 = &
ˇve
[
y
][
x
];

261 
ˇve_±r
->
çå
 = 
cur_pos
;

262 
	`övc›y
(&
t_li°
[
cur_pos
], 
OBJ_OPEN_DOOR
);

263 
ˇve_±r
->
fvÆ
 = 
CORR_FLOOR
;

264 
	}
}

267 
	$∂a˚_brokí_do‹
(
y
, 
x
)

268 
y
, 
x
;

270 
cur_pos
;

271 
ˇve_ty≥
 *
ˇve_±r
;

273 
cur_pos
 = 
	`p›t
();

274 
ˇve_±r
 = &
ˇve
[
y
][
x
];

275 
ˇve_±r
->
çå
 = 
cur_pos
;

276 
	`övc›y
(&
t_li°
[
cur_pos
], 
OBJ_OPEN_DOOR
);

277 
ˇve_±r
->
fvÆ
 = 
CORR_FLOOR
;

278 
t_li°
[
cur_pos
].
p1
 = 1;

279 
	}
}

282 
	$∂a˚_˛o£d_do‹
(
y
, 
x
)

283 
y
, 
x
;

285 
cur_pos
;

286 
ˇve_ty≥
 *
ˇve_±r
;

288 
cur_pos
 = 
	`p›t
();

289 
ˇve_±r
 = &
ˇve
[
y
][
x
];

290 
ˇve_±r
->
çå
 = 
cur_pos
;

291 
	`övc›y
(&
t_li°
[
cur_pos
], 
OBJ_CLOSED_DOOR
);

292 
ˇve_±r
->
fvÆ
 = 
BLOCKED_FLOOR
;

293 
	}
}

296 
	$∂a˚_locked_do‹
(
y
, 
x
)

297 
y
, 
x
;

299 
cur_pos
;

300 
ˇve_ty≥
 *
ˇve_±r
;

302 
cur_pos
 = 
	`p›t
();

303 
ˇve_±r
 = &
ˇve
[
y
][
x
];

304 
ˇve_±r
->
çå
 = 
cur_pos
;

305 
	`övc›y
(&
t_li°
[
cur_pos
], 
OBJ_CLOSED_DOOR
);

306 
ˇve_±r
->
fvÆ
 = 
BLOCKED_FLOOR
;

307 
t_li°
[
cur_pos
].
p1
 = 
	`øndöt
(10) + 10;

308 
	}
}

311 
	$∂a˚_°uck_do‹
(
y
, 
x
)

312 
y
, 
x
;

314 
cur_pos
;

315 
ˇve_ty≥
 *
ˇve_±r
;

317 
cur_pos
 = 
	`p›t
();

318 
ˇve_±r
 = &
ˇve
[
y
][
x
];

319 
ˇve_±r
->
çå
 = 
cur_pos
;

320 
	`övc›y
(&
t_li°
[
cur_pos
], 
OBJ_CLOSED_DOOR
);

321 
ˇve_±r
->
fvÆ
 = 
BLOCKED_FLOOR
;

322 
t_li°
[
cur_pos
].
p1
 = -
	`øndöt
(10) - 10;

323 
	}
}

326 
	$∂a˚_£¸ë_do‹
(
y
, 
x
)

327 
y
, 
x
;

329 
cur_pos
;

330 
ˇve_ty≥
 *
ˇve_±r
;

332 
cur_pos
 = 
	`p›t
();

333 
ˇve_±r
 = &
ˇve
[
y
][
x
];

334 
ˇve_±r
->
çå
 = 
cur_pos
;

335 
	`övc›y
(&
t_li°
[
cur_pos
], 
OBJ_SECRET_DOOR
);

336 
ˇve_±r
->
fvÆ
 = 
BLOCKED_FLOOR
;

337 
	}
}

340 
	$∂a˚_do‹
(
y
, 
x
)

341 
y
, 
x
;

343 
tmp
;

345 
tmp
 = 
	`øndöt
(3);

346 i‡(
tmp
 == 1)

348 i‡(
	`øndöt
(4) == 1)

349 
	`∂a˚_brokí_do‹
(
y
, 
x
);

351 
	`∂a˚_›í_do‹
(
y
, 
x
);

353 i‡(
tmp
 == 2)

355 
tmp
 = 
	`øndöt
(12);

356 i‡(
tmp
 > 3)

357 
	`∂a˚_˛o£d_do‹
(
y
, 
x
);

358 i‡(
tmp
 == 3)

359 
	`∂a˚_°uck_do‹
(
y
, 
x
);

361 
	`∂a˚_locked_do‹
(
y
, 
x
);

364 
	`∂a˚_£¸ë_do‹
(
y
, 
x
);

365 
	}
}

369 
	$∂a˚_up_°aús
(
y
, 
x
)

370 
y
, 
x
;

372 
cur_pos
;

373 
ˇve_ty≥
 *
ˇve_±r
;

375 
ˇve_±r
 = &
ˇve
[
y
][
x
];

376 i‡(
ˇve_±r
->
çå
 != 0)

377 (Ë
	`dñëe_obje˘
(
y
, 
x
);

378 
cur_pos
 = 
	`p›t
();

379 
ˇve_±r
->
çå
 = 
cur_pos
;

380 
	`övc›y
(&
t_li°
[
cur_pos
], 
OBJ_UP_STAIR
);

381 
	}
}

385 
	$∂a˚_down_°aús
(
y
, 
x
)

386 
y
, 
x
;

388 
cur_pos
;

389 
ˇve_ty≥
 *
ˇve_±r
;

391 
ˇve_±r
 = &
ˇve
[
y
][
x
];

392 i‡(
ˇve_±r
->
çå
 != 0)

393 (Ë
	`dñëe_obje˘
(
y
, 
x
);

394 
cur_pos
 = 
	`p›t
();

395 
ˇve_±r
->
çå
 = 
cur_pos
;

396 
	`övc›y
(&
t_li°
[
cur_pos
], 
OBJ_DOWN_STAIR
);

397 
	}
}

401 
	$∂a˚_°aús
(
typ
, 
num
, 
wÆls
)

402 
typ
, 
num
, 
wÆls
;

404 
ˇve_ty≥
 *
ˇve_±r
;

405 
i
, 
j
, 
Êag
;

406 
y1
, 
x1
, 
y2
, 
x2
;

408 
i
 = 0; i < 
num
; i++)

410 
Êag
 = 
FALSE
;

413 
j
 = 0;

419 
y1
 = 
	`øndöt
(
cur_height
 - 14);

420 
x1
 = 
	`øndöt
(
cur_width
 - 14);

421 
y2
 = 
y1
 + 12;

422 
x2
 = 
x1
 + 12;

427 
ˇve_±r
 = &
ˇve
[
y1
][
x1
];

428 i‡(
ˇve_±r
->
fvÆ
 <
MAX_OPEN_SPACE


429 && (
ˇve_±r
->
çå
 == 0)

430 && (
	`√xt_to_wÆls
(
y1
, 
x1
Ë>
wÆls
))

432 
Êag
 = 
TRUE
;

433 i‡(
typ
 == 1)

434 
	`∂a˚_up_°aús
(
y1
, 
x1
);

436 
	`∂a˚_down_°aús
(
y1
, 
x1
);

438 
x1
++;

440 (
x1
 !
x2
Ë&& (!
Êag
));

441 
x1
 = 
x2
 - 12;

442 
y1
++;

444 (
y1
 !
y2
Ë&& (!
Êag
));

445 
j
++;

447 (!
Êag
Ë&& (
j
 <= 30));

448 
wÆls
--;

450 !
Êag
);

452 
	}
}

456 
	$vau…_å≠
(
y
, 
x
, 
yd
, 
xd
, 
num
)

457 
y
, 
x
, 
yd
, 
xd
, 
num
;

459 
cou¡
, 
y1
, 
x1
;

460 
i
, 
Êag
;

461 
ˇve_ty≥
 *
c_±r
;

463 
i
 = 0; i < 
num
; i++)

465 
Êag
 = 
FALSE
;

466 
cou¡
 = 0;

469 
y1
 = 
y
 - 
yd
 - 1 + 
	`øndöt
(2*yd+1);

470 
x1
 = 
x
 - 
xd
 - 1 + 
	`øndöt
(2*xd+1);

471 
c_±r
 = &
ˇve
[
y1
][
x1
];

472 i‡((
c_±r
->
fvÆ
 !
NULL_WALL
Ë&& (c_±r->fvÆ <
MAX_CAVE_FLOOR
)

473 && (
c_±r
->
çå
 == 0))

475 
	`∂a˚_å≠
(
y1
, 
x1
, 
	`øndöt
(
MAX_TRAP
)-1);

476 
Êag
 = 
TRUE
;

478 
cou¡
++;

480 (!
Êag
Ë&& (
cou¡
 <= 5));

482 
	}
}

486 
	$vau…_m⁄°î
(
y
, 
x
, 
num
)

487 
y
, 
x
, 
num
;

489 
i
;

490 
y1
, 
x1
;

492 
i
 = 0; i < 
num
; i++)

494 
y1
 = 
y
;

495 
x1
 = 
x
;

496 (Ë
	`summ⁄_m⁄°î
(&
y1
, &
x1
, 
TRUE
);

498 
	}
}

502 
	$buûd_room
(
yvÆ
, 
xvÆ
)

503 
yvÆ
, 
xvÆ
;

505 
i
, 
j
, 
y_dïth
, 
x_right
;

506 
y_height
, 
x_À·
;

507 
öt8u
 
Êo‹
;

508 
ˇve_ty≥
 *
c_±r
, *
d_±r
;

510 i‡(
dun_Àvñ
 <
	`øndöt
(25))

511 
Êo‹
 = 
LIGHT_FLOOR
;

513 
Êo‹
 = 
DARK_FLOOR
;

515 
y_height
 = 
yvÆ
 - 
	`øndöt
(4);

516 
y_dïth
 = 
yvÆ
 + 
	`øndöt
(3);

517 
x_À·
 = 
xvÆ
 - 
	`øndöt
(11);

518 
x_right
 = 
xvÆ
 + 
	`øndöt
(11);

523 
i
 = 
y_height
; i <
y_dïth
; i++)

525 
c_±r
 = &
ˇve
[
i
][
x_À·
];

526 
j
 = 
x_À·
; j <
x_right
; j++)

528 
c_±r
->
fvÆ
 = 
Êo‹
;

529 
c_±r
->
Ã
 = 
TRUE
;

530 
c_±r
++;

534 
i
 = (
y_height
 - 1); i <(
y_dïth
 + 1); i++)

536 
c_±r
 = &
ˇve
[
i
][
x_À·
-1];

537 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

538 
c_±r
->
Ã
 = 
TRUE
;

539 
c_±r
 = &
ˇve
[
i
][
x_right
+1];

540 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

541 
c_±r
->
Ã
 = 
TRUE
;

544 
c_±r
 = &
ˇve
[
y_height
 - 1][
x_À·
];

545 
d_±r
 = &
ˇve
[
y_dïth
 + 1][
x_À·
];

546 
i
 = 
x_À·
; i <
x_right
; i++)

548 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

549 
c_±r
->
Ã
 = 
TRUE
;

550 
c_±r
++;

551 
d_±r
->
fvÆ
 = 
GRANITE_WALL
;

552 
d_±r
->
Ã
 = 
TRUE
;

553 
d_±r
++;

555 
	}
}

560 
	$buûd_ty≥1
(
yvÆ
, 
xvÆ
)

561 
yvÆ
, 
xvÆ
;

563 
y_height
, 
y_dïth
;

564 
x_À·
, 
x_right
, 
limô
;

565 
i0
, 
i
, 
j
;

566 
öt8u
 
Êo‹
;

567 
ˇve_ty≥
 *
c_±r
, *
d_±r
;

569 i‡(
dun_Àvñ
 <
	`øndöt
(25))

570 
Êo‹
 = 
LIGHT_FLOOR
;

572 
Êo‹
 = 
DARK_FLOOR
;

573 
limô
 = 1 + 
	`øndöt
(2);

574 
i0
 = 0; i0 < 
limô
; i0++)

576 
y_height
 = 
yvÆ
 - 
	`øndöt
(4);

577 
y_dïth
 = 
yvÆ
 + 
	`øndöt
(3);

578 
x_À·
 = 
xvÆ
 - 
	`øndöt
(11);

579 
x_right
 = 
xvÆ
 + 
	`øndöt
(11);

584 
i
 = 
y_height
; i <
y_dïth
; i++)

586 
c_±r
 = &
ˇve
[
i
][
x_À·
];

587 
j
 = 
x_À·
; j <
x_right
; j++)

589 
c_±r
->
fvÆ
 = 
Êo‹
;

590 
c_±r
->
Ã
 = 
TRUE
;

591 
c_±r
++;

594 
i
 = (
y_height
 - 1); i <(
y_dïth
 + 1); i++)

596 
c_±r
 = &
ˇve
[
i
][
x_À·
-1];

597 i‡(
c_±r
->
fvÆ
 !
Êo‹
)

599 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

600 
c_±r
->
Ã
 = 
TRUE
;

602 
c_±r
 = &
ˇve
[
i
][
x_right
+1];

603 i‡(
c_±r
->
fvÆ
 !
Êo‹
)

605 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

606 
c_±r
->
Ã
 = 
TRUE
;

609 
c_±r
 = &
ˇve
[
y_height
 - 1][
x_À·
];

610 
d_±r
 = &
ˇve
[
y_dïth
 + 1][
x_À·
];

611 
i
 = 
x_À·
; i <
x_right
; i++)

613 i‡(
c_±r
->
fvÆ
 !
Êo‹
)

615 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

616 
c_±r
->
Ã
 = 
TRUE
;

618 
c_±r
++;

619 i‡(
d_±r
->
fvÆ
 !
Êo‹
)

621 
d_±r
->
fvÆ
 = 
GRANITE_WALL
;

622 
d_±r
->
Ã
 = 
TRUE
;

624 
d_±r
++;

627 
	}
}

637 
	$buûd_ty≥2
(
yvÆ
, 
xvÆ
)

638 
yvÆ
, 
xvÆ
;

640 
i
, 
j
, 
y_height
, 
x_À·
;

641 
y_dïth
, 
x_right
, 
tmp
;

642 
öt8u
 
Êo‹
;

643 
ˇve_ty≥
 *
c_±r
, *
d_±r
;

645 i‡(
dun_Àvñ
 <
	`øndöt
(25))

646 
Êo‹
 = 
LIGHT_FLOOR
;

648 
Êo‹
 = 
DARK_FLOOR
;

649 
y_height
 = 
yvÆ
 - 4;

650 
y_dïth
 = 
yvÆ
 + 4;

651 
x_À·
 = 
xvÆ
 - 11;

652 
x_right
 = 
xvÆ
 + 11;

657 
i
 = 
y_height
; i <
y_dïth
; i++)

659 
c_±r
 = &
ˇve
[
i
][
x_À·
];

660 
j
 = 
x_À·
; j <
x_right
; j++)

662 
c_±r
->
fvÆ
 = 
Êo‹
;

663 
c_±r
->
Ã
 = 
TRUE
;

664 
c_±r
++;

667 
i
 = (
y_height
 - 1); i <(
y_dïth
 + 1); i++)

669 
c_±r
 = &
ˇve
[
i
][
x_À·
-1];

670 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

671 
c_±r
->
Ã
 = 
TRUE
;

672 
c_±r
 = &
ˇve
[
i
][
x_right
+1];

673 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

674 
c_±r
->
Ã
 = 
TRUE
;

676 
c_±r
 = &
ˇve
[
y_height
 - 1][
x_À·
];

677 
d_±r
 = &
ˇve
[
y_dïth
 + 1][
x_À·
];

678 
i
 = 
x_À·
; i <
x_right
; i++)

680 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

681 
c_±r
->
Ã
 = 
TRUE
;

682 
c_±r
++;

683 
d_±r
->
fvÆ
 = 
GRANITE_WALL
;

684 
d_±r
->
Ã
 = 
TRUE
;

685 
d_±r
++;

688 
y_height
 = y_height + 2;

689 
y_dïth
 = y_depth - 2;

690 
x_À·
 = x_left + 2;

691 
x_right
 = x_right - 2;

692 
i
 = (
y_height
 - 1); i <(
y_dïth
 + 1); i++)

694 
ˇve
[
i
][
x_À·
-1].
fvÆ
 = 
TMP1_WALL
;

695 
ˇve
[
i
][
x_right
+1].
fvÆ
 = 
TMP1_WALL
;

697 
c_±r
 = &
ˇve
[
y_height
-1][
x_À·
];

698 
d_±r
 = &
ˇve
[
y_dïth
+1][
x_À·
];

699 
i
 = 
x_À·
; i <
x_right
; i++)

701 
c_±r
->
fvÆ
 = 
TMP1_WALL
;

702 
c_±r
++;

703 
d_±r
->
fvÆ
 = 
TMP1_WALL
;

704 
d_±r
++;

707 
	`øndöt
(5))

710 
tmp
 = 
	`øndöt
(4);

711 i‡(
tmp
 < 3) {

712 i‡(
tmp
 =1Ë
	`∂a˚_£¸ë_do‹
(
y_height
-1, 
xvÆ
);

713 
	`∂a˚_£¸ë_do‹
(
y_dïth
+1, 
xvÆ
);

715 i‡(
tmp
 =3Ë
	`∂a˚_£¸ë_do‹
(
yvÆ
, 
x_À·
-1);

716 
	`∂a˚_£¸ë_do‹
(
yvÆ
, 
x_right
+1);

718 
	`vau…_m⁄°î
(
yvÆ
, 
xvÆ
, 1);

722 
tmp
 = 
	`øndöt
(4);

723 i‡(
tmp
 < 3) {

724 i‡(
tmp
 =1Ë
	`∂a˚_£¸ë_do‹
(
y_height
-1, 
xvÆ
);

725 
	`∂a˚_£¸ë_do‹
(
y_dïth
+1, 
xvÆ
);

727 i‡(
tmp
 =3Ë
	`∂a˚_£¸ë_do‹
(
yvÆ
, 
x_À·
-1);

728 
	`∂a˚_£¸ë_do‹
(
yvÆ
, 
x_right
+1);

731 
i
 = 
yvÆ
-1; i <= yval+1; i++)

733 
ˇve
[
i
][
xvÆ
-1].
fvÆ
 = 
TMP1_WALL
;

734 
ˇve
[
i
][
xvÆ
+1].
fvÆ
 = 
TMP1_WALL
;

736 
ˇve
[
yvÆ
-1][
xvÆ
].
fvÆ
 = 
TMP1_WALL
;

737 
ˇve
[
yvÆ
+1][
xvÆ
].
fvÆ
 = 
TMP1_WALL
;

739 
tmp
 = 
	`øndöt
(4);

740 i‡(
tmp
 < 3)

741 
	`∂a˚_locked_do‹
(
yvÆ
-3+(
tmp
<<1), 
xvÆ
);

743 
	`∂a˚_locked_do‹
(
yvÆ
, 
xvÆ
-7+(
tmp
<<1));

746 
tmp
 = 
	`øndöt
(10);

747 i‡(
tmp
 > 2)

748 
	`∂a˚_obje˘
(
yvÆ
, 
xvÆ
, 
FALSE
);

749 i‡(
tmp
 == 2)

750 
	`∂a˚_down_°aús
(
yvÆ
, 
xvÆ
);

752 
	`∂a˚_up_°aús
(
yvÆ
, 
xvÆ
);

755 
	`vau…_m⁄°î
(
yvÆ
, 
xvÆ
, 2+
	`øndöt
(3));

757 
	`vau…_å≠
(
yvÆ
, 
xvÆ
, 4, 10, 2+
	`øndöt
(3));

761 
tmp
 = 
	`øndöt
(4);

762 i‡(
tmp
 < 3) {

763 i‡(
tmp
 =1Ë
	`∂a˚_£¸ë_do‹
(
y_height
-1, 
xvÆ
);

764 
	`∂a˚_£¸ë_do‹
(
y_dïth
+1, 
xvÆ
);

766 i‡(
tmp
 =3Ë
	`∂a˚_£¸ë_do‹
(
yvÆ
, 
x_À·
-1);

767 
	`∂a˚_£¸ë_do‹
(
yvÆ
, 
x_right
+1);

770 
i
 = 
yvÆ
-1; i <= yval+1; i++)

772 
c_±r
 = &
ˇve
[
i
][
xvÆ
-1];

773 
j
 = 
xvÆ
-1; j <= xval+1; j++)

775 
c_±r
->
fvÆ
 = 
TMP1_WALL
;

776 
c_±r
++;

779 i‡(
	`øndöt
(2) == 1)

781 
tmp
 = 
	`øndöt
(2);

782 
i
 = 
yvÆ
-1; i <= yval+1; i++)

784 
c_±r
 = &
ˇve
[
i
][
xvÆ
-5-
tmp
];

785 
j
 = 
xvÆ
-5-
tmp
; j <= xval-3-tmp; j++)

787 
c_±r
->
fvÆ
 = 
TMP1_WALL
;

788 
c_±r
++;

791 
i
 = 
yvÆ
-1; i <= yval+1; i++)

793 
c_±r
 = &
ˇve
[
i
][
xvÆ
+3+
tmp
];

794 
j
 = 
xvÆ
+3+
tmp
; j <= xval+5+tmp; j++)

796 
c_±r
->
fvÆ
 = 
TMP1_WALL
;

797 
c_±r
++;

802 i‡(
	`øndöt
(3) == 1)

804 
c_±r
 = &
ˇve
[
yvÆ
-1][
xvÆ
-5];

805 
d_±r
 = &
ˇve
[
yvÆ
+1][
xvÆ
-5];

806 
i
 = 
xvÆ
-5; i <= xval+5; i++)

808 
c_±r
->
fvÆ
 = 
TMP1_WALL
;

809 
c_±r
++;

810 
d_±r
->
fvÆ
 = 
TMP1_WALL
;

811 
d_±r
++;

813 
ˇve
[
yvÆ
][
xvÆ
-5].
fvÆ
 = 
TMP1_WALL
;

814 
ˇve
[
yvÆ
][
xvÆ
+5].
fvÆ
 = 
TMP1_WALL
;

815 
	`∂a˚_£¸ë_do‹
(
yvÆ
-3+(
	`øndöt
(2)<<1), 
xvÆ
-3);

816 
	`∂a˚_£¸ë_do‹
(
yvÆ
-3+(
	`øndöt
(2)<<1), 
xvÆ
+3);

817 i‡(
	`øndöt
(3Ë=1Ë
	`∂a˚_obje˘
(
yvÆ
, 
xvÆ
-2, 
FALSE
);

818 i‡(
	`øndöt
(3Ë=1Ë
	`∂a˚_obje˘
(
yvÆ
, 
xvÆ
+2, 
FALSE
);

819 
	`vau…_m⁄°î
(
yvÆ
, 
xvÆ
-2, 
	`øndöt
(2));

820 
	`vau…_m⁄°î
(
yvÆ
, 
xvÆ
+2, 
	`øndöt
(2));

825 
tmp
 = 
	`øndöt
(4);

826 i‡(
tmp
 < 3) {

827 i‡(
tmp
 =1Ë
	`∂a˚_£¸ë_do‹
(
y_height
-1, 
xvÆ
);

828 
	`∂a˚_£¸ë_do‹
(
y_dïth
+1, 
xvÆ
);

830 i‡(
tmp
 =3Ë
	`∂a˚_£¸ë_do‹
(
yvÆ
, 
x_À·
-1);

831 
	`∂a˚_£¸ë_do‹
(
yvÆ
, 
x_right
+1);

834 
i
 = 
y_height
; i <
y_dïth
; i++)

835 
j
 = 
x_À·
; j <
x_right
; j++)

836 i‡(0x1 & (
j
+
i
))

837 
ˇve
[
i
][
j
].
fvÆ
 = 
TMP1_WALL
;

840 
	`vau…_m⁄°î
(
yvÆ
, 
xvÆ
-5, 
	`øndöt
(3));

841 
	`vau…_m⁄°î
(
yvÆ
, 
xvÆ
+5, 
	`øndöt
(3));

843 
	`vau…_å≠
(
yvÆ
, 
xvÆ
-3, 2, 8, 
	`øndöt
(3));

844 
	`vau…_å≠
(
yvÆ
, 
xvÆ
+3, 2, 8, 
	`øndöt
(3));

846 
i
 = 0; i < 3; i++)

847 
	`øndom_obje˘
(
yvÆ
, 
xvÆ
, 1);

851 
i
 = 
y_height
; i <
y_dïth
; i++)

852 
ˇve
[
i
][
xvÆ
].
fvÆ
 = 
TMP1_WALL
;

854 
c_±r
 = &
ˇve
[
yvÆ
][
x_À·
];

855 
i
 = 
x_À·
; i <
x_right
; i++)

857 
c_±r
->
fvÆ
 = 
TMP1_WALL
;

858 
c_±r
++;

861 i‡(
	`øndöt
(2) == 1)

863 
i
 = 
	`øndöt
(10);

864 
	`∂a˚_£¸ë_do‹
(
y_height
-1, 
xvÆ
-
i
);

865 
	`∂a˚_£¸ë_do‹
(
y_height
-1, 
xvÆ
+
i
);

866 
	`∂a˚_£¸ë_do‹
(
y_dïth
+1, 
xvÆ
-
i
);

867 
	`∂a˚_£¸ë_do‹
(
y_dïth
+1, 
xvÆ
+
i
);

871 
i
 = 
	`øndöt
(3);

872 
	`∂a˚_£¸ë_do‹
(
yvÆ
+
i
, 
x_À·
-1);

873 
	`∂a˚_£¸ë_do‹
(
yvÆ
-
i
, 
x_À·
-1);

874 
	`∂a˚_£¸ë_do‹
(
yvÆ
+
i
, 
x_right
+1);

875 
	`∂a˚_£¸ë_do‹
(
yvÆ
-
i
, 
x_right
+1);

879 
	`øndom_obje˘
(
yvÆ
, 
xvÆ
, 2+
	`øndöt
(2));

881 
	`vau…_m⁄°î
(
yvÆ
+2, 
xvÆ
-4, 
	`øndöt
(2));

882 
	`vau…_m⁄°î
(
yvÆ
+2, 
xvÆ
+4, 
	`øndöt
(2));

883 
	`vau…_m⁄°î
(
yvÆ
-2, 
xvÆ
-4, 
	`øndöt
(2));

884 
	`vau…_m⁄°î
(
yvÆ
-2, 
xvÆ
+4, 
	`øndöt
(2));

887 
	}
}

892 
	$buûd_ty≥3
(
yvÆ
, 
xvÆ
)

893 
yvÆ
, 
xvÆ
;

895 
y_height
, 
y_dïth
;

896 
x_À·
, 
x_right
;

897 
tmp
, 
i
, 
j
;

898 
öt8u
 
Êo‹
;

899 
ˇve_ty≥
 *
c_±r
;

901 i‡(
dun_Àvñ
 <
	`øndöt
(25))

902 
Êo‹
 = 
LIGHT_FLOOR
;

904 
Êo‹
 = 
DARK_FLOOR
;

905 
tmp
 = 2 + 
	`øndöt
(2);

906 
y_height
 = 
yvÆ
 - 
tmp
;

907 
y_dïth
 = 
yvÆ
 + 
tmp
;

908 
x_À·
 = 
xvÆ
 - 1;

909 
x_right
 = 
xvÆ
 + 1;

910 
i
 = 
y_height
; i <
y_dïth
; i++)

911 
j
 = 
x_À·
; j <
x_right
; j++)

913 
c_±r
 = &
ˇve
[
i
][
j
];

914 
c_±r
->
fvÆ
 = 
Êo‹
;

915 
c_±r
->
Ã
 = 
TRUE
;

917 
i
 = (
y_height
 - 1); i <(
y_dïth
 + 1); i++)

919 
c_±r
 = &
ˇve
[
i
][
x_À·
-1];

920 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

921 
c_±r
->
Ã
 = 
TRUE
;

922 
c_±r
 = &
ˇve
[
i
][
x_right
+1];

923 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

924 
c_±r
->
Ã
 = 
TRUE
;

926 
i
 = 
x_À·
; i <
x_right
; i++)

928 
c_±r
 = &
ˇve
[
y_height
-1][
i
];

929 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

930 
c_±r
->
Ã
 = 
TRUE
;

931 
c_±r
 = &
ˇve
[
y_dïth
+1][
i
];

932 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

933 
c_±r
->
Ã
 = 
TRUE
;

935 
tmp
 = 2 + 
	`øndöt
(9);

936 
y_height
 = 
yvÆ
 - 1;

937 
y_dïth
 = 
yvÆ
 + 1;

938 
x_À·
 = 
xvÆ
 - 
tmp
;

939 
x_right
 = 
xvÆ
 + 
tmp
;

940 
i
 = 
y_height
; i <
y_dïth
; i++)

941 
j
 = 
x_À·
; j <
x_right
; j++)

943 
c_±r
 = &
ˇve
[
i
][
j
];

944 
c_±r
->
fvÆ
 = 
Êo‹
;

945 
c_±r
->
Ã
 = 
TRUE
;

947 
i
 = (
y_height
 - 1); i <(
y_dïth
 + 1); i++)

949 
c_±r
 = &
ˇve
[
i
][
x_À·
-1];

950 i‡(
c_±r
->
fvÆ
 !
Êo‹
)

952 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

953 
c_±r
->
Ã
 = 
TRUE
;

955 
c_±r
 = &
ˇve
[
i
][
x_right
+1];

956 i‡(
c_±r
->
fvÆ
 !
Êo‹
)

958 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

959 
c_±r
->
Ã
 = 
TRUE
;

962 
i
 = 
x_À·
; i <
x_right
; i++)

964 
c_±r
 = &
ˇve
[
y_height
-1][
i
];

965 i‡(
c_±r
->
fvÆ
 !
Êo‹
)

967 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

968 
c_±r
->
Ã
 = 
TRUE
;

970 
c_±r
 = &
ˇve
[
y_dïth
+1][
i
];

971 i‡(
c_±r
->
fvÆ
 !
Êo‹
)

973 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

974 
c_±r
->
Ã
 = 
TRUE
;

978 
	`øndöt
(4))

981 
i
 = 
yvÆ
-1; i <= yval+1; i++)

983 
c_±r
 = &
ˇve
[
i
][
xvÆ
-1];

984 
j
 = 
xvÆ
-1; j <= xval+1; j++)

986 
c_±r
->
fvÆ
 = 
TMP1_WALL
;

987 
c_±r
++;

993 
i
 = 
yvÆ
-1; i <= yval+1; i++)

995 
ˇve
[
i
][
xvÆ
-1].
fvÆ
 = 
TMP1_WALL
;

996 
ˇve
[
i
][
xvÆ
+1].
fvÆ
 = 
TMP1_WALL
;

998 
ˇve
[
yvÆ
-1][
xvÆ
].
fvÆ
 = 
TMP1_WALL
;

999 
ˇve
[
yvÆ
+1][
xvÆ
].
fvÆ
 = 
TMP1_WALL
;

1001 
tmp
 = 
	`øndöt
(4);

1002 i‡(
tmp
 < 3)

1003 
	`∂a˚_£¸ë_do‹
(
yvÆ
-3+(
tmp
<<1), 
xvÆ
);

1005 
	`∂a˚_£¸ë_do‹
(
yvÆ
, 
xvÆ
-7+(
tmp
<<1));

1008 
	`∂a˚_obje˘
(
yvÆ
, 
xvÆ
, 
FALSE
);

1010 
	`vau…_m⁄°î
(
yvÆ
, 
xvÆ
, 2+
	`øndöt
(2));

1012 
	`vau…_å≠
(
yvÆ
, 
xvÆ
, 4, 4, 1+
	`øndöt
(3));

1016 i‡(
	`øndöt
(3) == 1)

1018 
ˇve
[
yvÆ
-1][
xvÆ
-2].
fvÆ
 = 
TMP1_WALL
;

1019 
ˇve
[
yvÆ
+1][
xvÆ
-2].
fvÆ
 = 
TMP1_WALL
;

1020 
ˇve
[
yvÆ
-1][
xvÆ
+2].
fvÆ
 = 
TMP1_WALL
;

1021 
ˇve
[
yvÆ
+1][
xvÆ
+2].
fvÆ
 = 
TMP1_WALL
;

1022 
ˇve
[
yvÆ
-2][
xvÆ
-1].
fvÆ
 = 
TMP1_WALL
;

1023 
ˇve
[
yvÆ
-2][
xvÆ
+1].
fvÆ
 = 
TMP1_WALL
;

1024 
ˇve
[
yvÆ
+2][
xvÆ
-1].
fvÆ
 = 
TMP1_WALL
;

1025 
ˇve
[
yvÆ
+2][
xvÆ
+1].
fvÆ
 = 
TMP1_WALL
;

1026 i‡(
	`øndöt
(3) == 1)

1028 
	`∂a˚_£¸ë_do‹
(
yvÆ
, 
xvÆ
-2);

1029 
	`∂a˚_£¸ë_do‹
(
yvÆ
, 
xvÆ
+2);

1030 
	`∂a˚_£¸ë_do‹
(
yvÆ
-2, 
xvÆ
);

1031 
	`∂a˚_£¸ë_do‹
(
yvÆ
+2, 
xvÆ
);

1034 i‡(
	`øndöt
(3) == 1)

1036 
ˇve
[
yvÆ
][
xvÆ
].
fvÆ
 = 
TMP1_WALL
;

1037 
ˇve
[
yvÆ
-1][
xvÆ
].
fvÆ
 = 
TMP1_WALL
;

1038 
ˇve
[
yvÆ
+1][
xvÆ
].
fvÆ
 = 
TMP1_WALL
;

1039 
ˇve
[
yvÆ
][
xvÆ
-1].
fvÆ
 = 
TMP1_WALL
;

1040 
ˇve
[
yvÆ
][
xvÆ
+1].
fvÆ
 = 
TMP1_WALL
;

1042 i‡(
	`øndöt
(3) == 1)

1043 
ˇve
[
yvÆ
][
xvÆ
].
fvÆ
 = 
TMP1_WALL
;

1049 
	}
}

1053 
	$buûd_tu¬ñ
(
row1
, 
cﬁ1
, 
row2
, 
cﬁ2
)

1054 
row1
, 
cﬁ1
, 
row2
, 
cﬁ2
;

1056 
tmp_row
, 
tmp_cﬁ
, 
i
, 
j
;

1057 
ˇve_ty≥
 *
c_±r
;

1058 
ˇve_ty≥
 *
d_±r
;

1059 
co‹ds
 
tun°k
[1000], 
wÆl°k
[1000];

1060 
co‹ds
 *
tun_±r
;

1061 
row_dú
, 
cﬁ_dú
, 
tunödex
, 
wÆlödex
;

1062 
°›_Êag
, 
do‹_Êag
, 
maö_lo›_cou¡
;

1063 
°¨t_row
, 
°¨t_cﬁ
;

1067 
°›_Êag
 = 
FALSE
;

1068 
do‹_Êag
 = 
FALSE
;

1069 
tunödex
 = 0;

1070 
wÆlödex
 = 0;

1071 
maö_lo›_cou¡
 = 0;

1072 
°¨t_row
 = 
row1
;

1073 
°¨t_cﬁ
 = 
cﬁ1
;

1074 
	`c‹ª˘_dú
(&
row_dú
, &
cﬁ_dú
, 
row1
, 
cﬁ1
, 
row2
, 
cﬁ2
);

1079 
maö_lo›_cou¡
++;

1080 i‡(
maö_lo›_cou¡
 > 2000)

1081 
°›_Êag
 = 
TRUE
;

1083 i‡(
	`øndöt
(100Ë> 
DUN_TUN_CHG
)

1085 i‡(
	`øndöt
(
DUN_TUN_RND
) == 1)

1086 
	`ønd_dú
(&
row_dú
, &
cﬁ_dú
);

1088 
	`c‹ª˘_dú
(&
row_dú
, &
cﬁ_dú
, 
row1
, 
cﬁ1
, 
row2
, 
cﬁ2
);

1090 
tmp_row
 = 
row1
 + 
row_dú
;

1091 
tmp_cﬁ
 = 
cﬁ1
 + 
cﬁ_dú
;

1092 !
	`ö_bounds
(
tmp_row
, 
tmp_cﬁ
))

1094 i‡(
	`øndöt
(
DUN_TUN_RND
) == 1)

1095 
	`ønd_dú
(&
row_dú
, &
cﬁ_dú
);

1097 
	`c‹ª˘_dú
(&
row_dú
, &
cﬁ_dú
, 
row1
, 
cﬁ1
, 
row2
, 
cﬁ2
);

1098 
tmp_row
 = 
row1
 + 
row_dú
;

1099 
tmp_cﬁ
 = 
cﬁ1
 + 
cﬁ_dú
;

1101 
c_±r
 = &
ˇve
[
tmp_row
][
tmp_cﬁ
];

1102 i‡(
c_±r
->
fvÆ
 =
NULL_WALL
)

1104 
row1
 = 
tmp_row
;

1105 
cﬁ1
 = 
tmp_cﬁ
;

1106 i‡(
tunödex
 < 1000)

1108 
tun°k
[
tunödex
].
y
 = 
row1
;

1109 
tun°k
[
tunödex
].
x
 = 
cﬁ1
;

1110 
tunödex
++;

1112 
do‹_Êag
 = 
FALSE
;

1114 i‡(
c_±r
->
fvÆ
 =
TMP2_WALL
)

1117 i‡(
c_±r
->
fvÆ
 =
GRANITE_WALL
)

1119 
row1
 = 
tmp_row
;

1120 
cﬁ1
 = 
tmp_cﬁ
;

1121 i‡(
wÆlödex
 < 1000)

1123 
wÆl°k
[
wÆlödex
].
y
 = 
row1
;

1124 
wÆl°k
[
wÆlödex
].
x
 = 
cﬁ1
;

1125 
wÆlödex
++;

1127 
i
 = 
row1
-1; i <=Ñow1+1; i++)

1128 
j
 = 
cﬁ1
-1; j <= col1+1; j++)

1129 i‡(
	`ö_bounds
(
i
, 
j
))

1131 
d_±r
 = &
ˇve
[
i
][
j
];

1134 i‡(
d_±r
->
fvÆ
 =
GRANITE_WALL
)

1135 
d_±r
->
fvÆ
 = 
TMP2_WALL
;

1138 i‡(
c_±r
->
fvÆ
 =
CORR_FLOOR
 || c_±r->fvÆ =
BLOCKED_FLOOR
)

1140 
row1
 = 
tmp_row
;

1141 
cﬁ1
 = 
tmp_cﬁ
;

1142 i‡(!
do‹_Êag
)

1144 i‡(
do‹ödex
 < 100)

1146 
do‹°k
[
do‹ödex
].
y
 = 
row1
;

1147 
do‹°k
[
do‹ödex
].
x
 = 
cﬁ1
;

1148 
do‹ödex
++;

1150 
do‹_Êag
 = 
TRUE
;

1152 i‡(
	`øndöt
(100Ë> 
DUN_TUN_CON
)

1156 
tmp_row
 = 
row1
 - 
°¨t_row
;

1157 i‡(
tmp_row
 < 0)Åmp_row = -tmp_row;

1158 
tmp_cﬁ
 = 
cﬁ1
 - 
°¨t_cﬁ
;

1159 i‡(
tmp_cﬁ
 < 0)Åmp_col = -tmp_col;

1160 i‡(
tmp_row
 > 10 || 
tmp_cﬁ
 > 10)

1161 
°›_Êag
 = 
TRUE
;

1166 
row1
 = 
tmp_row
;

1167 
cﬁ1
 = 
tmp_cﬁ
;

1170 ((
row1
 !
row2
Ë|| (
cﬁ1
 !
cﬁ2
)Ë&& (!
°›_Êag
));

1172 
tun_±r
 = &
tun°k
[0];

1173 
i
 = 0; i < 
tunödex
; i++)

1175 
d_±r
 = &
ˇve
[
tun_±r
->
y
][tun_±r->
x
];

1176 
d_±r
->
fvÆ
 = 
CORR_FLOOR
;

1177 
tun_±r
++;

1179 
i
 = 0; i < 
wÆlödex
; i++)

1181 
c_±r
 = &
ˇve
[
wÆl°k
[
i
].
y
][wÆl°k[i].
x
];

1182 i‡(
c_±r
->
fvÆ
 =
TMP2_WALL
)

1184 i‡(
	`øndöt
(100Ë< 
DUN_TUN_PEN
)

1185 
	`∂a˚_do‹
(
wÆl°k
[
i
].
y
, wÆl°k[i].
x
);

1189 
c_±r
->
fvÆ
 = 
CORR_FLOOR
;

1193 
	}
}

1196 
	$√xt_to
(
y
, 
x
)

1197 
y
, 
x
;

1199 
√xt
;

1201 i‡(
	`√xt_to_c‹r
(
y
, 
x
) > 2)

1202 i‡((
ˇve
[
y
-1][
x
].
fvÆ
 >
MIN_CAVE_WALL
)

1203 && (
ˇve
[
y
+1][
x
].
fvÆ
 >
MIN_CAVE_WALL
))

1204 
√xt
 = 
TRUE
;

1205 i‡((
ˇve
[
y
][
x
-1].
fvÆ
 >
MIN_CAVE_WALL
)

1206 && (
ˇve
[
y
][
x
+1].
fvÆ
 >
MIN_CAVE_WALL
))

1207 
√xt
 = 
TRUE
;

1209 
√xt
 = 
FALSE
;

1211 
√xt
 = 
FALSE
;

1212 (
√xt
);

1213 
	}
}

1216 
	$åy_do‹
(
y
, 
x
)

1217 
y
, 
x
;

1219 i‡((
ˇve
[
y
][
x
].
fvÆ
 =
CORR_FLOOR
Ë&& (
	`øndöt
(100Ë> 
DUN_TUN_JCT
)

1220 && 
	`√xt_to
(
y
, 
x
))

1221 
	`∂a˚_do‹
(
y
, 
x
);

1222 
	}
}

1226 
	$√w_•Ÿ
(
y
, 
x
)

1227 
öt16
 *
y
, *
x
;

1229 
i
, 
j
;

1230 
ˇve_ty≥
 *
c_±r
;

1234 
i
 = 
	`øndöt
(
cur_height
 - 2);

1235 
j
 = 
	`øndöt
(
cur_width
 - 2);

1236 
c_±r
 = &
ˇve
[
i
][
j
];

1238 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
 || (c_±r->
˝å
 != 0)

1239 || (
c_±r
->
çå
 != 0));

1240 *
y
 = 
i
;

1241 *
x
 = 
j
;

1242 
	}
}

1246 
	$ˇve_gí
()

1248 
	s•Ÿ_ty≥


1250 
ídx
;

1251 
ídy
;

1253 
room_m≠
[20][20];

1254 
i
, 
j
, 
k
;

1255 
y1
, 
x1
, 
y2
, 
x2
, 
pick1
, 
pick2
, 
tmp
;

1256 
row_rooms
, 
cﬁ_rooms
, 
Æloc_Àvñ
;

1257 
öt16
 
yloc
[400], 
xloc
[400];

1259 
row_rooms
 = 2*(
cur_height
/
SCREEN_HEIGHT
);

1260 
cﬁ_rooms
 = 2*(
cur_width
 /
SCREEN_WIDTH
);

1261 
i
 = 0; i < 
row_rooms
; i++)

1262 
j
 = 0; j < 
cﬁ_rooms
; j++)

1263 
room_m≠
[
i
][
j
] = 
FALSE
;

1264 
k
 = 
	`øndn‹
(
DUN_ROO_MEA
, 2);

1265 
i
 = 0; i < 
k
; i++)

1266 
room_m≠
[
	`øndöt
(
row_rooms
)-1][øndöt(
cﬁ_rooms
)-1] = 
TRUE
;

1267 
k
 = 0;

1268 
i
 = 0; i < 
row_rooms
; i++)

1269 
j
 = 0; j < 
cﬁ_rooms
; j++)

1270 i‡(
room_m≠
[
i
][
j
] =
TRUE
)

1272 
yloc
[
k
] = 
i
 * (
SCREEN_HEIGHT
 >> 1Ë+ 
QUART_HEIGHT
;

1273 
xloc
[
k
] = 
j
 * (
SCREEN_WIDTH
 >> 1Ë+ 
QUART_WIDTH
;

1274 i‡(
dun_Àvñ
 > 
	`øndöt
(
DUN_UNUSUAL
))

1276 
tmp
 = 
	`øndöt
(3);

1277 i‡(
tmp
 =1Ë
	`buûd_ty≥1
(
yloc
[
k
], 
xloc
[k]);

1278 i‡(
tmp
 =2Ë
	`buûd_ty≥2
(
yloc
[
k
], 
xloc
[k]);

1279 
	`buûd_ty≥3
(
yloc
[
k
], 
xloc
[k]);

1282 
	`buûd_room
(
yloc
[
k
], 
xloc
[k]);

1283 
k
++;

1284 #ifde‡
MAC


1285 
	`Sy°emTask
 ();

1288 
i
 = 0; i < 
k
; i++)

1290 
pick1
 = 
	`øndöt
(
k
) - 1;

1291 
pick2
 = 
	`øndöt
(
k
) - 1;

1292 
y1
 = 
yloc
[
pick1
];

1293 
x1
 = 
xloc
[
pick1
];

1294 
yloc
[
pick1
] = yloc[
pick2
];

1295 
xloc
[
pick1
] = xloc[
pick2
];

1296 
yloc
[
pick2
] = 
y1
;

1297 
xloc
[
pick2
] = 
x1
;

1299 
do‹ödex
 = 0;

1301 
yloc
[
k
] = yloc[0];

1302 
xloc
[
k
] = xloc[0];

1303 
i
 = 0; i < 
k
; i++)

1305 
y1
 = 
yloc
[
i
];

1306 
x1
 = 
xloc
[
i
];

1307 
y2
 = 
yloc
[
i
+1];

1308 
x2
 = 
xloc
[
i
+1];

1309 
	`buûd_tu¬ñ
(
y2
, 
x2
, 
y1
, 
x1
);

1311 #ifde‡
MAC


1312 
	`Sy°emTask
 ();

1314 
	`fûl_ˇve
(
GRANITE_WALL
);

1315 
i
 = 0; i < 
DUN_STR_MAG
; i++)

1316 
	`∂a˚_°ªamî
(
MAGMA_WALL
, 
DUN_STR_MC
);

1317 
i
 = 0; i < 
DUN_STR_QUA
; i++)

1318 
	`∂a˚_°ªamî
(
QUARTZ_WALL
, 
DUN_STR_QC
);

1319 
	`∂a˚_bound¨y
();

1321 
i
 = 0; i < 
do‹ödex
; i++)

1323 
	`åy_do‹
(
do‹°k
[
i
].
y
, do‹°k[i].
x
-1);

1324 
	`åy_do‹
(
do‹°k
[
i
].
y
, do‹°k[i].
x
+1);

1325 
	`åy_do‹
(
do‹°k
[
i
].
y
-1, do‹°k[i].
x
);

1326 
	`åy_do‹
(
do‹°k
[
i
].
y
+1, do‹°k[i].
x
);

1328 #ifde‡
MAC


1329 
	`Sy°emTask
 ();

1331 
Æloc_Àvñ
 = (
dun_Àvñ
/3);

1332 i‡(
Æloc_Àvñ
 < 2)

1333 
Æloc_Àvñ
 = 2;

1334 i‡(
Æloc_Àvñ
 > 10)

1335 
Æloc_Àvñ
 = 10;

1336 
	`∂a˚_°aús
(2, 
	`øndöt
(2)+2, 3);

1337 
	`∂a˚_°aús
(1, 
	`øndöt
(2), 3);

1339 
	`√w_•Ÿ
(&
ch¨_row
, &
ch¨_cﬁ
);

1340 
	`Æloc_m⁄°î
((
	`øndöt
(8)+
MIN_MALLOC_LEVEL
+
Æloc_Àvñ
), 0, 
TRUE
);

1341 
	`Æloc_obje˘
(
£t_c‹r
, 3, 
	`øndöt
(
Æloc_Àvñ
));

1342 
	`Æloc_obje˘
(
£t_room
, 5, 
	`øndn‹
(
TREAS_ROOM_ALLOC
, 3));

1343 
	`Æloc_obje˘
(
£t_Êo‹
, 5, 
	`øndn‹
(
TREAS_ANY_ALLOC
, 3));

1344 
	`Æloc_obje˘
(
£t_Êo‹
, 4, 
	`øndn‹
(
TREAS_GOLD_ALLOC
, 3));

1345 
	`Æloc_obje˘
(
£t_Êo‹
, 1, 
	`øndöt
(
Æloc_Àvñ
));

1346 i‡(
dun_Àvñ
 >
WIN_MON_APPEAR
Ë
	`∂a˚_wö_m⁄°î
();

1347 
	}
}

1351 
	$buûd_°‹e
(
°‹e_num
, 
y
, 
x
)

1352 
°‹e_num
, 
y
, 
x
;

1354 
yvÆ
, 
y_height
, 
y_dïth
;

1355 
xvÆ
, 
x_À·
, 
x_right
;

1356 
i
, 
j
;

1357 
cur_pos
, 
tmp
;

1358 
ˇve_ty≥
 *
c_±r
;

1360 
yvÆ
 = 
y
*10 + 5;

1361 
xvÆ
 = 
x
*16 + 16;

1362 
y_height
 = 
yvÆ
 - 
	`øndöt
(3);

1363 
y_dïth
 = 
yvÆ
 + 
	`øndöt
(4);

1364 
x_À·
 = 
xvÆ
 - 
	`øndöt
(6);

1365 
x_right
 = 
xvÆ
 + 
	`øndöt
(6);

1366 
i
 = 
y_height
; i <
y_dïth
; i++)

1367 
j
 = 
x_À·
; j <
x_right
; j++)

1368 
ˇve
[
i
][
j
].
fvÆ
 = 
BOUNDARY_WALL
;

1369 
tmp
 = 
	`øndöt
(4);

1370 i‡(
tmp
 < 3)

1372 
i
 = 
	`øndöt
(
y_dïth
-
y_height
) + y_height - 1;

1373 i‡(
tmp
 =1Ë
j
 = 
x_À·
;

1374 
j
 = 
x_right
;

1378 
j
 = 
	`øndöt
(
x_right
-
x_À·
) + x_left - 1;

1379 i‡(
tmp
 =3Ë
i
 = 
y_dïth
;

1380 
i
 = 
y_height
;

1382 
c_±r
 = &
ˇve
[
i
][
j
];

1383 
c_±r
->
fvÆ
 = 
CORR_FLOOR
;

1384 
cur_pos
 = 
	`p›t
();

1385 
c_±r
->
çå
 = 
cur_pos
;

1386 
	`övc›y
(&
t_li°
[
cur_pos
], 
OBJ_STORE_DOOR
 + 
°‹e_num
);

1387 
	}
}

1391 
	$éök
()

1393 
i
;

1395 
i
 = 0; i < 
MAX_TALLOC
; i++)

1396 
	`övc›y
(&
t_li°
[
i
], 
OBJ_NOTHING
);

1397 
t˝å
 = 
MIN_TRIX
;

1398 
	}
}

1402 
	$mlök
()

1404 
i
;

1406 
i
 = 0; i < 
MAX_MALLOC
; i++)

1407 
m_li°
[
i
] = 
bœnk_m⁄°î
;

1408 
mÂå
 = 
MIN_MONIX
;

1409 
	}
}

1413 
	$town_gí
()

1415 
i
, 
j
, 
l
, 
m
;

1416 
ˇve_ty≥
 *
c_±r
;

1417 
rooms
[6], 
k
;

1419 
	`£t_£ed
(
town_£ed
);

1420 
i
 = 0; i < 6; i++)

1421 
rooms
[
i
] = i;

1422 
l
 = 6;

1423 
i
 = 0; i < 2; i++)

1424 
j
 = 0; j < 3; j++)

1426 
k
 = 
	`øndöt
(
l
) - 1;

1427 
	`buûd_°‹e
(
rooms
[
k
], 
i
, 
j
);

1428 
m
 = 
k
; m < 
l
-1; m++)

1429 
rooms
[
m
] =Ñooms[m+1];

1430 
l
--;

1432 
	`fûl_ˇve
(
DARK_FLOOR
);

1434 
	`∂a˚_bound¨y
();

1435 
	`∂a˚_°aús
(2, 1, 0);

1436 
	`ª£t_£ed
();

1438 
	`√w_•Ÿ
(&
ch¨_row
, &
ch¨_cﬁ
);

1439 i‡(0x1 & (
tu∫
 / 5000))

1441 
i
 = 0; i < 
cur_height
; i++)

1443 
c_±r
 = &
ˇve
[
i
][0];

1444 
j
 = 0; j < 
cur_width
; j++)

1446 i‡(
c_±r
->
fvÆ
 !
DARK_FLOOR
)

1447 
c_±r
->
∂
 = 
TRUE
;

1448 
c_±r
++;

1450 #ifde‡
MAC


1451 
	`Sy°emTask
 ();

1454 
	`Æloc_m⁄°î
(
MIN_MALLOC_TN
, 3, 
TRUE
);

1458 
i
 = 0; i < 
cur_height
; i++)

1460 
c_±r
 = &
ˇve
[
i
][0];

1461 
j
 = 0; j < 
cur_width
; j++)

1463 
c_±r
->
∂
 = 
TRUE
;

1464 
c_±r
++;

1466 #ifde‡
MAC


1467 
	`Sy°emTask
 ();

1470 
	`Æloc_m⁄°î
(
MIN_MALLOC_TD
, 3, 
TRUE
);

1472 
	`°‹e_maöt
();

1473 
	}
}

1477 
	$gíî©e_ˇve
()

1479 
∑√l_row_mö
 = 0;

1480 
∑√l_row_max
 = 0;

1481 
∑√l_cﬁ_mö
 = 0;

1482 
∑√l_cﬁ_max
 = 0;

1483 
ch¨_row
 = -1;

1484 
ch¨_cﬁ
 = -1;

1486 #ifde‡
MAC


1487 
	`macbegöwaô
 ();

1490 
	`éök
();

1491 
	`mlök
();

1492 
	`bœnk_ˇve
();

1494 i‡(
dun_Àvñ
 == 0)

1496 
cur_height
 = 
SCREEN_HEIGHT
;

1497 
cur_width
 = 
SCREEN_WIDTH
;

1498 
max_∑√l_rows
 = (
cur_height
/
SCREEN_HEIGHT
)*2 - 2;

1499 
max_∑√l_cﬁs
 = (
cur_width
 /
SCREEN_WIDTH
 )*2 - 2;

1500 
∑√l_row
 = 
max_∑√l_rows
;

1501 
∑√l_cﬁ
 = 
max_∑√l_cﬁs
;

1502 
	`town_gí
();

1506 
cur_height
 = 
MAX_HEIGHT
;

1507 
cur_width
 = 
MAX_WIDTH
;

1508 
max_∑√l_rows
 = (
cur_height
/
SCREEN_HEIGHT
)*2 - 2;

1509 
max_∑√l_cﬁs
 = (
cur_width
 /
SCREEN_WIDTH
 )*2 - 2;

1510 
∑√l_row
 = 
max_∑√l_rows
;

1511 
∑√l_cﬁ
 = 
max_∑√l_cﬁs
;

1512 
	`ˇve_gí
();

1514 #ifde‡
MAC


1515 
	`ma˚ndwaô
 ();

1517 
	}
}

	@help.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

12 
	~"exã∫s.h
"

15 
	$idít_ch¨
()

17 
comm™d
, 
quîy
;

18 
i
, 
n
;

20 i‡(
	`gë_com
("E¡î ch¨a˘îÅÿbêidítifõd :", &
comm™d
))

21 
comm™d
)

25 ' ': 
	`¥t
(" - An openÖit.", 0, 0); ;

26 '!': 
	`¥t
("! - AÖotion.", 0, 0); ;

27 '"': 
	`¥t
("\" - Anámulet,Öeriapt, orÇecklace.", 0, 0); ;

28 '#': 
	`¥t
("# - A stone wall.", 0, 0); ;

29 '$': 
	`¥t
("$ - Treasure.", 0, 0); ;

31 i‡(
highlight_£ams
 =
TRUE
)

32 
	`¥t
("% - A magma or quartz vein.", 0, 0);

34 
	`¥t
("% - Not used.", 0, 0);

36 '&': 
	`¥t
("& - Treasure chest.", 0, 0); ;

37 '\'': 
	`¥t
("' - An open door.", 0, 0); ;

38 '(': 
	`¥t
("( - Softármor.", 0, 0); ;

39 ')': 
	`¥t
(") - A shield.", 0, 0); ;

40 '*': 
	`¥t
("* - Gems.", 0, 0); ;

41 '+': 
	`¥t
("+ - A closed door.", 0, 0); ;

42 ',': 
	`¥t
(", - Food or mushroomÖatch.", 0, 0); ;

43 '-': 
	`¥t
("- - A wand", 0, 0); ;

44 '.': 
	`¥t
(". - Floor.", 0, 0); ;

45 '/': 
	`¥t
("/ - AÖole weapon.", 0, 0); ;

47 '1': 
	`¥t
("1 - EntranceÅo General Store.", 0, 0); ;

48 '2': 
	`¥t
("2 - EntranceÅo Armory.", 0, 0); ;

49 '3': 
	`¥t
("3 - EntranceÅo Weaponsmith.", 0, 0); ;

50 '4': 
	`¥t
("4 - EntranceÅo Temple.", 0, 0); ;

51 '5': 
	`¥t
("5 - EntranceÅo Alchemy shop.", 0, 0); ;

52 '6': 
	`¥t
("6 - EntranceÅo Magic-Users store.", 0, 0); ;

56 ':': 
	`¥t
(": - Rubble.", 0, 0); ;

57 ';': 
	`¥t
("; - AÜooseÑock.", 0, 0); ;

58 '<': 
	`¥t
("< - An up staircase.", 0, 0); ;

59 '=': 
	`¥t
("= - AÑing.", 0, 0); ;

60 '>': 
	`¥t
("> - A down staircase.", 0, 0); ;

61 '?': 
	`¥t
("? - A scroll.", 0, 0); ;

62 '@': 
	`¥t
(
py
.
misc
.
«me
, 0, 0); ;

63 'A': 
	`¥t
("A - Giant Ant Lion.", 0, 0); ;

64 'B': 
	`¥t
("B - The Balrog.", 0, 0); ;

65 'C': 
	`¥t
("C - Gelatinous Cube.", 0, 0); ;

66 'D': 
	`¥t
("D - An Ancient Dragon (Beware).", 0, 0); ;

67 'E': 
	`¥t
("E - Elemental.", 0, 0); ;

68 'F': 
	`¥t
("F - Giant Fly.", 0, 0); ;

69 'G': 
	`¥t
("G - Ghost.", 0, 0); ;

70 'H': 
	`¥t
("H - Hobgoblin.", 0, 0); ;

72 'J': 
	`¥t
("J - Jelly.", 0, 0); ;

73 'K': 
	`¥t
("K - Killer Beetle.", 0, 0); ;

74 'L': 
	`¥t
("L - Lich.", 0, 0); ;

75 'M': 
	`¥t
("M - Mummy.", 0, 0); ;

77 'O': 
	`¥t
("O - Ooze.", 0, 0); ;

78 'P': 
	`¥t
("P - Giant humanoid.", 0, 0); ;

79 'Q': 
	`¥t
("Q - Quylthulg (Pulsing Flesh Mound).", 0, 0); ;

80 'R': 
	`¥t
("R - Reptile.", 0, 0); ;

81 'S': 
	`¥t
("S - Giant Scorpion.", 0, 0); ;

82 'T': 
	`¥t
("T - Troll.", 0, 0); ;

83 'U': 
	`¥t
("U - Umber Hulk.", 0, 0); ;

84 'V': 
	`¥t
("V - Vampire.", 0, 0); ;

85 'W': 
	`¥t
("W - Wight or Wraith.", 0, 0); ;

86 'X': 
	`¥t
("X - Xorn.", 0, 0); ;

87 'Y': 
	`¥t
("Y - Yeti.", 0, 0); ;

89 '[': 
	`¥t
("[ - Hardármor.", 0, 0); ;

90 '\\': 
	`¥t
("\\ - A hafted weapon.", 0, 0); ;

91 ']': 
	`¥t
("] - Misc.ármor.", 0, 0); ;

92 '^': 
	`¥t
("^ - AÅrap.", 0, 0); ;

93 '_': 
	`¥t
("_ - A staff.", 0, 0); ;

95 'a': 
	`¥t
("a - Giant Ant.", 0, 0); ;

96 'b': 
	`¥t
("b - Giant Bat.", 0, 0); ;

97 'c': 
	`¥t
("c - Giant Centipede.", 0, 0); ;

98 'd': 
	`¥t
("d - Dragon.", 0, 0); ;

99 'e': 
	`¥t
("e - Floating Eye.", 0, 0); ;

100 'f': 
	`¥t
("f - Giant Frog.", 0, 0); ;

101 'g': 
	`¥t
("g - Golem.", 0, 0); ;

102 'h': 
	`¥t
("h - Harpy.", 0, 0); ;

103 'i': 
	`¥t
("i - Icky Thing.", 0, 0); ;

104 'j': 
	`¥t
("j - Jackal.", 0, 0); ;

105 'k': 
	`¥t
("k - Kobold.", 0, 0); ;

106 'l': 
	`¥t
("l - Giant Louse.", 0, 0); ;

107 'm': 
	`¥t
("m - Mold.", 0, 0); ;

108 'n': 
	`¥t
("n - Naga.", 0, 0); ;

109 'o': 
	`¥t
("o - Orc or Ogre.", 0, 0); ;

110 'p': 
	`¥t
("p - Person (Humanoid).", 0, 0); ;

111 'q': 
	`¥t
("q - Quasit.", 0, 0); ;

112 'r': 
	`¥t
("r - Rodent.", 0, 0); ;

113 's': 
	`¥t
("s - Skeleton.", 0, 0); ;

114 't': 
	`¥t
("t - Giant Tick.", 0, 0); ;

117 'w': 
	`¥t
("w - Worm or Worm Mass.", 0, 0); ;

119 'y': 
	`¥t
("y - Yeek.", 0, 0); ;

120 'z': 
	`¥t
("z - Zombie.", 0, 0); ;

121 '{': 
	`¥t
("{ - Arrow, bolt, or bullet.", 0, 0); ;

122 '|': 
	`¥t
("| - A sword or dagger.", 0, 0); ;

123 '}': 
	`¥t
("} - Bow, crossbow, or sling.", 0, 0); ;

124 '~': 
	`¥t
("~ - Miscellaneous item.", 0, 0); ;

125 : 
	`¥t
("Not Used.", 0, 0); ;

129 
n
 = 0;

130 
i
 = 
MAX_CREATURES
-1; i >= 0; i--)

131 i‡((
c_li°
[
i
].
cch¨
 =
comm™d
Ë&& 
	`boﬁ_roff_ªˇŒ
 (i))

133 i‡(
n
 == 0)

135 
	`put_buf„r
 ("YouÑecallÅhose details? [y/n]", 0, 40);

136 
quîy
 = 
	`ökey
();

137 i‡(
quîy
 != 'y' && query != 'Y')

139 
	`îa£_löe
 (0, 40);

140 
	`ßve_s¸ìn
 ();

142 
n
++;

143 
quîy
 = 
	`roff_ªˇŒ
 (
i
);

144 
	`ª°‹e_s¸ìn
 ();

145 i‡(
quîy
 =
ESCAPE
)

148 
	}
}

	@io.c

9 
	~<°dio.h
>

10 #i‚de‡
STDIO_LOADED


11 
	#STDIO_LOADED


	)

14 
	~"c⁄fig.h
"

16 #ifde‡
HPUX


17 
	~<sys/bsdây.h
>

20 #i‡
deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

21 
	~<osböd.h
>

24 #ifde‡
MSDOS


25 
	~<¥o˚ss.h
>

28 #ifde‡
AMIGA


30 
	g_°ack
 = 30000;

31 
	g_¥i‹ôy
 = 0;

32 
	g_BackGroundIO
 = 1;

33 *
	g_¥o˙ame
 = "Moria";

36 #i‡
deföed
(
NLS
Ë&& deföed(
löt
)

38 #unde‡
NLS


41 #i‡!
deföed
(
GEMDOS
)

42 #ifde‡
MAC


43 #ifde‡
THINK_C


44 
	~"S¸nMgr.h
"

46 
	~<s¸nmgr.h
>

49 
	~<cur£s.h
>

52 
	~"cur£s.h
"

53 
wgëch
();

54 #ifde‡
ATARIST_TC


55 
	~<tos.h
>

56 
	~<ext.h
>

58 
	~<osböd.h
>

60 *
gëív
();

64 
	~<˘y≥.h
>

66 #i‡
deföed
(
SYS_V
Ë&& deföed(
löt
)

69 
	#_h_IEEETRAP


	)

70 °ru˘ { 
	m°uff
; } 
	tÂvmach
;

73 #i‡
deföed
(
MSDOS
)

74 #i‡
deföed
(
ANSI
)

75 
	~"ms_™si.h
"

78 #i‡!
deföed
(
ATARI_ST
Ë&& !deföed(
MAC
Ë&& !deföed(
AMIGA
)

79 #i‚de‡
VMS


80 
	~<sys/io˘l.h
>

82 
	~<sig«l.h
>

86 #i‚de‡
USG


88 
	~<sys/∑øm.h
>

89 
	~<sys/fûe.h
>

90 
	~<sys/ty≥s.h
>

93 #ifde‡
USG


94 #i‚de‡
ATARI_ST


95 
	~<°rög.h
>

97 
	~"°rög.h
"

102 #i‡!
deföed
(
MAC
Ë&& !deföed(
MSDOS
Ë&& !deföed(
ATARI_ST
)

103 #i‡!
deföed
(
AMIGA
Ë&& !deföed(
VMS
)

104 
	~<ãrmio.h
>

108 #ifde‡
HPUX


110 
	~<ãrmio.h
>

113 
	~<°rögs.h
>

114 #i‡
deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

117 
	~<sys/waô.h
>

121 #ifde‡
ATARIST_TC


123 
	~<°dlib.h
>

129 
	~"c⁄°™t.h
"

130 
	~"ty≥s.h
"

131 
	~"exã∫s.h
"

133 #i‡
deföed
(
SYS_V
Ë&& deföed(
löt
)

134 
	ss¸ìn
 { 
	mdumb
; };

142 #i‚de‡
MAC


143 #ifde‡
löt


144 #ifde‡
Pyømid


148 
	$Io˘l
(
i
, 
l
, 
p
Ël; *p; {  0; 
	}
}

152 
	$Io˘l
(
i
, 
l
, 
p
Ë*p; {  0; 
	}
}

154 
	#io˘l
 
Io˘l


	)

157 #i‡!
deföed
(
USG
Ë&& deföed(
löt
)

161 
	gU£_vÆue
;

162 
	#u£_vÆue
 
U£_vÆue
 +=

	)

164 
	#u£_vÆue


	)

167 #i‡
deföed
(
SYS_V
Ë&& deföed(
löt
)

171 
	gU£_vÆue2
;

172 
	#u£_vÆue2
 
U£_vÆue2
 +=

	)

174 
	#u£_vÆue2


	)

179 #i‚de‡
MAC


180 *
gëív
();

183 #i‚de‡
VMS


184 #ifde‡
USG


185 
exô
();

186 #i‡
deföed
(
__TURBOC__
)

187 
¶ìp
();

189 #i‚de‡
AMIGA


190 
¶ìp
();

196 #ifde‡
u…rix


197 
exô
();

198 
¶ìp
();

201 #i‡!
deföed
(
MAC
Ë&& !deföed(
MSDOS
Ë&& !deföed(
ATARI_ST
Ë&& !deföed(
VMS
)

202 #i‚de‡
AMIGA


203 #ifde‡
USG


204 #ifde‡
__löux__


205 
ãrmios
 
	gßve_ãrmio
;

207 
ãrmio
 
	gßve_ãrmio
;

210 
…ch¨s
 
	gßve_•ecül_ch¨s
;

211 
sgâyb
 
	gßve_âyb
;

212 
tch¨s
 
	gßve_tch¨s
;

213 
	gßve_loˇl_ch¨s
;

218 #i‚de‡
MAC


219 
	gcur£s_⁄
 = 
FALSE
;

220 
WINDOW
 *
	gßves¸
;

221 #ifde‡
VMS


222 
WINDOW
 *
	gãmps¸
;

226 #ifde‡
MAC


228 
	#ATTR_NORMAL
 
©åN‹mÆ


	)

229 
	#ATTR_HILITED
 
©åRevî£d


	)

232 #i‚de‡
MAC


233 #ifde‡
SIGTSTP


238 
	$su•íd
()

240 #ifde‡
USG


244 
sgâyb
 
tbuf
;

245 
…ch¨s
 
lcbuf
;

246 
tch¨s
 
cbuf
;

247 
lbuf
;

248 
	`time
();

250 
py
.
misc
.
mÆe
 |= 2;

251 (Ë
	`io˘l
(0, 
TIOCGETP
, (*)&
tbuf
);

252 (Ë
	`io˘l
(0, 
TIOCGETC
, (*)&
cbuf
);

253 (Ë
	`io˘l
(0, 
TIOCGLTC
, (*)&
lcbuf
);

254 #i‡!
	`deföed
(
©¨i°
Ë&& !deföed(
__GNUC__
)

255 (Ë
	`io˘l
(0, 
TIOCLGET
, (*)&
lbuf
);

257 
	`ª°‹e_ãrm
();

258 (Ë
	`kûl
(0, 
SIGSTOP
);

259 
cur£s_⁄
 = 
TRUE
;

260 (Ë
	`io˘l
(0, 
TIOCSETP
, (*)&
tbuf
);

261 (Ë
	`io˘l
(0, 
TIOCSETC
, (*)&
cbuf
);

262 (Ë
	`io˘l
(0, 
TIOCSLTC
, (*)&
lcbuf
);

263 #i‡!
	`deföed
(
©¨i°
Ë&& !deföed(
__GNUC__
)

264 (Ë
	`io˘l
(0, 
TIOCLSET
, (*)&
lbuf
);

266 (Ë
	`wª‰esh
(
curs¸
);

267 
py
.
misc
.
mÆe
 &= ~2;

270 
	}
}

275 
	$öô_cur£s
()

276 #ifde‡
MAC


280 
Re˘
 
s¸n
;

282 
s¸n
.
À·
 = s¸n.
t›
 = 0;

283 
s¸n
.
right
 = 
SCRN_COLS
;

284 
s¸n
.
bŸtom
 = 
SCRN_ROWS
;

285 
	`Eø£S¸ìn
(&
s¸n
);

286 
	`Upd©eS¸ìn
();

287 
	}
}

290 
	gi
, 
	gy
, 
	gx
;

292 #ifde‡
AMIGA


293 i‡(
›ítimî
() == 0)

295 (Ë
¥ötf
 ("CouldÇot openÅimer device.\n");

296 
exô
 (1);

300 #i‚de‡
USG


301 (Ë
io˘l
(0, 
TIOCGLTC
, (*)&
ßve_•ecül_ch¨s
);

302 (Ë
io˘l
(0, 
TIOCGETP
, (*)&
ßve_âyb
);

303 (Ë
io˘l
(0, 
TIOCGETC
, (*)&
ßve_tch¨s
);

304 #i‡!
deföed
(
©¨i°
Ë&& !deföed(
__GNUC__
)

305 (Ë
io˘l
(0, 
TIOCLGET
, (*)&
ßve_loˇl_ch¨s
);

308 #i‡!
deföed
(
VMS
Ë&& !deföed(
MSDOS
Ë&& !deföed(
ATARI_ST
)

309 #i‚de‡
AMIGA


310 (Ë
io˘l
(0, 
TCGETA
, (*)&
ßve_ãrmio
);

316 #i‡
deföed
(
USG
Ë&& !deföed(
PC_CURSES
Ë&& !deföed(
AMIGA
)

317 i‡(
öôs¸
(Ë=
NULL
)

319 i‡(
öôs¸
(Ë=
ERR
)

322 (Ë
¥ötf
("Errorállocating screen in cursesÖackage.\n");

323 
exô
(1);

325 i‡(
	gLINES
 < 24 || 
	gCOLS
 < 80)

327 (Ë
¥ötf
("ScreenÅoo small for moria.\n");

328 
exô
 (1);

330 #ifde‡
SIGTSTP


331 #i‡
deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

332 (Ë
sig«l
 (
SIGTSTP
, (
__Sigfunc
)
su•íd
);

334 #ifde‡ 
__386BSD__


335 (Ë
sig«l
 (
SIGTSTP
, (
sig_t
)
su•íd
);

337 (Ë
sig«l
 (
SIGTSTP
, 
su•íd
);

341 i‡(((
	gßves¸
 = 
√wwö
 (0, 0, 0, 0)Ë=
NULL
)

342 #ifde‡
VMS


343 || ((
ãmps¸
 = 
√wwö
 (0, 0, 0, 0)Ë=
NULL
))

348 (Ë
¥ötf
 ("Out of memory in starting up curses.\n");

349 
exô_game
();

351 (Ë
˛ór
();

352 (Ë
ª‰esh
();

353 
m‹üãrm
 ();

360 (Ë
move
(0, 0);

361 
	gi
 = 1; i < 10; i++)

363 (Ë
addch
('\t');

364 
gëyx
(
°ds¸
, 
y
, 
x
);

365 i‡(
	gy
 !0 || 
x
 !
i
*8)

368 i‡(
	gi
 != 10)

370 
msg_¥öt
("Tabs must be set 8 spacesápart.");

371 
exô_game
();

378 
	$m‹üãrm
()

379 #ifde‡
MAC


382 
	}
}

385 #i‡!
deföed
(
MSDOS
Ë&& !deföed(
ATARI_ST
Ë&& !deföed(
VMS
)

386 #i‚de‡
AMIGA


387 #ifde‡
USG


388 #ifde‡
__löux__


389 
ãrmios
 
	gtbuf
;

391 
ãrmio
 
	gtbuf
;

394 
…ch¨s
 
	glbuf
;

395 
tch¨s
 
	gbuf
;

400 
	gcur£s_⁄
 = 
TRUE
;

401 #i‚de‡
BSD4_3


402 
u£_vÆue
 
¸mode
();

404 #ifde‡
VMS


405 
u£_vÆue
 
vms_¸mode
 ();

407 
u£_vÆue
 
cbªak
();

410 
u£_vÆue
 
n€cho
();

412 #ifde‡
MSDOS


413 
msdos_øw
();

415 #ifde‡
AMIGA


416 
öô_cﬁ‹
 (0, 0, 0, 0);

417 
öô_cﬁ‹
 (1,1000,1000,1000);

418 
öô_cﬁ‹
 (2, 0, 300, 700);

419 
öô_cﬁ‹
 (3,1000, 500, 0);

421 #i‡!
deföed
(
ATARI_ST
Ë&& !deföed(
VMS
)

422 #ifde‡
USG


423 (Ë
io˘l
(0, 
TCGETA
, (*)&
tbuf
);

425 
	gtbuf
.
	gc_cc
[
VINTR
] = ()3;

426 
	gtbuf
.
	gc_cc
[
VQUIT
] = ()-1;

427 
	gtbuf
.
	gc_cc
[
VERASE
] = ()-1;

428 
	gtbuf
.
	gc_cc
[
VKILL
] = ()-1;

429 
	gtbuf
.
	gc_cc
[
VEOF
] = ()-1;

432 
	gtbuf
.
	gc_cc
[
VEOL
] = ()-1;

433 #ifde‡
VEOL2


434 
	gtbuf
.
	gc_cc
[
VEOL2
] = ()-1;

438 
	gtbuf
.
	gc_cc
[
VMIN
] = 1;

439 
	gtbuf
.
	gc_cc
[
VTIME
] = 0;

441 (Ë
io˘l
(0, 
TCSETA
, (*)&
tbuf
);

445 (Ë
io˘l
(0, 
TIOCGLTC
, (*)&
lbuf
);

446 
	glbuf
.
	gt_su•c
 = ()26;

447 
	glbuf
.
	gt_dsu•c
 = ()-1;

448 
	glbuf
.
	gt_Ω∫tc
 = ()-1;

449 
	glbuf
.
	gt_Êushc
 = ()-1;

450 
	glbuf
.
	gt_wîasc
 = ()-1;

451 
	glbuf
.
	gt_ extc
 = ()-1;

452 (Ë
io˘l
(0, 
TIOCSLTC
, (*)&
lbuf
);

454 (Ë
io˘l
 (0, 
TIOCGETC
, (*)&
buf
);

455 
	gbuf
.
	gt_öåc
 = ()3;

456 
	gbuf
.
	gt_quôc
 = ()-1;

457 
	gbuf
.
	gt_°¨tc
 = ()17;

458 
	gbuf
.
	gt_°›c
 = ()19;

459 
	gbuf
.
	gt_eofc
 = ()-1;

460 
	gbuf
.
	gt_brkc
 = ()-1;

461 (Ë
io˘l
(0, 
TIOCSETC
, (*)&
buf
);

467 #ifde‡
ATARIST_TC


468 
øw
 ();

475 
	$put_buf„r
(
out_°r
, 
row
, 
cﬁ
)

476 *
out_°r
;

477 
row
, 
cﬁ
;

478 #ifde‡
MAC


481 
	`DSëS¸ìnCurs‹
(
cﬁ
, 
row
);

482 
	`DWrôeS¸ìnSåögAâr
(
out_°r
, 
ATTR_NORMAL
);

483 
	}
}

486 
vty≥
 
	gtmp_°r
;

490 i‡(
	gcﬁ
 > 79)

491 
	gcﬁ
 = 79;

492 (Ë
°∫˝y
 (
tmp_°r
, 
out_°r
, 79 - 
cﬁ
);

493 
	gtmp_°r
 [79 - 
cﬁ
] = '\0';

495 i‡(
mvadd°r
(
row
, 
cﬁ
, 
tmp_°r
Ë=
ERR
)

497 
ab‹t
();

499 
	gmsg_Êag
 = 0;

500 (Ë
•rötf
(
tmp_°r
, "error inÖut_buffer,Ñow = %d col = %d\n",

501 
row
, 
cﬁ
);

502 
¥t
(
tmp_°r
, 0, 0);

503 
bñl
();

505 (Ë
¶ìp
(2);

512 
	$put_qio
()

514 
s¸ìn_ch™ge
 = 
TRUE
;

515 #ifde‡
MAC


516 
	`Upd©eS¸ìn
();

518 (Ë
	`ª‰esh
();

520 
	}
}

523 
	$ª°‹e_ãrm
()

524 #ifde‡
MAC


527 
	}
}

530 #ifde‡
AMIGA


531 
˛o£timî
 ();

534 i‡(!
	gcur£s_⁄
)

536 
put_qio
();

537 #ifde‡
MSDOS


538 (Ë
¶ìp
(2);

540 #ifde‡
VMS


541 
˛ór_s¸ìn
();

542 
∑u£_löe
(15);

545 
mvcur
(
°ds¸
->
_cury
, stds¸->
_curx
, 
LINES
-1, 0);

546 
ídwö
();

547 (Ë
fÊush
 (
°dout
);

548 #ifde‡
MSDOS


549 
msdos_n‹aw
();

552 #ifde‡
USG


553 #i‡!
deföed
(
MSDOS
Ë&& !deföed(
ATARI_ST
Ë&& !deföed(
VMS
)

554 #i‚de‡
AMIGA


555 (Ë
io˘l
(0, 
TCSETA
, (*)&
ßve_ãrmio
);

559 (Ë
io˘l
(0, 
TIOCSLTC
, (*)&
ßve_•ecül_ch¨s
);

560 (Ë
io˘l
(0, 
TIOCSETP
, (*)&
ßve_âyb
);

561 (Ë
io˘l
(0, 
TIOCSETC
, (*)&
ßve_tch¨s
);

562 #i‡!
deföed
(
©¨i°
Ë&& !deföed(
__GNUC__
)

563 (Ë
io˘l
(0, 
TIOCLSET
, (*)&
ßve_loˇl_ch¨s
);

566 
	gcur£s_⁄
 = 
FALSE
;

571 
	$shñl_out
()

572 #i‡
	`deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

573 { 
Áû_mesßge
[80], 
¨g_li°
[1], *
p
;

574 
esˇ≥_code
;

576 
	`ßve_s¸ìn
();

577 
	`˛ór_s¸ìn
();

578 
u£_vÆue
 
	`nocbªak
();

579 
u£_vÆue
 
	`echo
();

581 
p
 = (*)
	`gëív
("SHELL");

582 i‡(
p
 !(*)
NULL
)

583 { 
	`put_buf„r
("EscapingÅo Shell\n",0,0);

584 
	`put_qio
();

585 
¨g_li°
[0]=0;

586 
esˇ≥_code
 = 
	`Pexec
(0,
p
,
¨g_li°
,0);

588 i‡(
esˇ≥_code
 != 0)

589 { 
	`•rötf
(
Áû_mesßge
,"Pexec(Ëîr‹ codê%d\n",
esˇ≥_code
);

590 
	`put_buf„r
(
Áû_mesßge
,0,0);

591 
	`put_qio
();

592 
	`¶ìp
(5);

595 
u£_vÆue
 
	`cbªak
();

596 
u£_vÆue
 
	`n€cho
();

597 
	`˛ór_s¸ìn
();

598 
	`ª°‹e_s¸ìn
();

599 
	}
}

603 #ifde‡
MAC


605 
Æît_îr‹
("This command isÇot implemented onÅhe Macintosh.");

608 #i‡
deföed
(
AMIGA
Ë|| deföed(
ATARIST_TC
)

610 
put_buf„r
("This command isÇot implemented.\n", 0, 0);

613 #ifde‡
VMS


615 
	gvÆ
, 
	gi°©
;

616 *
	g°r
;

618 
ßve_s¸ìn
();

620 
˛ór_s¸ìn
();

621 
put_buf„r
("[Entering subprocess,Åype 'EOJ'ÅoÑesume your game.]\n",

623 
put_qio
();

625 
u£_vÆue
 
vms_no¸mode
();

626 
u£_vÆue
 
echo
();

627 
ign‹e_sig«ls
();

629 
	gi°©
 = 
lib$•awn
();

630 i‡(!
	gi°©
)

631 
lib$sig«l
 (
i°©
);

633 
ª°‹e_sig«ls
();

634 
u£_vÆue
 
vms_¸mode
();

635 
u£_vÆue
 
n€cho
();

637 
ª°‹e_s¸ìn
();

638 
put_buf„r
("Welcome backÅo UMoria.\n", 0, 0);

639 
ßve_s¸ìn
();

640 
˛ór_s¸ìn
();

641 
put_qio
();

642 
ª°‹e_s¸ìn
();

643 (Ë
wª‰esh
(
curs¸
);

647 #ifde‡
USG


648 #i‡!
deföed
(
MSDOS
Ë&& !deföed(
ATARI_ST
Ë&& !deföed(
AMIGA
)

649 #ifde‡
__löux__


650 
ãrmios
 
	gtbuf
;

652 
ãrmio
 
	gtbuf
;

656 
sgâyb
 
	gtbuf
;

657 
…ch¨s
 
	glcbuf
;

658 
tch¨s
 
	gcbuf
;

659 
	glbuf
;

661 #ifde‡
MSDOS


662 *
	gcom•ec
, 
	gkey
;

664 #ifde‡
ATARI_ST


665 
	gcom°r
[80];

666 *
	g°r
;

667 **
ívú⁄
;

669 
	gvÆ
;

670 *
	g°r
;

674 
ßve_s¸ìn
();

676 
˛ór_s¸ìn
();

677 #i‚de‡
ATARI_ST


678 
put_buf„r
("[Entering shell,Åype 'exit'ÅoÑesume your game.]\n",0,0);

680 
put_buf„r
("[EscapingÅo shell]\n",0,0);

682 
put_qio
();

684 #ifde‡
USG


685 #i‡!
deföed
(
MSDOS
Ë&& !deföed(
ATARI_ST
Ë&& !deföed(
AMIGA
)

686 (Ë
io˘l
(0, 
TCGETA
, (*)&
tbuf
);

689 (Ë
io˘l
(0, 
TIOCGETP
, (*)&
tbuf
);

690 (Ë
io˘l
(0, 
TIOCGETC
, (*)&
cbuf
);

691 (Ë
io˘l
(0, 
TIOCGLTC
, (*)&
lcbuf
);

692 (Ë
io˘l
(0, 
TIOCLGET
, (*)&
lbuf
);

695 #i‚de‡
BSD4_3


696 
u£_vÆue
 
no¸mode
();

698 #ifde‡
VMS


699 
u£_vÆue
 
vms_no¸mode
 ();

701 
u£_vÆue
 
nocbªak
();

704 #ifde‡
MSDOS


705 
u£_vÆue
 
msdos_n‹aw
();

707 
u£_vÆue
 
echo
();

708 
ign‹e_sig«ls
();

709 #ifde‡
MSDOS


710 i‡((
	gcom•ec
 = 
gëív
("COMSPEC")Ë=
CNIL


711 || 
•aw∆
(
P_WAIT
, 
com•ec
, com•ec, 
CNIL
) < 0) {

712 
˛ór_s¸ìn
();

713 
put_buf„r
("M:\\> ", 0, 0);

715 
	gkey
 = 
ökey
();

716 } 
	gkey
 != '!');

720 #i‚de‡
ATARI_ST


721 
	gvÆ
 = 
f‹k
();

722 i‡(
	gvÆ
 == 0)

725 
deÁu…_sig«ls
();

726 #ifde‡
USG


727 #i‡!
deföed
(
MSDOS
Ë&& !deföed(
ATARI_ST
Ë&& !deföed(
AMIGA
)

728 (Ë
io˘l
(0, 
TCSETA
, (*)&
ßve_ãrmio
);

731 (Ë
io˘l
(0, 
TIOCSLTC
, (*)&
ßve_•ecül_ch¨s
);

732 (Ë
io˘l
(0, 
TIOCSETP
, (*)&
ßve_âyb
);

733 (Ë
io˘l
(0, 
TIOCSETC
, (*)&
ßve_tch¨s
);

734 (Ë
io˘l
(0, 
TIOCLSET
, (*)&
ßve_loˇl_ch¨s
);

736 #i‚de‡
MSDOS


739 (Ë
f˛o£
(
highsc‹e_Â
);

741 i‡(
	g°r
 = 
gëív
("SHELL"))

742 #i‚de‡
ATARI_ST


743 (Ë
exe˛
(
°r
, str, (*) 0);

745 
sy°em
(
°r
);

748 #i‚de‡
ATARI_ST


749 (Ë
exe˛
("/bin/sh", "sh", (*) 0);

751 
msg_¥öt
("CannotÉxecute shell.");

752 #i‚de‡
ATARI_ST


753 
exô
(1);

755 i‡(
	gvÆ
 == -1)

757 
msg_¥öt
("Fork failed. Tryágain.");

760 #i‡
deföed
(
USG
Ë|| deföed(
__386BSD__
)

761 (Ë
waô
((*) 0);

763 (Ë
waô
((wait *) 0);

767 
ª°‹e_sig«ls
();

769 
ª°‹e_s¸ìn
();

770 #i‚de‡
BSD4_3


771 
u£_vÆue
 
¸mode
();

773 #ifde‡
VMS


774 
u£_vÆue
 
vms_¸mode
 ();

776 
u£_vÆue
 
cbªak
();

779 
u£_vÆue
 
n€cho
();

781 #ifde‡
MSDOS


782 
msdos_øw
();

786 #ifde‡
USG


787 #i‡!
deföed
(
MSDOS
Ë&& !deföed(
ATARI_ST
)

788 (Ë
io˘l
(0, 
TCSETA
, (*)&
tbuf
);

791 (Ë
io˘l
(0, 
TIOCSLTC
, (*)&
lcbuf
);

792 (Ë
io˘l
(0, 
TIOCSETP
, (*)&
tbuf
);

793 (Ë
io˘l
(0, 
TIOCSETC
, (*)&
cbuf
);

794 (Ë
io˘l
(0, 
TIOCLSET
, (*)&
lbuf
);

796 (Ë
wª‰esh
(
curs¸
);

807 
	$ökey
()

808 #ifde‡
MAC


814 
ch
;

815 
dú
;

816 
shi·_Êag
, 
˘æ_Êag
;

818 
	`put_qio
();

819 
comm™d_cou¡
 = 0;

822 
	`macgëkey
(&
ch
, 
FALSE
);

823 } 
ch
 =
	`CTRL
('R'));

825 
dú
 = 
	`exåa˘dú
(
ch
, &
shi·_Êag
, &
˘æ_Êag
);

826 i‡(
dú
 != -1)

827 
ch
 = '0' + 
dú
;

829 (
ch
);

830 
	}
}

833 
	gi
;

834 #ifde‡
VMS


835 
vty≥
 
	gtmp_°r
;

838 
put_qio
();

839 
	gcomm™d_cou¡
 = 0;

840 
	gTRUE
)

842 #ifde‡
MSDOS


843 
	gi
 = 
msdos_gëch
();

845 #ifde‡
VMS


846 
	gi
 = 
vms_gëch
 ();

848 
	gi
 = 
gëch
();

849 #i‡
deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

851 i‡(
	gi
<0Ëò
gëch
();

856 #ifde‡
VMS


857 i‡(
	gi
 == 27)

859 
i
 = 
vms_gëch
();

860 i‡(
	gi
 == 'O')

862 
i
 = 
vms_gëch
();

863 
	gi
)

865 'p': 
i
 = '0'; ;

866 'q' : 
i
 = '1'; ;

867 'r' : 
i
 = '2'; ;

868 's' : 
i
 = '3'; ;

869 't' : 
i
 = '4'; ;

870 'u' : 
i
 = '5'; ;

871 'v' : 
i
 = '6'; ;

872 'w' : 
i
 = '7'; ;

873 'x' : 
i
 = '8'; ;

874 'y' : 
i
 = '9'; ;

875 'm' : 
i
 = '-'; ;

876 'M' : 
i
 = 10; ;

877 'n' : 
i
 = '.'; ;

878  : 
kbhô
()Ë(Ë
vms_gëch
();

883 
kbhô
())

884 (Ë
vms_gëch
();

890 i‡(
	gi
 =
EOF
)

892 
eof_Êag
++;

895 
	gmsg_Êag
 = 
FALSE
;

897 (Ë
ª‰esh
 ();

898 i‡(!
	gch¨a˘î_gíî©ed
 || 
	gch¨a˘î_ßved
)

899 
exô_game
();

900 
di°urb
(1, 0);

901 i‡(
	geof_Êag
 > 100)

904 
	g∑nic_ßve
 = 1;

905 (Ë
°r˝y
(
dõd_‰om
, "(end of input:Öanic saved)");

906 i‡(!
ßve_ch¨
())

908 (Ë
°r˝y
(
dõd_‰om
, "panic: unexpectedÉof");

909 
	gdóth
 = 
TRUE
;

911 
exô_game
();

913  
	gESCAPE
;

915 i‡(
	gi
 !
CTRL
('R'))

916  ()
i
;

917 #ifde‡
VMS


919 
ovîwrôe
 (
°ds¸
, 
ãmps¸
);

920 
˛ór_s¸ìn
();

921 
put_qio
();

922 
ovîwrôe
 (
ãmps¸
, 
°ds¸
);

923 
touchwö
 (
°ds¸
);

924 (Ë
wª‰esh
 (
°ds¸
);

926 (Ë
wª‰esh
 (
curs¸
);

927 
m‹üãrm
();

933 #ifde‡
MAC


934 
	$ökeydú
()

939 
ch
;

940 
dú
;

941 
shi·_Êag
, 
˘æ_Êag
;

942 
èb
[9] = {

947 
shi·èb
[9] = {

952 
˘æèb
[9] = {

953 
	`CTRL
('B'), CTRL('J'), CTRL('N'),

954 
	`CTRL
('H'), '.', CTRL('L'),

955 
	`CTRL
('Y'), CTRL('K'), CTRL('U')

958 
	`put_qio
();

959 
comm™d_cou¡
 = 0;

962 
	`macgëkey
(&
ch
, 
FALSE
);

963 } 
ch
 =
	`CTRL
('R'));

965 
dú
 = 
	`exåa˘dú
(
ch
, &
shi·_Êag
, &
˘æ_Êag
);

967 i‡(
dú
 != -1) {

968 i‡(!
rogue_like_comm™ds
) {

969 
ch
 = '0' + 
dú
;

972 i‡(
˘æ_Êag
)

973 
ch
 = 
˘æèb
[
dú
 - 1];

974 i‡(
shi·_Êag
)

975 
ch
 = 
shi·èb
[
dú
 - 1];

977 
ch
 = 
èb
[
dú
 - 1];

981 (
ch
);

982 
	}
}

987 
	$Êush
()

988 #ifde‡
MAC


991 
	`FlushS¸ìnKeys
();

992 
	}
}

995 #i‡
deföed
(
MSDOS
)

996 
kbhô
())

997 (Ë
gëch
();

999 #ifde‡
VMS


1000 
kbhô
 ())

1001 (Ë
vms_gëch
();

1008 i‡(!
	geof_Êag
)

1009 
check_öput
(0));

1019 
	$îa£_löe
(
row
, 
cﬁ
)

1020 
row
;

1021 
cﬁ
;

1022 #ifde‡
MAC


1024 
Re˘
 
löe
;

1026 i‡(
row
 =
MSG_LINE
 && 
msg_Êag
)

1027 
	`msg_¥öt
(
CNIL
);

1029 
löe
.
À·
 = 
cﬁ
;

1030 
löe
.
t›
 = 
row
;

1031 
löe
.
right
 = 
SCRN_COLS
;

1032 
löe
.
bŸtom
 = 
row
 + 1;

1033 
	`DEø£S¸ìn
(&
löe
);

1034 
	}
}

1037 i‡(
	grow
 =
MSG_LINE
 && 
msg_Êag
)

1038 
msg_¥öt
(
CNIL
);

1039 (Ë
move
(
row
, 
cﬁ
);

1040 
˛π€ﬁ
();

1046 
	$˛ór_s¸ìn
()

1047 #ifde‡
MAC


1049 
Re˘
 
¨ó
;

1051 i‡(
msg_Êag
)

1052 
	`msg_¥öt
(
CNIL
);

1054 
¨ó
.
À·
 =áªa.
t›
 = 0;

1055 
¨ó
.
right
 = 
SCRN_COLS
;

1056 
¨ó
.
bŸtom
 = 
SCRN_ROWS
;

1057 
	`DEø£S¸ìn
(&
¨ó
);

1058 
	}
}

1061 i‡(
	gmsg_Êag
)

1062 
msg_¥öt
(
CNIL
);

1063 #ifde‡
VMS


1065 (Ë
˛órok
 (
°ds¸
, 
TRUE
);

1066 (Ë
w˛ór
(
°ds¸
);

1067 (Ë
˛órok
 (
°ds¸
, 
FALSE
);

1069 (Ë
˛ór
();

1074 
	$˛ór_‰om
 (
row
)

1075 
row
;

1076 #ifde‡
MAC


1078 
Re˘
 
¨ó
;

1080 
¨ó
.
À·
 = 0;

1081 
¨ó
.
t›
 = 
row
;

1082 
¨ó
.
right
 = 
SCRN_COLS
;

1083 
¨ó
.
bŸtom
 = 
SCRN_ROWS
;

1084 
	`DEø£S¸ìn
(&
¨ó
);

1085 
	}
}

1088 (Ë
move
(
row
, 0);

1089 
˛πobŸ
();

1096 
	$¥öt
(
ch
, 
row
, 
cﬁ
)

1097 
ch
;

1098 
row
;

1099 
cﬁ
;

1100 #ifde‡
MAC


1102 
˙ow
, 
™ow
;

1104 
row
 -
∑√l_row_¥t
;

1105 
cﬁ
 -
∑√l_cﬁ_¥t
;

1107 
	`GëS¸ìnCh¨Aâr
(&
˙ow
, &
™ow
, 
cﬁ
, 
row
);

1110 i‡((
˙ow
 !
ch
Ë|| (
™ow
 !
ATTR_NORMAL
))

1111 
	`DSëS¸ìnCh¨Aâr
(
ch
 & 0x7F,

1112 (
ch
 & 0x80Ë? 
©åRevî£d
 : 
©åN‹mÆ
,

1113 
cﬁ
, 
row
);

1114 
	}
}

1117 
vty≥
 
	gtmp_°r
;

1119 
	grow
 -
∑√l_row_¥t
;

1120 
	gcﬁ
 -
∑√l_cﬁ_¥t
;

1121 i‡(
mvaddch
 (
row
, 
cﬁ
, 
ch
Ë=
ERR
)

1123 
ab‹t
();

1125 
	gmsg_Êag
 = 0;

1126 (Ë
•rötf
(
tmp_°r
, "error inÖrint,Ñow = %d col = %d\n",

1127 
row
, 
cﬁ
);

1128 
¥t
(
tmp_°r
, 0, 0);

1129 
bñl
 ();

1131 (Ë
¶ìp
(2);

1138 
	$move_curs‹_ªœtive
(
row
, 
cﬁ
)

1139 
row
;

1140 
cﬁ
;

1141 #ifde‡
MAC


1143 
row
 -
∑√l_row_¥t
;

1144 
cﬁ
 -
∑√l_cﬁ_¥t
;

1146 
	`DSëS¸ìnCurs‹
(
cﬁ
, 
row
);

1147 
	}
}

1150 
vty≥
 
	gtmp_°r
;

1152 
	grow
 -
∑√l_row_¥t
;

1153 
	gcﬁ
 -
∑√l_cﬁ_¥t
;

1154 i‡(
move
 (
row
, 
cﬁ
Ë=
ERR
)

1156 
ab‹t
();

1158 
	gmsg_Êag
 = 0;

1159 (Ë
•rötf
(
tmp_°r
,

1161 
row
, 
cﬁ
);

1162 
¥t
(
tmp_°r
, 0, 0);

1163 
bñl
();

1165 (Ë
¶ìp
(2);

1172 
	$cou¡_msg_¥öt
(
p
)

1173 *
p
;

1175 
i
;

1177 
i
 = 
comm™d_cou¡
;

1178 
	`msg_¥öt
(
p
);

1179 
comm™d_cou¡
 = 
i
;

1180 
	}
}

1184 
	$¥t
(
°r_buff
, 
row
, 
cﬁ
)

1185 *
°r_buff
;

1186 
row
;

1187 
cﬁ
;

1188 #ifde‡
MAC


1190 
Re˘
 
löe
;

1192 i‡(
row
 =
MSG_LINE
 && 
msg_Êag
)

1193 
	`msg_¥öt
(
CNIL
);

1195 
löe
.
À·
 = 
cﬁ
;

1196 
löe
.
t›
 = 
row
;

1197 
löe
.
right
 = 
SCRN_COLS
;

1198 
löe
.
bŸtom
 = 
row
 + 1;

1199 
	`DEø£S¸ìn
(&
löe
);

1201 
	`put_buf„r
(
°r_buff
, 
row
, 
cﬁ
);

1202 
	}
}

1205 i‡(
	grow
 =
MSG_LINE
 && 
msg_Êag
)

1206 
msg_¥öt
(
CNIL
);

1207 (Ë
move
(
row
, 
cﬁ
);

1208 
˛π€ﬁ
();

1209 
put_buf„r
(
°r_buff
, 
row
, 
cﬁ
);

1215 
	$move_curs‹
(
row
, 
cﬁ
)

1216 
row
, 
cﬁ
;

1217 #ifde‡
MAC


1219 
	`DSëS¸ìnCurs‹
(
cﬁ
, 
row
);

1220 
	}
}

1223 (Ë
move
 (
row
, 
cﬁ
);

1230 
	$msg_¥öt
(
°r_buff
)

1231 *
°r_buff
;

1233 
ﬁd_Àn
, 
√w_Àn
;

1234 
comböe_mesßges
 = 
FALSE
;

1235 
ö_ch¨
;

1236 #ifde‡
MAC


1237 
Re˘
 
löe
;

1240 i‡(
msg_Êag
)

1242 
ﬁd_Àn
 = 
	`°æí
(
ﬁd_msg
[
œ°_msg
]) + 1;

1248 i‡(
°r_buff
)

1249 
√w_Àn
 = 
	`°æí
 (
°r_buff
);

1251 
√w_Àn
 = 0;

1253 i‡(! 
°r_buff
 || (
√w_Àn
 + 
ﬁd_Àn
 + 2 >= 73))

1256 i‡(
ﬁd_Àn
 > 73)

1257 
ﬁd_Àn
 = 73;

1258 
	`put_buf„r
(" -m‹e-", 
MSG_LINE
, 
ﬁd_Àn
);

1260 
waô_f‹_m‹e
 = 1;

1263 
ö_ch¨
 = 
	`ökey
();

1265 (
ö_ch¨
 !' 'Ë&& (ö_ch¨ !
ESCAPE
) && (in_char != '\n')

1266 && (
ö_ch¨
 != '\r'));

1267 
waô_f‹_m‹e
 = 0;

1270 
comböe_mesßges
 = 
TRUE
;

1273 i‡(! 
comböe_mesßges
)

1275 #ifde‡
MAC


1276 
löe
.
À·
 = 0;

1277 
löe
.
t›
 = 
MSG_LINE
;

1278 
löe
.
right
 = 
SCRN_COLS
;

1279 
löe
.
bŸtom
 = 
MSG_LINE
+1;

1280 
	`DEø£S¸ìn
(&
löe
);

1282 (Ë
	`move
(
MSG_LINE
, 0);

1283 
	`˛π€ﬁ
();

1288 i‡(
°r_buff
)

1290 
comm™d_cou¡
 = 0;

1291 
msg_Êag
 = 
TRUE
;

1296 i‡(
comböe_mesßges
)

1298 
	`put_buf„r
 (
°r_buff
, 
MSG_LINE
, 
ﬁd_Àn
 + 2);

1299 
	`°rˇt
 (
ﬁd_msg
[
œ°_msg
], " ");

1300 
	`°rˇt
 (
ﬁd_msg
[
œ°_msg
], 
°r_buff
);

1304 
	`put_buf„r
(
°r_buff
, 
MSG_LINE
, 0);

1305 
œ°_msg
++;

1306 i‡(
œ°_msg
 >
MAX_SAVE_MSG
)

1307 
œ°_msg
 = 0;

1308 (Ë
	`°∫˝y
(
ﬁd_msg
[
œ°_msg
], 
°r_buff
, 
VTYPESIZ
);

1309 
ﬁd_msg
[
œ°_msg
][
VTYPESIZ
 - 1] = '\0';

1313 
msg_Êag
 = 
FALSE
;

1314 
	}
}

1318 
	$gë_check
(
¥om±
)

1319 *
¥om±
;

1321 
ªs
;

1322 #ifde‡
MAC


1323 
y
, 
x
;

1325 
y
, 
x
;

1328 
	`¥t
(
¥om±
, 0, 0);

1329 #ifde‡
MAC


1330 
	`GëS¸ìnCurs‹
(&
x
, &
y
);

1332 
	`gëyx
(
°ds¸
, 
y
, 
x
);

1333 #i‡
	`deföed
(
löt
)

1335 
x
 = 
y
;

1337 #ifde‡
LINT_ARGS


1339 
ªs
 = 
y
;

1343 i‡(
x
 > 73)

1344 (Ë
	`move
(0, 73);

1345 #ifde‡
MAC


1346 
	`DWrôeS¸ìnSåögAâr
(" [y/n]", 
ATTR_NORMAL
);

1348 (Ë
	`add°r
(" [y/n]");

1352 
ªs
 = 
	`ökey
();

1354 
ªs
 == ' ');

1355 
	`îa£_löe
(0, 0);

1356 i‡(
ªs
 == 'Y' ||Ñes == 'y')

1357  
TRUE
;

1359  
FALSE
;

1360 
	}
}

1364 
	$gë_com
(
¥om±
, 
comm™d
)

1365 *
¥om±
;

1366 *
comm™d
;

1368 
ªs
;

1370 i‡(
¥om±
)

1371 
	`¥t
(
¥om±
, 0, 0);

1372 *
comm™d
 = 
	`ökey
();

1373 i‡(*
comm™d
 =
ESCAPE
)

1374 
ªs
 = 
FALSE
;

1376 
ªs
 = 
TRUE
;

1377 
	`îa£_löe
(
MSG_LINE
, 0);

1378 (
ªs
);

1379 
	}
}

1381 #ifde‡
MAC


1383 
	$gë_comdú
(
¥om±
, 
comm™d
)

1384 *
¥om±
;

1385 *
comm™d
;

1387 
ªs
;

1389 i‡(
¥om±
)

1390 
	`¥t
(
¥om±
, 0, 0);

1391 *
comm™d
 = 
	`ökeydú
();

1392 i‡(*
comm™d
 =
ESCAPE
)

1393 
ªs
 = 
FALSE
;

1395 
ªs
 = 
TRUE
;

1396 
	`îa£_löe
(
MSG_LINE
, 0);

1397 (
ªs
);

1398 
	}
}

1404 
	$gë_°rög
(
ö_°r
, 
row
, 
cﬁumn
, 
¶í
)

1405 *
ö_°r
;

1406 
row
, 
cﬁumn
, 
¶í
;

1408 
°¨t_cﬁ
, 
íd_cﬁ
, 
i
;

1409 *
p
;

1410 
Êag
, 
ab‹ãd
;

1411 #ifde‡
MAC


1412 
Re˘
 
¨ó
;

1415 
ab‹ãd
 = 
FALSE
;

1416 
Êag
 = 
FALSE
;

1417 #ifde‡
MAC


1418 
¨ó
.
À·
 = 
cﬁumn
;

1419 
¨ó
.
t›
 = 
row
;

1420 
¨ó
.
right
 = 
cﬁumn
 + 
¶í
;

1421 
¨ó
.
bŸtom
 = 
row
 + 1;

1422 
	`DEø£S¸ìn
(&
¨ó
);

1423 
	`DSëS¸ìnCurs‹
(
cﬁumn
, 
row
);

1425 (Ë
	`move
(
row
, 
cﬁumn
);

1426 
i
 = 
¶í
; i > 0; i--)

1427 (Ë
	`addch
(' ');

1428 (Ë
	`move
(
row
, 
cﬁumn
);

1430 
°¨t_cﬁ
 = 
cﬁumn
;

1431 
íd_cﬁ
 = 
cﬁumn
 + 
¶í
 - 1;

1432 i‡(
íd_cﬁ
 > 79)

1434 
¶í
 = 80 - 
cﬁumn
;

1435 
íd_cﬁ
 = 79;

1437 
p
 = 
ö_°r
;

1440 
i
 = 
	`ökey
();

1441 
i
)

1443 
ESCAPE
:

1444 
ab‹ãd
 = 
TRUE
;

1446 
	`CTRL
('J'): CTRL('M'):

1447 
Êag
 = 
TRUE
;

1449 
DELETE
: 
	`CTRL
('H'):

1450 i‡(
cﬁumn
 > 
°¨t_cﬁ
)

1452 
cﬁumn
--;

1453 
	`put_buf„r
(" ", 
row
, 
cﬁumn
);

1454 
	`move_curs‹
(
row
, 
cﬁumn
);

1455 *--
p
 = '\0';

1459 i‡(!
	`i•röt
(
i
Ë|| 
cﬁumn
 > 
íd_cﬁ
)

1460 
	`bñl
();

1463 #ifde‡
MAC


1464 
	`DSëS¸ìnCurs‹
(
cﬁumn
, 
row
);

1465 
	`DWrôeS¸ìnCh¨Aâr
((Ë
i
, 
ATTR_NORMAL
);

1467 
u£_vÆue2
 
	`mvaddch
(
row
, 
cﬁumn
, ()
i
);

1469 *
p
++ = 
i
;

1470 
cﬁumn
++;

1475 (!
Êag
Ë&& (!
ab‹ãd
));

1476 i‡(
ab‹ãd
)

1477 (
FALSE
);

1479 
p
 > 
ö_°r
 &&Ö[-1] == ' ')

1480 
p
--;

1481 *
p
 = '\0';

1482 (
TRUE
);

1483 
	}
}

1487 
	$∑u£_löe
(
¥t_löe
)

1488 
¥t_löe
;

1490 
	`¥t
("[Pªs†™y keyÅÿc⁄töue.]", 
¥t_löe
, 23);

1491 (Ë
	`ökey
();

1492 
	`îa£_löe
(
¥t_löe
, 0);

1493 
	}
}

1499 
	$∑u£_exô
(
¥t_löe
, 
dñay
)

1500 
¥t_löe
;

1501 
dñay
;

1503 
dummy
;

1505 
	`¥t
("[Pªs†™y keyÅÿc⁄töue, o∏QÅÿexô.]", 
¥t_löe
, 10);

1506 
dummy
 = 
	`ökey
();

1507 i‡(
dummy
 == 'Q')

1509 
	`îa£_löe
(
¥t_löe
, 0);

1510 #i‚de‡
MSDOS


1511 i‡(
dñay
 > 0Ë(Ë
	`¶ìp
(()delay);

1514 
dummy
 = 
dñay
;

1516 #ifde‡
MAC


1517 
	`íabÀfûemíu
(
FALSE
);

1518 
	`exô_game
();

1519 
	`íabÀfûemíu
(
TRUE
);

1521 
	`exô_game
();

1524 
	`îa£_löe
(
¥t_löe
, 0);

1525 
	}
}

1527 #ifde‡
MAC


1528 
	$ßve_s¸ìn
()

1530 
	`mac_ßve_s¸ìn
();

1531 
	}
}

1533 
	$ª°‹e_s¸ìn
()

1535 
	`mac_ª°‹e_s¸ìn
();

1536 
	}
}

1538 
	$ßve_s¸ìn
()

1540 
	`ovîwrôe
(
°ds¸
, 
ßves¸
);

1541 
	}
}

1543 
	$ª°‹e_s¸ìn
()

1545 
	`ovîwrôe
(
ßves¸
, 
°ds¸
);

1546 
	`touchwö
(
°ds¸
);

1547 
	}
}

1550 
	$bñl
()

1552 
	`put_qio
();

1555 i‡(! 
sound_bìp_Êag
)

1558 #ifde‡
MAC


1559 
	`mac_bìp
();

1561 (Ë
	`wrôe
(1, "\007", 1);

1563 
	}
}

1567 
	#TL
 0

	)

1568 
	#TR
 1

	)

1569 
	#BL
 2

	)

1570 
	#BR
 3

	)

1571 
	#HE
 4

	)

1572 
	#VE
 5

	)

1575 #ifde‡
MSDOS


1576 #ifde‡
ANSI


1577 
	#CH
(
x
Ë(
™si
 ? 
s¸ìn_b‹dî
[0][x] : s¸ìn_b‹dî[1][x])

	)

1579 
	#CH
(
x
Ë(
s¸ìn_b‹dî
[1][x])

	)

1582 
	#CH
(
x
Ë(
s¸ìn_b‹dî
[0][x])

	)

1586 
	#RATIO
 3

	)

1588 
	$s¸ìn_m≠
()

1590 
i
, 
j
;

1591 
öt8u
 
s¸ìn_b‹dî
[2][6] = {

1595 
öt8u
 
m≠
[
MAX_WIDTH
 / 
RATIO
 + 1];

1596 
öt8u
 
tmp
;

1597 
¥i‹ôy
[256];

1598 
row
, 
‹ow
, 
cﬁ
, 
myrow
, 
mycﬁ
 = 0;

1599 #i‚de‡
MAC


1600 
¥¡s¸nbuf
[80];

1603 
i
 = 0; i < 256; i++)

1604 
¥i‹ôy
[
i
] = 0;

1605 
¥i‹ôy
['<'] = 5;

1606 
¥i‹ôy
['>'] = 5;

1607 
¥i‹ôy
['@'] = 10;

1608 #ifde‡
MSDOS


1609 
¥i‹ôy
[
wÆlsym
] = -5;

1610 
¥i‹ôy
[
Êo‹sym
] = -10;

1612 #i‚de‡
ATARI_ST


1613 
¥i‹ôy
['#'] = -5;

1615 
¥i‹ôy
[()240] = -5;

1617 
¥i‹ôy
['.'] = -10;

1619 
¥i‹ôy
['\''] = -3;

1620 
¥i‹ôy
[' '] = -15;

1622 
	`ßve_s¸ìn
();

1623 
	`˛ór_s¸ìn
();

1624 #ifde‡
MAC


1625 
	`DSëS¸ìnCurs‹
(0, 0);

1626 
	`DWrôeS¸ìnCh¨Aâr
(
	`CH
(
TL
), 
ATTR_NORMAL
);

1627 
i
 = 0; i < 
MAX_WIDTH
 / 
RATIO
; i++)

1628 
	`DWrôeS¸ìnCh¨Aâr
(
	`CH
(
HE
), 
ATTR_NORMAL
);

1629 
	`DWrôeS¸ìnCh¨Aâr
(
	`CH
(
TR
), 
ATTR_NORMAL
);

1631 
u£_vÆue2
 
	`mvaddch
(0, 0, 
	`CH
(
TL
));

1632 
i
 = 0; i < 
MAX_WIDTH
 / 
RATIO
; i++)

1633 (Ë
	`addch
(
	`CH
(
HE
));

1634 (Ë
	`addch
(
	`CH
(
TR
));

1636 
‹ow
 = -1;

1637 
m≠
[
MAX_WIDTH
 / 
RATIO
] = '\0';

1638 
i
 = 0; i < 
MAX_HEIGHT
; i++)

1640 
row
 = 
i
 / 
RATIO
;

1641 i‡(
row
 !
‹ow
)

1643 i‡(
‹ow
 >= 0)

1645 #ifde‡
MAC


1646 
	`DSëS¸ìnCurs‹
(0, 
‹ow
+1);

1647 
	`DWrôeS¸ìnCh¨Aâr
(
	`CH
(
VE
), 
ATTR_NORMAL
);

1648 
	`DWrôeS¸ìnSåög
((*Ë
m≠
);

1649 
	`DWrôeS¸ìnCh¨Aâr
(
	`CH
(
VE
), 
ATTR_NORMAL
);

1654 (Ë
	`•rötf
(
¥¡s¸nbuf
,"%c%s%c",
	`CH
(
VE
), 
m≠
, CH(VE));

1655 
u£_vÆue2
 
	`mvadd°r
(
‹ow
+1, 0, 
¥¡s¸nbuf
);

1658 
j
 = 0; j < 
MAX_WIDTH
 / 
RATIO
; j++)

1659 
m≠
[
j
] = ' ';

1660 
‹ow
 = 
row
;

1662 
j
 = 0; j < 
MAX_WIDTH
; j++)

1664 
cﬁ
 = 
j
 / 
RATIO
;

1665 
tmp
 = 
	`loc_symbﬁ
(
i
, 
j
);

1666 i‡(
¥i‹ôy
[
m≠
[
cﬁ
]] <Öri‹ôy[
tmp
])

1667 
m≠
[
cﬁ
] = 
tmp
;

1668 i‡(
m≠
[
cﬁ
] == '@')

1670 
mycﬁ
 = 
cﬁ
 + 1;

1671 
myrow
 = 
row
 + 1;

1675 i‡(
‹ow
 >= 0)

1677 #ifde‡
MAC


1678 
	`DSëS¸ìnCurs‹
(0, 
‹ow
+1);

1679 
	`DWrôeS¸ìnCh¨Aâr
(
	`CH
(
VE
), 
ATTR_NORMAL
);

1680 
	`DWrôeS¸ìnSåög
((*Ë
m≠
);

1681 
	`DWrôeS¸ìnCh¨Aâr
(
	`CH
(
VE
), 
ATTR_NORMAL
);

1683 (Ë
	`•rötf
(
¥¡s¸nbuf
,"%c%s%c",
	`CH
(
VE
), 
m≠
, CH(VE));

1684 
u£_vÆue2
 
	`mvadd°r
(
‹ow
+1, 0, 
¥¡s¸nbuf
);

1687 #ifde‡
MAC


1688 
	`DSëS¸ìnCurs‹
(0, 
‹ow
 + 2);

1689 
	`DWrôeS¸ìnCh¨Aâr
(
	`CH
(
BL
), 
ATTR_NORMAL
);

1690 
i
 = 0; i < 
MAX_WIDTH
 / 
RATIO
; i++)

1691 
	`DWrôeS¸ìnCh¨Aâr
(
	`CH
(
HE
), 
ATTR_NORMAL
);

1692 
	`DWrôeS¸ìnCh¨Aâr
(
	`CH
(
BR
), 
ATTR_NORMAL
);

1694 
u£_vÆue2
 
	`mvaddch
(
‹ow
 + 2, 0, 
	`CH
(
BL
));

1695 
i
 = 0; i < 
MAX_WIDTH
 / 
RATIO
; i++)

1696 (Ë
	`addch
(
	`CH
(
HE
));

1697 (Ë
	`addch
(
	`CH
(
BR
));

1700 #ifde‡
MAC


1701 
	`DSëS¸ìnCurs‹
(23, 23);

1702 
	`DWrôeS¸ìnSåögAâr
("Hôány keyÅÿc⁄töue", 
ATTR_NORMAL
);

1703 i‡(
mycﬁ
 > 0)

1704 
	`DSëS¸ìnCurs‹
(
mycﬁ
, 
myrow
);

1706 
u£_vÆue2
 
	`mvadd°r
(23, 23, "Hitány keyÅo continue");

1707 i‡(
mycﬁ
 > 0)

1708 (Ë
	`move
(
myrow
, 
mycﬁ
);

1710 (Ë
	`ökey
();

1711 
	`ª°‹e_s¸ìn
();

1712 
	}
}

	@magic.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

12 
	~"exã∫s.h
"

16 
	$ˇ°
()

18 
i
, 
j
, 
ôem_vÆ
, 
dú
;

19 
choi˚
, 
ch™˚
, 
ªsu…
;

20 
Êags
 *
f_±r
;

21 
misc
 *
p_±r
;

22 
öví_ty≥
 *
i_±r
;

23 
•ñl_ty≥
 *
m_±r
;

24 #ifde‡
ATARIST_MWC


25 
öt32u
 
hﬁdî
;

28 
‰ì_tu∫_Êag
 = 
TRUE
;

29 i‡(
py
.
Êags
.
blöd
 > 0)

30 
	`msg_¥öt
("You can't seeÅoÑead your spell book!");

31 i‡(
	`no_light
())

32 
	`msg_¥öt
("You haveÇoÜightÅoÑead by.");

33 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

34 
	`msg_¥öt
("YouáreÅoo confused.");

35 i‡(
˛ass
[
py
.
misc
.
p˛ass
].
•ñl
 !
MAGE
)

36 
	`msg_¥öt
("You can't cast spells!");

37 i‡(!
	`föd_ønge
(
TV_MAGIC_BOOK
, 
TV_NEVER
, &
i
, &
j
))

38 
	`msg_¥öt
("But youáreÇot carryingány spell-books!");

39 i‡(
	`gë_ôem
(&
ôem_vÆ
, "U£ which s≥Œ-book?", 
i
, 
j
, 
CNIL
, CNIL))

41 
ªsu…
 = 
	`ˇ°_•ñl
("Ca° which s≥Œ?", 
ôem_vÆ
, &
choi˚
, &
ch™˚
);

42 i‡(
ªsu…
 < 0)

43 
	`msg_¥öt
("You don't knowány spells inÅhat book.");

44 i‡(
ªsu…
 > 0)

46 
m_±r
 = &
magic_•ñl
[
py
.
misc
.
p˛ass
-1][
choi˚
];

47 
‰ì_tu∫_Êag
 = 
FALSE
;

49 i‡(
	`øndöt
(100Ë< 
ch™˚
)

50 
	`msg_¥öt
("You failedÅo getÅhe spell off!");

54 
choi˚
+1)

57 i‡(
	`gë_dú
(
CNIL
, &
dú
))

58 
	`fúe_bﬁt
(
GF_MAGIC_MISSILE
, 
dú
, 
ch¨_row
, 
ch¨_cﬁ
,

59 
	`damrﬁl
(2, 6), 
•ñl_«mes
[0]);

62 (Ë
	`dëe˘_m⁄°îs
();

65 
	`ãÀp‹t
(10);

68 (Ë
	`light_¨ó
(
ch¨_row
, 
ch¨_cﬁ
);

71 (Ë
	`hp_∂ayî
(
	`damrﬁl
(4, 4));

74 (Ë
	`dëe˘_sdo‹
();

75 (Ë
	`dëe˘_å≠
();

78 i‡(
	`gë_dú
(
CNIL
, &
dú
))

79 
	`fúe_bÆl
(
GF_POISON_GAS
, 
dú
, 
ch¨_row
, 
ch¨_cﬁ
, 12,

80 
•ñl_«mes
[6]);

83 i‡(
	`gë_dú
(
CNIL
, &
dú
))

84 (Ë
	`c⁄fu£_m⁄°î
(
dú
, 
ch¨_row
, 
ch¨_cﬁ
);

87 i‡(
	`gë_dú
(
CNIL
, &
dú
))

88 
	`fúe_bﬁt
(
GF_LIGHTNING
, 
dú
, 
ch¨_row
, 
ch¨_cﬁ
,

89 
	`damrﬁl
(4, 8), 
•ñl_«mes
[8]);

92 (Ë
	`td_de°roy
();

95 i‡(
	`gë_dú
(
CNIL
, &
dú
))

96 (Ë
	`¶ìp_m⁄°î
(
dú
, 
ch¨_row
, 
ch¨_cﬁ
);

99 (Ë
	`cuª_pois⁄
();

102 
	`ãÀp‹t
(()(
py
.
misc
.
Àv
*5));

105 
i
 = 22; i < 
INVEN_ARRAY_SIZE
; i++)

107 
i_±r
 = &
övít‹y
[
i
];

108 #ifde‡
ATARIST_MWC


109 
i_±r
->
Êags
 = (i_±r->Êag†& ~(
hﬁdî
 = 
TR_CURSED
));

111 
i_±r
->
Êags
 = (i_±r->Êag†& ~
TR_CURSED
);

116 i‡(
	`gë_dú
(
CNIL
, &
dú
))

117 
	`fúe_bﬁt
(
GF_FROST
, 
dú
, 
ch¨_row
, 
ch¨_cﬁ
,

118 
	`damrﬁl
(6, 8), 
•ñl_«mes
[14]);

121 i‡(
	`gë_dú
(
CNIL
, &
dú
))

122 (Ë
	`wÆl_to_mud
(
dú
, 
ch¨_row
, 
ch¨_cﬁ
);

125 
	`¸óã_food
();

128 (Ë
	`ªch¨ge
(20);

131 (Ë
	`¶ìp_m⁄°îs1
(
ch¨_row
, 
ch¨_cﬁ
);

134 i‡(
	`gë_dú
(
CNIL
, &
dú
))

135 (Ë
	`pﬁy_m⁄°î
(
dú
, 
ch¨_row
, 
ch¨_cﬁ
);

138 (Ë
	`idít_•ñl
();

141 (Ë
	`¶ìp_m⁄°îs2
();

144 i‡(
	`gë_dú
(
CNIL
, &
dú
))

145 
	`fúe_bﬁt
(
GF_FIRE
, 
dú
, 
ch¨_row
, 
ch¨_cﬁ
,

146 
	`damrﬁl
(9, 8), 
•ñl_«mes
[22]);

149 i‡(
	`gë_dú
(
CNIL
, &
dú
))

150 ()
	`•ìd_m⁄°î
(
dú
, 
ch¨_row
, 
ch¨_cﬁ
, -1);

153 i‡(
	`gë_dú
(
CNIL
, &
dú
))

154 
	`fúe_bÆl
(
GF_FROST
, 
dú
, 
ch¨_row
, 
ch¨_cﬁ
, 48,

155 
•ñl_«mes
[24]);

158 (Ë
	`ªch¨ge
(60);

161 i‡(
	`gë_dú
(
CNIL
, &
dú
))

162 (Ë
	`ãÀp‹t_m⁄°î
(
dú
, 
ch¨_row
, 
ch¨_cﬁ
);

165 
f_±r
 = &
py
.
Êags
;

166 
f_±r
->
Á°
 +
	`øndöt
(20Ë+ 
py
.
misc
.
Àv
;

169 i‡(
	`gë_dú
(
CNIL
, &
dú
))

170 
	`fúe_bÆl
(
GF_FIRE
, 
dú
, 
ch¨_row
, 
ch¨_cﬁ
, 72,

171 
•ñl_«mes
[28]);

174 
	`de°roy_¨ó
(
ch¨_row
, 
ch¨_cﬁ
);

177 (Ë
	`gíocide
();

183 i‡(!
‰ì_tu∫_Êag
)

185 
p_±r
 = &
py
.
misc
;

186 i‡((
•ñl_w‹ked
 & (1L << 
choi˚
)) == 0)

188 
p_±r
->
exp
 +
m_±r
->
£xp
 << 2;

189 
•ñl_w‹ked
 |(1L << 
choi˚
);

190 
	`¥t_ex≥rõn˚
();

194 
p_±r
 = &
py
.
misc
;

195 i‡(!
‰ì_tu∫_Êag
)

197 i‡(
m_±r
->
sm™a
 > 
p_±r
->
cm™a
)

199 
	`msg_¥öt
("You faint fromÅheÉffort!");

200 
py
.
Êags
.
∑ølysis
 =

201 
	`øndöt
(()(5*(
m_±r
->
sm™a
-
p_±r
->
cm™a
)));

202 
p_±r
->
cm™a
 = 0;

203 
p_±r
->
cm™a_‰ac
 = 0;

204 i‡(
	`øndöt
(3) == 1)

206 
	`msg_¥öt
("You have damaged your health!");

207 (Ë
	`dec_°©
 (
A_CON
);

211 
p_±r
->
cm™a
 -
m_±r
->
sm™a
;

212 
	`¥t_cm™a
();

216 
	}
}

	@main.c

57 #ifde‡
__TURBOC__


58 
	~<io.h
>

59 
	~<°dio.h
>

60 
	~<°dlib.h
>

63 
	~"c⁄fig.h
"

64 
	~"c⁄°™t.h
"

65 
	~"ty≥s.h
"

66 
	~"exã∫s.h
"

68 #i‚de‡
USG


69 
	~<sys/ty≥s.h
>

70 
	~<sys/∑øm.h
>

73 #ifde‡
USG


74 #i‚de‡
ATARIST_MWC


75 
	~<°rög.h
>

77 
	~"°rög.h
"

80 
	~<°rögs.h
>

83 
	~<˘y≥.h
>

85 #ifde‡
Pyømid


86 
	~<sys/time.h
>

88 
	~<time.h
>

91 #i‚de‡
VMS


92 #i‚de‡
MAC


93 #i‚de‡
GEMDOS


94 #i‚de‡
AMIGA


95 
time
();

98 *
gëív
();

102 #i‚de‡
MAC


103 #i‚de‡
AMIGA


104 #ifde‡
USG


105 #i‡!
deföed
(
MSDOS
Ë&& !deföed(
ATARIST_TC
)

106 
gëuid
(), 
gëgid
();

109 #i‚de‡
SECURE


110 #ifde‡
BSD4_3


111 
uid_t
 
gëuid
(), 
gëgid
();

113 
gëuid
(), 
gëgid
();

120 #i‚de‡
VMS


121 #i‚de‡
MAC


122 #i‡
deföed
(
u…rix
Ë|| deföed(
USG
)

123 
≥º‹
();

128 #i‚de‡
VMS


129 #i‚de‡
MAC


130 #ifde‡
USG


131 
exô
();

142 #ifde‡
ATARIST_MWC


143 
	g_°ksize
 = 18000;

146 #ifde‡
__TURBOC__


147 
	g_°kÀn
 = 0x3fff;

149 #ifde‡
AMIGA


152 #ifde‡
LATTICE


153 
	#NEAR
 
√¨


	)

155 
	#NEAR


	)

158 
NEAR
 
	g_°ack
 = 30000;

159 
NEAR
 
	g_¥i‹ôy
 = 0;

160 
NEAR
 
	g_BackGroundIO
 = 1;

161 * 
NEAR
 
	g_¥o˙ame
 = "Moria";

165 #i‡
deföed
(
LINT_ARGS
)

166 
ch¨_öví_öô
();

167 
öô_m_Àvñ
();

168 
öô_t_Àvñ
();

169 #i‡(
COST_ADJ
 != 100)

170 
¥i˚_adju°
();

173 
ch¨_öví_öô
();

174 
öô_m_Àvñ
();

175 
öô_t_Àvñ
();

176 #i‡(
COST_ADJ
 != 100)

177 
¥i˚_adju°
();

182 #ifde‡
MAC


186 
	$m‹ü_maö
(
¨gc
, 
¨gv
)

187 
¨gc
;

188 *
¨gv
[];

190 
	$maö
(
¨gc
, 
¨gv
)

191 
¨gc
;

192 *
¨gv
[];

195 
öt32u
 
£ed
;

196 
gíî©e
;

197 
ªsu…
;

198 #i‚de‡
MAC


199 *
p
;

201 
√w_game
 = 
FALSE
;

202 
f‹˚_rogue_like
 = 
FALSE
;

203 
f‹˚_keys_to
;

206 
rogue_like_comm™ds
 = 
ROGUE_LIKE
;

208 #ifde‡
SECURE


209 
	`Authítiˇã
();

212 #ifde‡
MSDOS


213 
	`msdos_öô
();

218 
	`öô_sc‹efûe
();

220 #i‚de‡
SECURE


221 #i‡!
	`deföed
(
MSDOS
Ë&& !deföed(
ATARIST_MWC
Ë&& !deföed(
MAC
)

222 #i‡!
	`deföed
(
AMIGA
Ë&& !deföed(
ATARIST_TC
)

223 #i‡!
	`deföed
(
©¨i°
)

224 i‡(0 !
	`£tuid
(
	`gëuid
()))

226 
	`≥º‹
("Can't setÖermissions correctly! Setuid call failed.\n");

227 
	`exô
(0);

229 i‡(0 !
	`£tgid
(
	`gëgid
()))

231 
	`≥º‹
("Can't setÖermissions correctly! Setgid call failed.\n");

232 
	`exô
(0);

240 
	`öô_cur£s
();

242 #ifde‡
VMS


245 
	`ª°‹e_s¸ìn
 ();

250 
	`öô_sig«ls
();

252 
£ed
 = 0;

254 --
¨gc
, ++
¨gv
;árgc > 0 &&árgv[0][0] == '-'; --argc, ++argv)

255 
¨gv
[0][1])

258 'n': 
√w_game
 = 
TRUE
; ;

263 
f‹˚_rogue_like
 = 
TRUE
;

264 
f‹˚_keys_to
 = 
FALSE
;

268 
f‹˚_rogue_like
 = 
TRUE
;

269 
f‹˚_keys_to
 = 
TRUE
;

271 #i‚de‡
MAC


272 'S': 
	`di•œy_sc‹es
(
TRUE
); 
	`exô_game
();

273 's': 
	`di•œy_sc‹es
(
FALSE
); 
	`exô_game
();

276 
to_be_wiz¨d
 = 
TRUE
;

278 i‡(
	`isdigô
(()
¨gv
[0][2]))

279 
£ed
 = 
	`©oi
(&
¨gv
[0][2]);

281 : (Ë
	`¥ötf
("Usage: moria [-norsw] [savefile]\n");

282 
	`exô_game
();

286 #i‚de‡
MAC


289 
	`ªad_times
();

295 #i‡(
COST_ADJ
 != 100)

296 
	`¥i˚_adju°
();

300 
	`öô_£eds
(
£ed
);

303 
	`öô_m_Àvñ
();

304 
	`öô_t_Àvñ
();

307 
	`°‹e_öô
();

309 #i‚de‡
MAC


315 i‡(
¨gv
[0] !
CNIL
)

316 (Ë
	`°r˝y
 (
ßvefûe
, 
¨gv
[0]);

317 i‡((
p
 = 
	`gëív
("MORIA_SAV")Ë!
CNIL
)

318 (Ë
	`°r˝y
(
ßvefûe
, 
p
);

319 i‡((
p
 = 
	`gëív
("HOME")Ë!
CNIL
)

320 #i‡
	`deföed
(
ATARIST_MWC
Ë|| deföed(
ATARIST_TC
)

321 (Ë
	`•rötf
(
ßvefûe
, "%s\\%s", 
p
, 
MORIA_SAV
);

323 #ifde‡
VMS


324 (Ë
	`•rötf
(
ßvefûe
, "%s%s", 
p
, 
MORIA_SAV
);

326 (Ë
	`•rötf
(
ßvefûe
, "%s/%s", 
p
, 
MORIA_SAV
);

330 (Ë
	`°r˝y
(
ßvefûe
, 
MORIA_SAV
);

338 
ªsu…
 = 
FALSE
;

339 #ifde‡
MAC


340 i‡((
√w_game
 =
FALSE
Ë&& 
	`gë_ch¨
(&
gíî©e
))

342 i‡((
√w_game
 =
FALSE
Ë&& !
	`ac˚ss
(
ßvefûe
, 0Ë&& 
	`gë_ch¨
(&
gíî©e
))

344 
ªsu…
 = 
TRUE
;

348 i‡(
to_be_wiz¨d
)

349 i‡(!
	`íãr_wiz_mode
())

350 
	`exô_game
();

352 i‡(
ªsu…
)

354 
	`ch™ge_«me
();

357 i‡(
py
.
misc
.
chp
 < 0)

358 
dóth
 = 
TRUE
;

362 
	`¸óã_ch¨a˘î
();

363 #ifde‡
MAC


364 
búth_d©e
 = 
	`time
 ((
time_t
 *)0);

366 
búth_d©e
 = 
	`time
 ((*)0);

368 
	`ch¨_öví_öô
();

369 
py
.
Êags
.
food
 = 7500;

370 
py
.
Êags
.
food_dige°ed
 = 2;

371 i‡(
˛ass
[
py
.
misc
.
p˛ass
].
•ñl
 =
MAGE
)

373 
	`˛ór_s¸ìn
();

374 
	`ˇlc_•ñls
(
A_INT
);

375 
	`ˇlc_m™a
(
A_INT
);

377 i‡(
˛ass
[
py
.
misc
.
p˛ass
].
•ñl
 =
PRIEST
)

379 
	`ˇlc_•ñls
(
A_WIS
);

380 
	`˛ór_s¸ìn
();

381 
	`ˇlc_m™a
(
A_WIS
);

386 
ch¨a˘î_gíî©ed
 = 1;

387 
gíî©e
 = 
TRUE
;

390 i‡(
f‹˚_rogue_like
)

391 
rogue_like_comm™ds
 = 
f‹˚_keys_to
;

393 
	`magic_öô
();

396 
	`˛ór_s¸ìn
();

397 
	`¥t_°©_block
();

398 i‡(
gíî©e
)

399 
	`gíî©e_ˇve
();

402 !
dóth
)

404 
	`dunge⁄
();

406 #i‚de‡
MAC


409 i‡(
eof_Êag
)

411 (Ë
	`°r˝y
(
dõd_‰om
, "(end of input: saved)");

412 i‡(!
	`ßve_ch¨
())

414 (Ë
	`°r˝y
(
dõd_‰om
, "unexpectedÉof");

417 
dóth
 = 
TRUE
;

421 i‡(!
dóth
Ë
	`gíî©e_ˇve
();

424 
	`exô_game
();

427 
	}
}

430 
	$ch¨_öví_öô
()

432 
i
, 
j
;

433 
öví_ty≥
 
öví_öô
;

436 
i
 = 0; i < 
INVEN_ARRAY_SIZE
; i++)

437 
	`övc›y
(&
övít‹y
[
i
], 
OBJ_NOTHING
);

439 
i
 = 0; i < 5; i++)

441 
j
 = 
∂ayî_öô
[
py
.
misc
.
p˛ass
][
i
];

442 
	`övc›y
(&
öví_öô
, 
j
);

444 
	`°‹e_bought
(&
öví_öô
);

446 i‡(
öví_öô
.
tvÆ
 =
TV_SWORD
)

447 
öví_öô
.
idít
 |
ID_SHOW_HITDAM
;

448 (Ë
	`öví_ˇºy
(&
öví_öô
);

452 
i
 = 0; i < 32; i++)

453 
•ñl_‹dî
[
i
] = 99;

454 
	}
}

458 
	$öô_m_Àvñ
()

460 
i
, 
k
;

462 
i
 = 0; i <
MAX_MONS_LEVEL
; i++)

463 
m_Àvñ
[
i
] = 0;

465 
k
 = 
MAX_CREATURES
 - 
WIN_MON_TOT
;

466 
i
 = 0; i < 
k
; i++)

467 
m_Àvñ
[
c_li°
[
i
].
Àvñ
]++;

469 
i
 = 1; i <
MAX_MONS_LEVEL
; i++)

470 #i‡
	`deföed
(
AMIGA
Ë&& !deföed(
LATTICE
)

472 
m_Àvñ
[
i
] = m_level[i] + m_level[i-1];

474 
m_Àvñ
[
i
] += m_level[i-1];

476 
	}
}

480 
	$öô_t_Àvñ
()

482 
i
, 
l
;

483 
tmp
[
MAX_OBJ_LEVEL
+1];

485 
i
 = 0; i <
MAX_OBJ_LEVEL
; i++)

486 
t_Àvñ
[
i
] = 0;

487 
i
 = 0; i < 
MAX_DUNGEON_OBJ
; i++)

488 
t_Àvñ
[
obje˘_li°
[
i
].
Àvñ
]++;

489 
i
 = 1; i <
MAX_OBJ_LEVEL
; i++)

490 #i‡
	`deföed
(
AMIGA
Ë&& !deföed(
LATTICE
)

492 
t_Àvñ
[
i
] =Å_level[i] +Å_level[i-1];

494 
t_Àvñ
[
i
] +=Å_level[i-1];

500 
i
 = 0; i <
MAX_OBJ_LEVEL
; i++)

501 
tmp
[
i
] = 1;

502 
i
 = 0; i < 
MAX_DUNGEON_OBJ
; i++)

504 
l
 = 
obje˘_li°
[
i
].
Àvñ
;

505 
s‹ãd_obje˘s
[
t_Àvñ
[
l
] - 
tmp
[l]] = 
i
;

506 
tmp
[
l
]++;

508 
	}
}

511 #i‡(
COST_ADJ
 != 100)

513 
	$¥i˚_adju°
()

515 
i
;

518 
i
 = 0; i < 
MAX_OBJECTS
; i++)

519 
obje˘_li°
[
i
].
co°
 = ((obje˘_li°[i].co° * 
COST_ADJ
) + 50) / 100;

520 
	}
}

	@misc1.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

12 
	~"exã∫s.h
"

14 #ifde‡
__TURBOC__


15 
	~<°dlib.h
>

18 #ifde‡
Pyømid


19 
	~<sys/time.h
>

21 
	~<time.h
>

23 #i‡!
deföed
(
GEMDOS
Ë&& !deföed(
MAC
Ë&& !deföed(
AMIGA
)

24 #i‚de‡
VMS


25 
	~<sys/ty≥s.h
>

27 
	~<ty≥s.h
>

31 #i‡!
deföed
(
ATARIST_MWC
Ë&& !deföed(
MAC
Ë&& !deföed(
VMS
Ë&& !deföed(
AMIGA
)

32 
time
();

34 
tm
 *
loˇ…ime
();

36 #i‡
deföed
(
LINT_ARGS
)

37 
com∑˘_obje˘s
();

42 
	$öô_£eds
(
£ed
)

43 
öt32u
 
£ed
;

45 
öt32u
 
˛ock_v¨
;

47 i‡(
£ed
 == 0)

48 #ifde‡
MAC


49 
˛ock_v¨
 = 
	`time
((
time_t
 *)0);

51 
˛ock_v¨
 = 
	`time
((*)0);

54 
˛ock_v¨
 = 
£ed
;

55 
øndes_£ed
 = (
öt32
Ë
˛ock_v¨
;

57 
˛ock_v¨
 += 8762;

58 
town_£ed
 = (
öt32
Ë
˛ock_v¨
;

60 
˛ock_v¨
 += 113452L;

61 
	`£t_∫d_£ed
(
˛ock_v¨
);

63 
˛ock_v¨
 = 
	`øndöt
(100); clock_var != 0; clock_var--)

64 (Ë
	`∫d
();

65 
	}
}

68 
öt32u
 
	gﬁd_£ed
;

71 
	$£t_£ed
(
£ed
)

72 
öt32u
 
£ed
;

74 
ﬁd_£ed
 = 
	`gë_∫d_£ed
 ();

77 
	`£t_∫d_£ed
 (
£ed
);

78 
	}
}

82 
	$ª£t_£ed
()

84 
	`£t_∫d_£ed
 (
ﬁd_£ed
);

85 
	}
}

89 
	$check_time
()

91 #ifde‡
MORIA_HOU


92 
˛ock_v¨
;

93 
tm
 *
ç
;

95 #ifde‡
MAC


96 
˛ock_v¨
 = 
	`time
((
time_t
 *)0);

98 
˛ock_v¨
 = 
	`time
((*)0);

100 
ç
 = 
	`loˇ…ime
(&
˛ock_v¨
);

101 i‡(
days
[
ç
->
tm_wday
][ç->
tm_hour
+4] == 'X')

102  
TRUE
;

104  
FALSE
;

106  
TRUE
;

108 
	}
}

112 
	$øndöt
(
maxvÆ
)

113 
maxvÆ
;

115 
øndvÆ
;

117 
øndvÆ
 = 
	`∫d
 ();

118  (()(
øndvÆ
 % 
maxvÆ
) + 1);

119 
	}
}

122 
	$øndn‹
(
món
, 
°™d
)

123 
món
, 
°™d
;

125 
tmp
, 
off£t
, 
low
, 
iödex
, 
high
;

130 
tmp
 = 
	`damrﬁl
(8, 99);

131 
tmp
 = (tm∞- 400Ë* 
°™d
 / 81;

132  
tmp
 + 
món
;

135 
tmp
 = 
	`øndöt
(
MAX_SHORT
);

138 i‡(
tmp
 =
MAX_SHORT
)

140 
off£t
 = 4 * 
°™d
 + 
	`øndöt
(stand);

143 i‡(
	`øndöt
(2) == 1)

144 
off£t
 = -offset;

146  
món
 + 
off£t
;

151 
low
 = 0;

152 
iödex
 = 
NORMAL_TABLE_SIZE
 >> 1;

153 
high
 = 
NORMAL_TABLE_SIZE
;

154 
TRUE
)

156 i‡((
n‹mÆ_èbÀ
[
iödex
] =
tmp
Ë|| (
high
 =(
low
+1)))

158 i‡(
n‹mÆ_èbÀ
[
iödex
] > 
tmp
)

160 
high
 = 
iödex
;

161 
iödex
 = 
low
 + ((iindex -Üow) >> 1);

165 
low
 = 
iödex
;

166 
iödex
 = iödex + ((
high
 - iindex) >> 1);

171 i‡(
n‹mÆ_èbÀ
[
iödex
] < 
tmp
)

172 
iödex
 = iindex + 1;

176 
off£t
 = ((
°™d
 * 
iödex
Ë+ (
NORMAL_TABLE_SD
 >> 1)) / NORMAL_TABLE_SD;

179 i‡(
	`øndöt
(2) == 1)

180 
off£t
 = -offset;

182  
món
 + 
off£t
;

183 
	}
}

188 
	$bô_pos
(
ã°
)

189 
öt32u
 *
ã°
;

191 
i
;

192 
öt32u
 
mask
 = 0x1;

194 
i
 = 0; i < (*
ã°
)*8; i++) {

195 i‡(*
ã°
 & 
mask
) {

196 *
ã°
 &~
mask
;

197 (
i
);

199 
mask
 <<= 1;

204 
	}
}

207 
	$ö_bounds
(
y
, 
x
)

208 
y
, 
x
;

210 i‡((
y
 > 0Ë&& (y < 
cur_height
-1Ë&& (
x
 > 0Ë&& (x < 
cur_width
-1))

211 (
TRUE
);

213 (
FALSE
);

214 
	}
}

218 
	$∑√l_bounds
()

220 
∑√l_row_mö
 = 
∑√l_row
*(
SCREEN_HEIGHT
/2);

221 
∑√l_row_max
 = 
∑√l_row_mö
 + 
SCREEN_HEIGHT
 - 1;

222 
∑√l_row_¥t
 = 
∑√l_row_mö
 - 1;

223 
∑√l_cﬁ_mö
 = 
∑√l_cﬁ
*(
SCREEN_WIDTH
/2);

224 
∑√l_cﬁ_max
 = 
∑√l_cﬁ_mö
 + 
SCREEN_WIDTH
 - 1;

225 
∑√l_cﬁ_¥t
 = 
∑√l_cﬁ_mö
 - 13;

226 
	}
}

232 
	$gë_∑√l
(
y
, 
x
, 
f‹˚
)

233 
y
, 
x
, 
f‹˚
;

235 
¥ow
, 
pcﬁ
;

236 
∑√l
;

238 
¥ow
 = 
∑√l_row
;

239 
pcﬁ
 = 
∑√l_cﬁ
;

240 i‡(
f‹˚
 || (
y
 < 
∑√l_row_mö
 + 2Ë|| (y > 
∑√l_row_max
 - 2))

242 
¥ow
 = ((
y
 - 
SCREEN_HEIGHT
/4)/(SCREEN_HEIGHT/2));

243 i‡(
¥ow
 > 
max_∑√l_rows
)

244 
¥ow
 = 
max_∑√l_rows
;

245 i‡(
¥ow
 < 0)

246 
¥ow
 = 0;

248 i‡(
f‹˚
 || (
x
 < 
∑√l_cﬁ_mö
 + 3Ë|| (x > 
∑√l_cﬁ_max
 - 3))

250 
pcﬁ
 = ((
x
 - 
SCREEN_WIDTH
/4)/(SCREEN_WIDTH/2));

251 i‡(
pcﬁ
 > 
max_∑√l_cﬁs
)

252 
pcﬁ
 = 
max_∑√l_cﬁs
;

253 i‡(
pcﬁ
 < 0)

254 
pcﬁ
 = 0;

256 i‡((
¥ow
 !
∑√l_row
Ë|| (
pcﬁ
 !
∑√l_cﬁ
))

258 
∑√l_row
 = 
¥ow
;

259 
∑√l_cﬁ
 = 
pcﬁ
;

260 
	`∑√l_bounds
();

261 
∑√l
 = 
TRUE
;

263 i‡(
föd_bound
)

264 
	`íd_föd
();

267 
∑√l
 = 
FALSE
;

268 (
∑√l
);

269 
	}
}

274 
	$∑√l_c⁄èös
(
y
, 
x
)

275 
y
, 
x
;

277 i‡((
y
 >
∑√l_row_mö
Ë&& (y <
∑√l_row_max
) &&

278 (
x
 >
∑√l_cﬁ_mö
Ë&& (x <
∑√l_cﬁ_max
))

279  (
TRUE
);

281  (
FALSE
);

282 
	}
}

286 
	$di°™˚
(
y1
, 
x1
, 
y2
, 
x2
)

287 
y1
, 
x1
, 
y2
, 
x2
;

289 
dy
, 
dx
;

291 
dy
 = 
y1
 - 
y2
;

292 i‡(
dy
 < 0)

293 
dy
 = -dy;

294 
dx
 = 
x1
 - 
x2
;

295 i‡(
dx
 < 0)

296 
dx
 = -dx;

298  ((((
dy
 + 
dx
) << 1) - (dy > dx ? dx : dy)) >> 1);

299 
	}
}

304 
	$√xt_to_wÆls
(
y
, 
x
)

305 
y
, 
x
;

307 
i
;

308 
ˇve_ty≥
 *
c_±r
;

310 
i
 = 0;

311 
c_±r
 = &
ˇve
[
y
-1][
x
];

312 i‡(
c_±r
->
fvÆ
 >
MIN_CAVE_WALL
)

313 
i
++;

314 
c_±r
 = &
ˇve
[
y
+1][
x
];

315 i‡(
c_±r
->
fvÆ
 >
MIN_CAVE_WALL
)

316 
i
++;

317 
c_±r
 = &
ˇve
[
y
][
x
-1];

318 i‡(
c_±r
->
fvÆ
 >
MIN_CAVE_WALL
)

319 
i
++;

320 
c_±r
 = &
ˇve
[
y
][
x
+1];

321 i‡(
c_±r
->
fvÆ
 >
MIN_CAVE_WALL
)

322 
i
++;

324 (
i
);

325 
	}
}

331 
	$√xt_to_c‹r
(
y
, 
x
)

332 
y
, 
x
;

334 
k
, 
j
, 
i
;

335 
ˇve_ty≥
 *
c_±r
;

337 
i
 = 0;

338 
j
 = 
y
 - 1; j <= (y + 1); j++)

339 
k
 = 
x
 - 1; k <= (x + 1); k++)

341 
c_±r
 = &
ˇve
[
j
][
k
];

343 i‡(
c_±r
->
fvÆ
 =
CORR_FLOOR


344 && (
c_±r
->
çå
 =0 || 
t_li°
[c_±r->çå].
tvÆ
 < 
TV_MIN_DOORS
))

345 
i
++;

347 (
i
);

348 
	}
}

352 
	$damrﬁl
(
num
, 
sides
)

353 
num
, 
sides
;

355 
i
, 
sum
 = 0;

357 
i
 = 0; i < 
num
; i++)

358 
sum
 +
	`øndöt
(
sides
);

359 (
sum
);

360 
	}
}

362 
	$pdamrﬁl
(
¨øy
)

363 
öt8u
 *
¨øy
;

365  
	`damrﬁl
(()
¨øy
[0], ()array[1]);

366 
	}
}

385 
	$los
(
‰omY
, 
‰omX
, 
toY
, 
toX
)

386 
‰omY
, 
‰omX
, 
toY
, 
toX
;

388 
tmp
, 
dñèX
, 
dñèY
;

390 
dñèX
 = 
toX
 - 
‰omX
;

391 
dñèY
 = 
toY
 - 
‰omY
;

394 i‡((
dñèX
 < 2Ë&& (dñèX > -2Ë&& (
dñèY
 < 2) && (deltaY > -2))

395  
TRUE
;

398 i‡(
dñèX
 == 0)

400 
p_y
;

402 i‡(
dñèY
 < 0)

404 
tmp
 = 
‰omY
;

405 
‰omY
 = 
toY
;

406 
toY
 = 
tmp
;

408 
p_y
 = 
‰omY
 + 1;Ö_y < 
toY
;Ö_y++)

409 i‡(
ˇve
[
p_y
][
‰omX
].
fvÆ
 >
MIN_CLOSED_SPACE
)

410  
FALSE
;

411  
TRUE
;

413 i‡(
dñèY
 == 0)

415 
px
;

417 i‡(
dñèX
 < 0)

419 
tmp
 = 
‰omX
;

420 
‰omX
 = 
toX
;

421 
toX
 = 
tmp
;

423 
px
 = 
‰omX
 + 1;Öx < 
toX
;Öx++)

424 i‡(
ˇve
[
‰omY
][
px
].
fvÆ
 >
MIN_CLOSED_SPACE
)

425  
FALSE
;

426  
TRUE
;

435 
px
,

436 
p_y
,

437 
sˇÀ2
;

438 
sˇÀ
,

439 
xSign
,

440 
ySign
,

441 
m
;

443 
sˇÀ2
 = 
	`abs
(
dñèX
 * 
dñèY
);

444 
sˇÀ
 = 
sˇÀ2
 << 1;

445 
xSign
 = (
dñèX
 < 0) ? -1 : 1;

446 
ySign
 = (
dñèY
 < 0) ? -1 : 1;

451 i‡(
	`abs
(
dñèX
Ë>abs(
dñèY
))

453 
dy
;

461 
dy
 = 
dñèY
 * deltaY;

462 
m
 = 
dy
 << 1;

463 
px
 = 
‰omX
 + 
xSign
;

466 i‡(
dy
 =
sˇÀ2
)

468 
p_y
 = 
‰omY
 + 
ySign
;

469 
dy
 -
sˇÀ
;

472 
p_y
 = 
‰omY
;

474 
toX
 - 
px
)

476 i‡(
ˇve
[
p_y
][
px
].
fvÆ
 >
MIN_CLOSED_SPACE
)

477  
FALSE
;

479 
dy
 +
m
;

480 i‡(
dy
 < 
sˇÀ2
)

481 
px
 +
xSign
;

482 i‡(
dy
 > 
sˇÀ2
)

484 
p_y
 +
ySign
;

485 i‡(
ˇve
[
p_y
][
px
].
fvÆ
 >
MIN_CLOSED_SPACE
)

486  
FALSE
;

487 
px
 +
xSign
;

488 
dy
 -
sˇÀ
;

494 
px
 +
xSign
;

495 
p_y
 +
ySign
;

496 
dy
 -
sˇÀ
;

499  
TRUE
;

503 
dx
;

504 
dx
 = 
dñèX
 * deltaX;

505 
m
 = 
dx
 << 1;

507 
p_y
 = 
‰omY
 + 
ySign
;

508 i‡(
dx
 =
sˇÀ2
)

510 
px
 = 
‰omX
 + 
xSign
;

511 
dx
 -
sˇÀ
;

514 
px
 = 
‰omX
;

516 
toY
 - 
p_y
)

518 i‡(
ˇve
[
p_y
][
px
].
fvÆ
 >
MIN_CLOSED_SPACE
)

519  
FALSE
;

520 
dx
 +
m
;

521 i‡(
dx
 < 
sˇÀ2
)

522 
p_y
 +
ySign
;

523 i‡(
dx
 > 
sˇÀ2
)

525 
px
 +
xSign
;

526 i‡(
ˇve
[
p_y
][
px
].
fvÆ
 >
MIN_CLOSED_SPACE
)

527  
FALSE
;

528 
p_y
 +
ySign
;

529 
dx
 -
sˇÀ
;

533 
px
 +
xSign
;

534 
p_y
 +
ySign
;

535 
dx
 -
sˇÀ
;

538  
TRUE
;

541 
	}
}

545 
	$loc_symbﬁ
(
y
, 
x
)

546 
y
, 
x
;

548 
ˇve_ty≥
 *
ˇve_±r
;

549 
Êags
 *
f_±r
;

551 
ˇve_±r
 = &
ˇve
[
y
][
x
];

552 
f_±r
 = &
py
.
Êags
;

554 i‡((
ˇve_±r
->
˝å
 =1Ë&& (!
föd_Êag
 || 
föd_¥£lf
))

556 i‡(
f_±r
->
°©us
 & 
PY_BLIND
)

558 i‡((
f_±r
->
image
 > 0Ë&& (
	`øndöt
 (12) == 1))

559  
	`øndöt
 (95) + 31;

560 i‡((
ˇve_±r
->
˝å
 > 1Ë&& (
m_li°
[ˇve_±r->˝å].
ml
))

561  
c_li°
[
m_li°
[
ˇve_±r
->
˝å
].
m±r
].
cch¨
;

562 i‡(!
ˇve_±r
->
∂
 && !ˇve_±r->
é
 && !ˇve_±r->
fm
)

564 i‡((
ˇve_±r
->
çå
 != 0)

565 && (
t_li°
[
ˇve_±r
->
çå
].
tvÆ
 !
TV_INVIS_TRAP
))

566  
t_li°
[
ˇve_±r
->
çå
].
tch¨
;

567 i‡(
ˇve_±r
->
fvÆ
 <
MAX_CAVE_FLOOR
)

569 #ifde‡
MSDOS


570  
Êo‹sym
;

575 i‡(
ˇve_±r
->
fvÆ
 =
GRANITE_WALL
 || cave_±r->fvÆ =
BOUNDARY_WALL


576 || 
highlight_£ams
 =
FALSE
)

578 #ifde‡
MSDOS


579  
wÆlsym
;

581 #i‚de‡
ATARI_ST


593 
	}
}

597 
	$ã°_light
(
y
, 
x
)

598 
y
, 
x
;

600 
ˇve_ty≥
 *
ˇve_±r
;

602 
ˇve_±r
 = &
ˇve
[
y
][
x
];

603 i‡(
ˇve_±r
->
∂
 || cave_±r->
é
 || cave_±r->
fm
)

604 (
TRUE
);

606 (
FALSE
);

607 
	}
}

611 
	$¥t_m≠
()

613 
i
, 
j
, 
k
;

614 
tmp_ch¨
;

616 
k
 = 0;

617 
i
 = 
∑√l_row_mö
; i <
∑√l_row_max
; i++)

619 
k
++;

620 
	`îa£_löe
 (
k
, 13);

621 
j
 = 
∑√l_cﬁ_mö
; j <
∑√l_cﬁ_max
; j++)

623 
tmp_ch¨
 = 
	`loc_symbﬁ
(
i
, 
j
);

624 i‡(
tmp_ch¨
 != ' ')

625 
	`¥öt
(
tmp_ch¨
, 
i
, 
j
);

628 
	}
}

634 
	$com∑˘_m⁄°îs
()

636 
i
;

637 
cur_dis
, 
dñëe_™y
;

638 
m⁄°î_ty≥
 *
m⁄_±r
;

639 #ifde‡
ATARIST_MWC


640 
öt32
 
hﬁdî
;

643 
	`msg_¥öt
("Compacting monsters...");

645 
cur_dis
 = 66;

646 
dñëe_™y
 = 
FALSE
;

649 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

651 
m⁄_±r
 = &
m_li°
[
i
];

652 i‡((
cur_dis
 < 
m⁄_±r
->
cdis
Ë&& (
	`øndöt
(3) == 1))

655 #ifde‡
ATARIST_MWC


656 i‡(
c_li°
[
m⁄_±r
->
m±r
].
cmove
 & (
hﬁdî
 = 
CM_WIN
))

658 i‡(
c_li°
[
m⁄_±r
->
m±r
].
cmove
 & 
CM_WIN
)

665 i‡(
hack_m⁄±r
 < 
i
)

667 
	`dñëe_m⁄°î
(
i
);

668 
dñëe_™y
 = 
TRUE
;

673 
	`fix1_dñëe_m⁄°î
(
i
);

676 i‡(!
dñëe_™y
)

678 
cur_dis
 -= 6;

680 i‡(
cur_dis
 < 0)

681  
FALSE
;

684 !
dñëe_™y
);

685  
TRUE
;

686 
	}
}

690 
	$add_food
(
num
)

691 
num
;

693 
Êags
 *
p_±r
;

694 
exåa
, 
≥«…y
;

696 
p_±r
 = &
py
.
Êags
;

697 i‡(
p_±r
->
food
 < 0)Ö_ptr->food = 0;

698 
p_±r
->
food
 +
num
;

699 i‡(
p_±r
->
food
 > 
PLAYER_FOOD_MAX
)

701 
	`msg_¥öt
("Youáre bloated from overeating.");

706 
exåa
 = 
p_±r
->
food
 - 
PLAYER_FOOD_MAX
;

707 i‡(
exåa
 > 
num
)

708 
exåa
 = 
num
;

709 
≥«…y
 = 
exåa
 / 50;

711 
p_±r
->
¶ow
 +
≥«…y
;

712 i‡(
exåa
 =
num
)

713 
p_±r
->
food
 =Ö_±r->food - 
num
 + 
≥«…y
;

715 
p_±r
->
food
 = 
PLAYER_FOOD_MAX
 + 
≥«…y
;

717 i‡(
p_±r
->
food
 > 
PLAYER_FOOD_FULL
)

718 
	`msg_¥öt
("Youáre full.");

719 
	}
}

724 
	$p›m
()

726 i‡(
mÂå
 =
MAX_MALLOC
)

728 i‡(! 
	`com∑˘_m⁄°îs
())

731  (
mÂå
++);

732 
	}
}

736 
	$max_hp
(
¨øy
)

737 
öt8u
 *
¨øy
;

739 (
¨øy
[0] *árray[1]);

740 
	}
}

744 
	$∂a˚_m⁄°î
(
y
, 
x
, 
z
, 
¶p
)

745 
y
, 
x
, 
z
;

746 
¶p
;

748 
cur_pos
;

749 
m⁄°î_ty≥
 *
m⁄_±r
;

751 
cur_pos
 = 
	`p›m
();

752 i‡(
cur_pos
 == -1)

753  
FALSE
;

754 
m⁄_±r
 = &
m_li°
[
cur_pos
];

755 
m⁄_±r
->
fy
 = 
y
;

756 
m⁄_±r
->
fx
 = 
x
;

757 
m⁄_±r
->
m±r
 = 
z
;

758 i‡(
c_li°
[
z
].
cde„n£
 & 
CD_MAX_HP
)

759 
m⁄_±r
->
hp
 = 
	`max_hp
(
c_li°
[
z
].
hd
);

761 
m⁄_±r
->
hp
 = 
	`pdamrﬁl
(
c_li°
[
z
].
hd
);

763 
m⁄_±r
->
c•ìd
 = 
c_li°
[
z
].
•ìd
 - 10 + 
py
.
Êags
.speed;

764 
m⁄_±r
->
°u¬ed
 = 0;

765 
m⁄_±r
->
cdis
 = 
	`di°™˚
(
ch¨_row
, 
ch¨_cﬁ
,
y
,
x
);

766 
m⁄_±r
->
ml
 = 
FALSE
;

767 
ˇve
[
y
][
x
].
˝å
 = 
cur_pos
;

768 i‡(
¶p
)

770 i‡(
c_li°
[
z
].
¶ìp
 == 0)

771 
m⁄_±r
->
c¶ìp
 = 0;

773 
m⁄_±r
->
c¶ìp
 = (
c_li°
[
z
].
¶ìp
 * 2) +

774 
	`øndöt
(()
c_li°
[
z
].
¶ìp
*10);

777 
m⁄_±r
->
c¶ìp
 = 0;

778  
TRUE
;

779 
	}
}

783 
	$∂a˚_wö_m⁄°î
()

785 
y
, 
x
, 
cur_pos
;

786 
m⁄°î_ty≥
 *
m⁄_±r
;

788 i‡(!
tŸÆ_wö√r
)

790 
cur_pos
 = 
	`p›m
();

793 i‡(
cur_pos
 == -1)

794 
	`ab‹t
();

795 
m⁄_±r
 = &
m_li°
[
cur_pos
];

798 
y
 = 
	`øndöt
(
cur_height
-2);

799 
x
 = 
	`øndöt
(
cur_width
-2);

801 (
ˇve
[
y
][
x
].
fvÆ
 >
MIN_CLOSED_SPACE
Ë|| (ˇve[y][x].
˝å
 != 0)

802 || (
ˇve
[
y
][
x
].
çå
 != 0) ||

803 (
	`di°™˚
(
y
,
x
,
ch¨_row
, 
ch¨_cﬁ
Ë<
MAX_SIGHT
));

804 
m⁄_±r
->
fy
 = 
y
;

805 
m⁄_±r
->
fx
 = 
x
;

806 
m⁄_±r
->
m±r
 = 
	`øndöt
(
WIN_MON_TOT
Ë- 1 + 
m_Àvñ
[
MAX_MONS_LEVEL
];

807 i‡(
c_li°
[
m⁄_±r
->
m±r
].
cde„n£
 & 
CD_MAX_HP
)

808 
m⁄_±r
->
hp
 = 
	`max_hp
(
c_li°
[m⁄_±r->
m±r
].
hd
);

810 
m⁄_±r
->
hp
 = 
	`pdamrﬁl
(
c_li°
[m⁄_±r->
m±r
].
hd
);

812 
m⁄_±r
->
c•ìd
 = 
c_li°
[m⁄_±r->
m±r
].
•ìd
 - 10 + 
py
.
Êags
.speed;

813 
m⁄_±r
->
°u¬ed
 = 0;

814 
m⁄_±r
->
cdis
 = 
	`di°™˚
(
ch¨_row
, 
ch¨_cﬁ
,
y
,
x
);

815 
ˇve
[
y
][
x
].
˝å
 = 
cur_pos
;

816 
m⁄_±r
->
c¶ìp
 = 0;

818 
	}
}

824 
	$gë_m⁄s_num
 (
Àvñ
)

825 
Àvñ
;

827 
i
, 
j
, 
num
;

829 i‡(
Àvñ
 == 0)

830 
i
 = 
	`øndöt
 (
m_Àvñ
[0]) - 1;

833 i‡(
Àvñ
 > 
MAX_MONS_LEVEL
)

834 
Àvñ
 = 
MAX_MONS_LEVEL
;

835 i‡(
	`øndöt
 (
MON_NASTY
) == 1)

837 
i
 = 
	`øndn‹
 (0, 4);

838 
Àvñ
 =Üevñ + 
	`abs
(
i
) + 1;

839 i‡(
Àvñ
 > 
MAX_MONS_LEVEL
)

840 
Àvñ
 = 
MAX_MONS_LEVEL
;

850 
num
 = 
m_Àvñ
[
Àvñ
] - m_level[0];

851 
i
 = 
	`øndöt
 (
num
) - 1;

852 
j
 = 
	`øndöt
 (
num
) - 1;

853 i‡(
j
 > 
i
)

854 
i
 = 
j
;

855 
Àvñ
 = 
c_li°
[
i
 + 
m_Àvñ
[0]].level;

857 
i
 = 
	`øndöt
(
m_Àvñ
[
Àvñ
]-m_level[level-1]) - 1 + m_level[level-1];

859  
i
;

860 
	}
}

864 
	$Æloc_m⁄°î
(
num
, 
dis
, 
¶p
)

865 
num
, 
dis
;

866 
¶p
;

868 
y
, 
x
, 
i
;

869 
l
;

871 
i
 = 0; i < 
num
; i++)

875 
y
 = 
	`øndöt
(
cur_height
-2);

876 
x
 = 
	`øndöt
(
cur_width
-2);

878 
ˇve
[
y
][
x
].
fvÆ
 >
MIN_CLOSED_SPACE
 || (ˇve[y][x].
˝å
 != 0) ||

879 (
	`di°™˚
(
y
, 
x
, 
ch¨_row
, 
ch¨_cﬁ
Ë<
dis
));

881 
l
 = 
	`gë_m⁄s_num
 (
dun_Àvñ
);

884 i‡(
c_li°
[
l
].
cch¨
 == 'd' || c_list[l].cchar == 'D')

885 
¶p
 = 
TRUE
;

888 (Ë
	`∂a˚_m⁄°î
(
y
, 
x
, 
l
, 
¶p
);

890 
	}
}

894 
	$summ⁄_m⁄°î
(
y
, 
x
, 
¶p
)

895 *
y
, *
x
;

896 
¶p
;

898 
i
, 
j
, 
k
;

899 
l
, 
summ⁄
;

900 
ˇve_ty≥
 *
ˇve_±r
;

902 
i
 = 0;

903 
summ⁄
 = 
FALSE
;

904 
l
 = 
	`gë_m⁄s_num
 (
dun_Àvñ
 + 
MON_SUMMON_ADJ
);

907 
j
 = *
y
 - 2 + 
	`øndöt
(3);

908 
k
 = *
x
 - 2 + 
	`øndöt
(3);

909 i‡(
	`ö_bounds
(
j
, 
k
))

911 
ˇve_±r
 = &
ˇve
[
j
][
k
];

912 i‡(
ˇve_±r
->
fvÆ
 <
MAX_OPEN_SPACE
 && (ˇve_±r->
˝å
 == 0))

915 i‡(!
	`∂a˚_m⁄°î
(
j
, 
k
, 
l
, 
¶p
))

916  
FALSE
;

917 
summ⁄
 = 
TRUE
;

918 
i
 = 9;

919 *
y
 = 
j
;

920 *
x
 = 
k
;

923 
i
++;

925 
i
 <= 9);

926 (
summ⁄
);

927 
	}
}

931 
	$summ⁄_undód
(
y
, 
x
)

932 *
y
, *
x
;

934 
i
, 
j
, 
k
;

935 
l
, 
m
, 
˘r
, 
summ⁄
;

936 
ˇve_ty≥
 *
ˇve_±r
;

938 
i
 = 0;

939 
summ⁄
 = 
FALSE
;

940 
l
 = 
m_Àvñ
[
MAX_MONS_LEVEL
];

943 
m
 = 
	`øndöt
(
l
) - 1;

944 
˘r
 = 0;

947 i‡(
c_li°
[
m
].
cde„n£
 & 
CD_UNDEAD
)

949 
˘r
 = 20;

950 
l
 = 0;

954 
m
++;

955 i‡(
m
 > 
l
)

956 
˘r
 = 20;

958 
˘r
++;

961 
˘r
 <= 19);

963 
l
 != 0);

966 
j
 = *
y
 - 2 + 
	`øndöt
(3);

967 
k
 = *
x
 - 2 + 
	`øndöt
(3);

968 i‡(
	`ö_bounds
(
j
, 
k
))

970 
ˇve_±r
 = &
ˇve
[
j
][
k
];

971 i‡(
ˇve_±r
->
fvÆ
 <
MAX_OPEN_SPACE
 && (ˇve_±r->
˝å
 == 0))

974 i‡(! 
	`∂a˚_m⁄°î
(
j
, 
k
, 
m
, 
FALSE
))

975  
FALSE
;

976 
summ⁄
 = 
TRUE
;

977 
i
 = 9;

978 *
y
 = 
j
;

979 *
x
 = 
k
;

982 
i
++;

984 
i
 <= 9);

985 (
summ⁄
);

986 
	}
}

990 
	$com∑˘_obje˘s
()

992 
i
, 
j
;

993 
˘r
, 
cur_dis
, 
ch™˚
;

994 
ˇve_ty≥
 *
ˇve_±r
;

996 
	`msg_¥öt
("Compacting objects...");

998 
˘r
 = 0;

999 
cur_dis
 = 66;

1002 
i
 = 0; i < 
cur_height
; i++)

1003 
j
 = 0; j < 
cur_width
; j++)

1005 
ˇve_±r
 = &
ˇve
[
i
][
j
];

1006 i‡((
ˇve_±r
->
çå
 != 0)

1007 && (
	`di°™˚
(
i
, 
j
, 
ch¨_row
, 
ch¨_cﬁ
Ë> 
cur_dis
))

1009 
t_li°
[
ˇve_±r
->
çå
].
tvÆ
)

1011 
TV_VIS_TRAP
:

1012 
ch™˚
 = 15;

1014 
TV_INVIS_TRAP
:

1015 
TV_RUBBLE
:

1016 
TV_OPEN_DOOR
: 
TV_CLOSED_DOOR
:

1017 
ch™˚
 = 5;

1019 
TV_UP_STAIR
: 
TV_DOWN_STAIR
:

1020 
TV_STORE_DOOR
:

1023 
ch™˚
 = 0;

1025 
TV_SECRET_DOOR
:

1026 
ch™˚
 = 3;

1029 
ch™˚
 = 10;

1031 i‡(
	`øndöt
 (100Ë<
ch™˚
)

1033 (Ë
	`dñëe_obje˘
(
i
, 
j
);

1034 
˘r
++;

1038 i‡(
˘r
 =0Ë
cur_dis
 -= 6;

1040 
˘r
 <= 0);

1041 i‡(
cur_dis
 < 66Ë
	`¥t_m≠
();

1042 
	}
}

1045 
	$p›t
()

1047 i‡(
t˝å
 =
MAX_TALLOC
)

1048 
	`com∑˘_obje˘s
();

1049  (
t˝å
++);

1050 
	}
}

1056 
	$pusht
(
x
)

1057 
öt8u
 
x
;

1059 
i
, 
j
;

1061 i‡(
x
 !
t˝å
 - 1)

1063 
t_li°
[
x
] =Å_li°[
t˝å
 - 1];

1066 
i
 = 0; i < 
cur_height
; i++)

1067 
j
 = 0; j < 
cur_width
; j++)

1068 i‡(
ˇve
[
i
][
j
].
çå
 =
t˝å
 - 1)

1069 
ˇve
[
i
][
j
].
çå
 = 
x
;

1071 
t˝å
--;

1072 
	`övc›y
(&
t_li°
[
t˝å
], 
OBJ_NOTHING
);

1073 
	}
}

1077 
	$magik
(
ch™˚
)

1078 
ch™˚
;

1080 i‡(
	`øndöt
(100Ë<
ch™˚
)

1081 (
TRUE
);

1083 (
FALSE
);

1084 
	}
}

1088 
	$m_b⁄us
(
ba£
, 
max_°d
, 
Àvñ
)

1089 
ba£
, 
max_°d
, 
Àvñ
;

1091 
x
, 
°™d_dev
, 
tmp
;

1093 
°™d_dev
 = (
OBJ_STD_ADJ
 * 
Àvñ
 / 100Ë+ 
OBJ_STD_MIN
;

1095 i‡(
°™d_dev
 > 
max_°d
 || 
Àvñ
 > max_std)

1096 
°™d_dev
 = 
max_°d
;

1098 
tmp
 = 
	`øndn‹
(0, 
°™d_dev
);

1099 
x
 = (
	`abs
(
tmp
Ë/ 10Ë+ 
ba£
;

1100 i‡(
x
 < 
ba£
)

1101 (
ba£
);

1103 (
x
);

1104 
	}
}

	@misc2.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

13 
	~"c⁄fig.h
"

14 
	~"c⁄°™t.h
"

15 
	~"ty≥s.h
"

16 
	~"exã∫s.h
"

21 
	$magic_åósuª
(
x
, 
Àvñ
)

22 
x
, 
Àvñ
;

24 
öví_ty≥
 *
t_±r
;

25 
ch™˚
, 
•ecül
, 
cur£d
, 
i
;

26 
tmp
;

27 #ifde‡
ATARIST_MWC


28 
öt32u
 
hﬁdî
;

31 
ch™˚
 = 
OBJ_BASE_MAGIC
 + 
Àvñ
;

32 i‡(
ch™˚
 > 
OBJ_BASE_MAX
)

33 
ch™˚
 = 
OBJ_BASE_MAX
;

34 
•ecül
 = 
ch™˚
 / 
OBJ_DIV_SPECIAL
;

35 
cur£d
 = (10 * 
ch™˚
Ë/ 
OBJ_DIV_CURSED
;

36 
t_±r
 = &
t_li°
[
x
];

44 
t_±r
->
tvÆ
)

46 
TV_SHIELD
: 
TV_HARD_ARMOR
: 
TV_SOFT_ARMOR
:

47 i‡(
	`magik
(
ch™˚
))

49 
t_±r
->
tﬂc
 +
	`m_b⁄us
(1, 30, 
Àvñ
);

50 i‡(
	`magik
(
•ecül
))

51 
	`øndöt
(9))

54 #ifde‡
ATARIST_MWC


55 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_RES_LIGHT
|
TR_RES_COLD
|
TR_RES_ACID
|

56 
TR_RES_FIRE
);

58 
t_±r
->
Êags
 |(
TR_RES_LIGHT
|
TR_RES_COLD
|
TR_RES_ACID
|

59 
TR_RES_FIRE
);

61 
t_±r
->
«me2
 = 
SN_R
;

62 
t_±r
->
tﬂc
 += 5;

63 
t_±r
->
co°
 += 2500;

66 #ifde‡
ATARIST_MWC


67 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_RES_ACID
);

69 
t_±r
->
Êags
 |
TR_RES_ACID
;

71 
t_±r
->
«me2
 = 
SN_RA
;

72 
t_±r
->
co°
 += 1000;

75 #ifde‡
ATARIST_MWC


76 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_RES_FIRE
);

78 
t_±r
->
Êags
 |
TR_RES_FIRE
;

80 
t_±r
->
«me2
 = 
SN_RF
;

81 
t_±r
->
co°
 += 600;

84 #ifde‡
ATARIST_MWC


85 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_RES_COLD
);

87 
t_±r
->
Êags
 |
TR_RES_COLD
;

89 
t_±r
->
«me2
 = 
SN_RC
;

90 
t_±r
->
co°
 += 600;

93 #ifde‡
ATARIST_MWC


94 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_RES_LIGHT
);

96 
t_±r
->
Êags
 |
TR_RES_LIGHT
;

98 
t_±r
->
«me2
 = 
SN_RL
;

99 
t_±r
->
co°
 += 500;

103 i‡(
	`magik
(
cur£d
))

105 
t_±r
->
tﬂc
 -
	`m_b⁄us
(1, 40, 
Àvñ
);

106 
t_±r
->
co°
 = 0;

107 #ifde‡
ATARIST_MWC


108 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

110 
t_±r
->
Êags
 |
TR_CURSED
;

115 
TV_HAFTED
: 
TV_POLEARM
: 
TV_SWORD
:

117 
t_±r
->
idít
 |
ID_SHOW_HITDAM
;

118 i‡(
	`magik
(
ch™˚
))

120 
t_±r
->
tohô
 +
	`m_b⁄us
(0, 40, 
Àvñ
);

122 
tmp
 = 
t_±r
->
damage
[0] *Å_ptr->damage[1];

123 
t_±r
->
todam
 +
	`m_b⁄us
(0, 4*
tmp
,Åmp*
Àvñ
/10);

127 i‡(
	`magik
(3*
•ecül
/2))

128 
	`øndöt
(16))

131 #ifde‡
ATARIST_MWC


132 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_SEE_INVIS
|
TR_SUST_STAT
|

133 
TR_SLAY_UNDEAD
|
TR_SLAY_EVIL
|
TR_STR
);

135 
t_±r
->
Êags
 |(
TR_SEE_INVIS
|
TR_SUST_STAT
|
TR_SLAY_UNDEAD
|

136 
TR_SLAY_EVIL
|
TR_STR
);

138 
t_±r
->
tohô
 += 5;

139 
t_±r
->
todam
 += 5;

140 
t_±r
->
tﬂc
 +
	`øndöt
(4);

143 
t_±r
->
p1
 = 
	`øndöt
(4);

144 
t_±r
->
«me2
 = 
SN_HA
;

145 
t_±r
->
co°
 +t_±r->
p1
*500;

146 
t_±r
->
co°
 += 10000;

149 #ifde‡
ATARIST_MWC


150 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_FFALL
|
TR_RES_LIGHT
|
TR_SEE_INVIS
|

151 
TR_FREE_ACT
|
TR_RES_COLD
|
TR_RES_ACID
|

152 
TR_RES_FIRE
|
TR_REGEN
|
TR_STEALTH
);

154 
t_±r
->
Êags
 |(
TR_FFALL
|
TR_RES_LIGHT
|
TR_SEE_INVIS
|
TR_FREE_ACT


155 |
TR_RES_COLD
|
TR_RES_ACID
|
TR_RES_FIRE
|

156 
TR_REGEN
|
TR_STEALTH
);

158 
t_±r
->
tohô
 += 3;

159 
t_±r
->
todam
 += 3;

160 
t_±r
->
tﬂc
 +5 + 
	`øndöt
(5);

161 
t_±r
->
«me2
 = 
SN_DF
;

163 
t_±r
->
p1
 = 
	`øndöt
(3);

164 
t_±r
->
co°
 +t_±r->
p1
*500;

165 
t_±r
->
co°
 += 7500;

168 
t_±r
->
Êags
 |
TR_SLAY_ANIMAL
;

169 
t_±r
->
tohô
 += 2;

170 
t_±r
->
todam
 += 2;

171 
t_±r
->
«me2
 = 
SN_SA
;

172 
t_±r
->
co°
 += 3000;

175 
t_±r
->
Êags
 |
TR_SLAY_DRAGON
;

176 
t_±r
->
tohô
 += 3;

177 
t_±r
->
todam
 += 3;

178 
t_±r
->
«me2
 = 
SN_SD
;

179 
t_±r
->
co°
 += 4000;

182 
t_±r
->
Êags
 |
TR_SLAY_EVIL
;

183 
t_±r
->
tohô
 += 3;

184 
t_±r
->
todam
 += 3;

185 
t_±r
->
«me2
 = 
SN_SE
;

186 
t_±r
->
co°
 += 4000;

189 #ifde‡
ATARIST_MWC


190 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_SEE_INVIS
|
TR_SLAY_UNDEAD
);

192 
t_±r
->
Êags
 |(
TR_SEE_INVIS
|
TR_SLAY_UNDEAD
);

194 
t_±r
->
tohô
 += 3;

195 
t_±r
->
todam
 += 3;

196 
t_±r
->
«me2
 = 
SN_SU
;

197 
t_±r
->
co°
 += 5000;

200 #ifde‡
ATARIST_MWC


201 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_FLAME_TONGUE
);

203 
t_±r
->
Êags
 |
TR_FLAME_TONGUE
;

205 
t_±r
->
tohô
++;

206 
t_±r
->
todam
 += 3;

207 
t_±r
->
«me2
 = 
SN_FT
;

208 
t_±r
->
co°
 += 2000;

211 #ifde‡
ATARIST_MWC


212 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_FROST_BRAND
);

214 
t_±r
->
Êags
 |
TR_FROST_BRAND
;

216 
t_±r
->
tohô
++;

217 
t_±r
->
todam
++;

218 
t_±r
->
«me2
 = 
SN_FB
;

219 
t_±r
->
co°
 += 1200;

223 i‡(
	`magik
(
cur£d
))

225 
t_±r
->
tohô
 -
	`m_b⁄us
(1, 55, 
Àvñ
);

227 
tmp
 = 
t_±r
->
damage
[0] *Å_ptr->damage[1];

228 
t_±r
->
todam
 -
	`m_b⁄us
(1, 11*
tmp
/2,Åmp*
Àvñ
/10);

229 #ifde‡
ATARIST_MWC


230 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

232 
t_±r
->
Êags
 |
TR_CURSED
;

234 
t_±r
->
co°
 = 0;

238 
TV_BOW
:

240 
t_±r
->
idít
 |
ID_SHOW_HITDAM
;

241 i‡(
	`magik
(
ch™˚
))

243 
t_±r
->
tohô
 +
	`m_b⁄us
(1, 30, 
Àvñ
);

244 
t_±r
->
todam
 +
	`m_b⁄us
(1, 20, 
Àvñ
);

246 i‡(
	`magik
(
cur£d
))

248 
t_±r
->
tohô
 -
	`m_b⁄us
(1, 50, 
Àvñ
);

249 
t_±r
->
todam
 -
	`m_b⁄us
(1, 30, 
Àvñ
);

250 #ifde‡
ATARIST_MWC


251 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

253 
t_±r
->
Êags
 |
TR_CURSED
;

255 
t_±r
->
co°
 = 0;

259 
TV_DIGGING
:

261 
t_±r
->
idít
 |
ID_SHOW_HITDAM
;

262 i‡(
	`magik
(
ch™˚
))

264 
tmp
 = 
	`øndöt
(3);

265 i‡(
tmp
 < 3)

266 
t_±r
->
p1
 +
	`m_b⁄us
(0, 25, 
Àvñ
);

270 
t_±r
->
p1
 = -
	`m_b⁄us
(1, 30, 
Àvñ
);

271 
t_±r
->
co°
 = 0;

272 #ifde‡
ATARIST_MWC


273 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

275 
t_±r
->
Êags
 |
TR_CURSED
;

281 
TV_GLOVES
:

282 i‡(
	`magik
(
ch™˚
))

284 
t_±r
->
tﬂc
 +
	`m_b⁄us
(1, 20, 
Àvñ
);

285 i‡(
	`magik
(
•ecül
))

287 i‡(
	`øndöt
(2) == 1)

289 #ifde‡
ATARIST_MWC


290 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_FREE_ACT
);

292 
t_±r
->
Êags
 |
TR_FREE_ACT
;

294 
t_±r
->
«me2
 = 
SN_FREE_ACTION
;

295 
t_±r
->
co°
 += 1000;

299 
t_±r
->
idít
 |
ID_SHOW_HITDAM
;

300 
t_±r
->
tohô
 +1 + 
	`øndöt
(3);

301 
t_±r
->
todam
 +1 + 
	`øndöt
(3);

302 
t_±r
->
«me2
 = 
SN_SLAYING
;

303 
t_±r
->
co°
 +—_±r->
tohô
+t_±r->
todam
)*250;

307 i‡(
	`magik
(
cur£d
))

309 i‡(
	`magik
(
•ecül
))

311 i‡(
	`øndöt
(2) == 1)

313 
t_±r
->
Êags
 |
TR_DEX
;

314 
t_±r
->
«me2
 = 
SN_CLUMSINESS
;

318 
t_±r
->
Êags
 |
TR_STR
;

319 
t_±r
->
«me2
 = 
SN_WEAKNESS
;

321 
t_±r
->
idít
 |
ID_SHOW_P1
;

322 
t_±r
->
p1
 = -
	`m_b⁄us
(1, 10, 
Àvñ
);

324 
t_±r
->
tﬂc
 -
	`m_b⁄us
(1, 40, 
Àvñ
);

325 #ifde‡
ATARIST_MWC


326 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

328 
t_±r
->
Êags
 |
TR_CURSED
;

330 
t_±r
->
co°
 = 0;

334 
TV_BOOTS
:

335 i‡(
	`magik
(
ch™˚
))

337 
t_±r
->
tﬂc
 +
	`m_b⁄us
(1, 20, 
Àvñ
);

338 i‡(
	`magik
(
•ecül
))

340 
tmp
 = 
	`øndöt
(12);

341 i‡(
tmp
 > 5)

343 #ifde‡
ATARIST_MWC


344 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_FFALL
);

346 
t_±r
->
Êags
 |
TR_FFALL
;

348 
t_±r
->
«me2
 = 
SN_SLOW_DESCENT
;

349 
t_±r
->
co°
 += 250;

351 i‡(
tmp
 == 1)

353 
t_±r
->
Êags
 |
TR_SPEED
;

354 
t_±r
->
«me2
 = 
SN_SPEED
;

355 
t_±r
->
idít
 |
ID_SHOW_P1
;

356 
t_±r
->
p1
 = 1;

357 
t_±r
->
co°
 += 5000;

361 
t_±r
->
Êags
 |
TR_STEALTH
;

362 
t_±r
->
idít
 |
ID_SHOW_P1
;

363 
t_±r
->
p1
 = 
	`øndöt
(3);

364 
t_±r
->
«me2
 = 
SN_STEALTH
;

365 
t_±r
->
co°
 += 500;

369 i‡(
	`magik
(
cur£d
))

371 
tmp
 = 
	`øndöt
(3);

372 i‡(
tmp
 == 1)

374 
t_±r
->
Êags
 |
TR_SPEED
;

375 
t_±r
->
«me2
 = 
SN_SLOWNESS
;

376 
t_±r
->
idít
 |
ID_SHOW_P1
;

377 
t_±r
->
p1
 = -1;

379 i‡(
tmp
 == 2)

381 
t_±r
->
Êags
 |
TR_AGGRAVATE
;

382 
t_±r
->
«me2
 = 
SN_NOISE
;

386 
t_±r
->
«me2
 = 
SN_GREAT_MASS
;

387 
t_±r
->
weight
 =Å_ptr->weight * 5;

389 
t_±r
->
co°
 = 0;

390 
t_±r
->
tﬂc
 -
	`m_b⁄us
(2, 45, 
Àvñ
);

391 #ifde‡
ATARIST_MWC


392 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

394 
t_±r
->
Êags
 |
TR_CURSED
;

399 
TV_HELM
:

400 i‡((
t_±r
->
subvÆ
 >= 6) && (t_ptr->subval <= 8))

403 
ch™˚
 +(Ë(
t_±r
->
co°
 / 100);

404 
•ecül
 += special;

406 i‡(
	`magik
(
ch™˚
))

408 
t_±r
->
tﬂc
 +
	`m_b⁄us
(1, 20, 
Àvñ
);

409 i‡(
	`magik
(
•ecül
))

411 i‡(
t_±r
->
subvÆ
 < 6)

413 
tmp
 = 
	`øndöt
(3);

414 
t_±r
->
idít
 |
ID_SHOW_P1
;

415 i‡(
tmp
 == 1)

417 
t_±r
->
p1
 = 
	`øndöt
(2);

418 
t_±r
->
Êags
 |
TR_INT
;

419 
t_±r
->
«me2
 = 
SN_INTELLIGENCE
;

420 
t_±r
->
co°
 +t_±r->
p1
*500;

422 i‡(
tmp
 == 2)

424 
t_±r
->
p1
 = 
	`øndöt
(2);

425 
t_±r
->
Êags
 |
TR_WIS
;

426 
t_±r
->
«me2
 = 
SN_WISDOM
;

427 
t_±r
->
co°
 +t_±r->
p1
*500;

431 
t_±r
->
p1
 = 1 + 
	`øndöt
(4);

432 #ifde‡
ATARIST_MWC


433 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_INFRA
);

435 
t_±r
->
Êags
 |
TR_INFRA
;

437 
t_±r
->
«me2
 = 
SN_INFRAVISION
;

438 
t_±r
->
co°
 +t_±r->
p1
*250;

443 
	`øndöt
(6))

446 
t_±r
->
idít
 |
ID_SHOW_P1
;

447 
t_±r
->
p1
 = 
	`øndöt
(3);

448 #ifde‡
ATARIST_MWC


449 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_FREE_ACT
|
TR_CON
|
TR_DEX
|

450 
TR_STR
);

452 
t_±r
->
Êags
 |(
TR_FREE_ACT
|
TR_CON
|
TR_DEX
|
TR_STR
);

454 
t_±r
->
«me2
 = 
SN_MIGHT
;

455 
t_±r
->
co°
 +1000 +Å_±r->
p1
*500;

458 
t_±r
->
idít
 |
ID_SHOW_P1
;

459 
t_±r
->
p1
 = 
	`øndöt
(3);

460 
t_±r
->
Êags
 |(
TR_CHR
|
TR_WIS
);

461 
t_±r
->
«me2
 = 
SN_LORDLINESS
;

462 
t_±r
->
co°
 +1000 +Å_±r->
p1
*500;

465 
t_±r
->
idít
 |
ID_SHOW_P1
;

466 
t_±r
->
p1
 = 
	`øndöt
(3);

467 #ifde‡
ATARIST_MWC


468 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_RES_LIGHT
|
TR_RES_COLD
|

469 
TR_RES_ACID
|
TR_RES_FIRE
|
TR_INT
);

471 
t_±r
->
Êags
 |(
TR_RES_LIGHT
|
TR_RES_COLD
|
TR_RES_ACID
|

472 
TR_RES_FIRE
|
TR_INT
);

474 
t_±r
->
«me2
 = 
SN_MAGI
;

475 
t_±r
->
co°
 +3000 +Å_±r->
p1
*500;

478 
t_±r
->
idít
 |
ID_SHOW_P1
;

479 
t_±r
->
p1
 = 
	`øndöt
(3);

480 
t_±r
->
Êags
 |
TR_CHR
;

481 
t_±r
->
«me2
 = 
SN_BEAUTY
;

482 
t_±r
->
co°
 += 750;

485 
t_±r
->
idít
 |
ID_SHOW_P1
;

486 
t_±r
->
p1
 = 5*(1 + 
	`øndöt
(4));

487 #ifde‡
ATARIST_MWC


488 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_SEE_INVIS
|
TR_SEARCH
);

490 
t_±r
->
Êags
 |(
TR_SEE_INVIS
|
TR_SEARCH
);

492 
t_±r
->
«me2
 = 
SN_SEEING
;

493 
t_±r
->
co°
 +1000 +Å_±r->
p1
*100;

496 
t_±r
->
Êags
 |
TR_REGEN
;

497 
t_±r
->
«me2
 = 
SN_REGENERATION
;

498 
t_±r
->
co°
 += 1500;

504 i‡(
	`magik
(
cur£d
))

506 
t_±r
->
tﬂc
 -
	`m_b⁄us
(1, 45, 
Àvñ
);

507 #ifde‡
ATARIST_MWC


508 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

510 
t_±r
->
Êags
 |
TR_CURSED
;

512 
t_±r
->
co°
 = 0;

513 i‡(
	`magik
(
•ecül
))

514 
	`øndöt
(7))

517 
t_±r
->
idít
 |
ID_SHOW_P1
;

518 
t_±r
->
p1
 = -
	`øndöt
 (5);

519 
t_±r
->
Êags
 |
TR_INT
;

520 
t_±r
->
«me2
 = 
SN_STUPIDITY
;

523 
t_±r
->
idít
 |
ID_SHOW_P1
;

524 
t_±r
->
p1
 = -
	`øndöt
 (5);

525 
t_±r
->
Êags
 |
TR_WIS
;

526 
t_±r
->
«me2
 = 
SN_DULLNESS
;

529 #ifde‡
ATARIST_MWC


530 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_BLIND
);

532 
t_±r
->
Êags
 |
TR_BLIND
;

534 
t_±r
->
«me2
 = 
SN_BLINDNESS
;

537 #ifde‡
ATARIST_MWC


538 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_TIMID
);

540 
t_±r
->
Êags
 |
TR_TIMID
;

542 
t_±r
->
«me2
 = 
SN_TIMIDNESS
;

545 
t_±r
->
idít
 |
ID_SHOW_P1
;

546 
t_±r
->
p1
 = -
	`øndöt
 (5);

547 
t_±r
->
Êags
 |
TR_STR
;

548 
t_±r
->
«me2
 = 
SN_WEAKNESS
;

551 
t_±r
->
Êags
 |
TR_TELEPORT
;

552 
t_±r
->
«me2
 = 
SN_TELEPORTATION
;

555 
t_±r
->
idít
 |
ID_SHOW_P1
;

556 
t_±r
->
p1
 = -
	`øndöt
 (5);

557 
t_±r
->
Êags
 |
TR_CHR
;

558 
t_±r
->
«me2
 = 
SN_UGLINESS
;

564 
TV_RING
:

565 
t_±r
->
subvÆ
)

568 i‡(
	`magik
(
cur£d
))

570 
t_±r
->
p1
 = -
	`m_b⁄us
(1, 20, 
Àvñ
);

571 #ifde‡
ATARIST_MWC


572 
t_±r
->
Êags
 |
TR_CURSED
;

574 
t_±r
->
Êags
 |
TR_CURSED
;

576 
t_±r
->
co°
 = -t_ptr->cost;

580 
t_±r
->
p1
 = 
	`m_b⁄us
(1, 10, 
Àvñ
);

581 
t_±r
->
co°
 +t_±r->
p1
*100;

585 i‡(
	`magik
(
cur£d
))

587 
t_±r
->
p1
 = -
	`øndöt
(3);

588 #ifde‡
ATARIST_MWC


589 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

591 
t_±r
->
Êags
 |
TR_CURSED
;

593 
t_±r
->
co°
 = -t_ptr->cost;

596 
t_±r
->
p1
 = 1;

599 
t_±r
->
p1
 = 5 * 
	`m_b⁄us
(1, 20, 
Àvñ
);

600 
t_±r
->
co°
 +t_±r->
p1
*50;

601 i‡(
	`magik
 (
cur£d
))

603 
t_±r
->
p1
 = -t_ptr->p1;

604 #ifde‡
ATARIST_MWC


605 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

607 
t_±r
->
Êags
 |
TR_CURSED
;

609 
t_±r
->
co°
 = -t_ptr->cost;

613 
t_±r
->
todam
 +
	`m_b⁄us
(1, 20, 
Àvñ
);

614 
t_±r
->
co°
 +t_±r->
todam
*100;

615 i‡(
	`magik
(
cur£d
))

617 
t_±r
->
todam
 = -t_ptr->todam;

618 #ifde‡
ATARIST_MWC


619 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

621 
t_±r
->
Êags
 |
TR_CURSED
;

623 
t_±r
->
co°
 = -t_ptr->cost;

627 
t_±r
->
tohô
 +
	`m_b⁄us
(1, 20, 
Àvñ
);

628 
t_±r
->
co°
 +t_±r->
tohô
*100;

629 i‡(
	`magik
(
cur£d
))

631 
t_±r
->
tohô
 = -t_ptr->tohit;

632 #ifde‡
ATARIST_MWC


633 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

635 
t_±r
->
Êags
 |
TR_CURSED
;

637 
t_±r
->
co°
 = -t_ptr->cost;

641 
t_±r
->
tﬂc
 +
	`m_b⁄us
(1, 20, 
Àvñ
);

642 
t_±r
->
co°
 +t_±r->
tﬂc
*100;

643 i‡(
	`magik
(
cur£d
))

645 
t_±r
->
tﬂc
 = -t_ptr->toac;

646 #ifde‡
ATARIST_MWC


647 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

649 
t_±r
->
Êags
 |
TR_CURSED
;

651 
t_±r
->
co°
 = -t_ptr->cost;

656 
t_±r
->
idít
 |
ID_NOSHOW_P1
;

659 
t_±r
->
idít
 |
ID_SHOW_HITDAM
;

660 
t_±r
->
todam
 +
	`m_b⁄us
(1, 25, 
Àvñ
);

661 
t_±r
->
tohô
 +
	`m_b⁄us
(1, 25, 
Àvñ
);

662 
t_±r
->
co°
 +—_±r->
tohô
+t_±r->
todam
)*100;

663 i‡(
	`magik
(
cur£d
))

665 
t_±r
->
tohô
 = -t_ptr->tohit;

666 
t_±r
->
todam
 = -t_ptr->todam;

667 #ifde‡
ATARIST_MWC


668 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

670 
t_±r
->
Êags
 |
TR_CURSED
;

672 
t_±r
->
co°
 = -t_ptr->cost;

680 
TV_AMULET
:

681 i‡(
t_±r
->
subvÆ
 < 2)

683 i‡(
	`magik
(
cur£d
))

685 
t_±r
->
p1
 = -
	`m_b⁄us
(1, 20, 
Àvñ
);

686 #ifde‡
ATARIST_MWC


687 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

689 
t_±r
->
Êags
 |
TR_CURSED
;

691 
t_±r
->
co°
 = -t_ptr->cost;

695 
t_±r
->
p1
 = 
	`m_b⁄us
(1, 10, 
Àvñ
);

696 
t_±r
->
co°
 +t_±r->
p1
*100;

699 i‡(
t_±r
->
subvÆ
 == 2)

701 
t_±r
->
p1
 = 5 * 
	`m_b⁄us
(1, 25, 
Àvñ
);

702 i‡(
	`magik
(
cur£d
))

704 
t_±r
->
p1
 = -t_ptr->p1;

705 
t_±r
->
co°
 = -t_ptr->cost;

706 #ifde‡
ATARIST_MWC


707 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

709 
t_±r
->
Êags
 |
TR_CURSED
;

713 
t_±r
->
co°
 +50*t_±r->
p1
;

715 i‡(
t_±r
->
subvÆ
 == 8)

718 
t_±r
->
p1
 = 5 * 
	`m_b⁄us
(1, 25, 
Àvñ
);

719 
t_±r
->
co°
 +20*t_±r->
p1
;

725 
TV_LIGHT
:

726 i‡((
t_±r
->
subvÆ
 % 2) == 1)

728 
t_±r
->
p1
 = 
	`øndöt
(t_ptr->p1);

729 
t_±r
->
subvÆ
 -= 1;

733 
TV_WAND
:

734 
t_±r
->
subvÆ
)

736 0: 
t_±r
->
p1
 = 
	`øndöt
(10) + 6; ;

737 1: 
t_±r
->
p1
 = 
	`øndöt
(8) + 6; ;

738 2: 
t_±r
->
p1
 = 
	`øndöt
(5) + 6; ;

739 3: 
t_±r
->
p1
 = 
	`øndöt
(8) + 6; ;

740 4: 
t_±r
->
p1
 = 
	`øndöt
(4) + 3; ;

741 5: 
t_±r
->
p1
 = 
	`øndöt
(8) + 6; ;

742 6: 
t_±r
->
p1
 = 
	`øndöt
(20) + 12; ;

743 7: 
t_±r
->
p1
 = 
	`øndöt
(20) + 12; ;

744 8: 
t_±r
->
p1
 = 
	`øndöt
(10) + 6; ;

745 9: 
t_±r
->
p1
 = 
	`øndöt
(12) + 6; ;

746 10: 
t_±r
->
p1
 = 
	`øndöt
(10) + 12; ;

747 11: 
t_±r
->
p1
 = 
	`øndöt
(3) + 3; ;

748 12: 
t_±r
->
p1
 = 
	`øndöt
(8) + 6; ;

749 13: 
t_±r
->
p1
 = 
	`øndöt
(10) + 6; ;

750 14: 
t_±r
->
p1
 = 
	`øndöt
(5) + 3; ;

751 15: 
t_±r
->
p1
 = 
	`øndöt
(5) + 3; ;

752 16: 
t_±r
->
p1
 = 
	`øndöt
(5) + 6; ;

753 17: 
t_±r
->
p1
 = 
	`øndöt
(5) + 4; ;

754 18: 
t_±r
->
p1
 = 
	`øndöt
(8) + 4; ;

755 19: 
t_±r
->
p1
 = 
	`øndöt
(6) + 2; ;

756 20: 
t_±r
->
p1
 = 
	`øndöt
(4) + 2; ;

757 21: 
t_±r
->
p1
 = 
	`øndöt
(8) + 6; ;

758 22: 
t_±r
->
p1
 = 
	`øndöt
(5) + 2; ;

759 23: 
t_±r
->
p1
 = 
	`øndöt
(12) + 12; ;

765 
TV_STAFF
:

766 
t_±r
->
subvÆ
)

768 0: 
t_±r
->
p1
 = 
	`øndöt
(20) + 12; ;

769 1: 
t_±r
->
p1
 = 
	`øndöt
(8) + 6; ;

770 2: 
t_±r
->
p1
 = 
	`øndöt
(5) + 6; ;

771 3: 
t_±r
->
p1
 = 
	`øndöt
(20) + 12; ;

772 4: 
t_±r
->
p1
 = 
	`øndöt
(15) + 6; ;

773 5: 
t_±r
->
p1
 = 
	`øndöt
(4) + 5; ;

774 6: 
t_±r
->
p1
 = 
	`øndöt
(5) + 3; ;

775 7: 
t_±r
->
p1
 = 
	`øndöt
(3) + 1;

776 
t_±r
->
Àvñ
 = 10;

778 8: 
t_±r
->
p1
 = 
	`øndöt
(3) + 1; ;

779 9: 
t_±r
->
p1
 = 
	`øndöt
(5) + 6; ;

780 10: 
t_±r
->
p1
 = 
	`øndöt
(10) + 12; ;

781 11: 
t_±r
->
p1
 = 
	`øndöt
(5) + 6; ;

782 12: 
t_±r
->
p1
 = 
	`øndöt
(5) + 6; ;

783 13: 
t_±r
->
p1
 = 
	`øndöt
(5) + 6; ;

784 14: 
t_±r
->
p1
 = 
	`øndöt
(10) + 12; ;

785 15: 
t_±r
->
p1
 = 
	`øndöt
(3) + 4; ;

786 16: 
t_±r
->
p1
 = 
	`øndöt
(5) + 6; ;

787 17: 
t_±r
->
p1
 = 
	`øndöt
(5) + 6; ;

788 18: 
t_±r
->
p1
 = 
	`øndöt
(3) + 4; ;

789 19: 
t_±r
->
p1
 = 
	`øndöt
(10) + 12; ;

790 20: 
t_±r
->
p1
 = 
	`øndöt
(3) + 4; ;

791 21: 
t_±r
->
p1
 = 
	`øndöt
(3) + 4; ;

792 22: 
t_±r
->
p1
 = 
	`øndöt
(10) + 6;

793 
t_±r
->
Àvñ
 = 5;

800 
TV_CLOAK
:

801 i‡(
	`magik
(
ch™˚
))

803 i‡(
	`magik
(
•ecül
))

805 i‡(
	`øndöt
(2) == 1)

807 
t_±r
->
«me2
 = 
SN_PROTECTION
;

808 
t_±r
->
tﬂc
 +
	`m_b⁄us
(2, 40, 
Àvñ
);

809 
t_±r
->
co°
 += 250;

813 
t_±r
->
tﬂc
 +
	`m_b⁄us
(1, 20, 
Àvñ
);

814 
t_±r
->
idít
 |
ID_SHOW_P1
;

815 
t_±r
->
p1
 = 
	`øndöt
(3);

816 
t_±r
->
Êags
 |
TR_STEALTH
;

817 
t_±r
->
«me2
 = 
SN_STEALTH
;

818 
t_±r
->
co°
 += 500;

822 
t_±r
->
tﬂc
 +
	`m_b⁄us
(1, 20, 
Àvñ
);

824 i‡(
	`magik
(
cur£d
))

826 
tmp
 = 
	`øndöt
(3);

827 i‡(
tmp
 == 1)

829 
t_±r
->
Êags
 |
TR_AGGRAVATE
;

830 
t_±r
->
«me2
 = 
SN_IRRITATION
;

831 
t_±r
->
tﬂc
 -
	`m_b⁄us
(1, 10, 
Àvñ
);

832 
t_±r
->
idít
 |
ID_SHOW_HITDAM
;

833 
t_±r
->
tohô
 -
	`m_b⁄us
(1, 10, 
Àvñ
);

834 
t_±r
->
todam
 -
	`m_b⁄us
(1, 10, 
Àvñ
);

835 
t_±r
->
co°
 = 0;

837 i‡(
tmp
 == 2)

839 
t_±r
->
«me2
 = 
SN_VULNERABILITY
;

840 
t_±r
->
tﬂc
 -
	`m_b⁄us
(10, 100, 
Àvñ
+50);

841 
t_±r
->
co°
 = 0;

845 
t_±r
->
«me2
 = 
SN_ENVELOPING
;

846 
t_±r
->
tﬂc
 -
	`m_b⁄us
(1, 10, 
Àvñ
);

847 
t_±r
->
idít
 |
ID_SHOW_HITDAM
;

848 
t_±r
->
tohô
 -
	`m_b⁄us
(2, 40, 
Àvñ
+10);

849 
t_±r
->
todam
 -
	`m_b⁄us
(2, 40, 
Àvñ
+10);

850 
t_±r
->
co°
 = 0;

852 #ifde‡
ATARIST_MWC


853 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

855 
t_±r
->
Êags
 |
TR_CURSED
;

860 
TV_CHEST
:

861 
	`øndöt
(
Àvñ
+4))

864 
t_±r
->
Êags
 = 0;

865 
t_±r
->
«me2
 = 
SN_EMPTY
;

868 
t_±r
->
Êags
 |
CH_LOCKED
;

869 
t_±r
->
«me2
 = 
SN_LOCKED
;

872 
t_±r
->
Êags
 |(
CH_LOSE_STR
|
CH_LOCKED
);

873 
t_±r
->
«me2
 = 
SN_POISON_NEEDLE
;

876 
t_±r
->
Êags
 |(
CH_POISON
|
CH_LOCKED
);

877 
t_±r
->
«me2
 = 
SN_POISON_NEEDLE
;

880 
t_±r
->
Êags
 |(
CH_PARALYSED
|
CH_LOCKED
);

881 
t_±r
->
«me2
 = 
SN_GAS_TRAP
;

884 
t_±r
->
Êags
 |(
CH_EXPLODE
|
CH_LOCKED
);

885 
t_±r
->
«me2
 = 
SN_EXPLOSION_DEVICE
;

888 
t_±r
->
Êags
 |(
CH_SUMMON
|
CH_LOCKED
);

889 
t_±r
->
«me2
 = 
SN_SUMMONING_RUNES
;

892 
t_±r
->
Êags
 |(
CH_PARALYSED
|
CH_POISON
|
CH_LOSE_STR
|
CH_LOCKED
);

893 
t_±r
->
«me2
 = 
SN_MULTIPLE_TRAPS
;

896 
t_±r
->
Êags
 |(
CH_SUMMON
|
CH_EXPLODE
|
CH_LOCKED
);

897 
t_±r
->
«me2
 = 
SN_MULTIPLE_TRAPS
;

902 
TV_SLING_AMMO
: 
TV_SPIKE
:

903 
TV_BOLT
: 
TV_ARROW
:

904 i‡(
t_±r
->
tvÆ
 =
TV_SLING_AMMO
 ||Å_±r->tvÆ =
TV_BOLT


905 || 
t_±r
->
tvÆ
 =
TV_ARROW
)

908 
t_±r
->
idít
 |
ID_SHOW_HITDAM
;

910 i‡(
	`magik
(
ch™˚
))

912 
t_±r
->
tohô
 +
	`m_b⁄us
(1, 35, 
Àvñ
);

913 
t_±r
->
todam
 +
	`m_b⁄us
(1, 35, 
Àvñ
);

915 i‡(
	`magik
(3*
•ecül
/2))

916 
	`øndöt
(10))

919 
t_±r
->
«me2
 = 
SN_SLAYING
;

920 
t_±r
->
tohô
 += 5;

921 
t_±r
->
todam
 += 5;

922 
t_±r
->
co°
 += 20;

925 #ifde‡
ATARIST_MWC


926 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_FLAME_TONGUE
);

928 
t_±r
->
Êags
 |
TR_FLAME_TONGUE
;

930 
t_±r
->
tohô
 += 2;

931 
t_±r
->
todam
 += 4;

932 
t_±r
->
«me2
 = 
SN_FIRE
;

933 
t_±r
->
co°
 += 25;

936 
t_±r
->
Êags
 |
TR_SLAY_EVIL
;

937 
t_±r
->
tohô
 += 3;

938 
t_±r
->
todam
 += 3;

939 
t_±r
->
«me2
 = 
SN_SLAY_EVIL
;

940 
t_±r
->
co°
 += 25;

943 
t_±r
->
Êags
 |
TR_SLAY_ANIMAL
;

944 
t_±r
->
tohô
 += 2;

945 
t_±r
->
todam
 += 2;

946 
t_±r
->
«me2
 = 
SN_SLAY_ANIMAL
;

947 
t_±r
->
co°
 += 30;

950 
t_±r
->
Êags
 |
TR_SLAY_DRAGON
;

951 
t_±r
->
tohô
 += 3;

952 
t_±r
->
todam
 += 3;

953 
t_±r
->
«me2
 = 
SN_DRAGON_SLAYING
;

954 
t_±r
->
co°
 += 35;

958 i‡(
	`magik
(
cur£d
))

960 
t_±r
->
tohô
 -
	`m_b⁄us
(5, 55, 
Àvñ
);

961 
t_±r
->
todam
 -
	`m_b⁄us
(5, 55, 
Àvñ
);

962 #ifde‡
ATARIST_MWC


963 
t_±r
->
Êags
 |(
hﬁdî
 = 
TR_CURSED
);

965 
t_±r
->
Êags
 |
TR_CURSED
;

967 
t_±r
->
co°
 = 0;

971 
t_±r
->
numbî
 = 0;

972 
i
 = 0; i < 7; i++)

973 
t_±r
->
numbî
 +
	`øndöt
(6);

974 i‡(
missûe_˘r
 =
MAX_SHORT
)

975 
missûe_˘r
 = -
MAX_SHORT
 - 1;

977 
missûe_˘r
++;

978 
t_±r
->
p1
 = 
missûe_˘r
;

981 
TV_FOOD
:

983 i‡(
t_±r
->
subvÆ
 == 90)

984 
t_±r
->
Àvñ
 = 0;

986 i‡(
t_±r
->
subvÆ
 == 92)

987 
t_±r
->
Àvñ
 = 6;

990 
TV_SCROLL1
:

992 i‡(
t_±r
->
subvÆ
 == 67)

993 
t_±r
->
Àvñ
 = 1;

995 i‡(
t_±r
->
subvÆ
 == 69)

996 
t_±r
->
Àvñ
 = 0;

998 i‡(
t_±r
->
subvÆ
 == 80)

999 
t_±r
->
Àvñ
 = 5;

1001 i‡(
t_±r
->
subvÆ
 == 81)

1002 
t_±r
->
Àvñ
 = 5;

1005 
TV_POTION1
:

1007 i‡(
t_±r
->
subvÆ
 == 76)

1008 
t_±r
->
Àvñ
 = 0;

1014 
	}
}

1017 
	s›t_desc
 { *
	mo_¥om±
; *
	mo_v¨
; } 
	g›ti⁄s
[] = {

1018 { "Ru¬ög: cuàknow¿c‹√rs", &
föd_cut
 },

1019 { "Ru¬ög:ÉxamöêpŸítü»c‹√rs", &
föd_examöe
 },

1020 { "Ru¬ög:Öröà£l‡durögÑun", &
föd_¥£lf
 },

1021 { "Ru¬ög: st› whí m≠ se˘‹ ch™ges", &
föd_bound
 },

1022 { "Ru¬ög:Ñu¿through o≥¿do‹s", &
föd_ign‹e_do‹s
 },

1023 { "Prom±Åÿpick u∞obje˘s", &
¥om±_ˇºy_Êag
 },

1024 { "Roguêlikêcomm™ds", &
rogue_like_comm™ds
 },

1025 { "Show weight†ö invít‹y", &
show_weight_Êag
 },

1026 { "Highlighà™dÇŸi˚ möîÆ sóms", &
highlight_£ams
 },

1027 { "Bì∞f‹ invÆid ch¨a˘î", &
sound_bìp_Êag
 },

1028 { "Di•œyÑe°/ª≥© cou¡s", &
di•œy_cou¡s
 },

1033 
	$£t_›ti⁄s
()

1035 
i
, 
max
;

1036 
vty≥
 
°rög
;

1038 
	`¥t
(" ESC when finished, y/nÅo set options, <return> or -Åo move cursor",

1040 
max
 = 0; 
›ti⁄s
[max].
o_¥om±
 != 0; max++)

1042 (Ë
	`•rötf
(
°rög
, "%-38s: %s", 
›ti⁄s
[
max
].
o_¥om±
,

1043 (*
›ti⁄s
[
max
].
o_v¨
 ? "yes" : "no "));

1044 
	`¥t
(
°rög
, 
max
+1, 0);

1046 
	`îa£_löe
(
max
+1, 0);

1047 
i
 = 0;

1050 
	`move_curs‹
(
i
+1, 40);

1051 
	`ökey
())

1053 
ESCAPE
:

1056 i‡(
i
 > 0)

1057 
i
--;

1059 
i
 = 
max
-1;

1064 i‡(
i
+1 < 
max
)

1065 
i
++;

1067 
i
 = 0;

1071 
	`put_buf„r
("yes", 
i
+1, 40);

1072 *
›ti⁄s
[
i
].
o_v¨
 = 
TRUE
;

1073 i‡(
i
+1 < 
max
)

1074 
i
++;

1076 
i
 = 0;

1080 
	`put_buf„r
("nÿ", 
i
+1, 40);

1081 *
›ti⁄s
[
i
].
o_v¨
 = 
FALSE
;

1082 i‡(
i
+1 < 
max
)

1083 
i
++;

1085 
i
 = 0;

1088 
	`bñl
();

1092 
	}
}

	@misc3.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

13 
	~"c⁄fig.h
"

14 
	~"c⁄°™t.h
"

15 
	~"ty≥s.h
"

16 
	~"exã∫s.h
"

18 
	~<˘y≥.h
>

20 #i‚de‡
USG


21 
	~<sys/ty≥s.h
>

22 
	~<sys/∑øm.h
>

25 #ifde‡
USG


26 #i‚de‡
ATARIST_MWC


27 
	~<°rög.h
>

29 *
ödex
();

32 
	~<°rögs.h
>

35 #i‡
deföed
(
LINT_ARGS
)

36 
¥t_ um
(*, 
öt32
, , );

37 
¥t_7 um
(*, 
öt32
, , );

38 
¥t_num
(*, , , );

39 
¥t_l⁄g
(
öt32
, , );

40 
¥t_öt
(, , );

41 
gaö_Àvñ
();

44 *
	g°©_«mes
[] = { "STR : ", "INT : ", "WIS : ",

46 
	#BLANK_LENGTH
 24

	)

47 
	gbœnk_°rög
[] = " ";

51 
	$∂a˚_å≠
(
y
, 
x
, 
subvÆ
)

52 
y
, 
x
, 
subvÆ
;

54 
cur_pos
;

56 
cur_pos
 = 
	`p›t
();

57 
ˇve
[
y
][
x
].
çå
 = 
cur_pos
;

58 
	`övc›y
(&
t_li°
[
cur_pos
], 
OBJ_TRAP_LIST
 + 
subvÆ
);

59 
	}
}

63 
	$∂a˚_rubbÀ
(
y
, 
x
)

64 
y
, 
x
;

66 
cur_pos
;

67 
ˇve_ty≥
 *
ˇve_±r
;

69 
cur_pos
 = 
	`p›t
();

70 
ˇve_±r
 = &
ˇve
[
y
][
x
];

71 
ˇve_±r
->
çå
 = 
cur_pos
;

72 
ˇve_±r
->
fvÆ
 = 
BLOCKED_FLOOR
;

73 
	`övc›y
(&
t_li°
[
cur_pos
], 
OBJ_RUBBLE
);

74 
	}
}

78 
	$∂a˚_gﬁd
(
y
, 
x
)

79 
y
, 
x
;

81 
i
, 
cur_pos
;

82 #ifde‡
M_XENIX


84 
öví_ty≥
 *
t_±r
;

86 
öví_ty≥
 *
t_±r
;

89 
cur_pos
 = 
	`p›t
();

90 
i
 = ((
	`øndöt
(
dun_Àvñ
+2)+2) / 2) - 1;

91 i‡(
	`øndöt
(
OBJ_GREAT
) == 1)

92 
i
 +
	`øndöt
(
dun_Àvñ
+1);

93 i‡(
i
 >
MAX_GOLD
)

94 
i
 = 
MAX_GOLD
 - 1;

95 
ˇve
[
y
][
x
].
çå
 = 
cur_pos
;

96 
	`övc›y
(&
t_li°
[
cur_pos
], 
OBJ_GOLD_LIST
+
i
);

97 
t_±r
 = &
t_li°
[
cur_pos
];

98 
t_±r
->
co°
 +(8L * ()
	`øndöt
(()t_ptr->cost)) +Ñandint(8);

99 i‡(
ˇve
[
y
][
x
].
˝å
 == 1)

100 
	`msg_¥öt
 ("You feel somethingÑoll beneath your feet.");

101 
	}
}

105 
	$gë_obj_num
(
Àvñ
,
mu°_be_smÆl
)

106 
Àvñ
,
mu°_be_smÆl
;

108 
i
, 
j
;

110 i‡(
Àvñ
 == 0)

111 
i
 = 
	`øndöt
(
t_Àvñ
[0]) - 1;

114 i‡(
Àvñ
 >
MAX_OBJ_LEVEL
)

115 
Àvñ
 = 
MAX_OBJ_LEVEL
;

116 i‡(
	`øndöt
(
OBJ_GREAT
) == 1)

118 
Àvñ
 =Üevñ * 
MAX_OBJ_LEVEL
 / 
	`øndöt
 (MAX_OBJ_LEVEL) + 1;

119 i‡(
Àvñ
 > 
MAX_OBJ_LEVEL
)

120 
Àvñ
 = 
MAX_OBJ_LEVEL
;

130 i‡(
	`øndöt
(2) == 1)

131 
i
 = 
	`øndöt
(
t_Àvñ
[
Àvñ
]) - 1;

135 
i
 = 
	`øndöt
(
t_Àvñ
[
Àvñ
]) - 1;

136 
j
 = 
	`øndöt
(
t_Àvñ
[
Àvñ
]) - 1;

137 i‡(
i
 < 
j
)

138 
i
 = 
j
;

139 
j
 = 
	`øndöt
(
t_Àvñ
[
Àvñ
]) - 1;

140 i‡(
i
 < 
j
)

141 
i
 = 
j
;

142 
j
 = 
obje˘_li°
[
s‹ãd_obje˘s
[
i
]].
Àvñ
;

143 i‡(
j
 == 0)

144 
i
 = 
	`øndöt
(
t_Àvñ
[0]) - 1;

146 
i
 = 
	`øndöt
(
t_Àvñ
[
j
]-t_level[j-1]) - 1 +Å_level[j-1];

149 (
mu°_be_smÆl
)

150 && (
	`£t_œrge
(&
obje˘_li°
[
s‹ãd_obje˘s
[
i
]])));

152 (
i
);

153 
	}
}

157 
	$∂a˚_obje˘
(
y
, 
x
, 
mu°_be_smÆl
)

158 
y
, 
x
, 
mu°_be_smÆl
;

160 
cur_pos
, 
tmp
;

162 
cur_pos
 = 
	`p›t
();

163 
ˇve
[
y
][
x
].
çå
 = 
cur_pos
;

165 
tmp
 = 
	`gë_obj_num
(
dun_Àvñ
, 
mu°_be_smÆl
);

166 
	`övc›y
(&
t_li°
[
cur_pos
], 
s‹ãd_obje˘s
[
tmp
]);

167 
	`magic_åósuª
(
cur_pos
, 
dun_Àvñ
);

168 i‡(
ˇve
[
y
][
x
].
˝å
 == 1)

169 
	`msg_¥öt
 ("You feel somethingÑoll beneath your feet.");

170 
	}
}

174 
	$Æloc_obje˘
(
Æloc_£t
, 
typ
, 
num
)

175 (*
Æloc_£t
)();

176 
typ
, 
num
;

178 
i
, 
j
, 
k
;

180 
k
 = 0; k < 
num
; k++)

184 
i
 = 
	`øndöt
(
cur_height
) - 1;

185 
j
 = 
	`øndöt
(
cur_width
) - 1;

189 (!(*
Æloc_£t
)(
ˇve
[
i
][
j
].
fvÆ
)) ||

190 (
ˇve
[
i
][
j
].
çå
 !0Ë|| (ò=
ch¨_row
 && j =
ch¨_cﬁ
));

191 i‡(
typ
 < 4) {

192 i‡(
typ
 =1Ë
	`∂a˚_å≠
(
i
, 
j
, 
	`øndöt
(
MAX_TRAP
)-1);

193 
	`∂a˚_rubbÀ
(
i
, 
j
);

195 i‡(
typ
 =4Ë
	`∂a˚_gﬁd
(
i
, 
j
);

196 
	`∂a˚_obje˘
(
i
, 
j
, 
FALSE
);

199 
	}
}

203 
	$øndom_obje˘
(
y
, 
x
, 
num
)

204 
y
, 
x
, 
num
;

206 
i
, 
j
, 
k
;

207 
ˇve_ty≥
 *
ˇve_±r
;

211 
i
 = 0;

214 
j
 = 
y
 - 3 + 
	`øndöt
(5);

215 
k
 = 
x
 - 4 + 
	`øndöt
(7);

216 
ˇve_±r
 = &
ˇve
[
j
][
k
];

217 i‡(
	`ö_bounds
(
j
, 
k
Ë&& (
ˇve_±r
->
fvÆ
 <
MAX_CAVE_FLOOR
)

218 && (
ˇve_±r
->
çå
 == 0))

220 i‡(
	`øndöt
(100) < 75)

221 
	`∂a˚_obje˘
(
j
, 
k
, 
FALSE
);

223 
	`∂a˚_gﬁd
(
j
, 
k
);

224 
i
 = 9;

226 
i
++;

228 
i
 <= 10);

229 
num
--;

231 
num
 != 0);

232 
	}
}

236 
	$˙v_°©
(
°©
, 
out_vÆ
)

237 
öt8u
 
°©
;

238 *
out_vÆ
;

240 
∑π1
, 
∑π2
;

242 i‡(
°©
 > 18)

244 
∑π1
 = 18;

245 
∑π2
 = 
°©
 - 18;

246 i‡(
∑π2
 == 100)

247 (Ë
	`°r˝y
(
out_vÆ
, "18/100");

249 (Ë
	`•rötf
(
out_vÆ
, " %2d/%02d", 
∑π1
, 
∑π2
);

252 (Ë
	`•rötf
(
out_vÆ
, "%6d", 
°©
);

253 
	}
}

257 
	$¥t_°©
(
°©
)

258 
°©
;

260 
°©_ty≥
 
out_vÆ1
;

262 
	`˙v_°©
(
py
.
°©s
.
u£_°©
[
°©
], 
out_vÆ1
);

263 
	`put_buf„r
(
°©_«mes
[
°©
], 6+°©, 
STAT_COLUMN
);

264 
	`put_buf„r
 (
out_vÆ1
, 6+
°©
, 
STAT_COLUMN
+6);

265 
	}
}

270 
	$¥t_fõld
(
öfo
, 
row
, 
cﬁumn
)

271 *
öfo
;

272 
row
, 
cﬁumn
;

274 
	`put_buf„r
 (&
bœnk_°rög
[
BLANK_LENGTH
-13], 
row
, 
cﬁumn
);

275 
	`put_buf„r
 (
öfo
, 
row
, 
cﬁumn
);

276 
	}
}

279 
	$¥t_ um
(
hódî
, 
num
, 
row
, 
cﬁumn
)

280 *
hódî
;

281 
öt32
 
num
;

282 
row
, 
cﬁumn
;

284 
vty≥
 
out_vÆ
;

286 (Ë
	`•rötf
(
out_vÆ
, "%s: %6ld", 
hódî
, 
num
);

287 
	`put_buf„r
(
out_vÆ
, 
row
, 
cﬁumn
);

288 
	}
}

291 
	$¥t_7 um
(
hódî
, 
num
, 
row
, 
cﬁumn
)

292 *
hódî
;

293 
öt32
 
num
;

294 
row
, 
cﬁumn
;

296 
vty≥
 
out_vÆ
;

298 (Ë
	`•rötf
(
out_vÆ
, "%s: %7ld", 
hódî
, 
num
);

299 
	`put_buf„r
(
out_vÆ
, 
row
, 
cﬁumn
);

300 
	}
}

303 
	$¥t_num
(
hódî
, 
num
, 
row
, 
cﬁumn
)

304 *
hódî
;

305 
num
, 
row
, 
cﬁumn
;

307 
vty≥
 
out_vÆ
;

309 (Ë
	`•rötf
(
out_vÆ
, "%s: %6d", 
hódî
, 
num
);

310 
	`put_buf„r
(
out_vÆ
, 
row
, 
cﬁumn
);

311 
	}
}

314 
	$¥t_l⁄g
(
num
, 
row
, 
cﬁumn
)

315 
öt32
 
num
;

316 
row
, 
cﬁumn
;

318 
vty≥
 
out_vÆ
;

320 (Ë
	`•rötf
(
out_vÆ
, "%6ld", 
num
);

321 
	`put_buf„r
(
out_vÆ
, 
row
, 
cﬁumn
);

322 
	}
}

325 
	$¥t_öt
(
num
, 
row
, 
cﬁumn
)

326 
num
, 
row
, 
cﬁumn
;

328 
vty≥
 
out_vÆ
;

330 (Ë
	`•rötf
(
out_vÆ
, "%6d", 
num
);

331 
	`put_buf„r
(
out_vÆ
, 
row
, 
cﬁumn
);

332 
	}
}

336 
	$°©_adj
(
°©
)

337 
°©
;

339 
vÆue
;

341 
vÆue
 = 
py
.
°©s
.
u£_°©
[
°©
];

342 i‡(
vÆue
 > 117)

344 i‡(
vÆue
 > 107)

346 i‡(
vÆue
 > 87)

348 i‡(
vÆue
 > 67)

350 i‡(
vÆue
 > 17)

352 i‡(
vÆue
 > 14)

354 i‡(
vÆue
 > 7)

358 
	}
}

363 
	$chr_adj
()

365 
ch¨isma
;

367 
ch¨isma
 = 
py
.
°©s
.
u£_°©
[
A_CHR
];

368 i‡(
ch¨isma
 > 117)

370 i‡(
ch¨isma
 > 107)

372 i‡(
ch¨isma
 > 87)

374 i‡(
ch¨isma
 > 67)

376 i‡(
ch¨isma
 > 18)

379 
ch¨isma
)

399 
	}
}

403 
	$c⁄_adj
()

405 
c⁄
;

407 
c⁄
 = 
py
.
°©s
.
u£_°©
[
A_CON
];

408 i‡(
c⁄
 < 7)

409 (
c⁄
 - 7);

410 i‡(
c⁄
 < 17)

412 i‡(
c⁄
 == 17)

414 i‡(
c⁄
 < 94)

416 i‡(
c⁄
 < 117)

420 
	}
}

423 *
	$tôÀ_°rög
()

425 *
p
;

427 i‡(
py
.
misc
.
Àv
 < 1)

428 
p
 = "Babe inárms";

429 i‡(
py
.
misc
.
Àv
 <
MAX_PLAYER_LEVEL
)

430 
p
 = 
∂ayî_tôÀ
[
py
.
misc
.
p˛ass
][py.misc.
Àv
-1];

431 i‡(
py
.
misc
.
mÆe
)

432 
p
 = "**KING**";

434 
p
 = "**QUEEN**";

435  
p
;

436 
	}
}

440 
	$¥t_tôÀ
()

442 
	`¥t_fõld
(
	`tôÀ_°rög
(), 4, 
STAT_COLUMN
);

443 
	}
}

447 
	$¥t_Àvñ
()

449 
	`¥t_öt
(()
py
.
misc
.
Àv
, 13, 
STAT_COLUMN
+6);

450 
	}
}

454 
	$¥t_cm™a
()

456 
	`¥t_öt
(
py
.
misc
.
cm™a
, 15, 
STAT_COLUMN
+6);

457 
	}
}

461 
	$¥t_mhp
()

463 
	`¥t_öt
(
py
.
misc
.
mhp
, 16, 
STAT_COLUMN
+6);

464 
	}
}

468 
	$¥t_chp
()

470 
	`¥t_öt
(
py
.
misc
.
chp
, 17, 
STAT_COLUMN
+6);

471 
	}
}

475 
	$¥t_∑c
()

477 
	`¥t_öt
(
py
.
misc
.
dis_ac
, 19, 
STAT_COLUMN
+6);

478 
	}
}

482 
	$¥t_gﬁd
()

484 
	`¥t_l⁄g
(
py
.
misc
.
au
, 20, 
STAT_COLUMN
+6);

485 
	}
}

489 
	$¥t_dïth
()

491 
vty≥
 
dïths
;

492 
dïth
;

494 
dïth
 = 
dun_Àvñ
*50;

495 i‡(
dïth
 == 0)

496 (Ë
	`°r˝y
(
dïths
, "TownÜevel");

498 (Ë
	`•rötf
(
dïths
, "%d fìt", 
dïth
);

499 
	`¥t
(
dïths
, 23, 65);

500 
	}
}

504 
	$¥t_hungî
()

506 i‡(
PY_WEAK
 & 
py
.
Êags
.
°©us
)

507 
	`put_buf„r
("Weak ", 23, 0);

508 i‡(
PY_HUNGRY
 & 
py
.
Êags
.
°©us
)

509 
	`put_buf„r
("Hungry", 23, 0);

511 
	`put_buf„r
(&
bœnk_°rög
[
BLANK_LENGTH
-6], 23, 0);

512 
	}
}

516 
	$¥t_blöd
()

518 i‡(
PY_BLIND
 & 
py
.
Êags
.
°©us
)

519 
	`put_buf„r
("Blind", 23, 7);

521 
	`put_buf„r
(&
bœnk_°rög
[
BLANK_LENGTH
-5], 23, 7);

522 
	}
}

526 
	$¥t_c⁄fu£d
()

528 i‡(
PY_CONFUSED
 & 
py
.
Êags
.
°©us
)

529 
	`put_buf„r
("Confused", 23, 13);

531 
	`put_buf„r
(&
bœnk_°rög
[
BLANK_LENGTH
-8], 23, 13);

532 
	}
}

536 
	$¥t_a‰aid
()

538 i‡(
PY_FEAR
 & 
py
.
Êags
.
°©us
)

539 
	`put_buf„r
("Afraid", 23, 22);

541 
	`put_buf„r
(&
bœnk_°rög
[
BLANK_LENGTH
-6], 23, 22);

542 
	}
}

546 
	$¥t_pois⁄ed
()

548 i‡(
PY_POISONED
 & 
py
.
Êags
.
°©us
)

549 
	`put_buf„r
("Poisoned", 23, 29);

551 
	`put_buf„r
(&
bœnk_°rög
[
BLANK_LENGTH
-8], 23, 29);

552 
	}
}

556 
	$¥t_°©e
()

558 
tmp
[16];

559 #ifde‡
ATARIST_MWC


560 
öt32u
 
hﬁdî
;

563 #ifde‡
ATARIST_MWC


564 
py
.
Êags
.
°©us
 &~(
hﬁdî
 = 
PY_REPEAT
);

566 
py
.
Êags
.
°©us
 &~
PY_REPEAT
;

568 i‡(
py
.
Êags
.
∑ølysis
 > 1)

569 
	`put_buf„r
 ("Paralysed", 23, 38);

570 i‡(
PY_REST
 & 
py
.
Êags
.
°©us
)

572 i‡(
py
.
Êags
.
ª°
 < 0)

573 (Ë
	`°r˝y
 (
tmp
, "Rest *");

574 i‡(
di•œy_cou¡s
)

575 (Ë
	`•rötf
 (
tmp
, "Re° %-5d", 
py
.
Êags
.
ª°
);

577 (Ë
	`°r˝y
 (
tmp
, "Rest");

578 
	`put_buf„r
 (
tmp
, 23, 38);

580 i‡(
comm™d_cou¡
 > 0)

582 i‡(
di•œy_cou¡s
)

583 (Ë
	`•rötf
 (
tmp
, "Rïóà%-3d", 
comm™d_cou¡
);

585 (Ë
	`°r˝y
 (
tmp
, "Repeat");

586 #ifde‡
ATARIST_MWC


587 
py
.
Êags
.
°©us
 |
hﬁdî
;

589 
py
.
Êags
.
°©us
 |
PY_REPEAT
;

591 
	`put_buf„r
 (
tmp
, 23, 38);

592 i‡(
PY_SEARCH
 & 
py
.
Êags
.
°©us
)

593 
	`put_buf„r
 ("Search", 23, 38);

595 i‡(
PY_SEARCH
 & 
py
.
Êags
.
°©us
)

596 
	`put_buf„r
("Searching", 23, 38);

598 
	`put_buf„r
(&
bœnk_°rög
[
BLANK_LENGTH
-10], 23, 38);

599 
	}
}

603 
	$¥t_•ìd
 ()

605 
i
;

607 
i
 = 
py
.
Êags
.
•ìd
;

608 i‡(
PY_SEARCH
 & 
py
.
Êags
.
°©us
)

609 
i
--;

610 i‡(
i
 > 1)

611 
	`put_buf„r
 ("Very Slow", 23, 49);

612 i‡(
i
 == 1)

613 
	`put_buf„r
 ("Slow ", 23, 49);

614 i‡(
i
 == 0)

615 
	`put_buf„r
 (&
bœnk_°rög
[
BLANK_LENGTH
-9], 23, 49);

616 i‡(
i
 == -1)

617 
	`put_buf„r
 ("Fast ", 23, 49);

619 
	`put_buf„r
 ("Very Fast", 23, 49);

620 
	}
}

623 
	$¥t_°udy
()

625 #ifde‡
ATARIST_MWC


626 
öt32u
 
hﬁdî
;

629 #ifde‡
ATARIST_MWC


630 
py
.
Êags
.
°©us
 &~(
hﬁdî
 = 
PY_STUDY
);

632 
py
.
Êags
.
°©us
 &~
PY_STUDY
;

634 i‡(
py
.
Êags
.
√w_•ñls
 == 0)

635 
	`put_buf„r
 (&
bœnk_°rög
[
BLANK_LENGTH
-5], 23, 59);

637 
	`put_buf„r
 ("Study", 23, 59);

638 
	}
}

642 
	$¥t_wö√r
()

644 i‡(
nosc‹e
 & 0x2)

646 i‡(
wiz¨d
)

647 
	`put_buf„r
("Is wizard ", 22, 0);

649 
	`put_buf„r
("Was wizard ", 22, 0);

651 i‡(
nosc‹e
 & 0x1)

652 
	`put_buf„r
("Resurrected", 22, 0);

653 i‡(
nosc‹e
 & 0x4)

654 
	`put_buf„r
 ("Duplicate", 22, 0);

655 i‡(
tŸÆ_wö√r
)

656 
	`put_buf„r
("*Winner* ", 22, 0);

657 
	}
}

660 
öt8u
 
	$modify_°©
 (
°©
, 
amou¡
)

661 
°©
;

662 
öt16
 
amou¡
;

664 
lo›
, 
i
;

665 
öt8u
 
tmp_°©
;

667 
tmp_°©
 = 
py
.
°©s
.
cur_°©
[
°©
];

668 
lo›
 = (
amou¡
 < 0 ? -amount :ámount);

669 
i
 = 0; i < 
lo›
; i++)

671 i‡(
amou¡
 > 0)

673 i‡(
tmp_°©
 < 18)

674 
tmp_°©
++;

675 i‡(
tmp_°©
 < 108)

676 
tmp_°©
 += 10;

678 
tmp_°©
 = 118;

682 i‡(
tmp_°©
 > 27)

683 
tmp_°©
 -= 10;

684 i‡(
tmp_°©
 > 18)

685 
tmp_°©
 = 18;

686 i‡(
tmp_°©
 > 3)

687 
tmp_°©
--;

690  
tmp_°©
;

691 
	}
}

695 
	$£t_u£_°©
(
°©
)

696 
°©
;

698 #ifde‡
ATARIST_MWC


699 
öt32u
 
hﬁdî
;

702 
py
.
°©s
.
u£_°©
[
°©
] = 
	`modify_°©
 (°©,Öy.°©s.
mod_°©
[stat]);

704 i‡(
°©
 =
A_STR
)

706 #ifde‡
ATARIST_MWC


707 
py
.
Êags
.
°©us
 |(
hﬁdî
 = 
PY_STR_WGT
);

709 
py
.
Êags
.
°©us
 |
PY_STR_WGT
;

711 
	`ˇlc_b⁄u£s
();

713 i‡(
°©
 =
A_DEX
)

714 
	`ˇlc_b⁄u£s
();

715 i‡(
°©
 =
A_INT
 && 
˛ass
[
py
.
misc
.
p˛ass
].
•ñl
 =
MAGE
)

717 
	`ˇlc_•ñls
(
A_INT
);

718 
	`ˇlc_m™a
(
A_INT
);

720 i‡(
°©
 =
A_WIS
 && 
˛ass
[
py
.
misc
.
p˛ass
].
•ñl
 =
PRIEST
)

722 
	`ˇlc_•ñls
(
A_WIS
);

723 
	`ˇlc_m™a
(
A_WIS
);

725 i‡(
°©
 =
A_CON
)

726 
	`ˇlc_hôpoöts
();

727 
	}
}

731 
	$öc_°©
(
°©
)

732 
°©
;

734 
tmp_°©
, 
gaö
;

736 
tmp_°©
 = 
py
.
°©s
.
cur_°©
[
°©
];

737 i‡(
tmp_°©
 < 118)

739 i‡(
tmp_°©
 < 18)

740 
tmp_°©
++;

741 i‡(
tmp_°©
 < 116)

744 
gaö
 = ((118 - 
tmp_°©
)/3 + 1) >> 1;

745 
tmp_°©
 +
	`øndöt
(
gaö
) + gain;

748 
tmp_°©
++;

750 
py
.
°©s
.
cur_°©
[
°©
] = 
tmp_°©
;

751 i‡(
tmp_°©
 > 
py
.
°©s
.
max_°©
[
°©
])

752 
py
.
°©s
.
max_°©
[
°©
] = 
tmp_°©
;

753 
	`£t_u£_°©
 (
°©
);

754 
	`¥t_°©
 (
°©
);

755  
TRUE
;

758  
FALSE
;

759 
	}
}

763 
	$dec_°©
(
°©
)

764 
°©
;

766 
tmp_°©
, 
loss
;

768 
tmp_°©
 = 
py
.
°©s
.
cur_°©
[
°©
];

769 i‡(
tmp_°©
 > 3)

771 i‡(
tmp_°©
 < 19)

772 
tmp_°©
--;

773 i‡(
tmp_°©
 < 117)

775 
loss
 = (((118 - 
tmp_°©
) >> 1) + 1) >> 1;

776 
tmp_°©
 +-
	`øndöt
(
loss
) -Üoss;

777 i‡(
tmp_°©
 < 18)

778 
tmp_°©
 = 18;

781 
tmp_°©
--;

783 
py
.
°©s
.
cur_°©
[
°©
] = 
tmp_°©
;

784 
	`£t_u£_°©
 (
°©
);

785 
	`¥t_°©
 (
°©
);

786  
TRUE
;

789  
FALSE
;

790 
	}
}

794 
	$ªs_°©
 (
°©
)

795 
°©
;

797 
i
;

799 
i
 = 
py
.
°©s
.
max_°©
[
°©
] -Öy.°©s.
cur_°©
[stat];

800 i‡(
i
)

802 
py
.
°©s
.
cur_°©
[
°©
] +
i
;

803 
	`£t_u£_°©
 (
°©
);

804 
	`¥t_°©
 (
°©
);

805  
TRUE
;

807  
FALSE
;

808 
	}
}

812 
	$b°_°©
 (
°©
, 
amou¡
)

813 
°©
, 
amou¡
;

815 #ifde‡
ATARIST_MWC


816 
öt32u
 
hﬁdî
;

819 
py
.
°©s
.
mod_°©
[
°©
] +
amou¡
;

821 
	`£t_u£_°©
 (
°©
);

823 #ifde‡
ATARIST_MWC


824 
py
.
Êags
.
°©us
 |((
hﬁdî
 = 
PY_STR
Ë<< 
°©
);

826 
py
.
Êags
.
°©us
 |(
PY_STR
 << 
°©
);

828 
	}
}

832 
	$tohô_adj
()

834 
tŸÆ
, 
°©
;

836 
°©
 = 
py
.
°©s
.
u£_°©
[
A_DEX
];

837 i‡(
°©
 < 4Ë
tŸÆ
 = -3;

838 i‡(
°©
 < 6Ë
tŸÆ
 = -2;

839 i‡(
°©
 < 8Ë
tŸÆ
 = -1;

840 i‡(
°©
 < 16Ë
tŸÆ
 = 0;

841 i‡(
°©
 < 17Ë
tŸÆ
 = 1;

842 i‡(
°©
 < 18Ë
tŸÆ
 = 2;

843 i‡(
°©
 < 69Ë
tŸÆ
 = 3;

844 i‡(
°©
 < 118Ë
tŸÆ
 = 4;

845 
tŸÆ
 = 5;

846 
°©
 = 
py
.
°©s
.
u£_°©
[
A_STR
];

847 i‡(
°©
 < 4Ë
tŸÆ
 -= 3;

848 i‡(
°©
 < 5Ë
tŸÆ
 -= 2;

849 i‡(
°©
 < 7Ë
tŸÆ
 -= 1;

850 i‡(
°©
 < 18Ë
tŸÆ
 -= 0;

851 i‡(
°©
 < 94Ë
tŸÆ
 += 1;

852 i‡(
°©
 < 109Ë
tŸÆ
 += 2;

853 i‡(
°©
 < 117Ë
tŸÆ
 += 3;

854 
tŸÆ
 += 4;

855 (
tŸÆ
);

856 
	}
}

860 
	$tﬂc_adj
()

862 
°©
;

864 
°©
 = 
py
.
°©s
.
u£_°©
[
A_DEX
];

865 i‡(
°©
 < 4) (-4);

866 i‡(
°©
 == 4) (-3);

867 i‡(
°©
 == 5) (-2);

868 i‡(
°©
 == 6) (-1);

869 i‡(
°©
 < 15) ( 0);

870 i‡(
°©
 < 18) ( 1);

871 i‡(
°©
 < 59) ( 2);

872 i‡(
°©
 < 94) ( 3);

873 i‡(
°©
 < 117) ( 4);

875 
	}
}

879 
	$todis_adj
()

881 
°©
;

883 
°©
 = 
py
.
°©s
.
u£_°©
[
A_DEX
];

884 i‡(
°©
 < 4) (-8);

885 i‡(
°©
 == 4) (-6);

886 i‡(
°©
 == 5) (-4);

887 i‡(
°©
 == 6) (-2);

888 i‡(
°©
 == 7) (-1);

889 i‡(
°©
 < 13) ( 0);

890 i‡(
°©
 < 16) ( 1);

891 i‡(
°©
 < 18) ( 2);

892 i‡(
°©
 < 59) ( 4);

893 i‡(
°©
 < 94) ( 5);

894 i‡(
°©
 < 117) ( 6);

896 
	}
}

900 
	$todam_adj
()

902 
°©
;

904 
°©
 = 
py
.
°©s
.
u£_°©
[
A_STR
];

905 i‡(
°©
 < 4) (-2);

906 i‡(
°©
 < 5) (-1);

907 i‡(
°©
 < 16) ( 0);

908 i‡(
°©
 < 17) ( 1);

909 i‡(
°©
 < 18) ( 2);

910 i‡(
°©
 < 94) ( 3);

911 i‡(
°©
 < 109) ( 4);

912 i‡(
°©
 < 117) ( 5);

914 
	}
}

918 
	$¥t_°©_block
()

920 
öt32u
 
°©us
;

921 
misc
 *
m_±r
;

922 
i
;

924 
m_±r
 = &
py
.
misc
;

925 
	`¥t_fõld
(
ø˚
[
py
.
misc
.
¥a˚
].
åa˚
, 2, 
STAT_COLUMN
);

926 
	`¥t_fõld
(
˛ass
[
py
.
misc
.
p˛ass
].
tôÀ
, 3, 
STAT_COLUMN
);

927 
	`¥t_fõld
(
	`tôÀ_°rög
(), 4, 
STAT_COLUMN
);

928 
i
 = 0; i < 6; i++)

929 
	`¥t_°©
 (
i
);

930 
	`¥t_num
 ("LEV ", ()
m_±r
->
Àv
, 13, 
STAT_COLUMN
);

931 
	`¥t_ um
("EXP ", 
m_±r
->
exp
, 14, 
STAT_COLUMN
);

932 
	`¥t_num
 ("MANA", 
m_±r
->
cm™a
, 15, 
STAT_COLUMN
);

933 
	`¥t_num
 ("MHP ", 
m_±r
->
mhp
, 16, 
STAT_COLUMN
);

934 
	`¥t_num
 ("CHP ", 
m_±r
->
chp
, 17, 
STAT_COLUMN
);

935 
	`¥t_num
 ("AC ", 
m_±r
->
dis_ac
, 19, 
STAT_COLUMN
);

936 
	`¥t_ um
("GOLD", 
m_±r
->
au
, 20, 
STAT_COLUMN
);

937 
	`¥t_wö√r
();

938 
°©us
 = 
py
.
Êags
.status;

939 i‡((
PY_HUNGRY
|
PY_WEAK
Ë& 
°©us
)

940 
	`¥t_hungî
();

941 i‡(
PY_BLIND
 & 
°©us
)

942 
	`¥t_blöd
();

943 i‡(
PY_CONFUSED
 & 
°©us
)

944 
	`¥t_c⁄fu£d
();

945 i‡(
PY_FEAR
 & 
°©us
)

946 
	`¥t_a‰aid
();

947 i‡(
PY_POISONED
 & 
°©us
)

948 
	`¥t_pois⁄ed
();

949 i‡((
PY_SEARCH
|
PY_REST
Ë& 
°©us
)

950 
	`¥t_°©e
 ();

952 i‡(
py
.
Êags
.
•ìd
 - ((
PY_SEARCH
 & 
°©us
) >> 8) != 0)

953 
	`¥t_•ìd
 ();

955 
	`¥t_°udy
();

956 
	}
}

960 
	$døw_ˇve
()

962 
	`˛ór_s¸ìn
 ();

963 
	`¥t_°©_block
();

964 
	`¥t_m≠
();

965 
	`¥t_dïth
();

966 
	}
}

970 
	$put_ch¨a˘î
()

972 
misc
 *
m_±r
;

974 
m_±r
 = &
py
.
misc
;

975 
	`˛ór_s¸ìn
 ();

976 
	`put_buf„r
 ("Name :", 2, 1);

977 
	`put_buf„r
 ("Race :", 3, 1);

978 
	`put_buf„r
 ("Sex :", 4, 1);

979 
	`put_buf„r
 ("Class :", 5, 1);

980 i‡(
ch¨a˘î_gíî©ed
)

982 
	`put_buf„r
 (
m_±r
->
«me
, 2, 15);

983 
	`put_buf„r
 (
ø˚
[
m_±r
->
¥a˚
].
åa˚
, 3, 15);

984 
	`put_buf„r
 ((
m_±r
->
mÆe
 ? "Male" : "Female"), 4, 15);

985 
	`put_buf„r
 (
˛ass
[
m_±r
->
p˛ass
].
tôÀ
, 5, 15);

987 
	}
}

991 
	$put_°©s
()

993 
misc
 *
m_±r
;

994 
i
;

995 
vty≥
 
buf
;

997 
m_±r
 = &
py
.
misc
;

998 
i
 = 0; i < 6; i++)

1000 
	`˙v_°©
 (
py
.
°©s
.
u£_°©
[
i
], 
buf
);

1001 
	`put_buf„r
 (
°©_«mes
[
i
], 2+i, 61);

1002 
	`put_buf„r
 (
buf
, 2+
i
, 66);

1003 i‡(
py
.
°©s
.
max_°©
[
i
] >Öy.°©s.
cur_°©
[i])

1005 
	`˙v_°©
 (
py
.
°©s
.
max_°©
[
i
], 
buf
);

1006 
	`put_buf„r
 (
buf
, 2+
i
, 73);

1009 
	`¥t_num
("+ TÿHô ", 
m_±r
->
dis_th
, 9, 1);

1010 
	`¥t_num
("+ TÿDamagê", 
m_±r
->
dis_td
, 10, 1);

1011 
	`¥t_num
("+ TÿAC ", 
m_±r
->
dis_èc
, 11, 1);

1012 
	`¥t_num
(" TŸÆ AC ", 
m_±r
->
dis_ac
, 12, 1);

1013 
	}
}

1017 *
	$likît
(
x
, 
y
)

1018 
x
, 
y
;

1020 (
x
/
y
))

1031 
	}
}

1035 
	$put_misc1
()

1037 
misc
 *
m_±r
;

1039 
m_±r
 = &
py
.
misc
;

1040 
	`¥t_num
("Agê ", ()
m_±r
->
age
, 2, 38);

1041 
	`¥t_num
("Heighà ", ()
m_±r
->
ht
, 3, 38);

1042 
	`¥t_num
("Weighà ", ()
m_±r
->
wt
, 4, 38);

1043 
	`¥t_num
("Socü»Cœs†", ()
m_±r
->
sc
, 5, 38);

1044 
	}
}

1048 
	$put_misc2
()

1050 
misc
 *
m_±r
;

1052 
m_±r
 = &
py
.
misc
;

1053 
	`¥t_7 um
("Levñ ", (
öt32
)
m_±r
->
Àv
, 9, 28);

1054 
	`¥t_7 um
("Ex≥rõn˚ ", 
m_±r
->
exp
, 10, 28);

1055 
	`¥t_7 um
("Max Ex∞ ", 
m_±r
->
max_exp
, 11, 28);

1056 i‡(
m_±r
->
Àv
 >
MAX_PLAYER_LEVEL
)

1057 
	`¥t
 ("ExpÅo Adv.: *******", 12, 28);

1059 
	`¥t_7 um
("Ex∞tÿAdv.", (
öt32
)(
∂ayî_exp
[
m_±r
->
Àv
-1]

1060 * 
m_±r
->
expÁ˘
 / 100), 12, 28);

1061 
	`¥t_7 um
("Gﬁd ", 
m_±r
->
au
, 13, 28);

1062 
	`¥t_num
("Max Hô Poöt†", 
m_±r
->
mhp
, 9, 52);

1063 
	`¥t_num
("Cu∏Hô Poöt†", 
m_±r
->
chp
, 10, 52);

1064 
	`¥t_num
("Max M™® ", 
m_±r
->
m™a
, 11, 52);

1065 
	`¥t_num
("Cu∏M™® ", 
m_±r
->
cm™a
, 12, 52);

1066 
	}
}

1070 
	$put_misc3
()

1072 
xbth
, 
xbthb
, 
xfos
, 
x§h
, 
x°l
, 
xdis
, 
xßve
, 
xdev
;

1073 
vty≥
 
xö‰a
;

1074 
misc
 *
p_±r
;

1076 
	`˛ór_‰om
(14);

1077 
p_±r
 = &
py
.
misc
;

1078 
xbth
 = 
p_±r
->
bth
 +Ö_±r->
±ohô
*
BTH_PLUS_ADJ


1079 + (
˛ass_Àvñ_adj
[
p_±r
->
p˛ass
][
CLA_BTH
] *Ö_±r->
Àv
);

1080 
xbthb
 = 
p_±r
->
bthb
 +Ö_±r->
±ohô
*
BTH_PLUS_ADJ


1081 + (
˛ass_Àvñ_adj
[
p_±r
->
p˛ass
][
CLA_BTHB
] *Ö_±r->
Àv
);

1083 
xfos
 = 40 - 
p_±r
->
fos
;

1084 i‡(
xfos
 < 0) xfos = 0;

1085 
x§h
 = 
p_±r
->
§h
;

1087 
x°l
 = 
p_±r
->
°l
 + 1;

1088 
xdis
 = 
p_±r
->
dißrm
 + 2*
	`todis_adj
(Ë+ 
	`°©_adj
(
A_INT
)

1089 + (
˛ass_Àvñ_adj
[
p_±r
->
p˛ass
][
CLA_DISARM
] *Ö_±r->
Àv
 / 3);

1090 
xßve
 = 
p_±r
->
ßve
 + 
	`°©_adj
(
A_WIS
)

1091 + (
˛ass_Àvñ_adj
[
p_±r
->
p˛ass
][
CLA_SAVE
] *Ö_±r->
Àv
 / 3);

1092 
xdev
 = 
p_±r
->
ßve
 + 
	`°©_adj
(
A_INT
)

1093 + (
˛ass_Àvñ_adj
[
p_±r
->
p˛ass
][
CLA_DEVICE
] *Ö_±r->
Àv
 / 3);

1095 (Ë
	`•rötf
(
xö‰a
, "%d fìt", 
py
.
Êags
.
£e_ö‰a
*10);

1097 
	`put_buf„r
 ("(Miscellaneous Abilities)", 15, 25);

1098 
	`put_buf„r
 ("Fighting :", 16, 1);

1099 
	`put_buf„r
 (
	`likît
 (
xbth
, 12), 16, 15);

1100 
	`put_buf„r
 ("Bows/Throw :", 17, 1);

1101 
	`put_buf„r
 (
	`likît
 (
xbthb
, 12), 17, 15);

1102 
	`put_buf„r
 ("Saving Throw:", 18, 1);

1103 
	`put_buf„r
 (
	`likît
 (
xßve
, 6), 18, 15);

1105 
	`put_buf„r
 ("Stealth :", 16, 28);

1106 
	`put_buf„r
 (
	`likît
 (
x°l
, 1), 16, 42);

1107 
	`put_buf„r
 ("Disarming :", 17, 28);

1108 
	`put_buf„r
 (
	`likît
 (
xdis
, 8), 17, 42);

1109 
	`put_buf„r
 ("Magic Device:", 18, 28);

1110 
	`put_buf„r
 (
	`likît
 (
xdev
, 6), 18, 42);

1112 
	`put_buf„r
 ("Perception :", 16, 55);

1113 
	`put_buf„r
 (
	`likît
 (
xfos
, 3), 16, 69);

1114 
	`put_buf„r
 ("Searching :", 17, 55);

1115 
	`put_buf„r
 (
	`likît
 (
x§h
, 6), 17, 69);

1116 
	`put_buf„r
 ("Infra-Vision:", 18, 55);

1117 
	`put_buf„r
 (
xö‰a
, 18, 69);

1118 
	}
}

1122 
	$di•œy_ch¨
()

1124 
	`put_ch¨a˘î
();

1125 
	`put_misc1
();

1126 
	`put_°©s
();

1127 
	`put_misc2
();

1128 
	`put_misc3
();

1129 
	}
}

1133 
	$gë_«me
()

1135 
	`¥t
("Enter yourÖlayer'sÇame [press <RETURN> when finished]", 21, 2);

1136 
	`put_buf„r
 (&
bœnk_°rög
[
BLANK_LENGTH
-23], 2, 15);

1137 #i‡
	`deföed
(
MAC
Ë|| deföed(
AMIGA
)

1140 !
	`gë_°rög
(
py
.
misc
.
«me
, 2, 15, 23) ||Öy.misc.name[0] == 0);

1142 i‡(!
	`gë_°rög
(
py
.
misc
.
«me
, 2, 15, 23) ||Öy.misc.name[0] == 0)

1144 
	`u£r_«me
 (
py
.
misc
.
«me
);

1145 
	`put_buf„r
 (
py
.
misc
.
«me
, 2, 15);

1148 
	`˛ór_‰om
 (20);

1149 #ifde‡
MAC


1151 
	`öôßvedeÁu…s
();

1153 
	}
}

1157 
	$ch™ge_«me
()

1159 
c
;

1160 
Êag
;

1161 #i‚de‡
MAC


1162 
vty≥
 
ãmp
;

1165 
Êag
 = 
FALSE
;

1166 
	`di•œy_ch¨
();

1169 
	`¥t
( "<f>ile character description. <c>hange characterÇame.", 21, 2);

1170 
c
 = 
	`ökey
();

1171 
c
)

1174 
	`gë_«me
();

1175 
Êag
 = 
TRUE
;

1178 #ifde‡
MAC


1180 i‡(
	`fûe_ch¨a˘î
 ())

1181 
Êag
 = 
TRUE
;

1183 
	`¥t
 ("FileÇame:", 0, 0);

1184 i‡(
	`gë_°rög
 (
ãmp
, 0, 10, 60) &&Åemp[0])

1185 i‡(
	`fûe_ch¨a˘î
 (
ãmp
))

1186 
Êag
 = 
TRUE
;

1189 
ESCAPE
: ' ':

1191 
Êag
 = 
TRUE
;

1194 
	`bñl
 ();

1198 !
Êag
);

1199 
	}
}

1203 
	$öví_de°roy
(
ôem_vÆ
)

1204 
ôem_vÆ
;

1206 
j
;

1207 
öví_ty≥
 *
i_±r
;

1208 #ifde‡
ATARIST_MWC


1209 
öt32u
 
hﬁdî
;

1212 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

1213 i‡((
i_±r
->
numbî
 > 1Ë&& (i_±r->
subvÆ
 <
ITEM_SINGLE_STACK_MAX
))

1215 
i_±r
->
numbî
--;

1216 
öví_weight
 -
i_±r
->
weight
;

1220 
öví_weight
 -
i_±r
->
weight
*i_±r->
numbî
;

1221 
j
 = 
ôem_vÆ
; j < 
öví_˘r
-1; j++)

1222 
övít‹y
[
j
] = inventory[j+1];

1223 
	`övc›y
(&
övít‹y
[
öví_˘r
-1], 
OBJ_NOTHING
);

1224 
öví_˘r
--;

1226 #ifde‡
ATARIST_MWC


1227 
py
.
Êags
.
°©us
 |(
hﬁdî
 = 
PY_STR_WGT
);

1229 
py
.
Êags
.
°©us
 |
PY_STR_WGT
;

1231 
	}
}

1236 
	$èke_⁄e_ôem
 (
s_±r
, 
i_±r
)

1237 
öví_ty≥
 *
s_±r
, *
i_±r
;

1239 *
s_±r
 = *
i_±r
;

1240 i‡((
s_±r
->
numbî
 > 1Ë&& (s_±r->
subvÆ
 >
ITEM_SINGLE_STACK_MIN
)

1241 && (
s_±r
->
subvÆ
 <
ITEM_SINGLE_STACK_MAX
))

1242 
s_±r
->
numbî
 = 1;

1243 
	}
}

1247 
	$öví_dr›
(
ôem_vÆ
, 
dr›_Æl
)

1248 
ôem_vÆ
, 
dr›_Æl
;

1250 
i
;

1251 
öví_ty≥
 *
i_±r
;

1252 
vty≥
 
¥t2
;

1253 
bigvty≥
 
¥t1
;

1254 #ifde‡
ATARIST_MWC


1255 
öt32u
 
hﬁdî
;

1258 i‡(
ˇve
[
ch¨_row
][
ch¨_cﬁ
].
çå
 != 0)

1259 (Ë
	`dñëe_obje˘
(
ch¨_row
, 
ch¨_cﬁ
);

1260 
i
 = 
	`p›t
 ();

1261 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

1262 
t_li°
[
i
] = *
i_±r
;

1263 
ˇve
[
ch¨_row
][
ch¨_cﬁ
].
çå
 = 
i
;

1265 i‡(
ôem_vÆ
 >
INVEN_WIELD
)

1266 
	`èkeoff
 (
ôem_vÆ
, -1);

1269 i‡(
dr›_Æl
 || 
i_±r
->
numbî
 == 1)

1271 
öví_weight
 -
i_±r
->
weight
*i_±r->
numbî
;

1272 
öví_˘r
--;

1273 
ôem_vÆ
 < 
öví_˘r
)

1275 
övít‹y
[
ôem_vÆ
] = inventory[item_val+1];

1276 
ôem_vÆ
++;

1278 
	`övc›y
(&
övít‹y
[
öví_˘r
], 
OBJ_NOTHING
);

1282 
t_li°
[
i
].
numbî
 = 1;

1283 
öví_weight
 -
i_±r
->
weight
;

1284 
i_±r
->
numbî
--;

1286 
	`objdes
 (
¥t1
, &
t_li°
[
i
], 
TRUE
);

1287 (Ë
	`•rötf
 (
¥t2
, "Dr›≥d %s", 
¥t1
);

1288 
	`msg_¥öt
 (
¥t2
);

1290 #ifde‡
ATARIST_MWC


1291 
py
.
Êags
.
°©us
 |(
hﬁdî
 = 
PY_STR_WGT
);

1293 
py
.
Êags
.
°©us
 |
PY_STR_WGT
;

1295 
	}
}

1299 
	$öví_damage
(
typ
, 
≥rc
)

1300 (*
typ
)();

1301 
≥rc
;

1303 
i
, 
j
;

1305 
j
 = 0;

1306 
i
 = 0; i < 
öví_˘r
; i++)

1307 i‡((*
typ
)(&
övít‹y
[
i
]Ë&& (
	`øndöt
(100Ë< 
≥rc
))

1309 
	`öví_de°roy
(
i
);

1310 
j
++;

1312 (
j
);

1313 
	}
}

1317 
	$weight_limô
()

1319 
weight_ˇp
;

1321 
weight_ˇp
 = 
py
.
°©s
.
u£_°©
[
A_STR
] * 
PLAYER_WEIGHT_CAP
 +Öy.
misc
.
wt
;

1322 i‡(
weight_ˇp
 > 3000) weight_cap = 3000;

1323 (
weight_ˇp
);

1324 
	}
}

1328 
	$öví_check_num
 (
t_±r
)

1329 
öví_ty≥
 *
t_±r
;

1331 
i
;

1333 i‡(
öví_˘r
 < 
INVEN_WIELD
)

1334  
TRUE
;

1335 i‡(
t_±r
->
subvÆ
 >
ITEM_SINGLE_STACK_MIN
)

1336 
i
 = 0; i < 
öví_˘r
; i++)

1337 i‡(
övít‹y
[
i
].
tvÆ
 =
t_±r
->tval &&

1338 
övít‹y
[
i
].
subvÆ
 =
t_±r
->subval &&

1340 (()
övít‹y
[
i
].
numbî
 + ()
t_±r
->number < 256) &&

1342 ((
t_±r
->
subvÆ
 < 
ITEM_GROUP_MIN
Ë|| (
övít‹y
[
i
].
p1
 ==Å_ptr->p1))

1344 && (
	`known1_p
(&
övít‹y
[
i
]Ë=known1_p(
t_±r
)))

1345  
TRUE
;

1346  
FALSE
;

1347 
	}
}

1350 
	$öví_check_weight
(
i_±r
)

1351 
öví_ty≥
 *
i_±r
;

1353 
i
, 
√w_öví_weight
;

1355 
i
 = 
	`weight_limô
();

1356 
√w_öví_weight
 = 
i_±r
->
numbî
*i_±r->
weight
 + 
öví_weight
;

1357 i‡(
i
 < 
√w_öví_weight
)

1358 
i
 = 
√w_öví_weight
 / (i + 1);

1360 
i
 = 0;

1362 i‡(
∑ck_hóvy
 !
i
)

1363  
FALSE
;

1365  
TRUE
;

1366 
	}
}

1370 
	$check_°ªngth
()

1372 
i
;

1373 
öví_ty≥
 *
i_±r
;

1374 #ifde‡
ATARIST_MWC


1375 
öt32u
 
hﬁdî
;

1378 
i_±r
 = &
övít‹y
[
INVEN_WIELD
];

1379 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING


1380 && (
py
.
°©s
.
u£_°©
[
A_STR
]*15 < 
i_±r
->
weight
))

1382 i‡(
wóp⁄_hóvy
 =
FALSE
)

1384 
	`msg_¥öt
("You haveÅrouble wielding suchá heavy weapon.");

1385 
wóp⁄_hóvy
 = 
TRUE
;

1386 
	`ˇlc_b⁄u£s
();

1389 i‡(
wóp⁄_hóvy
 =
TRUE
)

1391 
wóp⁄_hóvy
 = 
FALSE
;

1392 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

1393 
	`msg_¥öt
("Youáre strongÉnoughÅo wield your weapon.");

1394 
	`ˇlc_b⁄u£s
();

1396 
i
 = 
	`weight_limô
();

1397 i‡(
i
 < 
öví_weight
)

1398 
i
 = 
öví_weight
 / (i+1);

1400 
i
 = 0;

1401 i‡(
∑ck_hóvy
 !
i
)

1403 i‡(
∑ck_hóvy
 < 
i
)

1404 
	`msg_¥öt
("YourÖack is so heavyÅhat it slows you down.");

1406 
	`msg_¥öt
("You move moreÉasily underÅhe weight of yourÖack.");

1407 
	`ch™ge_•ìd
(
i
 - 
∑ck_hóvy
);

1408 
∑ck_hóvy
 = 
i
;

1410 #ifde‡
ATARIST_MWC


1411 
py
.
Êags
.
°©us
 &~(
hﬁdî
 = 
PY_STR_WGT
);

1413 
py
.
Êags
.
°©us
 &~
PY_STR_WGT
;

1415 
	}
}

1421 
	$öví_ˇºy
(
i_±r
)

1422 
öví_ty≥
 *
i_±r
;

1424 
lo˙
, 
i
;

1425 
typ
, 
subt
;

1426 
öví_ty≥
 *
t_±r
;

1427 
known1p
, 
Æways_known1p
;

1428 #ifde‡
ATARIST_MWC


1429 
öt32u
 
hﬁdî
;

1432 
typ
 = 
i_±r
->
tvÆ
;

1433 
subt
 = 
i_±r
->
subvÆ
;

1434 
known1p
 = 
	`known1_p
 (
i_±r
);

1435 
Æways_known1p
 = (
	`obje˘_off£t
 (
i_±r
) == -1);

1437 
lo˙
 = 0; ;Üocn++)

1439 
t_±r
 = &
övít‹y
[
lo˙
];

1440 i‡((
typ
 =
t_±r
->
tvÆ
Ë&& (
subt
 =t_±r->
subvÆ
)

1441 && (
subt
 >
ITEM_SINGLE_STACK_MIN
) &&

1442 (()
t_±r
->
numbî
 + ()
i_±r
->number < 256) &&

1443 ((
subt
 < 
ITEM_GROUP_MIN
Ë|| (
t_±r
->
p1
 =
i_±r
->p1)) &&

1445 (
known1p
 =
	`known1_p
(
t_±r
)))

1447 
t_±r
->
numbî
 +
i_±r
->number;

1452 i‡((
typ
 =
t_±r
->
tvÆ
 && 
subt
 <Å_±r->
subvÆ


1453 && 
Æways_known1p
)

1454 || (
typ
 > 
t_±r
->
tvÆ
))

1456 
i
 = 
öví_˘r
 - 1; i >
lo˙
; i--)

1457 
övít‹y
[
i
+1] = inventory[i];

1458 
övít‹y
[
lo˙
] = *
i_±r
;

1459 
öví_˘r
++;

1464 
öví_weight
 +
i_±r
->
numbî
*i_±r->
weight
;

1465 #ifde‡
ATARIST_MWC


1466 
py
.
Êags
.
°©us
 |(
hﬁdî
 = 
PY_STR_WGT
);

1468 
py
.
Êags
.
°©us
 |
PY_STR_WGT
;

1470  
lo˙
;

1471 
	}
}

1475 
	$•ñl_ch™˚
(
•ñl
)

1476 
•ñl
;

1478 
•ñl_ty≥
 *
s_±r
;

1479 
ch™˚
;

1480 
°©
;

1482 
s_±r
 = &
magic_•ñl
[
py
.
misc
.
p˛ass
-1][
•ñl
];

1483 
ch™˚
 = 
s_±r
->
sÁû
 - 3*(
py
.
misc
.
Àv
-s_±r->
¶evñ
);

1484 i‡(
˛ass
[
py
.
misc
.
p˛ass
].
•ñl
 =
MAGE
)

1485 
°©
 = 
A_INT
;

1487 
°©
 = 
A_WIS
;

1488 
ch™˚
 -3 * (
	`°©_adj
(
°©
)-1);

1489 i‡(
s_±r
->
sm™a
 > 
py
.
misc
.
cm™a
)

1490 
ch™˚
 +5 * (
s_±r
->
sm™a
-
py
.
misc
.
cm™a
);

1491 i‡(
ch™˚
 > 95)

1492 
ch™˚
 = 95;

1493 i‡(
ch™˚
 < 5)

1494 
ch™˚
 = 5;

1495  
ch™˚
;

1496 
	}
}

1502 
	$¥öt_•ñls
(
•ñl
, 
num
, 
commít
, 
n⁄c⁄£c
)

1503 *
•ñl
;

1504 
num
;

1505 
commít
, 
n⁄c⁄£c
;

1507 
i
, 
j
;

1508 
vty≥
 
out_vÆ
;

1509 
•ñl_ty≥
 *
s_±r
;

1510 
cﬁ
, 
off£t
;

1511 *
p
;

1512 
•ñl_ch¨
;

1514 i‡(
commít
)

1515 
cﬁ
 = 22;

1517 
cﬁ
 = 31;

1518 
off£t
 = (
˛ass
[
py
.
misc
.
p˛ass
].
•ñl
==
MAGE
 ? 
SPELL_OFFSET
 : 
PRAYER_OFFSET
);

1519 
	`îa£_löe
(1, 
cﬁ
);

1520 
	`put_buf„r
("Name", 1, 
cﬁ
+5);

1521 
	`put_buf„r
("Lv M™®Faû", 1, 
cﬁ
+35);

1523 i‡(
num
 > 22)

1524 
num
 = 22;

1525 
i
 = 0; i < 
num
; i++)

1527 
j
 = 
•ñl
[
i
];

1528 
s_±r
 = &
magic_•ñl
[
py
.
misc
.
p˛ass
-1][
j
];

1529 i‡(
commít
 =
FALSE
)

1530 
p
 = "";

1531 i‡((
•ñl_f‹gŸãn
 & (1L << 
j
)) != 0)

1532 
p
 = " forgotten";

1533 i‡((
•ñl_À¨√d
 & (1L << 
j
)) == 0)

1534 
p
 = " unknown";

1535 i‡((
•ñl_w‹ked
 & (1L << 
j
)) == 0)

1536 
p
 = " untried";

1538 
p
 = "";

1542 i‡(
n⁄c⁄£c
 == -1)

1543 
•ñl_ch¨
 = 'a' + 
i
;

1545 
•ñl_ch¨
 = 'a' + 
j
 - 
n⁄c⁄£c
;

1546 (Ë
	`•rötf
(
out_vÆ
, " %cË%-30s%2d %4d %3d%%%s", 
•ñl_ch¨
,

1547 
•ñl_«mes
[
j
+
off£t
], 
s_±r
->
¶evñ
, s_±r->
sm™a
,

1548 
	`•ñl_ch™˚
 (
j
), 
p
);

1549 
	`¥t
(
out_vÆ
, 2+
i
, 
cﬁ
);

1551 
	}
}

1555 
	$gë_•ñl
(
•ñl
, 
num
, 
¢
, 
sc
, 
¥om±
, 
fú°_•ñl
)

1556 *
•ñl
;

1557 
num
;

1558 *
¢
, *
sc
;

1559 *
¥om±
;

1560 
fú°_•ñl
;

1562 
•ñl_ty≥
 *
s_±r
;

1563 
Êag
, 
ªdøw
, 
off£t
, 
i
;

1564 
choi˚
;

1565 
vty≥
 
out_°r
, 
tmp_°r
;

1567 *
¢
 = -1;

1568 
Êag
 = 
FALSE
;

1569 (Ë
	`•rötf
(
out_°r
, "(Spells %c-%c, *=List, <ESCAPE>=exit) %s",

1570 
•ñl
[0]+'a'-
fú°_•ñl
, s≥Œ[
num
-1]+'a'-first_spell,

1571 
¥om±
);

1572 
ªdøw
 = 
FALSE
;

1573 
off£t
 = (
˛ass
[
py
.
misc
.
p˛ass
].
•ñl
==
MAGE
 ? 
SPELL_OFFSET
 : 
PRAYER_OFFSET
);

1574 
Êag
 =
FALSE
 && 
	`gë_com
 (
out_°r
, &
choi˚
))

1576 i‡(
	`isuµî
(()
choi˚
))

1578 *
¢
 = 
choi˚
-'A'+
fú°_•ñl
;

1580 
i
 = 0; i < 
num
; i++)

1581 i‡(*
¢
 =
•ñl
[
i
])

1583 i‡(
i
 =
num
)

1584 *
¢
 = -2;

1587 
s_±r
 = &
magic_•ñl
[
py
.
misc
.
p˛ass
-1][*
¢
];

1588 (Ë
	`•rötf
 (
tmp_°r
, "Cast %s (%d mana, %d%% fail)?",

1589 
•ñl_«mes
[*
¢
+
off£t
], 
s_±r
->
sm™a
,

1590 
	`•ñl_ch™˚
 (*
¢
));

1591 i‡(
	`gë_check
 (
tmp_°r
))

1592 
Êag
 = 
TRUE
;

1594 *
¢
 = -1;

1597 i‡(
	`i¶owî
(()
choi˚
))

1599 *
¢
 = 
choi˚
-'a'+
fú°_•ñl
;

1601 
i
 = 0; i < 
num
; i++)

1602 i‡(*
¢
 =
•ñl
[
i
])

1604 i‡(
i
 =
num
)

1605 *
¢
 = -2;

1607 
Êag
 = 
TRUE
;

1609 i‡(
choi˚
 == '*')

1612 i‡(!
ªdøw
)

1614 
	`ßve_s¸ìn
 ();

1615 
ªdøw
 = 
TRUE
;

1616 
	`¥öt_•ñls
 (
•ñl
, 
num
, 
FALSE
, 
fú°_•ñl
);

1619 i‡(
	`ißÕha
(()
choi˚
))

1620 *
¢
 = -2;

1623 *
¢
 = -1;

1624 
	`bñl
();

1626 i‡(*
¢
 == -2)

1628 (Ë
	`•rötf
 (
tmp_°r
, "You don't knowÅhat %s.",

1629 (
off£t
 =
SPELL_OFFSET
 ? "spell" : "prayer"));

1630 
	`msg_¥öt
(
tmp_°r
);

1633 i‡(
ªdøw
)

1634 
	`ª°‹e_s¸ìn
 ();

1636 
	`îa£_löe
(
MSG_LINE
, 0);

1637 i‡(
Êag
)

1638 *
sc
 = 
	`•ñl_ch™˚
 (*
¢
);

1640 (
Êag
);

1641 
	}
}

1646 
	$ˇlc_•ñls
(
°©
)

1647 
°©
;

1649 
i
;

1650 
öt32u
 
mask
;

1651 
öt32u
 
•ñl_Êag
;

1652 
j
, 
off£t
;

1653 
num_Ælowed
, 
√w_•ñls
, 
num_known
, 
Àvñs
;

1654 
vty≥
 
tmp_°r
;

1655 *
p
;

1656 
misc
 *
p_±r
;

1657 
•ñl_ty≥
 *
m•_±r
;

1659 
p_±r
 = &
py
.
misc
;

1660 
m•_±r
 = &
magic_•ñl
[
p_±r
->
p˛ass
-1][0];

1661 i‡(
°©
 =
A_INT
)

1663 
p
 = "spell";

1664 
off£t
 = 
SPELL_OFFSET
;

1668 
p
 = "prayer";

1669 
off£t
 = 
PRAYER_OFFSET
;

1673 
i
 = 31, 
mask
 = 0x80000000L; mask; mask >>= 1, i--)

1674 i‡(
mask
 & 
•ñl_À¨√d
)

1676 i‡(
m•_±r
[
i
].
¶evñ
 > 
p_±r
->
Àv
)

1678 
•ñl_À¨√d
 &~
mask
;

1679 
•ñl_f‹gŸãn
 |
mask
;

1680 (Ë
	`•rötf
(
tmp_°r
, "You havêf‹gŸã¿thê%†o‡%s.", 
p
,

1681 
•ñl_«mes
[
i
+
off£t
]);

1682 
	`msg_¥öt
(
tmp_°r
);

1689 
Àvñs
 = 
p_±r
->
Àv
 - 
˛ass
[p_±r->
p˛ass
].
fú°_•ñl_Àv
 + 1;

1690 
	`°©_adj
(
°©
))

1692 0: 
num_Ælowed
 = 0; ;

1693 1: 2: 3: 
num_Ælowed
 = 1 * 
Àvñs
; ;

1694 4: 5: 
num_Ælowed
 = 3 * 
Àvñs
 / 2; ;

1695 6: 
num_Ælowed
 = 2 * 
Àvñs
; ;

1696 7: 
num_Ælowed
 = 5 * 
Àvñs
 / 2; ;

1699 
num_known
 = 0;

1700 
mask
 = 0x1; mask; mask <<= 1)

1701 i‡(
mask
 & 
•ñl_À¨√d
)

1702 
num_known
++;

1703 
√w_•ñls
 = 
num_Ælowed
 - 
num_known
;

1705 i‡(
√w_•ñls
 > 0)

1709 
i
 = 0; (
•ñl_f‹gŸãn
 && 
√w_•ñls


1710 && (
i
 < 
num_Ælowed
) && (i < 32)); i++)

1713 
j
 = 
•ñl_‹dî
[
i
];

1716 i‡(
j
 == 99)

1717 
mask
 = 0x0;

1719 
mask
 = 1L << 
j
;

1720 i‡(
mask
 & 
•ñl_f‹gŸãn
)

1722 i‡(
m•_±r
[
j
].
¶evñ
 <
p_±r
->
Àv
)

1724 
√w_•ñls
--;

1725 
•ñl_f‹gŸãn
 &~
mask
;

1726 
•ñl_À¨√d
 |
mask
;

1727 (Ë
	`•rötf
(
tmp_°r
, "You haveÑememberedÅhe %s of %s.",

1728 
p
, 
•ñl_«mes
[
j
+
off£t
]);

1729 
	`msg_¥öt
(
tmp_°r
);

1732 
num_Ælowed
++;

1736 i‡(
√w_•ñls
 > 0)

1741 
•ñl_Êag
 = 0x7FFFFFFFL & ~
•ñl_À¨√d
;

1743 
mask
 = 0x1;

1744 
i
 = 0;

1745 
j
 = 0, 
mask
 = 0x1; 
•ñl_Êag
; mask <<= 1, j++)

1746 i‡(
•ñl_Êag
 & 
mask
)

1748 
•ñl_Êag
 &~
mask
;

1749 i‡(
m•_±r
[
j
].
¶evñ
 <
p_±r
->
Àv
)

1750 
i
++;

1753 i‡(
√w_•ñls
 > 
i
)

1754 
√w_•ñls
 = 
i
;

1757 i‡(
√w_•ñls
 < 0)

1761 
i
 = 31; 
√w_•ñls
 && 
•ñl_À¨√d
; i--)

1764 
j
 = 
•ñl_‹dî
[
i
];

1767 i‡(
j
 == 99)

1768 
mask
 = 0x0;

1770 
mask
 = 1L << 
j
;

1771 i‡(
mask
 & 
•ñl_À¨√d
)

1773 
•ñl_À¨√d
 &~
mask
;

1774 
•ñl_f‹gŸãn
 |
mask
;

1775 
√w_•ñls
++;

1776 (Ë
	`•rötf
(
tmp_°r
, "You havêf‹gŸã¿thê%†o‡%s.", 
p
,

1777 
•ñl_«mes
[
j
+
off£t
]);

1778 
	`msg_¥öt
(
tmp_°r
);

1782 
√w_•ñls
 = 0;

1785 i‡(
√w_•ñls
 !
py
.
Êags
.new_spells)

1787 i‡(
√w_•ñls
 > 0 && 
py
.
Êags
.new_spells == 0)

1789 (Ë
	`•rötf
(
tmp_°r
, "You c™Üó∫ somê√w %s†now.", 
p
);

1790 
	`msg_¥öt
(
tmp_°r
);

1793 
py
.
Êags
.
√w_•ñls
 =Çew_spells;

1794 
py
.
Êags
.
°©us
 |
PY_STUDY
;

1796 
	}
}

1800 
	$gaö_•ñls
()

1802 
quîy
;

1803 
°©
, 
diff_•ñls
, 
√w_•ñls
;

1804 
•ñls
[31], 
off£t
, 
œ°_known
;

1805 
i
, 
j
;

1806 
öt32u
 
•ñl_Êag
, 
mask
;

1807 
vty≥
 
tmp_°r
;

1808 
misc
 *
p_±r
;

1809 
•ñl_ty≥
 *
m•_±r
;

1814 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

1816 
	`msg_¥öt
("YouáreÅoo confused.");

1820 
√w_•ñls
 = 
py
.
Êags
.new_spells;

1821 
diff_•ñls
 = 0;

1822 
p_±r
 = &
py
.
misc
;

1823 
m•_±r
 = &
magic_•ñl
[
p_±r
->
p˛ass
-1][0];

1824 i‡(
˛ass
[
p_±r
->
p˛ass
].
•ñl
 =
MAGE
)

1826 
°©
 = 
A_INT
;

1827 
off£t
 = 
SPELL_OFFSET
;

1831 i‡(
py
.
Êags
.
blöd
 > 0)

1833 
	`msg_¥öt
("You can't seeÅoÑead your spell book!");

1836 i‡(
	`no_light
())

1838 
	`msg_¥öt
("You haveÇoÜightÅoÑead by.");

1844 
°©
 = 
A_WIS
;

1845 
off£t
 = 
PRAYER_OFFSET
;

1848 
œ°_known
 = 0;Üast_known < 32;Üast_known++)

1849 i‡(
•ñl_‹dî
[
œ°_known
] == 99)

1852 i‡(!
√w_•ñls
)

1854 (Ë
	`•rötf
(
tmp_°r
, "You can'tÜearnányÇew %ss!",

1855 (
°©
 =
A_INT
 ? "spell" : "prayer"));

1856 
	`msg_¥öt
(
tmp_°r
);

1857 
‰ì_tu∫_Êag
 = 
TRUE
;

1863 i‡(
°©
 =
A_INT
)

1865 
•ñl_Êag
 = 0;

1866 
i
 = 0; i < 
öví_˘r
; i++)

1867 i‡(
övít‹y
[
i
].
tvÆ
 =
TV_MAGIC_BOOK
)

1868 
•ñl_Êag
 |
övít‹y
[
i
].
Êags
;

1871 
•ñl_Êag
 = 0x7FFFFFFF;

1874 
•ñl_Êag
 &~
•ñl_À¨√d
;

1876 
mask
 = 0x1;

1877 
i
 = 0;

1878 
j
 = 0, 
mask
 = 0x1; 
•ñl_Êag
; mask <<= 1, j++)

1879 i‡(
•ñl_Êag
 & 
mask
)

1881 
•ñl_Êag
 &~
mask
;

1882 i‡(
m•_±r
[
j
].
¶evñ
 <
p_±r
->
Àv
)

1884 
•ñls
[
i
] = 
j
;

1885 
i
++;

1889 i‡(
√w_•ñls
 > 
i
)

1891 
	`msg_¥öt
("You seemÅo be missingá book.");

1892 
diff_•ñls
 = 
√w_•ñls
 - 
i
;

1893 
√w_•ñls
 = 
i
;

1895 i‡(
√w_•ñls
 == 0)

1897 i‡(
°©
 =
A_INT
)

1900 
	`ßve_s¸ìn
();

1901 
	`¥öt_•ñls
 (
•ñls
, 
i
, 
FALSE
, -1);

1902 
√w_•ñls
 && 
	`gë_com
 ("Ló∫ which s≥Œ?", &
quîy
))

1904 
j
 = 
quîy
 - 'a';

1907 i‡(
j
 >0 && j < 
i
 && j < 22)

1909 
√w_•ñls
--;

1910 
•ñl_À¨√d
 |1L << 
•ñls
[
j
];

1911 
•ñl_‹dî
[
œ°_known
++] = 
•ñls
[
j
];

1912 ; 
j
 <
i
-1; j++)

1913 
•ñls
[
j
] = spells[j+1];

1914 
i
--;

1915 
	`îa£_löe
 (
j
+1, 31);

1916 
	`¥öt_•ñls
 (
•ñls
, 
i
, 
FALSE
, -1);

1919 
	`bñl
();

1921 
	`ª°‹e_s¸ìn
();

1926 
√w_•ñls
)

1928 
j
 = 
	`øndöt
(
i
) - 1;

1929 
•ñl_À¨√d
 |1L << 
•ñls
[
j
];

1930 
•ñl_‹dî
[
œ°_known
++] = 
•ñls
[
j
];

1931 (Ë
	`•rötf
 (
tmp_°r
,

1933 
•ñl_«mes
[
•ñls
[
j
]+
off£t
]);

1934 
	`msg_¥öt
(
tmp_°r
);

1935 ; 
j
 <
i
-1; j++)

1936 
•ñls
[
j
] = spells[j+1];

1937 
i
--;

1938 
√w_•ñls
--;

1941 
py
.
Êags
.
√w_•ñls
 =Çew_•ñl†+ 
diff_•ñls
;

1942 i‡(
py
.
Êags
.
√w_•ñls
 == 0)

1943 
py
.
Êags
.
°©us
 |
PY_STUDY
;

1946 i‡(
py
.
misc
.
m™a
 == 0)

1947 
	`ˇlc_m™a
(
°©
);

1949 
	}
}

1953 
	$ˇlc_m™a
(
°©
)

1954 
°©
;

1956 
√w_m™a
, 
Àvñs
;

1957 
misc
 *
p_±r
;

1958 
öt32
 
vÆue
;

1959 #ifde‡
ATARIST_MWC


1960 
öt32u
 
hﬁdî
;

1963 
p_±r
 = &
py
.
misc
;

1964 i‡(
•ñl_À¨√d
 != 0)

1966 
Àvñs
 = 
p_±r
->
Àv
 - 
˛ass
[p_±r->
p˛ass
].
fú°_•ñl_Àv
 + 1;

1967 
	`°©_adj
(
°©
))

1969 0: 
√w_m™a
 = 0; ;

1970 1: 2: 
√w_m™a
 = 1 * 
Àvñs
; ;

1971 3: 
√w_m™a
 = 3 * 
Àvñs
 / 2; ;

1972 4: 
√w_m™a
 = 2 * 
Àvñs
; ;

1973 5: 
√w_m™a
 = 5 * 
Àvñs
 / 2; ;

1974 6: 
√w_m™a
 = 3 * 
Àvñs
; ;

1975 7: 
√w_m™a
 = 4 * 
Àvñs
; ;

1978 i‡(
√w_m™a
 > 0)

1979 
√w_m™a
++;

1982 i‡(
p_±r
->
m™a
 !
√w_m™a
)

1984 i‡(
p_±r
->
m™a
 != 0)

1988 
vÆue
 = ((()
p_±r
->
cm™a
 << 16Ë+Ö_±r->
cm™a_‰ac
)

1989 / 
p_±r
->
m™a
 * 
√w_m™a
;

1990 
p_±r
->
cm™a
 = 
vÆue
 >> 16;

1991 
p_±r
->
cm™a_‰ac
 = 
vÆue
 & 0xFFFF;

1995 
p_±r
->
cm™a
 = 
√w_m™a
;

1996 
p_±r
->
cm™a_‰ac
 = 0;

1998 
p_±r
->
m™a
 = 
√w_m™a
;

2000 #ifde‡
ATARIST_MWC


2001 
py
.
Êags
.
°©us
 |(
hﬁdî
 = 
PY_MANA
);

2003 
py
.
Êags
.
°©us
 |
PY_MANA
;

2007 i‡(
p_±r
->
m™a
 != 0)

2009 
p_±r
->
m™a
 = 0;

2010 
p_±r
->
cm™a
 = 0;

2012 #ifde‡
ATARIST_MWC


2013 
py
.
Êags
.
°©us
 |(
hﬁdî
 = 
PY_MANA
);

2015 
py
.
Êags
.
°©us
 |
PY_MANA
;

2018 
	}
}

2022 
	$gaö_Àvñ
()

2024 
öt32
 
dif_exp
, 
√ed_exp
;

2025 
vty≥
 
out_vÆ
;

2026 
misc
 *
p_±r
;

2027 
˛ass_ty≥
 *
c_±r
;

2029 
p_±r
 = &
py
.
misc
;

2030 
p_±r
->
Àv
++;

2031 (Ë
	`•rötf
(
out_vÆ
, "WñcomêtÿÀvñ %d.", ()
p_±r
->
Àv
);

2032 
	`msg_¥öt
(
out_vÆ
);

2033 
	`ˇlc_hôpoöts
();

2035 
√ed_exp
 = 
∂ayî_exp
[
p_±r
->
Àv
-1] *Ö_±r->
expÁ˘
 / 100;

2036 i‡(
p_±r
->
exp
 > 
√ed_exp
)

2039 
dif_exp
 = 
p_±r
->
exp
 - 
√ed_exp
;

2040 
p_±r
->
exp
 = 
√ed_exp
 + (
dif_exp
 / 2);

2042 
	`¥t_Àvñ
();

2043 
	`¥t_tôÀ
();

2044 
c_±r
 = &
˛ass
[
p_±r
->
p˛ass
];

2045 i‡(
c_±r
->
•ñl
 =
MAGE
)

2047 
	`ˇlc_•ñls
(
A_INT
);

2048 
	`ˇlc_m™a
(
A_INT
);

2050 i‡(
c_±r
->
•ñl
 =
PRIEST
)

2052 
	`ˇlc_•ñls
(
A_WIS
);

2053 
	`ˇlc_m™a
(
A_WIS
);

2055 
	}
}

2058 
	$¥t_ex≥rõn˚
()

2060 
misc
 *
p_±r
;

2062 
p_±r
 = &
py
.
misc
;

2063 i‡(
p_±r
->
exp
 > 
MAX_EXP
)

2064 
p_±r
->
exp
 = 
MAX_EXP
;

2066 (
p_±r
->
Àv
 < 
MAX_PLAYER_LEVEL
) &&

2067 (
∂ayî_exp
[
p_±r
->
Àv
-1] *Ö_±r->
expÁ˘
 / 100Ë<p_±r->
exp
)

2068 
	`gaö_Àvñ
();

2070 i‡(
p_±r
->
exp
 >Ö_±r->
max_exp
)

2071 
p_±r
->
max_exp
 =Ö_±r->
exp
;

2073 
	`¥t_l⁄g
(
p_±r
->
exp
, 14, 
STAT_COLUMN
+6);

2074 
	}
}

2078 
	$ˇlc_hôpoöts
()

2080 
hôpoöts
;

2081 
misc
 *
p_±r
;

2082 
öt32
 
vÆue
;

2083 #ifde‡
ATARIST_MWC


2084 
öt32u
 
hﬁdî
;

2087 
p_±r
 = &
py
.
misc
;

2088 
hôpoöts
 = 
∂ayî_hp
[
p_±r
->
Àv
-1] + (
	`c⁄_adj
() *Ö_ptr->lev);

2090 i‡(
hôpoöts
 < (
p_±r
->
Àv
 + 1))

2091 
hôpoöts
 = 
p_±r
->
Àv
 + 1;

2093 i‡(
py
.
Êags
.
°©us
 & 
PY_HERO
)

2094 
hôpoöts
 += 10;

2095 i‡(
py
.
Êags
.
°©us
 & 
PY_SHERO
)

2096 
hôpoöts
 += 20;

2099 i‡((
hôpoöts
 !
p_±r
->
mhp
) && (p_ptr->mhp != 0))

2103 
vÆue
 = ((()
p_±r
->
chp
 << 16Ë+Ö_±r->
chp_‰ac
Ë/Ö_±r->
mhp


2104 * 
hôpoöts
;

2105 
p_±r
->
chp
 = 
vÆue
 >> 16;

2106 
p_±r
->
chp_‰ac
 = 
vÆue
 & 0xFFFF;

2107 
p_±r
->
mhp
 = 
hôpoöts
;

2110 #ifde‡
ATARIST_MWC


2111 
py
.
Êags
.
°©us
 |(
hﬁdî
 = 
PY_HP
);

2113 
py
.
Êags
.
°©us
 |
PY_HP
;

2116 
	}
}

2120 
	$ö£π_°r
(
obje˘_°r
, 
mtc_°r
, 
ö£π
)

2121 *
obje˘_°r
, *
mtc_°r
, *
ö£π
;

2123 
obj_Àn
;

2124 *
bound
, *
pc
;

2125 
i
, 
mtc_Àn
;

2126 *
ãmp_obj
, *
ãmp_mtc
;

2127 
out_vÆ
[80];

2129 
mtc_Àn
 = 
	`°æí
(
mtc_°r
);

2130 
obj_Àn
 = 
	`°æí
(
obje˘_°r
);

2131 
bound
 = 
obje˘_°r
 + 
obj_Àn
 - 
mtc_Àn
;

2132 
pc
 = 
obje˘_°r
;Ö¯<
bound
;Öc++)

2134 
ãmp_obj
 = 
pc
;

2135 
ãmp_mtc
 = 
mtc_°r
;

2136 
i
 = 0; i < 
mtc_Àn
; i++)

2137 i‡(*
ãmp_obj
++ !*
ãmp_mtc
++)

2139 i‡(
i
 =
mtc_Àn
)

2143 i‡(
pc
 <
bound
)

2145 #ifde‡
__TURBOC__


2147 (Ë
	`°∫˝y
(
out_vÆ
, 
obje˘_°r
, (
size_t
)(
pc
-object_str));

2149 (Ë
	`°∫˝y
(
out_vÆ
, 
obje˘_°r
, (
pc
-object_str));

2152 
out_vÆ
[()(
pc
-
obje˘_°r
)] = '\0';

2153 i‡(
ö£π
)

2154 (Ë
	`°rˇt
(
out_vÆ
, 
ö£π
);

2155 (Ë
	`°rˇt
(
out_vÆ
, (*)(
pc
+
mtc_Àn
));

2156 (Ë
	`°r˝y
(
obje˘_°r
, 
out_vÆ
);

2158 
	}
}

2164 
	$ö£π_num
(
obje˘_°r
, 
mtc_°r
, 
numbî
, 
show_sign
)

2165 *
obje˘_°r
;

2166 *
mtc_°r
;

2167 
numbî
;

2168 
show_sign
;

2170 
mÀn
;

2171 
vty≥
 
°r1
, 
°r2
;

2172 *
°rög
, *
tmp_°r
;

2173 
Êag
;

2175 
Êag
 = 1;

2176 
mÀn
 = 
	`°æí
(
mtc_°r
);

2177 
tmp_°r
 = 
obje˘_°r
;

2180 
°rög
 = 
	`ödex
(
tmp_°r
, 
mtc_°r
[0]);

2181 i‡(
°rög
 =
CNIL
)

2182 
Êag
 = 0;

2185 
Êag
 = 
	`°∫cmp
(
°rög
, 
mtc_°r
, 
mÀn
);

2186 i‡(
Êag
)

2187 
tmp_°r
 = 
°rög
+1;

2190 
Êag
);

2191 i‡(
°rög
)

2193 #ifde‡
__TURBOC__


2195 (Ë
	`°∫˝y
(
°r1
, 
obje˘_°r
, (
size_t
)(
°rög
 - object_str));

2197 (Ë
	`°∫˝y
(
°r1
, 
obje˘_°r
, 
°rög
 - object_str);

2200 
°r1
[()(
°rög
 - 
obje˘_°r
)] = '\0';

2201 (Ë
	`°r˝y
(
°r2
, 
°rög
 + 
mÀn
);

2202 i‡((
numbî
 >0Ë&& (
show_sign
))

2203 (Ë
	`•rötf
(
obje˘_°r
, "%s+%d%s", 
°r1
, 
numbî
, 
°r2
);

2205 (Ë
	`•rötf
(
obje˘_°r
, "%s%d%s", 
°r1
, 
numbî
, 
°r2
);

2207 
	}
}

2210 
	$ö£π_ um
(
obje˘_°r
, 
mtc_°r
, 
numbî
, 
show_sign
)

2211 *
obje˘_°r
;

2212 *
mtc_°r
;

2213 
öt32
 
numbî
;

2214 
show_sign
;

2216 
mÀn
;

2217 
vty≥
 
°r1
, 
°r2
;

2218 *
°rög
, *
tmp_°r
;

2219 
Êag
;

2221 
Êag
 = 1;

2222 
mÀn
 = 
	`°æí
(
mtc_°r
);

2223 
tmp_°r
 = 
obje˘_°r
;

2226 
°rög
 = 
	`ödex
(
tmp_°r
, 
mtc_°r
[0]);

2227 i‡(
°rög
 == 0)

2228 
Êag
 = 0;

2231 
Êag
 = 
	`°∫cmp
(
°rög
, 
mtc_°r
, 
mÀn
);

2232 i‡(
Êag
)

2233 
tmp_°r
 = 
°rög
+1;

2236 
Êag
);

2237 i‡(
°rög
)

2239 (Ë
	`°∫˝y
(
°r1
, 
obje˘_°r
, 
°rög
 - object_str);

2240 
°r1
[
°rög
 - 
obje˘_°r
] = '\0';

2241 (Ë
	`°r˝y
(
°r2
, 
°rög
 + 
mÀn
);

2242 i‡((
numbî
 >0Ë&& (
show_sign
))

2243 (Ë
	`•rötf
(
obje˘_°r
, "%s+%ld%s", 
°r1
, 
numbî
, 
°r2
);

2245 (Ë
	`•rötf
(
obje˘_°r
, "%s%ld%s", 
°r1
, 
numbî
, 
°r2
);

2247 
	}
}

2251 
	$íãr_wiz_mode
()

2253 
™swî
;

2255 i‡(!
nosc‹e
)

2257 
	`msg_¥öt
("Wizard mode is for debuggingándÉxperimenting.");

2258 
™swî
 = 
	`gë_check
(

2261 i‡(
nosc‹e
 || 
™swî
)

2263 
nosc‹e
 |= 0x2;

2264 
wiz¨d
 = 
TRUE
;

2265 (
TRUE
);

2267 (
FALSE
);

2268 
	}
}

2272 
	$©èck_blows
(
weight
, 
wtohô
)

2273 
weight
;

2274 *
wtohô
;

2276 
adj_weight
;

2277 
°r_ödex
, 
dex_ödex
, 
s
, 
d
;

2279 
s
 = 
py
.
°©s
.
u£_°©
[
A_STR
];

2280 
d
 = 
py
.
°©s
.
u£_°©
[
A_DEX
];

2281 i‡(
s
 * 15 < 
weight
)

2283 *
wtohô
 = 
s
 * 15 - 
weight
;

2288 *
wtohô
 = 0;

2289 i‡(
d
 < 10Ë
dex_ödex
 = 0;

2290 i‡(
d
 < 19Ë
dex_ödex
 = 1;

2291 i‡(
d
 < 68Ë
dex_ödex
 = 2;

2292 i‡(
d
 < 108Ë
dex_ödex
 = 3;

2293 i‡(
d
 < 118Ë
dex_ödex
 = 4;

2294 
dex_ödex
 = 5;

2295 
adj_weight
 = (
s
 * 10 / 
weight
);

2296 i‡(
adj_weight
 < 2Ë
°r_ödex
 = 0;

2297 i‡(
adj_weight
 < 3Ë
°r_ödex
 = 1;

2298 i‡(
adj_weight
 < 4Ë
°r_ödex
 = 2;

2299 i‡(
adj_weight
 < 5Ë
°r_ödex
 = 3;

2300 i‡(
adj_weight
 < 7Ë
°r_ödex
 = 4;

2301 i‡(
adj_weight
 < 9Ë
°r_ödex
 = 5;

2302 
°r_ödex
 = 6;

2303  ()
blows_èbÀ
[
°r_ödex
][
dex_ödex
];

2305 
	}
}

2309 
	$tŸ_dam
(
i_±r
, 
tdam
, 
m⁄°î
)

2310 
öví_ty≥
 *
i_±r
;

2311 
tdam
;

2312 
m⁄°î
;

2314 
¸ótuª_ty≥
 *
m_±r
;

2315 
ªˇŒ_ty≥
 *
r_±r
;

2316 #ifde‡
ATARIST_MWC


2317 
öt32u
 
hﬁdî
;

2320 #ifde‡
ATARIST_MWC


2321 i‡((
i_±r
->
Êags
 & (
hﬁdî
 = 
TR_EGO_WEAPON
)) &&

2323 i‡((
i_±r
->
Êags
 & 
TR_EGO_WEAPON
) &&

2325 (((
i_±r
->
tvÆ
 >
TV_SLING_AMMO
Ë&& (i_±r->tvÆ <
TV_ARROW
)) ||

2326 ((
i_±r
->
tvÆ
 >
TV_HAFTED
Ë&& (i_±r->tvÆ <
TV_SWORD
)) ||

2327 (
i_±r
->
tvÆ
 =
TV_FLASK
)))

2329 
m_±r
 = &
c_li°
[
m⁄°î
];

2330 
r_±r
 = &
c_ªˇŒ
[
m⁄°î
];

2332 i‡((
m_±r
->
cde„n£
 & 
CD_DRAGON
Ë&& (
i_±r
->
Êags
 & 
TR_SLAY_DRAGON
))

2334 
tdam
 =Ådam * 4;

2335 
r_±r
->
r_cde„n£
 |
CD_DRAGON
;

2338 #ifde‡
ATARIST_MWC


2339 i‡((
m_±r
->
cde„n£
 & 
CD_UNDEAD
)

2340 && (
i_±r
->
Êags
 & (
hﬁdî
 = 
TR_SLAY_UNDEAD
)))

2342 i‡((
m_±r
->
cde„n£
 & 
CD_UNDEAD
)

2343 && (
i_±r
->
Êags
 & 
TR_SLAY_UNDEAD
))

2346 
tdam
 =Ådam * 3;

2347 
r_±r
->
r_cde„n£
 |
CD_UNDEAD
;

2350 i‡((
m_±r
->
cde„n£
 & 
CD_ANIMAL
)

2351 && (
i_±r
->
Êags
 & 
TR_SLAY_ANIMAL
))

2353 
tdam
 =Ådam * 2;

2354 
r_±r
->
r_cde„n£
 |
CD_ANIMAL
;

2357 i‡((
m_±r
->
cde„n£
 & 
CD_EVIL
Ë&& (
i_±r
->
Êags
 & 
TR_SLAY_EVIL
))

2359 
tdam
 =Ådam * 2;

2360 
r_±r
->
r_cde„n£
 |
CD_EVIL
;

2363 #ifde‡
ATARIST_MWC


2364 i‡((
m_±r
->
cde„n£
 & 
CD_FROST
)

2365 && (
i_±r
->
Êags
 & (
hﬁdî
 = 
TR_FROST_BRAND
)))

2367 i‡((
m_±r
->
cde„n£
 & 
CD_FROST
)

2368 && (
i_±r
->
Êags
 & 
TR_FROST_BRAND
))

2371 
tdam
 =Ådam * 3 / 2;

2372 
r_±r
->
r_cde„n£
 |
CD_FROST
;

2375 #ifde‡
ATARIST_MWC


2376 i‡((
m_±r
->
cde„n£
 & 
CD_FIRE
)

2377 && (
i_±r
->
Êags
 & (
hﬁdî
 = 
TR_FLAME_TONGUE
)))

2379 i‡((
m_±r
->
cde„n£
 & 
CD_FIRE
)

2380 && (
i_±r
->
Êags
 & 
TR_FLAME_TONGUE
))

2383 
tdam
 =Ådam * 3 / 2;

2384 
r_±r
->
r_cde„n£
 |
CD_FIRE
;

2387 (
tdam
);

2388 
	}
}

2392 
	$¸ôiˇl_blow
(
weight
, 
∂us
, 
dam
, 
©èck_ty≥
)

2393 
weight
, 
∂us
, 
dam
;

2394 
©èck_ty≥
;

2396 
¸ôiˇl
;

2398 
¸ôiˇl
 = 
dam
;

2401 i‡(
	`øndöt
(5000Ë<()(
weight
 + 5 * 
∂us


2402 + (
˛ass_Àvñ_adj
[
py
.
misc
.
p˛ass
][
©èck_ty≥
]

2403 * 
py
.
misc
.
Àv
)))

2405 
weight
 +
	`øndöt
(650);

2406 i‡(
weight
 < 400)

2408 
¸ôiˇl
 = 2*
dam
 + 5;

2409 
	`msg_¥öt
("It wasá good hit! (x2 damage)");

2411 i‡(
weight
 < 700)

2413 
¸ôiˇl
 = 3*
dam
 + 10;

2414 
	`msg_¥öt
("It wasánÉxcellent hit! (x3 damage)");

2416 i‡(
weight
 < 900)

2418 
¸ôiˇl
 = 4*
dam
 + 15;

2419 
	`msg_¥öt
("It wasá superb hit! (x4 damage)");

2423 
¸ôiˇl
 = 5*
dam
 + 20;

2424 
	`msg_¥öt
("It wasá *GREAT* hit! (x5 damage)");

2427 (
¸ôiˇl
);

2428 
	}
}

2432 
	$mmove
(
dú
, 
y
, 
x
)

2433 
dú
;

2434 *
y
, *
x
;

2436 
√w_row
, 
√w_cﬁ
;

2437 
boﬁ
;

2439 
dú
)

2442 
√w_row
 = *
y
 + 1;

2443 
√w_cﬁ
 = *
x
 - 1;

2446 
√w_row
 = *
y
 + 1;

2447 
√w_cﬁ
 = *
x
;

2450 
√w_row
 = *
y
 + 1;

2451 
√w_cﬁ
 = *
x
 + 1;

2454 
√w_row
 = *
y
;

2455 
√w_cﬁ
 = *
x
 - 1;

2458 
√w_row
 = *
y
;

2459 
√w_cﬁ
 = *
x
;

2462 
√w_row
 = *
y
;

2463 
√w_cﬁ
 = *
x
 + 1;

2466 
√w_row
 = *
y
 - 1;

2467 
√w_cﬁ
 = *
x
 - 1;

2470 
√w_row
 = *
y
 - 1;

2471 
√w_cﬁ
 = *
x
;

2474 
√w_row
 = *
y
 - 1;

2475 
√w_cﬁ
 = *
x
 + 1;

2478 
boﬁ
 = 
FALSE
;

2479 i‡((
√w_row
 >0Ë&& (√w_row < 
cur_height
)

2480 && (
√w_cﬁ
 >0Ë&& (√w_cﬁ < 
cur_width
))

2482 *
y
 = 
√w_row
;

2483 *
x
 = 
√w_cﬁ
;

2484 
boﬁ
 = 
TRUE
;

2486 (
boﬁ
);

2487 
	}
}

2490 
	$∂ayî_ßves
()

2493 
öt16
 
ãmp
 = 
˛ass_Àvñ_adj
[
py
.
misc
.
p˛ass
][
CLA_SAVE
];

2495 i‡(
	`øndöt
(100Ë<(
py
.
misc
.
ßve
 + 
	`°©_adj
(
A_WIS
)

2496 + (
ãmp
 * 
py
.
misc
.
Àv
 / 3)))

2497 (
TRUE
);

2499 (
FALSE
);

2500 
	}
}

2504 
	$föd_ønge
(
ôem1
, 
ôem2
, 
j
, 
k
)

2505 
ôem1
, 
ôem2
;

2506 *
j
, *
k
;

2508 
i
;

2509 
öví_ty≥
 *
i_±r
;

2510 
Êag
;

2512 
i
 = 0;

2513 *
j
 = -1;

2514 *
k
 = -1;

2515 
Êag
 = 
FALSE
;

2516 
i_±r
 = &
övít‹y
[0];

2517 
i
 < 
öví_˘r
)

2519 i‡(!
Êag
)

2521 i‡((
i_±r
->
tvÆ
 =
ôem1
Ë|| (i_±r->tvÆ =
ôem2
))

2523 
Êag
 = 
TRUE
;

2524 *
j
 = 
i
;

2529 i‡((
i_±r
->
tvÆ
 !
ôem1
Ë&& (i_±r->tvÆ !
ôem2
))

2531 *
k
 = 
i
 - 1;

2535 
i
++;

2536 
i_±r
++;

2538 i‡(
Êag
 && (*
k
 == -1))

2539 *
k
 = 
öví_˘r
 - 1;

2540 (
Êag
);

2541 
	}
}

2545 
	$ãÀp‹t
(
dis
)

2546 
dis
;

2548 
y
, 
x
, 
i
, 
j
;

2552 
y
 = 
	`øndöt
(
cur_height
) - 1;

2553 
x
 = 
	`øndöt
(
cur_width
) - 1;

2554 
	`di°™˚
(
y
, 
x
, 
ch¨_row
, 
ch¨_cﬁ
Ë> 
dis
)

2556 
y
 +((
ch¨_row
-y)/2);

2557 
x
 +((
ch¨_cﬁ
-x)/2);

2560 (
ˇve
[
y
][
x
].
fvÆ
 >
MIN_CLOSED_SPACE
Ë|| (ˇve[y][x].
˝å
 >= 2));

2561 
	`move_ªc
(
ch¨_row
, 
ch¨_cﬁ
, 
y
, 
x
);

2562 
i
 = 
ch¨_row
-1; i <= char_row+1; i++)

2563 
j
 = 
ch¨_cﬁ
-1; j <= char_col+1; j++)

2565 
ˇve
[
i
][
j
].
é
 = 
FALSE
;

2566 
	`lôe_•Ÿ
(
i
, 
j
);

2568 
	`lôe_•Ÿ
(
ch¨_row
, 
ch¨_cﬁ
);

2569 
ch¨_row
 = 
y
;

2570 
ch¨_cﬁ
 = 
x
;

2571 
	`check_võw
();

2572 
	`¸ótuªs
(
FALSE
);

2573 
ãÀp‹t_Êag
 = 
FALSE
;

2574 
	}
}

	@misc4.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

13 
	~"c⁄fig.h
"

14 
	~"c⁄°™t.h
"

15 
	~"ty≥s.h
"

16 
	~"exã∫s.h
"

18 #i‚de‡
USG


19 
	~<sys/ty≥s.h
>

20 
	~<sys/∑øm.h
>

23 #ifde‡
USG


24 #i‚de‡
ATARIST_MWC


25 
	~<°rög.h
>

28 
	~<°rögs.h
>

33 
	$s¸ibe_obje˘
()

35 
ôem_vÆ
, 
j
;

36 
vty≥
 
out_vÆ
, 
tmp_°r
;

38 i‡(
öví_˘r
 > 0 || 
equù_˘r
 > 0)

40 i‡(
	`gë_ôem
(&
ôem_vÆ
, "Which o√? ", 0, 
INVEN_ARRAY_SIZE
, 
CNIL
, CNIL))

42 
	`objdes
(
tmp_°r
, &
övít‹y
[
ôem_vÆ
], 
TRUE
);

43 (Ë
	`•rötf
(
out_vÆ
, "Ins¸ibög %s", 
tmp_°r
);

44 
	`msg_¥öt
(
out_vÆ
);

45 i‡(
övít‹y
[
ôem_vÆ
].
ös¸ù
[0] != '\0')

46 (Ë
	`•rötf
(
out_vÆ
, "Replace %s New inscription:",

47 
övít‹y
[
ôem_vÆ
].
ös¸ù
);

49 (Ë
	`°r˝y
(
out_vÆ
, "Inscription: ");

50 
j
 = 78 - 
	`°æí
(
tmp_°r
);

51 i‡(
j
 > 12)

52 
j
 = 12;

53 
	`¥t
(
out_vÆ
, 0, 0);

54 i‡(
	`gë_°rög
(
out_vÆ
, 0, ()
	`°æí
(out_vÆ), 
j
))

55 
	`ös¸ibe
(&
övít‹y
[
ôem_vÆ
], 
out_vÆ
);

59 
	`msg_¥öt
("YouáreÇot carryingánythingÅo inscribe.");

60 
	}
}

63 
	$add_ös¸ibe
(
i_±r
, 
ty≥
)

64 
öví_ty≥
 *
i_±r
;

65 
öt8u
 
ty≥
;

67 
i_±r
->
idít
 |
ty≥
;

68 
	}
}

71 
	$ös¸ibe
(
i_±r
, 
°r
)

72 
öví_ty≥
 *
i_±r
;

73 *
°r
;

75 (Ë
	`°r˝y
(
i_±r
->
ös¸ù
, 
°r
);

76 
	}
}

80 
	$check_võw
()

82 
i
, 
j
;

83 
ˇve_ty≥
 *
c_±r
, *
d_±r
;

85 
c_±r
 = &
ˇve
[
ch¨_row
][
ch¨_cﬁ
];

87 i‡(
	`gë_∑√l
(
ch¨_row
, 
ch¨_cﬁ
, 
FALSE
))

88 
	`¥t_m≠
();

90 
	`move_light
(
ch¨_row
, 
ch¨_cﬁ
, char_row, char_col);

92 i‡(
c_±r
->
fvÆ
 =
LIGHT_FLOOR
)

94 i‡((
py
.
Êags
.
blöd
 < 1Ë&& !
c_±r
->
∂
)

95 
	`light_room
(
ch¨_row
, 
ch¨_cﬁ
);

98 i‡(
c_±r
->
Ã
 && (
py
.
Êags
.
blöd
 < 1))

100 
i
 = (
ch¨_row
 - 1); i <= (char_row + 1); i++)

101 
j
 = (
ch¨_cﬁ
 - 1); j <= (char_col + 1); j++)

103 
d_±r
 = &
ˇve
[
i
][
j
];

104 i‡((
d_±r
->
fvÆ
 =
LIGHT_FLOOR
Ë&& !d_±r->
∂
)

105 
	`light_room
(
i
, 
j
);

108 
	}
}

	@monsters.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

149 #ifde‡
MACGAME


150 
¸ótuª_ty≥
 *
	gc_li°
;

152 
¸ótuª_ty≥
 
	gc_li°
[
MAX_CREATURES
] = {

722 
m_©èck_ty≥
 
	gm⁄°î_©ècks
[
N_MONS_ATTS
] = {

780 
m⁄°î_ty≥
 
	gm_li°
[
MAX_MALLOC
];

781 
öt16
 
	gm_Àvñ
[
MAX_MONS_LEVEL
+1];

784 
m⁄°î_ty≥
 
	gbœnk_m⁄°î
 = {0,0,0,0,0,0,0,
FALSE
,0,FALSE};

785 
öt16
 
	gmÂå
;

786 
öt16
 
	gm⁄_tŸ_mu…
;

	@moria1.c

9 #ifde‡
__TURBOC__


10 
	~<°dlib.h
>

13 
	~<°dio.h
>

14 
	~<˘y≥.h
>

16 
	~"c⁄fig.h
"

17 
	~"c⁄°™t.h
"

18 
	~"ty≥s.h
"

19 
	~"exã∫s.h
"

21 #ifde‡
USG


22 #i‚de‡
ATARIST_MWC


23 
	~<°rög.h
>

25 *
°rˇt
();

26 
°æí
();

29 
	~<°rögs.h
>

32 #i‡
deföed
(
LINT_ARGS
)

33 
öví_s¸ìn
();

34 
m≠_roguedú
();

35 
sub1_move_light
(, , , );

36 
sub3_move_light
(, , , );

39 #ifde‡
ATARIST_TC


41 
	~<°dlib.h
>

48 
	$ch™ge_•ìd
(
num
)

49 
num
;

51 
i
;

52 #ifde‡
ATARIST_MWC


53 
öt32u
 
hﬁdî
;

56 
py
.
Êags
.
•ìd
 +
num
;

57 #ifde‡
ATARIST_MWC


58 
py
.
Êags
.
°©us
 |(
hﬁdî
 = 
PY_SPEED
);

60 
py
.
Êags
.
°©us
 |
PY_SPEED
;

62 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

63 
m_li°
[
i
].
c•ìd
 +
num
;

64 
	}
}

72 
	$py_b⁄u£s
(
t_±r
, 
Á˘‹
)

73 
öví_ty≥
 *
t_±r
;

74 
Á˘‹
;

76 
i
, 
amou¡
;

77 #ifde‡
ATARIST_MWC


78 
öt32u
 
hﬁdî
;

81 
amou¡
 = 
t_±r
->
p1
 * 
Á˘‹
;

82 i‡(
t_±r
->
Êags
 & 
TR_STATS
)

84 
i
 = 0; i < 6; i++)

85 i‡((1 << 
i
Ë& 
t_±r
->
Êags
)

86 
	`b°_°©
(
i
, 
amou¡
);

88 i‡(
TR_SEARCH
 & 
t_±r
->
Êags
)

90 
py
.
misc
.
§h
 +
amou¡
;

91 
py
.
misc
.
fos
 -
amou¡
;

93 i‡(
TR_STEALTH
 & 
t_±r
->
Êags
)

94 
py
.
misc
.
°l
 +
amou¡
;

95 i‡(
TR_SPEED
 & 
t_±r
->
Êags
)

96 
	`ch™ge_•ìd
(-
amou¡
);

97 #ifde‡
ATARIST_MWC


98 i‡(((
hﬁdî
 = 
TR_BLIND
Ë& 
t_±r
->
Êags
Ë&& (
Á˘‹
 > 0))

99 
py
.
Êags
.
blöd
 += 1000;

100 i‡(((
hﬁdî
 = 
TR_TIMID
Ë& 
t_±r
->
Êags
Ë&& (
Á˘‹
 > 0))

101 
py
.
Êags
.
a‰aid
 += 50;

102 i‡((
hﬁdî
 = 
TR_INFRA
Ë& 
t_±r
->
Êags
)

103 
py
.
Êags
.
£e_ö‰a
 +
amou¡
;

105 i‡((
TR_BLIND
 & 
t_±r
->
Êags
Ë&& (
Á˘‹
 > 0))

106 
py
.
Êags
.
blöd
 += 1000;

107 i‡((
TR_TIMID
 & 
t_±r
->
Êags
Ë&& (
Á˘‹
 > 0))

108 
py
.
Êags
.
a‰aid
 += 50;

109 i‡(
TR_INFRA
 & 
t_±r
->
Êags
)

110 
py
.
Êags
.
£e_ö‰a
 +
amou¡
;

112 
	}
}

115 
	$ˇlc_b⁄u£s
()

117 
öt32u
 
ôem_Êags
;

118 #i‡
	`deföed
(
ATARIST_MWC
)

119 
öt32u
 
hﬁdî
;

121 
ﬁd_dis_ac
;

122 
Êags
 *
p_±r
;

123 
misc
 *
m_±r
;

124 
öví_ty≥
 *
i_±r
;

125 
i
;

127 
p_±r
 = &
py
.
Êags
;

128 
m_±r
 = &
py
.
misc
;

129 i‡(
p_±r
->
¶ow_dige°
)

130 
p_±r
->
food_dige°ed
++;

131 i‡(
p_±r
->
ªgíî©e
)

132 
p_±r
->
food_dige°ed
 -= 3;

133 
p_±r
->
£e_öv
 = 
FALSE
;

134 
p_±r
->
ãÀp‹t
 = 
FALSE
;

135 
p_±r
->
‰ì_a˘
 = 
FALSE
;

136 
p_±r
->
¶ow_dige°
 = 
FALSE
;

137 
p_±r
->
aggøv©e
 = 
FALSE
;

138 
p_±r
->
su°aö_°r
 = 
FALSE
;

139 
p_±r
->
su°aö_öt
 = 
FALSE
;

140 
p_±r
->
su°aö_wis
 = 
FALSE
;

141 
p_±r
->
su°aö_c⁄
 = 
FALSE
;

142 
p_±r
->
su°aö_dex
 = 
FALSE
;

143 
p_±r
->
su°aö_chr
 = 
FALSE
;

144 
p_±r
->
fúe_ªsi°
 = 
FALSE
;

145 
p_±r
->
acid_ªsi°
 = 
FALSE
;

146 
p_±r
->
cﬁd_ªsi°
 = 
FALSE
;

147 
p_±r
->
ªgíî©e
 = 
FALSE
;

148 
p_±r
->
lght_ªsi°
 = 
FALSE
;

149 
p_±r
->
fÁŒ
 = 
FALSE
;

151 
ﬁd_dis_ac
 = 
m_±r
->
dis_ac
;

152 
m_±r
->
±ohô
 = 
	`tohô_adj
();

153 
m_±r
->
±odam
 = 
	`todam_adj
();

154 
m_±r
->
±ﬂc
 = 
	`tﬂc_adj
();

155 
m_±r
->
∑c
 = 0;

156 
m_±r
->
dis_th
 = m_±r->
±ohô
;

157 
m_±r
->
dis_td
 = m_±r->
±odam
;

158 
m_±r
->
dis_ac
 = 0;

159 
m_±r
->
dis_èc
 = m_±r->
±ﬂc
;

160 
i
 = 
INVEN_WIELD
; i < 
INVEN_LIGHT
; i++)

162 
i_±r
 = &
övít‹y
[
i
];

163 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

165 
m_±r
->
±ohô
 +
i_±r
->
tohô
;

166 i‡(
i_±r
->
tvÆ
 !
TV_BOW
)

167 
m_±r
->
±odam
 +
i_±r
->
todam
;

168 
m_±r
->
±ﬂc
 +
i_±r
->
tﬂc
;

169 
m_±r
->
∑c
 +
i_±r
->
ac
;

170 i‡(
	`known2_p
(
i_±r
))

172 
m_±r
->
dis_th
 +
i_±r
->
tohô
;

173 i‡(
i_±r
->
tvÆ
 !
TV_BOW
)

174 
m_±r
->
dis_td
 +
i_±r
->
todam
;

175 
m_±r
->
dis_èc
 +
i_±r
->
tﬂc
;

176 
m_±r
->
dis_ac
 +
i_±r
->
ac
;

178 i‡(! (
TR_CURSED
 & 
i_±r
->
Êags
))

181 
m_±r
->
dis_ac
 +
i_±r
->
ac
;

184 
m_±r
->
dis_ac
 +m_±r->
dis_èc
;

186 i‡(
wóp⁄_hóvy
)

187 
m_±r
->
dis_th
 +(
py
.
°©s
.
u£_°©
[
A_STR
] * 15 -

188 
övít‹y
[
INVEN_WIELD
].
weight
);

191 i‡(
p_±r
->
övu 
 > 0)

193 
m_±r
->
∑c
 += 100;

194 
m_±r
->
dis_ac
 += 100;

196 i‡(
p_±r
->
bÀs£d
 > 0)

198 
m_±r
->
∑c
 += 2;

199 
m_±r
->
dis_ac
 += 2;

201 i‡(
p_±r
->
dëe˘_öv
 > 0)

202 
p_±r
->
£e_öv
 = 
TRUE
;

205 i‡(
ﬁd_dis_ac
 !
m_±r
->
dis_ac
)

206 #ifde‡
ATARIST_MWC


207 
p_±r
->
°©us
 |(
hﬁdî
 = 
PY_ARMOR
);

209 
p_±r
->
°©us
 |
PY_ARMOR
;

212 
ôem_Êags
 = 0;

213 
i_±r
 = &
övít‹y
[
INVEN_WIELD
];

214 
i
 = 
INVEN_WIELD
; i < 
INVEN_LIGHT
; i++)

216 
ôem_Êags
 |
i_±r
->
Êags
;

217 
i_±r
++;

219 #i‡!
	`deföed
(
ATARIST_MWC
)

220 i‡(
TR_SLOW_DIGEST
 & 
ôem_Êags
)

221 
p_±r
->
¶ow_dige°
 = 
TRUE
;

222 i‡(
TR_AGGRAVATE
 & 
ôem_Êags
)

223 
p_±r
->
aggøv©e
 = 
TRUE
;

224 i‡(
TR_TELEPORT
 & 
ôem_Êags
)

225 
p_±r
->
ãÀp‹t
 = 
TRUE
;

226 i‡(
TR_REGEN
 & 
ôem_Êags
)

227 
p_±r
->
ªgíî©e
 = 
TRUE
;

228 i‡(
TR_RES_FIRE
 & 
ôem_Êags
)

229 
p_±r
->
fúe_ªsi°
 = 
TRUE
;

230 i‡(
TR_RES_ACID
 & 
ôem_Êags
)

231 
p_±r
->
acid_ªsi°
 = 
TRUE
;

232 i‡(
TR_RES_COLD
 & 
ôem_Êags
)

233 
p_±r
->
cﬁd_ªsi°
 = 
TRUE
;

234 i‡(
TR_FREE_ACT
 & 
ôem_Êags
)

235 
p_±r
->
‰ì_a˘
 = 
TRUE
;

236 i‡(
TR_SEE_INVIS
 & 
ôem_Êags
)

237 
p_±r
->
£e_öv
 = 
TRUE
;

238 i‡(
TR_RES_LIGHT
 & 
ôem_Êags
)

239 
p_±r
->
lght_ªsi°
 = 
TRUE
;

240 i‡(
TR_FFALL
 & 
ôem_Êags
)

241 
p_±r
->
fÁŒ
 = 
TRUE
;

244 
hﬁdî
 = 
TR_SLOW_DIGEST
;

245 i‡(
hﬁdî
 & 
ôem_Êags
)

246 
p_±r
->
¶ow_dige°
 = 
TRUE
;

247 
hﬁdî
 = 
TR_AGGRAVATE
;

248 i‡(
hﬁdî
 & 
ôem_Êags
)

249 
p_±r
->
aggøv©e
 = 
TRUE
;

250 
hﬁdî
 = 
TR_TELEPORT
;

251 i‡(
hﬁdî
 & 
ôem_Êags
)

252 
p_±r
->
ãÀp‹t
 = 
TRUE
;

253 
hﬁdî
 = 
TR_REGEN
;

254 i‡(
hﬁdî
 & 
ôem_Êags
)

255 
p_±r
->
ªgíî©e
 = 
TRUE
;

256 
hﬁdî
 = 
TR_RES_FIRE
;

257 i‡(
hﬁdî
 & 
ôem_Êags
)

258 
p_±r
->
fúe_ªsi°
 = 
TRUE
;

259 
hﬁdî
 = 
TR_RES_ACID
;

260 i‡(
hﬁdî
 & 
ôem_Êags
)

261 
p_±r
->
acid_ªsi°
 = 
TRUE
;

262 
hﬁdî
 = 
TR_RES_COLD
;

263 i‡(
hﬁdî
 & 
ôem_Êags
)

264 
p_±r
->
cﬁd_ªsi°
 = 
TRUE
;

265 
hﬁdî
 = 
TR_FREE_ACT
;

266 i‡(
hﬁdî
 & 
ôem_Êags
)

267 
p_±r
->
‰ì_a˘
 = 
TRUE
;

268 
hﬁdî
 = 
TR_SEE_INVIS
;

269 i‡(
hﬁdî
 & 
ôem_Êags
)

270 
p_±r
->
£e_öv
 = 
TRUE
;

271 
hﬁdî
 = 
TR_RES_LIGHT
;

272 i‡(
hﬁdî
 & 
ôem_Êags
)

273 
p_±r
->
lght_ªsi°
 = 
TRUE
;

274 
hﬁdî
 = 
TR_FFALL
;

275 i‡(
hﬁdî
 & 
ôem_Êags
)

276 
p_±r
->
fÁŒ
 = 
TRUE
;

279 
i_±r
 = &
övít‹y
[
INVEN_WIELD
];

280 
i
 = 
INVEN_WIELD
; i < 
INVEN_LIGHT
; i++)

282 #ifde‡
ATARIST_MWC


283 i‡((
hﬁdî
 = 
TR_SUST_STAT
Ë& 
i_±r
->
Êags
)

285 i‡(
TR_SUST_STAT
 & 
i_±r
->
Êags
)

287 
i_±r
->
p1
)

289 1: 
p_±r
->
su°aö_°r
 = 
TRUE
; ;

290 2: 
p_±r
->
su°aö_öt
 = 
TRUE
; ;

291 3: 
p_±r
->
su°aö_wis
 = 
TRUE
; ;

292 4: 
p_±r
->
su°aö_c⁄
 = 
TRUE
; ;

293 5: 
p_±r
->
su°aö_dex
 = 
TRUE
; ;

294 6: 
p_±r
->
su°aö_chr
 = 
TRUE
; ;

297 
i_±r
++;

300 i‡(
p_±r
->
¶ow_dige°
)

301 
p_±r
->
food_dige°ed
--;

302 i‡(
p_±r
->
ªgíî©e
)

303 
p_±r
->
food_dige°ed
 += 3;

304 
	}
}

313 
	$show_öví
(
r1
, 
r2
, 
weight
, 
cﬁ
, 
mask
)

314 
r1
, 
r2
;

315 
weight
, 
cﬁ
;

316 *
mask
;

318 
i
;

319 
tŸÆ_weight
, 
Àn
, 
l
, 
lim
, 
cuºít_löe
;

320 
bigvty≥
 
tmp_vÆ
;

321 
vty≥
 
out_vÆ
[23];

323 
Àn
 = 79 - 
cﬁ
;

324 i‡(
weight
)

325 
lim
 = 68;

327 
lim
 = 76;

329 
i
 = 
r1
; i <
r2
; i++)

331 i‡(
mask
 =
CNIL
 || mask[
i
])

333 
	`objdes
(
tmp_vÆ
, &
övít‹y
[
i
], 
TRUE
);

334 
tmp_vÆ
[
lim
] = 0;

335 (Ë
	`•rötf
(
out_vÆ
[
i
], " %cË%s", 'a'+i, 
tmp_vÆ
);

336 
l
 = 
	`°æí
(
out_vÆ
[
i
]);

337 i‡(
weight
)

338 
l
 += 9;

339 i‡(
l
 > 
Àn
)

340 
Àn
 = 
l
;

344 
cﬁ
 = 79 - 
Àn
;

345 i‡(
cﬁ
 < 0)

346 
cﬁ
 = 0;

348 
cuºít_löe
 = 1;

349 
i
 = 
r1
; i <
r2
; i++)

351 i‡(
mask
 =
CNIL
 || mask[
i
])

354 i‡(
cﬁ
 == 0)

355 
	`¥t
(&
out_vÆ
[
i
][2], 
cuºít_löe
, 
cﬁ
);

357 
	`¥t
(
out_vÆ
[
i
], 
cuºít_löe
, 
cﬁ
);

358 i‡(
weight
)

360 
tŸÆ_weight
 = 
övít‹y
[
i
].
weight
*övít‹y[i].
numbî
;

361 (Ë
	`•rötf
 (
tmp_vÆ
, "%3d.%dÜb",

362 (
tŸÆ_weight
) / 10, (total_weight) % 10);

363 
	`¥t
 (
tmp_vÆ
, 
cuºít_löe
, 71);

365 
cuºít_löe
++;

368  
cﬁ
;

369 
	}
}

373 *
	$des¸ibe_u£
(
i
)

374 
i
;

376 *
p
;

378 
i
)

380 
INVEN_WIELD
:

381 
p
 = "wielding"; ;

382 
INVEN_HEAD
:

383 
p
 = "wearing on your head"; ;

384 
INVEN_NECK
:

385 
p
 = "wearingáround yourÇeck"; ;

386 
INVEN_BODY
:

387 
p
 = "wearing on your body"; ;

388 
INVEN_ARM
:

389 
p
 = "wearing on yourárm"; ;

390 
INVEN_HANDS
:

391 
p
 = "wearing on your hands"; ;

392 
INVEN_RIGHT
:

393 
p
 = "wearing on yourÑight hand"; ;

394 
INVEN_LEFT
:

395 
p
 = "wearing on yourÜeft hand"; ;

396 
INVEN_FEET
:

397 
p
 = "wearing on your feet"; ;

398 
INVEN_OUTER
:

399 
p
 = "wearingábout your body"; ;

400 
INVEN_LIGHT
:

401 
p
 = "usingÅoÜightÅhe way"; ;

402 
INVEN_AUX
:

403 
p
 = "holdingÑeady by your side"; ;

405 
p
 = "carrying in yourÖack"; ;

407  
p
;

408 
	}
}

413 
	$show_equù
(
weight
, 
cﬁ
)

414 
weight
, 
cﬁ
;

416 
i
, 
löe
;

417 
tŸÆ_weight
, 
l
, 
Àn
, 
lim
;

418 *
¥t1
;

419 
bigvty≥
 
¥t2
;

420 
vty≥
 
out_vÆ
[
INVEN_ARRAY_SIZE
-
INVEN_WIELD
];

421 
öví_ty≥
 *
i_±r
;

423 
löe
 = 0;

424 
Àn
 = 79 - 
cﬁ
;

425 i‡(
weight
)

426 
lim
 = 52;

428 
lim
 = 60;

429 
i
 = 
INVEN_WIELD
; i < 
INVEN_ARRAY_SIZE
; i++)

431 
i_±r
 = &
övít‹y
[
i
];

432 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

434 
i
)

436 
INVEN_WIELD
:

437 i‡(
py
.
°©s
.
u£_°©
[
A_STR
]*15 < 
i_±r
->
weight
)

438 
¥t1
 = "JustÜifting";

440 
¥t1
 = "Wielding";

442 
INVEN_HEAD
:

443 
¥t1
 = "On head"; ;

444 
INVEN_NECK
:

445 
¥t1
 = "AroundÇeck"; ;

446 
INVEN_BODY
:

447 
¥t1
 = "On body"; ;

448 
INVEN_ARM
:

449 
¥t1
 = "Onárm"; ;

450 
INVEN_HANDS
:

451 
¥t1
 = "On hands"; ;

452 
INVEN_RIGHT
:

453 
¥t1
 = "OnÑight hand"; ;

454 
INVEN_LEFT
:

455 
¥t1
 = "OnÜeft hand"; ;

456 
INVEN_FEET
:

457 
¥t1
 = "On feet"; ;

458 
INVEN_OUTER
:

459 
¥t1
 = "About body"; ;

460 
INVEN_LIGHT
:

461 
¥t1
 = "Light source"; ;

462 
INVEN_AUX
:

463 
¥t1
 = "Spare weapon"; ;

465 
¥t1
 = "Unknown value"; ;

467 
	`objdes
(
¥t2
, &
övít‹y
[
i
], 
TRUE
);

468 
¥t2
[
lim
] = 0;

469 (Ë
	`•rötf
(
out_vÆ
[
löe
], " %c) %-14s: %s",Üine+'a',

470 
¥t1
, 
¥t2
);

471 
l
 = 
	`°æí
(
out_vÆ
[
löe
]);

472 i‡(
weight
)

473 
l
 += 9;

474 i‡(
l
 > 
Àn
)

475 
Àn
 = 
l
;

476 
löe
++;

479 
cﬁ
 = 79 - 
Àn
;

480 i‡(
cﬁ
 < 0)

481 
cﬁ
 = 0;

483 
löe
 = 0;

484 
i
 = 
INVEN_WIELD
; i < 
INVEN_ARRAY_SIZE
; i++)

486 
i_±r
 = &
övít‹y
[
i
];

487 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

490 i‡(
cﬁ
 == 0)

491 
	`¥t
(&
out_vÆ
[
löe
][2],Üöe+1, 
cﬁ
);

493 
	`¥t
(
out_vÆ
[
löe
],Üöe+1, 
cﬁ
);

494 i‡(
weight
)

496 
tŸÆ_weight
 = 
i_±r
->
weight
*i_±r->
numbî
;

497 (Ë
	`•rötf
(
¥t2
, "%3d.%dÜb",

498 (
tŸÆ_weight
) / 10, (total_weight) % 10);

499 
	`¥t
(
¥t2
, 
löe
+1, 71);

501 
löe
++;

504 
	`îa£_löe
(
löe
+1, 
cﬁ
);

505  
cﬁ
;

506 
	}
}

509 
	$èkeoff
(
ôem_vÆ
, 
po¢
)

510 
ôem_vÆ
, 
po¢
;

512 *
p
;

513 
bigvty≥
 
out_vÆ
, 
¥t2
;

514 
öví_ty≥
 *
t_±r
;

515 #ifde‡
ATARIST_MWC


516 
öt32u
 
hﬁdî
;

519 
equù_˘r
--;

520 
t_±r
 = &
övít‹y
[
ôem_vÆ
];

521 
öví_weight
 -
t_±r
->
weight
*t_±r->
numbî
;

522 #ifde‡
ATARIST_MWC


523 
py
.
Êags
.
°©us
 |(
hﬁdî
 = 
PY_STR_WGT
);

525 
py
.
Êags
.
°©us
 |
PY_STR_WGT
;

528 i‡(
ôem_vÆ
 =
INVEN_WIELD
 || iãm_vÆ =
INVEN_AUX
)

529 
p
 = "Was wielding ";

530 i‡(
ôem_vÆ
 =
INVEN_LIGHT
)

531 
p
 = "Light source was ";

533 
p
 = "Was wearing ";

535 
	`objdes
(
¥t2
, 
t_±r
, 
TRUE
);

536 i‡(
po¢
 >= 0)

537 (Ë
	`•rötf
(
out_vÆ
, "%s%†(%c)", 
p
, 
¥t2
, 'a'+
po¢
);

539 (Ë
	`•rötf
(
out_vÆ
, "%s%s", 
p
, 
¥t2
);

540 
	`msg_¥öt
(
out_vÆ
);

541 i‡(
ôem_vÆ
 !
INVEN_AUX
)

542 
	`py_b⁄u£s
(
t_±r
, -1);

543 
	`övc›y
(
t_±r
, 
OBJ_NOTHING
);

544 
	}
}

549 
	$vîify
(
¥om±
, 
ôem
)

550 *
¥om±
;

551 
ôem
;

553 
bigvty≥
 
out_°r
, 
obje˘
;

555 
	`objdes
(
obje˘
, &
övít‹y
[
ôem
], 
TRUE
);

556 
obje˘
[
	`°æí
(object)-1] = '?';

557 (Ë
	`•rötf
(
out_°r
, "%†%s", 
¥om±
, 
obje˘
);

558  
	`gë_check
(
out_°r
);

559 
	}
}

589 
	#BLANK_SCR
 0

	)

590 
	#EQUIP_SCR
 1

	)

591 
	#INVEN_SCR
 2

	)

592 
	#WEAR_SCR
 3

	)

593 
	#HELP_SCR
 4

	)

594 
	#WRONG_SCR
 5

	)

597 
	gs¸_°©e
, 
	gs¸_À·
, 
	gs¸_ba£
;

598 
	gwór_low
, 
	gwór_high
;

601 
	$öví_s¸ìn
(
√w_s¸
)

602 
√w_s¸
;

604 
löe
;

606 i‡(
√w_s¸
 !
s¸_°©e
)

608 
s¸_°©e
 = 
√w_s¸
;

609 
√w_s¸
)

611 
BLANK_SCR
:

612 
löe
 = 0;

614 
HELP_SCR
:

615 i‡(
s¸_À·
 > 52)

616 
s¸_À·
 = 52;

617 
	`¥t
(" ESC:Éxô", 1, 
s¸_À·
);

618 
	`¥t
(" w : wó∏‹ wõld obje˘", 2, 
s¸_À·
);

619 
	`¥t
("Å :Åakêof‡ôem", 3, 
s¸_À·
);

620 
	`¥t
(" d : dr› obje˘", 4, 
s¸_À·
);

621 
	`¥t
(" x :Éxch™gêwóp⁄s", 5, 
s¸_À·
);

622 
	`¥t
(" i : invít‹y o‡∑ck", 6, 
s¸_À·
);

623 
	`¥t
("É :Üi° u£dÉquùmít", 7, 
s¸_À·
);

624 
löe
 = 7;

626 
INVEN_SCR
:

627 
s¸_À·
 = 
	`show_öví
(0, 
öví_˘r
 - 1, 
show_weight_Êag
, scr_left,

628 
CNIL
);

629 
löe
 = 
öví_˘r
;

631 
WEAR_SCR
:

632 
s¸_À·
 = 
	`show_öví
(
wór_low
, 
wór_high
, 
show_weight_Êag
,

633 
s¸_À·
, 
CNIL
);

634 
löe
 = 
wór_high
 - 
wór_low
 + 1;

636 
EQUIP_SCR
:

637 
s¸_À·
 = 
	`show_equù
(
show_weight_Êag
, scr_left);

638 
löe
 = 
equù_˘r
;

641 i‡(
löe
 >
s¸_ba£
)

643 
s¸_ba£
 = 
löe
 + 1;

644 
	`îa£_löe
(
s¸_ba£
, 
s¸_À·
);

648 ++
löe
 <
s¸_ba£
)

649 
	`îa£_löe
(
löe
, 
s¸_À·
);

652 
	}
}

655 
	$öví_comm™d
(
comm™d
)

656 
comm™d
;

658 
¶Ÿ
, 
ôem
;

659 
tmp
, 
tmp2
, 
£À˘ög
, 
‰om
, 
to
;

660 *
¥om±
, *
sw≠
, *
di•
, *
°rög
;

661 
which
, 
quîy
;

662 
bigvty≥
 
¥t1
, 
¥t2
;

663 
öví_ty≥
 *
i_±r
;

664 
öví_ty≥
 
tmp_obj
;

665 #ifde‡
ATARIST_MWC


666 
öt32u
 
hﬁdî
;

669 
‰ì_tu∫_Êag
 = 
TRUE
;

670 
	`ßve_s¸ìn
();

672 i‡(
doög_öví
)

677 i‡(
s¸ìn_ch™ge
)

679 i‡(
comm™d
 =' ' || !
	`gë_check
("Continuing with inventory command?"))

681 
doög_öví
 = 
FALSE
;

684 
s¸_À·
 = 50;

685 
s¸_ba£
 = 0;

687 
tmp
 = 
s¸_°©e
;

688 
s¸_°©e
 = 
WRONG_SCR
;

689 
	`öví_s¸ìn
(
tmp
);

693 
s¸_À·
 = 50;

694 
s¸_ba£
 = 0;

696 
s¸_°©e
 = 
BLANK_SCR
;

700 i‡(
	`isuµî
(()
comm™d
))

701 
comm™d
 = 
	`tﬁowî
(()command);

704 
£À˘ög
 = 
FALSE
;

705 
comm™d
)

708 i‡(
öví_˘r
 == 0)

709 
	`msg_¥öt
("YouáreÇot carryingánything.");

711 
	`öví_s¸ìn
(
INVEN_SCR
);

714 i‡(
equù_˘r
 == 0)

715 
	`msg_¥öt
("YouáreÇot usingányÉquipment.");

717 
	`öví_s¸ìn
(
EQUIP_SCR
);

720 i‡(
equù_˘r
 == 0)

721 
	`msg_¥öt
("YouáreÇot usingányÉquipment.");

724 i‡(
öví_˘r
 >
INVEN_WIELD
 && !
doög_öví
)

725 
	`msg_¥öt
("You will haveÅo drop something first.");

728 i‡(
s¸_°©e
 !
BLANK_SCR
)

729 
	`öví_s¸ìn
(
EQUIP_SCR
);

730 
£À˘ög
 = 
TRUE
;

734 i‡(
öví_˘r
 =0 && 
equù_˘r
 == 0)

735 
	`msg_¥öt
("But you'reÇot carryingánything.");

736 i‡(
ˇve
[
ch¨_row
][
ch¨_cﬁ
].
çå
 != 0)

737 
	`msg_¥öt
("There'sÇoÑoomÅo dropánything here.");

740 
£À˘ög
 = 
TRUE
;

741 i‡((
s¸_°©e
 =
EQUIP_SCR
 && 
equù_˘r
 > 0Ë|| 
öví_˘r
 == 0)

743 i‡(
s¸_°©e
 !
BLANK_SCR
)

744 
	`öví_s¸ìn
(
EQUIP_SCR
);

745 
comm™d
 = 'r';

747 i‡(
s¸_°©e
 !
BLANK_SCR
)

748 
	`öví_s¸ìn
(
INVEN_SCR
);

752 
wór_low
 = 0;

753 
wór_low
 < 
öví_˘r
 && 
övít‹y
[wór_low].
tvÆ
 > 
TV_MAX_WEAR
;

754 
wór_low
++)

756 
wór_high
 = 
wór_low
;

757 
wór_high
 < 
öví_˘r
 && 
övít‹y
[wór_high].
tvÆ
 >=
TV_MIN_WEAR
;

758 
wór_high
++)

760 
wór_high
--;

761 i‡(
wór_low
 > 
wór_high
)

762 
	`msg_¥öt
("You haveÇothingÅo wear or wield.");

765 i‡(
s¸_°©e
 !
BLANK_SCR
 && s¸_°©ê!
INVEN_SCR
)

766 
	`öví_s¸ìn
(
WEAR_SCR
);

767 
£À˘ög
 = 
TRUE
;

771 i‡(
övít‹y
[
INVEN_WIELD
].
tvÆ
 =
TV_NOTHING
 &&

772 
övít‹y
[
INVEN_AUX
].
tvÆ
 =
TV_NOTHING
)

773 
	`msg_¥öt
("But youáre wieldingÇo weapons.");

774 #ifde‡
ATARIST_MWC


775 i‡((
hﬁdî
 = 
TR_CURSED
Ë& 
övít‹y
[
INVEN_WIELD
].
Êags
)

777 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_WIELD
].
Êags
)

780 
	`objdes
(
¥t1
, &
övít‹y
[
INVEN_WIELD
], 
FALSE
);

781 (Ë
	`•rötf
(
¥t2
,

782 "Thê%†youáª wõldögáµór†tÿbêcur£d.", 
¥t1
);

783 
	`msg_¥öt
(
¥t2
);

787 
‰ì_tu∫_Êag
 = 
FALSE
;

788 
tmp_obj
 = 
övít‹y
[
INVEN_AUX
];

789 
övít‹y
[
INVEN_AUX
] = invít‹y[
INVEN_WIELD
];

790 
övít‹y
[
INVEN_WIELD
] = 
tmp_obj
;

791 i‡(
s¸_°©e
 =
EQUIP_SCR
)

792 
s¸_À·
 = 
	`show_equù
(
show_weight_Êag
, scr_left);

793 
	`py_b⁄u£s
(&
övít‹y
[
INVEN_AUX
], -1);

794 
	`py_b⁄u£s
(&
övít‹y
[
INVEN_WIELD
], 1);

795 i‡(
övít‹y
[
INVEN_WIELD
].
tvÆ
 !
TV_NOTHING
)

797 (Ë
	`°r˝y
(
¥t1
, "Primary weapon : ");

798 
	`objdes
(
¥t2
, &
övít‹y
[
INVEN_WIELD
], 
TRUE
);

799 
	`msg_¥öt
(
	`°rˇt
(
¥t1
, 
¥t2
));

802 
	`msg_¥öt
("NoÖrimary weapon.");

804 
wóp⁄_hóvy
 = 
FALSE
;

805 
	`check_°ªngth
();

811 
	`öví_s¸ìn
(
HELP_SCR
);

815 
	`bñl
();

821 
doög_öví
 = 0;

824 
which
 = 'z';

825 
£À˘ög
 && 
‰ì_tu∫_Êag
)

827 
sw≠
 = "";

828 i‡(
comm™d
 == 'w')

830 
‰om
 = 
wór_low
;

831 
to
 = 
wór_high
;

832 
¥om±
 = "Wear/Wield";

836 
‰om
 = 0;

837 i‡(
comm™d
 == 'd')

839 
to
 = 
öví_˘r
 - 1;

840 
¥om±
 = "Drop";

841 i‡(
equù_˘r
 > 0)

842 
sw≠
 = ", / for Equip";

846 
to
 = 
equù_˘r
 - 1;

847 i‡(
comm™d
 == 't')

848 
¥om±
 = "Take off";

851 
¥om±
 = "Throw off";

852 i‡(
öví_˘r
 > 0)

853 
sw≠
 = ", / for Inven";

857 i‡(
‰om
 > 
to
)

858 
£À˘ög
 = 
FALSE
;

861 i‡(
s¸_°©e
 =
BLANK_SCR
)

862 
di•
 = ", *ÅoÜist";

864 
di•
 = "";

865 (Ë
	`•rötf
(
¥t1
,

867 
‰om
+'a', 
to
+'a', 
di•
, 
sw≠
,

868 ((
comm™d
 == 'w' || command == 'd') ? ", 0-9" : "")

869 , 
¥om±
);

871 i‡(!
	`gë_com
(
¥t1
, &
which
))

873 
£À˘ög
 = 
FALSE
;

874 
which
 = 
ESCAPE
;

877 i‡(
which
 == ' ' || which == '*')

879 i‡(
comm™d
 == 't' || command == 'r')

880 
	`öví_s¸ìn
(
EQUIP_SCR
);

881 i‡(
comm™d
 ='w' && 
s¸_°©e
 !
INVEN_SCR
)

882 
	`öví_s¸ìn
(
WEAR_SCR
);

884 
	`öví_s¸ìn
(
INVEN_SCR
);

885 i‡(
which
 == ' ')

886 
£À˘ög
 = 
FALSE
;

889 i‡(
which
 ='/' && 
sw≠
[0])

891 i‡(
comm™d
 == 'd')

892 
comm™d
 = 'r';

894 
comm™d
 = 'd';

895 i‡(
s¸_°©e
 =
EQUIP_SCR
)

896 
	`öví_s¸ìn
(
INVEN_SCR
);

897 i‡(
s¸_°©e
 =
INVEN_SCR
)

898 
	`öví_s¸ìn
(
EQUIP_SCR
);

902 i‡((
which
 >= '0') && (which <= '9')

903 && (
comm™d
 != 'r') && (command != 't'))

906 
m
;

907 
m
 = 
‰om
;

908 
m
 <
to
 && ((
övít‹y
[m].
ös¸ù
[0] !
which
)

909 || (
övít‹y
[
m
].
ös¸ù
[1] != '\0'));

910 
m
++);

911 i‡(
m
 <
to
)

912 
ôem
 = 
m
;

914 
ôem
 = -1;

916 i‡((
which
 >= 'A') && (which <= 'Z'))

917 
ôem
 = 
which
 - 'A';

919 
ôem
 = 
which
 - 'a';

920 i‡(
ôem
 < 
‰om
 || iãm > 
to
)

921 
	`bñl
();

924 i‡(
comm™d
 == 'r' || command == 't')

927 
tmp
 = 
ôem
;

928 
ôem
 = 21;

931 
ôem
++;

932 i‡(
övít‹y
[
ôem
].
tvÆ
 !
TV_NOTHING
)

933 
tmp
--;

935 
tmp
 >= 0);

936 i‡(
	`isuµî
(()
which
Ë&& !
	`vîify
(
¥om±
, 
ôem
))

937 
ôem
 = -1;

938 #ifde‡
ATARIST_MWC


939 i‡((
hﬁdî
 = 
TR_CURSED
Ë& 
övít‹y
[
ôem
].
Êags
)

941 i‡(
TR_CURSED
 & 
övít‹y
[
ôem
].
Êags
)

944 
	`msg_¥öt
("Hmmm, it seemsÅo be cursed.");

945 
ôem
 = -1;

947 i‡(
comm™d
 == 't' &&

948 !
	`öví_check_num
(&
övít‹y
[
ôem
]))

950 i‡(
ˇve
[
ch¨_row
][
ch¨_cﬁ
].
çå
 != 0)

952 
	`msg_¥öt
("You can't carry it.");

953 
ôem
 = -1;

955 i‡(
	`gë_check
("You can't carry it. Drop it?"))

956 
comm™d
 = 'r';

958 
ôem
 = -1;

960 i‡(
ôem
 >= 0)

962 i‡(
comm™d
 == 'r')

964 
	`öví_dr›
(
ôem
, 
TRUE
);

968 i‡(
öví_˘r
 =0 && 
equù_˘r
 == 0)

969 
öví_weight
 = 0;

973 
¶Ÿ
 = 
	`öví_ˇºy
(&
övít‹y
[
ôem
]);

974 
	`èkeoff
(
ôem
, 
¶Ÿ
);

976 
	`check_°ªngth
();

977 
‰ì_tu∫_Êag
 = 
FALSE
;

978 i‡(
comm™d
 == 'r')

979 
£À˘ög
 = 
FALSE
;

982 i‡(
comm™d
 == 'w')

986 i‡(
	`isuµî
(()
which
Ë&& !
	`vîify
(
¥om±
, 
ôem
))

987 
ôem
 = -1;

988 
övít‹y
[
ôem
].
tvÆ
)

990 
TV_SLING_AMMO
: 
TV_BOLT
: 
TV_ARROW
:

991 
TV_BOW
: 
TV_HAFTED
: 
TV_POLEARM
:

992 
TV_SWORD
: 
TV_DIGGING
: 
TV_SPIKE
:

993 
¶Ÿ
 = 
INVEN_WIELD
; ;

994 
TV_LIGHT
: 
¶Ÿ
 = 
INVEN_LIGHT
; ;

995 
TV_BOOTS
: 
¶Ÿ
 = 
INVEN_FEET
; ;

996 
TV_GLOVES
: 
¶Ÿ
 = 
INVEN_HANDS
; ;

997 
TV_CLOAK
: 
¶Ÿ
 = 
INVEN_OUTER
; ;

998 
TV_HELM
: 
¶Ÿ
 = 
INVEN_HEAD
; ;

999 
TV_SHIELD
: 
¶Ÿ
 = 
INVEN_ARM
; ;

1000 
TV_HARD_ARMOR
: 
TV_SOFT_ARMOR
:

1001 
¶Ÿ
 = 
INVEN_BODY
; ;

1002 
TV_AMULET
: 
¶Ÿ
 = 
INVEN_NECK
; ;

1003 
TV_RING
:

1004 i‡(
övít‹y
[
INVEN_RIGHT
].
tvÆ
 =
TV_NOTHING
)

1005 
¶Ÿ
 = 
INVEN_RIGHT
;

1006 i‡(
övít‹y
[
INVEN_LEFT
].
tvÆ
 =
TV_NOTHING
)

1007 
¶Ÿ
 = 
INVEN_LEFT
;

1010 
¶Ÿ
 = 0;

1014 i‡(!
	`gë_com
(

1015 "Puàrög o¿which h™d (l/r/L/R)?", &
quîy
))

1017 
ôem
 = -1;

1018 
¶Ÿ
 = -1;

1020 i‡(
quîy
 == 'l')

1021 
¶Ÿ
 = 
INVEN_LEFT
;

1022 i‡(
quîy
 == 'r')

1023 
¶Ÿ
 = 
INVEN_RIGHT
;

1026 i‡(
quîy
 == 'L')

1027 
¶Ÿ
 = 
INVEN_LEFT
;

1028 i‡(
quîy
 == 'R')

1029 
¶Ÿ
 = 
INVEN_RIGHT
;

1031 
	`bñl
();

1032 i‡(
¶Ÿ
 && !
	`vîify
("Replace", slot))

1033 
¶Ÿ
 = 0;

1036 
¶Ÿ
 == 0);

1040 
	`msg_¥öt
("IMPOSSIBLE: I don't see how you can useÅhat.");

1041 
ôem
 = -1;

1044 i‡(
ôem
 >0 && 
övít‹y
[
¶Ÿ
].
tvÆ
 !
TV_NOTHING
)

1046 #ifde‡
ATARIST_MWC


1047 i‡((
hﬁdî
 = 
TR_CURSED
Ë& 
övít‹y
[
¶Ÿ
].
Êags
)

1049 i‡(
TR_CURSED
 & 
övít‹y
[
¶Ÿ
].
Êags
)

1052 
	`objdes
(
¥t1
, &
övít‹y
[
¶Ÿ
], 
FALSE
);

1053 (Ë
	`•rötf
(
¥t2
, "Thê%†youáª ", 
¥t1
);

1054 i‡(
¶Ÿ
 =
INVEN_HEAD
)

1055 (Ë
	`°rˇt
(
¥t2
, "wielding ");

1057 (Ë
	`°rˇt
(
¥t2
, "wearing ");

1058 
	`msg_¥öt
(
	`°rˇt
(
¥t2
, "appearsÅo be cursed."));

1059 
ôem
 = -1;

1061 i‡(
övít‹y
[
ôem
].
subvÆ
 =
ITEM_GROUP_MIN
 &&

1062 
övít‹y
[
ôem
].
numbî
 > 1 &&

1063 !
	`öví_check_num
(&
övít‹y
[
¶Ÿ
]))

1067 
	`msg_¥öt
("You will haveÅo drop something first.");

1068 
ôem
 = -1;

1071 i‡(
ôem
 >= 0)

1074 
‰ì_tu∫_Êag
 = 
FALSE
;

1077 
tmp_obj
 = 
övít‹y
[
ôem
];

1078 
i_±r
 = &
tmp_obj
;

1080 
wór_high
--;

1082 i‡(
i_±r
->
numbî
 > 1

1083 && 
i_±r
->
subvÆ
 <
ITEM_SINGLE_STACK_MAX
)

1085 
i_±r
->
numbî
 = 1;

1086 
wór_high
++;

1088 
öví_weight
 +
i_±r
->
weight
*i_±r->
numbî
;

1089 
	`öví_de°roy
(
ôem
);

1093 
i_±r
 = &
övít‹y
[
¶Ÿ
];

1094 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

1096 
tmp2
 = 
öví_˘r
;

1097 
tmp
 = 
	`öví_ˇºy
(
i_±r
);

1101 i‡(
öví_˘r
 !
tmp2
)

1102 
wór_high
++;

1103 
	`èkeoff
(
¶Ÿ
, 
tmp
);

1107 *
i_±r
 = 
tmp_obj
;

1108 
equù_˘r
++;

1109 
	`py_b⁄u£s
(
i_±r
, 1);

1110 i‡(
¶Ÿ
 =
INVEN_WIELD
)

1111 
°rög
 = "Youáre wielding";

1112 i‡(
¶Ÿ
 =
INVEN_LIGHT
)

1113 
°rög
 = "YourÜight source is";

1115 
°rög
 = "Youáre wearing";

1116 
	`objdes
(
¥t2
, 
i_±r
, 
TRUE
);

1118 
tmp
 = 
INVEN_WIELD
;

1119 
ôem
 = 0;

1120 
tmp
 !
¶Ÿ
)

1121 i‡(
övít‹y
[
tmp
++].
tvÆ
 !
TV_NOTHING
)

1122 
ôem
++;

1124 (Ë
	`•rötf
(
¥t1
, "%†%†(%c)", 
°rög
, 
¥t2
,

1125 'a'+
ôem
);

1126 
	`msg_¥öt
(
¥t1
);

1128 i‡(
¶Ÿ
 =
INVEN_WIELD
)

1129 
wóp⁄_hóvy
 = 
FALSE
;

1130 
	`check_°ªngth
();

1131 #ifde‡
ATARIST_MWC


1132 i‡(
i_±r
->
Êags
 & (
hﬁdî
 = 
TR_CURSED
))

1134 i‡(
i_±r
->
Êags
 & 
TR_CURSED
)

1137 
	`msg_¥öt
("Oops! It feels deathly cold!");

1138 
	`add_ös¸ibe
(
i_±r
, 
ID_DAMD
);

1141 
i_±r
->
co°
 = -1;

1147 i‡(
övít‹y
[
ôem
].
numbî
 > 1)

1149 
	`objdes
(
¥t1
, &
övít‹y
[
ôem
], 
TRUE
);

1150 
¥t1
[
	`°æí
(prt1)-1] = '?';

1151 (Ë
	`•rötf
(
¥t2
, "Dr›áŒ %†[y/n]", 
¥t1
);

1152 
¥t1
[
	`°æí
(prt1)-1] = '.';

1153 
	`¥t
(
¥t2
, 0, 0);

1154 
quîy
 = 
	`ökey
();

1155 i‡(
quîy
 != 'y' && query != 'n')

1157 i‡(
quîy
 !
ESCAPE
)

1158 
	`bñl
();

1159 
	`îa£_löe
(
MSG_LINE
, 0);

1160 
ôem
 = -1;

1163 i‡(
	`isuµî
(()
which
Ë&& !
	`vîify
(
¥om±
, 
ôem
))

1164 
ôem
 = -1;

1166 
quîy
 = 'y';

1167 i‡(
ôem
 >= 0)

1169 
‰ì_tu∫_Êag
 = 
FALSE
;

1170 
	`öví_dr›
(
ôem
, 
quîy
 == 'y');

1171 
	`check_°ªngth
();

1173 
£À˘ög
 = 
FALSE
;

1176 i‡(
öví_˘r
 =0 && 
equù_˘r
 == 0)

1177 
öví_weight
 = 0;

1179 i‡(
‰ì_tu∫_Êag
 =
FALSE
 && 
s¸_°©e
 =
BLANK_SCR
)

1180 
£À˘ög
 = 
FALSE
;

1185 i‡(
which
 =
ESCAPE
 || 
s¸_°©e
 =
BLANK_SCR
)

1186 
comm™d
 = 
ESCAPE
;

1187 i‡(!
‰ì_tu∫_Êag
)

1190 i‡(
£À˘ög
)

1191 
doög_öví
 = 
comm™d
;

1193 
doög_öví
 = ' ';

1195 
	`msg_¥öt
(
CNIL
);

1196 
s¸ìn_ch™ge
 = 
FALSE
;

1197 
comm™d
 = 
ESCAPE
;

1202 i‡(
s¸_°©e
 =
INVEN_SCR
)

1204 i‡(! 
show_weight_Êag
 || 
öví_˘r
 == 0)

1205 (Ë
	`•rötf
(
¥t1
,

1207 
öví_weight
 / 10, inven_weight % 10,

1208 (
öví_˘r
 == 0 ? "nothing." : "-"));

1210 (Ë
	`•rötf
 (
¥t1
,

1212 
öví_weight
 / 10, inven_weight % 10,

1213 
	`weight_limô
 () / 10, weight_limit () % 10,

1215 
	`¥t
(
¥t1
, 0, 0);

1217 i‡(
s¸_°©e
 =
WEAR_SCR
)

1219 i‡(
wór_high
 < 
wór_low
)

1220 
	`¥t
("You haveÇothing you could wield.", 0, 0);

1222 
	`¥t
("You could wield -", 0, 0);

1224 i‡(
s¸_°©e
 =
EQUIP_SCR
)

1226 i‡(
equù_˘r
 == 0)

1227 
	`¥t
("YouáreÇot usingánything.", 0, 0);

1229 
	`¥t
("Youáre using -", 0, 0);

1232 
	`¥t
("Allowed commands:", 0, 0);

1233 
	`îa£_löe
(
s¸_ba£
, 
s¸_À·
);

1234 
	`put_buf„r
("e/i/t/w/x/d/?/ESC:", 
s¸_ba£
, 60);

1235 
comm™d
 = 
	`ökey
();

1236 
	`îa£_löe
(
s¸_ba£
, 
s¸_À·
);

1239 
comm™d
 !
ESCAPE
);

1240 i‡(
s¸_°©e
 !
BLANK_SCR
)

1241 
	`ª°‹e_s¸ìn
();

1242 
	`ˇlc_b⁄u£s
();

1243 
	}
}

1247 
	$gë_ôem
(
com_vÆ
, 
pmt
, 
i
, 
j
, 
mask
, 
mesßge
)

1248 *
com_vÆ
;

1249 *
pmt
;

1250 
i
, 
j
;

1251 *
mask
;

1252 *
mesßge
;

1254 
vty≥
 
out_vÆ
;

1255 
which
;

1256 
ã°_Êag
, 
ôem
;

1257 
fuŒ
, 
i_s¸
, 
ªdøw
;

1259 
ôem
 = 
FALSE
;

1260 
ªdøw
 = 
FALSE
;

1261 *
com_vÆ
 = 0;

1262 
i_s¸
 = 1;

1263 i‡(
j
 > 
INVEN_WIELD
)

1265 
fuŒ
 = 
TRUE
;

1266 i‡(
öví_˘r
 == 0)

1268 
i_s¸
 = 0;

1269 
j
 = 
equù_˘r
 - 1;

1272 
j
 = 
öví_˘r
 - 1;

1275 
fuŒ
 = 
FALSE
;

1277 i‡(
öví_˘r
 > 0 || (
fuŒ
 && 
equù_˘r
 > 0))

1281 i‡(
ªdøw
)

1283 i‡(
i_s¸
 > 0)

1284 (Ë
	`show_öví
 (
i
, 
j
, 
FALSE
, 80, 
mask
);

1286 (Ë
	`show_equù
 (
FALSE
, 80);

1288 i‡(
fuŒ
)

1289 (Ë
	`•rötf
(
out_vÆ
,

1291 (
i_s¸
 > 0 ? "Inví" : "Equù"), 
i
+'a', 
j
+'a',

1292 (
i_s¸
 > 0 ? " 0-9," : ""),

1293 (
ªdøw
 ? "" : " *Åo see,"),

1294 (
i_s¸
 > 0 ? "Equù" : "Inví"), 
pmt
);

1296 (Ë
	`•rötf
(
out_vÆ
,

1298 
i
+'a', 
j
+'a',

1299 (
i_s¸
 > 0 ? " 0-9," : ""),

1300 (
ªdøw
 ? "" : " * f‹ invít‹yÜi°,"), 
pmt
);

1301 
ã°_Êag
 = 
FALSE
;

1302 
	`¥t
(
out_vÆ
, 0, 0);

1305 
which
 = 
	`ökey
();

1306 
which
)

1308 
ESCAPE
:

1309 
ã°_Êag
 = 
TRUE
;

1310 
‰ì_tu∫_Êag
 = 
TRUE
;

1311 
i_s¸
 = -1;

1314 i‡(
fuŒ
)

1316 i‡(
i_s¸
 > 0)

1318 i‡(
equù_˘r
 == 0)

1320 
	`¥t
("But you'reÇot usingánything -more-",0,0);

1321 (Ë
	`ökey
();

1325 
i_s¸
 = 0;

1326 
ã°_Êag
 = 
TRUE
;

1327 i‡(
ªdøw
)

1329 
j
 = 
equù_˘r
;

1330 
j
 < 
öví_˘r
)

1332 
j
++;

1333 
	`îa£_löe
(
j
, 0);

1336 
j
 = 
equù_˘r
 - 1;

1338 
	`¥t
(
out_vÆ
, 0, 0);

1342 i‡(
öví_˘r
 == 0)

1344 
	`¥t
("But you'reÇot carryingánything -more-",0,0);

1345 (Ë
	`ökey
();

1349 
i_s¸
 = 1;

1350 
ã°_Êag
 = 
TRUE
;

1351 i‡(
ªdøw
)

1353 
j
 = 
öví_˘r
;

1354 
j
 < 
equù_˘r
)

1356 
j
++;

1357 
	`îa£_löe
 (
j
, 0);

1360 
j
 = 
öví_˘r
 - 1;

1366 i‡(!
ªdøw
)

1368 
ã°_Êag
 = 
TRUE
;

1369 
	`ßve_s¸ìn
();

1370 
ªdøw
 = 
TRUE
;

1374 i‡((
which
 >'0'Ë&& (which <'9'Ë&& (
i_s¸
 != 0))

1377 
m
;

1378 
m
 = 
i
;

1379 (
m
 < 
INVEN_WIELD
)

1380 && ((
övít‹y
[
m
].
ös¸ù
[0] !
which
)

1381 || (
övít‹y
[
m
].
ös¸ù
[1] != '\0'));

1382 
m
++);

1383 i‡(
m
 < 
INVEN_WIELD
)

1384 *
com_vÆ
 = 
m
;

1386 *
com_vÆ
 = -1;

1388 i‡(
	`isuµî
(()
which
))

1389 *
com_vÆ
 = 
which
 - 'A';

1391 *
com_vÆ
 = 
which
 - 'a';

1392 i‡((*
com_vÆ
 >
i
Ë&& (*com_vÆ <
j
)

1393 && (
mask
 =
CNIL
 || mask[*
com_vÆ
]))

1395 i‡(
i_s¸
 == 0)

1397 
i
 = 21;

1398 
j
 = *
com_vÆ
;

1401 
övít‹y
[++
i
].
tvÆ
 =
TV_NOTHING
);

1402 
j
--;

1404 
j
 >= 0);

1405 *
com_vÆ
 = 
i
;

1407 i‡(
	`isuµî
(()
which
Ë&& !
	`vîify
("Try", *
com_vÆ
))

1409 
ã°_Êag
 = 
TRUE
;

1410 
‰ì_tu∫_Êag
 = 
TRUE
;

1411 
i_s¸
 = -1;

1414 
ã°_Êag
 = 
TRUE
;

1415 
ôem
 = 
TRUE
;

1416 
i_s¸
 = -1;

1418 i‡(
mesßge
)

1420 
	`msg_¥öt
 (
mesßge
);

1422 
ã°_Êag
 = 
TRUE
;

1425 
	`bñl
();

1429 !
ã°_Êag
);

1431 
i_s¸
 >= 0);

1432 i‡(
ªdøw
)

1433 
	`ª°‹e_s¸ìn
();

1434 
	`îa£_löe
(
MSG_LINE
, 0);

1437 
	`¥t
("YouáreÇot carryingánything.", 0, 0);

1438 (
ôem
);

1439 
	}
}

1446 
	$no_light
()

1448 
ˇve_ty≥
 *
c_±r
;

1450 
c_±r
 = &
ˇve
[
ch¨_row
][
ch¨_cﬁ
];

1451 i‡(!
c_±r
->
é
 && !c_±r->
∂
)

1452  
TRUE
;

1453  
FALSE
;

1454 
	}
}

1458 
	$m≠_roguedú
(
comvÆ
)

1459 
comvÆ
;

1461 
comvÆ
)

1464 
comvÆ
 = '4';

1467 
comvÆ
 = '7';

1470 
comvÆ
 = '8';

1473 
comvÆ
 = '9';

1476 
comvÆ
 = '6';

1479 
comvÆ
 = '3';

1482 
comvÆ
 = '2';

1485 
comvÆ
 = '1';

1488 
comvÆ
 = '5';

1491 (
comvÆ
);

1492 
	}
}

1497 
	$gë_dú
(
¥om±
, 
dú
)

1498 *
¥om±
;

1499 *
dú
;

1501 
comm™d
;

1502 
ßve
;

1503 
¥ev_dú
;

1505 i‡(
deÁu…_dú
)

1507 *
dú
 = 
¥ev_dú
;

1508  
TRUE
;

1510 i‡(
¥om±
 =
CNIL
)

1511 
¥om±
 = "Which direction?";

1514 
ßve
 = 
comm™d_cou¡
;

1515 #ifde‡
MAC


1516 i‡(!
	`gë_comdú
(
¥om±
, &
comm™d
))

1518 i‡(!
	`gë_com
(
¥om±
, &
comm™d
))

1521 
‰ì_tu∫_Êag
 = 
TRUE
;

1522  
FALSE
;

1524 
comm™d_cou¡
 = 
ßve
;

1525 i‡(
rogue_like_comm™ds
)

1526 
comm™d
 = 
	`m≠_roguedú
(command);

1527 i‡(
comm™d
 >= '1' && command <= '9' && command != '5')

1529 
¥ev_dú
 = 
comm™d
 - '0';

1530 *
dú
 = 
¥ev_dú
;

1531  
TRUE
;

1533 
	`bñl
();

1535 
	}
}

1541 
	$gë_Ældú
(
¥om±
, 
dú
)

1542 *
¥om±
;

1543 *
dú
;

1545 
comm™d
;

1549 #ifde‡
MAC


1550 i‡(!
	`gë_comdú
(
¥om±
, &
comm™d
))

1552 i‡(!
	`gë_com
(
¥om±
, &
comm™d
))

1555 
‰ì_tu∫_Êag
 = 
TRUE
;

1556  
FALSE
;

1558 i‡(
rogue_like_comm™ds
)

1559 
comm™d
 = 
	`m≠_roguedú
(command);

1560 i‡(
comm™d
 >= '1' && command <= '9')

1562 *
dú
 = 
comm™d
 - '0';

1563  
TRUE
;

1565 
	`bñl
();

1567 
	}
}

1571 
	$move_ªc
(
y1
, 
x1
, 
y2
, 
x2
)

1572 
y1
, 
x1
, 
y2
, 
x2
;

1574 
tmp
;

1577 
tmp
 = 
ˇve
[
y1
][
x1
].
˝å
;

1578 
ˇve
[
y1
][
x1
].
˝å
 = 0;

1579 
ˇve
[
y2
][
x2
].
˝å
 = 
tmp
;

1580 
	}
}

1584 
	$light_room
(
y
, 
x
)

1585 
y
, 
x
;

1587 
i
, 
j
, 
°¨t_cﬁ
, 
íd_cﬁ
;

1588 
tmp1
, 
tmp2
, 
°¨t_row
, 
íd_row
;

1589 
ˇve_ty≥
 *
c_±r
;

1590 
tvÆ
;

1592 
tmp1
 = (
SCREEN_HEIGHT
/2);

1593 
tmp2
 = (
SCREEN_WIDTH
 /2);

1594 
°¨t_row
 = (
y
/
tmp1
)*tmp1;

1595 
°¨t_cﬁ
 = (
x
/
tmp2
)*tmp2;

1596 
íd_row
 = 
°¨t_row
 + 
tmp1
 - 1;

1597 
íd_cﬁ
 = 
°¨t_cﬁ
 + 
tmp2
 - 1;

1598 
i
 = 
°¨t_row
; i <
íd_row
; i++)

1599 
j
 = 
°¨t_cﬁ
; j <
íd_cﬁ
; j++)

1601 
c_±r
 = &
ˇve
[
i
][
j
];

1602 i‡(
c_±r
->
Ã
 && ! c_±r->
∂
)

1604 
c_±r
->
∂
 = 
TRUE
;

1605 i‡(
c_±r
->
fvÆ
 =
DARK_FLOOR
)

1606 
c_±r
->
fvÆ
 = 
LIGHT_FLOOR
;

1607 i‡(! 
c_±r
->
fm
 && c_±r->
çå
 != 0)

1609 
tvÆ
 = 
t_li°
[
c_±r
->
çå
].tval;

1610 i‡(
tvÆ
 >
TV_MIN_VISIBLE
 &&ÅvÆ <
TV_MAX_VISIBLE
)

1611 
c_±r
->
fm
 = 
TRUE
;

1613 
	`¥öt
(
	`loc_symbﬁ
(
i
, 
j
), i, j);

1616 
	}
}

1620 
	$lôe_•Ÿ
(
y
, 
x
)

1621 
y
, 
x
;

1623 i‡(
	`∑√l_c⁄èös
(
y
, 
x
))

1624 
	`¥öt
(
	`loc_symbﬁ
(
y
, 
x
), y, x);

1625 
	}
}

1630 
	$sub1_move_light
(
y1
, 
x1
, 
y2
, 
x2
)

1631 
x1
, 
x2
;

1632 
y1
, 
y2
;

1634 
i
, 
j
;

1635 
ˇve_ty≥
 *
c_±r
;

1636 
tvÆ
, 
t›
, 
À·
, 
bŸtom
, 
right
;

1638 i‡(
light_Êag
)

1640 
i
 = 
y1
-1; i <= y1+1; i++)

1641 
j
 = 
x1
-1; j <= x1+1; j++)

1642 
ˇve
[
i
][
j
].
é
 = 
FALSE
;

1643 i‡(
föd_Êag
 && !
föd_¥£lf
)

1644 
light_Êag
 = 
FALSE
;

1646 i‡(!
föd_Êag
 || 
föd_¥£lf
)

1647 
light_Êag
 = 
TRUE
;

1649 
i
 = 
y2
-1; i <= y2+1; i++)

1650 
j
 = 
x2
-1; j <= x2+1; j++)

1652 
c_±r
 = &
ˇve
[
i
][
j
];

1654 i‡(
light_Êag
)

1655 
c_±r
->
é
 = 
TRUE
;

1656 i‡(
c_±r
->
fvÆ
 >
MIN_CAVE_WALL
)

1657 
c_±r
->
∂
 = 
TRUE
;

1658 i‡(!
c_±r
->
fm
 && c_±r->
çå
 != 0)

1660 
tvÆ
 = 
t_li°
[
c_±r
->
çå
].tval;

1661 i‡((
tvÆ
 >
TV_MIN_VISIBLE
Ë&& (tvÆ <
TV_MAX_VISIBLE
))

1662 
c_±r
->
fm
 = 
TRUE
;

1667 i‡(
y1
 < 
y2
)

1669 
t›
 = 
y1
 - 1;

1670 
bŸtom
 = 
y2
 + 1;

1674 
t›
 = 
y2
 - 1;

1675 
bŸtom
 = 
y1
 + 1;

1677 i‡(
x1
 < 
x2
)

1679 
À·
 = 
x1
 - 1;

1680 
right
 = 
x2
 + 1;

1684 
À·
 = 
x2
 - 1;

1685 
right
 = 
x1
 + 1;

1687 
i
 = 
t›
; i <
bŸtom
; i++)

1688 
j
 = 
À·
; j <
right
; j++)

1689 
	`¥öt
(
	`loc_symbﬁ
(
i
, 
j
), i, j);

1690 
	}
}

1695 
	$sub3_move_light
(
y1
, 
x1
, 
y2
, 
x2
)

1696 
y1
, 
x1
;

1697 
y2
, 
x2
;

1699 
i
, 
j
;

1701 i‡(
light_Êag
)

1703 
i
 = 
y1
-1; i <= y1+1; i++)

1704 
j
 = 
x1
-1; j <= x1+1; j++)

1706 
ˇve
[
i
][
j
].
é
 = 
FALSE
;

1707 
	`¥öt
(
	`loc_symbﬁ
(
i
, 
j
), i, j);

1709 
light_Êag
 = 
FALSE
;

1711 i‡(!
föd_Êag
 || 
föd_¥£lf
)

1712 
	`¥öt
(
	`loc_symbﬁ
(
y1
, 
x1
), y1, x1);

1714 i‡(!
föd_Êag
 || 
föd_¥£lf
)

1715 
	`¥öt
('@', 
y2
, 
x2
);

1716 
	}
}

1721 
	$move_light
(
y1
, 
x1
, 
y2
, 
x2
)

1722 
y1
, 
x1
, 
y2
, 
x2
;

1724 i‡(
py
.
Êags
.
blöd
 > 0 || !
∂ayî_light
)

1725 
	`sub3_move_light
(
y1
, 
x1
, 
y2
, 
x2
);

1727 
	`sub1_move_light
(
y1
, 
x1
, 
y2
, 
x2
);

1728 
	}
}

1734 
	$di°urb
(
s
, 
l
)

1735 
s
, 
l
;

1737 
comm™d_cou¡
 = 0;

1738 i‡(
s
 && (
py
.
Êags
.
°©us
 & 
PY_SEARCH
))

1739 
	`£¨ch_off
();

1740 i‡(
py
.
Êags
.
ª°
 != 0)

1741 
	`ª°_off
();

1742 i‡(
l
 || 
föd_Êag
)

1744 
föd_Êag
 = 
FALSE
;

1745 
	`check_võw
();

1747 
	`Êush
();

1748 
	}
}

1752 
	$£¨ch_⁄
()

1754 
	`ch™ge_•ìd
(1);

1755 
py
.
Êags
.
°©us
 |
PY_SEARCH
;

1756 
	`¥t_°©e
();

1757 
	`¥t_•ìd
();

1758 
py
.
Êags
.
food_dige°ed
++;

1759 
	}
}

1761 
	$£¨ch_off
()

1763 #ifde‡
ATARIST_MWC


1764 
öt32u
 
hﬁdî
;

1767 
	`check_võw
();

1768 
	`ch™ge_•ìd
(-1);

1769 #ifde‡
ATARIST_MWC


1770 
py
.
Êags
.
°©us
 &~(
hﬁdî
 = 
PY_SEARCH
);

1772 
py
.
Êags
.
°©us
 &~
PY_SEARCH
;

1774 
	`¥t_°©e
();

1775 
	`¥t_•ìd
();

1776 
py
.
Êags
.
food_dige°ed
--;

1777 
	}
}

1781 
	$ª°
()

1783 
ª°_num
;

1784 
vty≥
 
ª°_°r
;

1786 i‡(
comm™d_cou¡
 > 0)

1788 
ª°_num
 = 
comm™d_cou¡
;

1789 
comm™d_cou¡
 = 0;

1793 
	`¥t
("Rest for howÜong? ", 0, 0);

1794 
ª°_num
 = 0;

1795 i‡(
	`gë_°rög
(
ª°_°r
, 0, 19, 5))

1797 i‡(
ª°_°r
[0] == '*')

1798 
ª°_num
 = -
MAX_SHORT
;

1800 
ª°_num
 = 
	`©oi
(
ª°_°r
);

1805 i‡((
ª°_num
 =-
MAX_SHORT
)

1806 || (
ª°_num
 > 0Ë&& (ª°_num < 
MAX_SHORT
))

1808 i‡(
py
.
Êags
.
°©us
 & 
PY_SEARCH
)

1809 
	`£¨ch_off
();

1810 
py
.
Êags
.
ª°
 = 
ª°_num
;

1811 
py
.
Êags
.
°©us
 |
PY_REST
;

1812 
	`¥t_°©e
();

1813 
py
.
Êags
.
food_dige°ed
--;

1814 
	`¥t
 ("Pressány keyÅo stopÑesting...", 0, 0);

1815 
	`put_qio
();

1819 i‡(
ª°_num
 != 0)

1820 
	`msg_¥öt
 ("InvalidÑest count.");

1821 
	`îa£_löe
(
MSG_LINE
, 0);

1822 
‰ì_tu∫_Êag
 = 
TRUE
;

1824 
	}
}

1826 
	$ª°_off
()

1828 #ifde‡
ATARIST_MWC


1829 
öt32u
 
hﬁdî
;

1832 
py
.
Êags
.
ª°
 = 0;

1833 #ifde‡
ATARIST_MWC


1834 
py
.
Êags
.
°©us
 &~(
hﬁdî
 = 
PY_REST
);

1836 
py
.
Êags
.
°©us
 &~
PY_REST
;

1838 
	`¥t_°©e
();

1839 
	`msg_¥öt
(
CNIL
);

1840 
py
.
Êags
.
food_dige°ed
++;

1841 
	}
}

1845 
	$ã°_hô
(
bth
, 
Àvñ
, 
±h
, 
ac
, 
©èck_ty≥
)

1846 
bth
, 
Àvñ
, 
±h
, 
ac
, 
©èck_ty≥
;

1848 
i
, 
dõ
;

1850 
	`di°urb
 (1, 0);

1851 
i
 = 
bth
 + 
±h
 * 
BTH_PLUS_ADJ


1852 + (
Àvñ
 * 
˛ass_Àvñ_adj
[
py
.
misc
.
p˛ass
][
©èck_ty≥
]);

1855 
dõ
 = 
	`øndöt
 (20);

1856 i‡((
dõ
 != 1) && ((die == 20)

1857 || ((
i
 > 0Ë&& (
	`øndöt
 (iË> 
ac
))))

1858  
TRUE
;

1860  
FALSE
;

1861 
	}
}

1866 
	$èke_hô
(
damage
, 
hô_‰om
)

1867 
damage
;

1868 *
hô_‰om
;

1870 i‡(
py
.
Êags
.
övu 
 > 0Ë
damage
 = 0;

1871 
py
.
misc
.
chp
 -
damage
;

1872 i‡(
py
.
misc
.
chp
 < 0)

1874 i‡(!
dóth
)

1876 
dóth
 = 
TRUE
;

1877 (Ë
	`°r˝y
(
dõd_‰om
, 
hô_‰om
);

1878 
tŸÆ_wö√r
 = 
FALSE
;

1880 
√w_Àvñ_Êag
 = 
TRUE
;

1883 
	`¥t_chp
();

1884 
	}
}

	@moria2.c

9 
	~<°dio.h
>

11 
	~"c⁄fig.h
"

12 
	~"c⁄°™t.h
"

13 
	~"ty≥s.h
"

14 
	~"exã∫s.h
"

16 #i‡
deföed
(
LINT_ARGS
)

17 
£e_wÆl
(, , );

18 
£e_nŸhög
(, , );

20 
£e_wÆl
();

26 
	$ch™ge_å≠
(
y
, 
x
)

27 
y
, 
x
;

29 
ˇve_ty≥
 *
c_±r
;

30 
öví_ty≥
 *
t_±r
;

32 
c_±r
 = &
ˇve
[
y
][
x
];

33 
t_±r
 = &
t_li°
[
c_±r
->
çå
];

34 i‡(
t_±r
->
tvÆ
 =
TV_INVIS_TRAP
)

36 
t_±r
->
tvÆ
 = 
TV_VIS_TRAP
;

37 
	`lôe_•Ÿ
(
y
, 
x
);

39 i‡(
t_±r
->
tvÆ
 =
TV_SECRET_DOOR
)

42 
t_±r
->
ödex
 = 
OBJ_CLOSED_DOOR
;

43 
t_±r
->
tvÆ
 = 
obje˘_li°
[
OBJ_CLOSED_DOOR
].tval;

44 
t_±r
->
tch¨
 = 
obje˘_li°
[
OBJ_CLOSED_DOOR
].tchar;

45 
	`lôe_•Ÿ
(
y
, 
x
);

47 
	}
}

51 
	$£¨ch
(
y
, 
x
, 
ch™˚
)

52 
y
, 
x
, 
ch™˚
;

54 
i
, 
j
;

55 
ˇve_ty≥
 *
c_±r
;

56 
öví_ty≥
 *
t_±r
;

57 
Êags
 *
p_±r
;

58 
bigvty≥
 
tmp_°r
, 
tmp_°r2
;

60 
p_±r
 = &
py
.
Êags
;

61 i‡(
p_±r
->
c⁄fu£d
 > 0)

62 
ch™˚
 = chance / 10;

63 i‡((
p_±r
->
blöd
 > 0Ë|| 
	`no_light
())

64 
ch™˚
 = chance / 10;

65 i‡(
p_±r
->
image
 > 0)

66 
ch™˚
 = chance / 10;

67 
i
 = (
y
 - 1); i <= (y + 1); i++)

68 
j
 = (
x
 - 1); j <= (x + 1); j++)

69 i‡(
	`øndöt
(100Ë< 
ch™˚
)

71 
c_±r
 = &
ˇve
[
i
][
j
];

73 i‡(
c_±r
->
çå
 != 0)

75 
t_±r
 = &
t_li°
[
c_±r
->
çå
];

77 i‡(
t_±r
->
tvÆ
 =
TV_INVIS_TRAP
)

79 
	`objdes
(
tmp_°r2
, 
t_±r
, 
TRUE
);

80 (Ë
	`•rötf
(
tmp_°r
,"You havêfound %s",
tmp_°r2
);

81 
	`msg_¥öt
(
tmp_°r
);

82 
	`ch™ge_å≠
(
i
, 
j
);

83 
	`íd_föd
();

86 i‡(
t_±r
->
tvÆ
 =
TV_SECRET_DOOR
)

88 
	`msg_¥öt
("You have foundá secret door.");

89 
	`ch™ge_å≠
(
i
, 
j
);

90 
	`íd_föd
();

93 i‡(
t_±r
->
tvÆ
 =
TV_CHEST
)

96 i‡((
t_±r
->
Êags
 & 
CH_TRAPPED
) > 1)

97 i‡(!
	`known2_p
(
t_±r
))

99 
	`known2
(
t_±r
);

100 
	`msg_¥öt
("You have discoveredáÅrap onÅhe chest!");

103 
	`msg_¥öt
("The chest isÅrapped!");

107 
	}
}

227 
	gcy˛e
[] = { 1, 2, 3, 6, 9, 8, 7, 4, 1, 2, 3, 6, 9, 8, 7, 4, 1 };

228 
	gchome
[] = { -1, 8, 9, 10, 7, -1, 11, 6, 5, 4 };

229 
	gföd_›í¨ó
, 
	gföd_bªakright
, 
	gföd_bªakÀ·
, 
	gföd_¥evdú
;

230 
	gföd_dúe˘i⁄
;

232 
	$föd_öô
(
dú
)

233 
dú
;

235 
row
, 
cﬁ
, 
dì∂e·
, 
dì¥ight
;

236 
i
, 
sh‹ée·
, 
sh‹åight
;

238 
row
 = 
ch¨_row
;

239 
cﬁ
 = 
ch¨_cﬁ
;

240 i‡(!
	`mmove
(
dú
, &
row
, &
cﬁ
))

241 
föd_Êag
 = 
FALSE
;

244 
föd_dúe˘i⁄
 = 
dú
;

245 
föd_Êag
 = 1;

246 
föd_bªakright
 = 
föd_bªakÀ·
 = 
FALSE
;

247 
föd_¥evdú
 = 
dú
;

248 i‡(
py
.
Êags
.
blöd
 < 1)

250 
i
 = 
chome
[
dú
];

251 
dì∂e·
 = 
dì¥ight
 = 
FALSE
;

252 
sh‹åight
 = 
sh‹ée·
 = 
FALSE
;

253 i‡(
	`£e_wÆl
(
cy˛e
[
i
+1], 
ch¨_row
, 
ch¨_cﬁ
))

255 
föd_bªakÀ·
 = 
TRUE
;

256 
sh‹ée·
 = 
TRUE
;

258 i‡(
	`£e_wÆl
(
cy˛e
[
i
+1], 
row
, 
cﬁ
))

260 
föd_bªakÀ·
 = 
TRUE
;

261 
dì∂e·
 = 
TRUE
;

263 i‡(
	`£e_wÆl
(
cy˛e
[
i
-1], 
ch¨_row
, 
ch¨_cﬁ
))

265 
föd_bªakright
 = 
TRUE
;

266 
sh‹åight
 = 
TRUE
;

268 i‡(
	`£e_wÆl
(
cy˛e
[
i
-1], 
row
, 
cﬁ
))

270 
föd_bªakright
 = 
TRUE
;

271 
dì¥ight
 = 
TRUE
;

273 i‡(
föd_bªakÀ·
 && 
föd_bªakright
)

275 
föd_›í¨ó
 = 
FALSE
;

276 i‡(
dú
 & 1)

278 i‡(
dì∂e·
 && !
dì¥ight
)

279 
föd_¥evdú
 = 
cy˛e
[
i
-1];

280 i‡(
dì¥ight
 && !
dì∂e·
)

281 
föd_¥evdú
 = 
cy˛e
[
i
+1];

286 i‡(
	`£e_wÆl
(
cy˛e
[
i
], 
row
, 
cﬁ
))

288 i‡(
sh‹ée·
 && !
sh‹åight
)

289 
föd_¥evdú
 = 
cy˛e
[
i
-2];

290 i‡(
sh‹åight
 && !
sh‹ée·
)

291 
föd_¥evdú
 = 
cy˛e
[
i
+2];

295 
föd_›í¨ó
 = 
TRUE
;

305 i‡(! 
light_Êag
 && ! 
föd_¥£lf
)

306 
	`¥öt
(
	`loc_symbﬁ
(
ch¨_row
, 
ch¨_cﬁ
), char_row, char_col);

308 
	`move_ch¨
(
dú
, 
TRUE
);

309 i‡(
föd_Êag
 =
FALSE
)

310 
comm™d_cou¡
 = 0;

311 
	}
}

313 
	$föd_run
()

316 i‡(
föd_Êag
++ > 100)

318 
	`msg_¥öt
("You stopÑunningÅo catch your breath.");

319 
	`íd_föd
();

322 
	`move_ch¨
(
föd_dúe˘i⁄
, 
TRUE
);

323 
	}
}

326 
	$íd_föd
()

328 i‡(
föd_Êag
)

330 
föd_Êag
 = 
FALSE
;

331 
	`move_light
(
ch¨_row
, 
ch¨_cﬁ
, char_row, char_col);

333 
	}
}

336 
	$£e_wÆl
(
dú
, 
y
, 
x
)

337 
dú
, 
y
, 
x
;

339 
c
;

341 i‡(!
	`mmove
(
dú
, &
y
, &
x
))

342  
TRUE
;

343 #ifde‡
MSDOS


344 i‡((
c
 = 
	`loc_symbﬁ
(
y
, 
x
)Ë=
wÆlsym
 || c == '%')

346 #ifde‡
ATARI_ST


347 i‡((
c
 = 
	`loc_symbﬁ
(
y
, 
x
)) == ()240 || c == '%')

349 i‡((
c
 = 
	`loc_symbﬁ
(
y
, 
x
)) == '#' || c == '%')

352  
TRUE
;

354  
FALSE
;

355 
	}
}

358 
	$£e_nŸhög
(
dú
, 
y
, 
x
)

359 
dú
, 
y
, 
x
;

361 i‡(!
	`mmove
(
dú
, &
y
, &
x
))

362  
FALSE
;

363 i‡(
	`loc_symbﬁ
(
y
, 
x
) == ' ')

364  
TRUE
;

366  
FALSE
;

367 
	}
}

371 
	$¨ó_af„˘
(
dú
, 
y
, 
x
)

372 
dú
, 
y
, 
x
;

374 
√wdú
, 
t
, 
öv
, 
check_dú
, 
row
, 
cﬁ
;

375 
i
, 
max
, 
›ti⁄
, 
›ti⁄2
;

376 
ˇve_ty≥
 *
c_±r
;

378 i‡(
py
.
Êags
.
blöd
 < 1)

380 
›ti⁄
 = 0;

381 
›ti⁄2
 = 0;

382 
dú
 = 
föd_¥evdú
;

383 
max
 = (
dú
 & 1) + 1;

385 
i
 = -
max
; i <= max; i++)

387 
√wdú
 = 
cy˛e
[
chome
[
dú
]+
i
];

388 
row
 = 
y
;

389 
cﬁ
 = 
x
;

390 i‡(
	`mmove
(
√wdú
, &
row
, &
cﬁ
))

393 
c_±r
 = &
ˇve
[
row
][
cﬁ
];

394 i‡(
∂ayî_light
 || 
c_±r
->
é
 || c_±r->
∂
 || c_±r->
fm
)

396 i‡(
c_±r
->
çå
 != 0)

398 
t
 = 
t_li°
[
c_±r
->
çå
].
tvÆ
;

399 i‡(
t
 !
TV_INVIS_TRAP
 &&Å !
TV_SECRET_DOOR


400 && (
t
 !
TV_OPEN_DOOR
 || !
föd_ign‹e_do‹s
))

402 
	`íd_föd
();

409 i‡(
c_±r
->
˝å
 > 1 && 
m_li°
[c_±r->˝å].
ml
)

411 
	`íd_föd
();

414 
öv
 = 
FALSE
;

417 
öv
 = 
TRUE
;

419 i‡(
c_±r
->
fvÆ
 <
MAX_OPEN_SPACE
 || 
öv
)

421 i‡(
föd_›í¨ó
)

424 i‡(
i
 < 0)

426 i‡(
föd_bªakright
)

428 
	`íd_föd
();

432 i‡(
i
 > 0)

434 i‡(
föd_bªakÀ·
)

436 
	`íd_föd
();

441 i‡(
›ti⁄
 == 0)

442 
›ti⁄
 = 
√wdú
;

443 i‡(
›ti⁄2
 != 0)

445 
	`íd_föd
();

448 i‡(
›ti⁄
 !
cy˛e
[
chome
[
dú
]+
i
-1])

450 
	`íd_föd
();

458 i‡((
√wdú
 & 1) == 1)

460 
check_dú
 = 
cy˛e
[
chome
[
dú
]+
i
-2];

461 
›ti⁄2
 = 
√wdú
;

465 
check_dú
 = 
cy˛e
[
chome
[
dú
]+
i
+1];

466 
›ti⁄2
 = 
›ti⁄
;

467 
›ti⁄
 = 
√wdú
;

471 i‡(
föd_›í¨ó
)

475 i‡(
i
 < 0)

477 i‡(
föd_bªakÀ·
)

479 
	`íd_föd
();

482 
föd_bªakright
 = 
TRUE
;

484 i‡(
i
 > 0)

486 i‡(
föd_bªakright
)

488 
	`íd_föd
();

491 
föd_bªakÀ·
 = 
TRUE
;

497 i‡(
föd_›í¨ó
 =
FALSE
)

499 i‡(
›ti⁄2
 =0 || (
föd_examöe
 && !
föd_cut
))

504 i‡(
›ti⁄
 != 0)

505 
föd_dúe˘i⁄
 = 
›ti⁄
;

506 i‡(
›ti⁄2
 == 0)

507 
föd_¥evdú
 = 
›ti⁄
;

509 
föd_¥evdú
 = 
›ti⁄2
;

514 
row
 = 
y
;

515 
cﬁ
 = 
x
;

516 (Ë
	`mmove
(
›ti⁄
, &
row
, &
cﬁ
);

517 i‡(!
	`£e_wÆl
(
›ti⁄
, 
row
, 
cﬁ
)

518 || !
	`£e_wÆl
(
check_dú
, 
row
, 
cﬁ
))

522 i‡(
föd_examöe
 && 
	`£e_nŸhög
(
›ti⁄
, 
row
, 
cﬁ
)

523 && 
	`£e_nŸhög
(
›ti⁄2
, 
row
, 
cﬁ
))

527 
föd_dúe˘i⁄
 = 
›ti⁄
;

528 
föd_¥evdú
 = 
›ti⁄2
;

532 
	`íd_föd
();

534 i‡(
föd_cut
)

537 
föd_dúe˘i⁄
 = 
›ti⁄2
;

538 
föd_¥evdú
 = 
›ti⁄2
;

544 
föd_dúe˘i⁄
 = 
›ti⁄
;

545 
föd_¥evdú
 = 
›ti⁄2
;

550 
	}
}

556 
	$möus_ac
(
typ_dam
)

557 
öt32u
 
typ_dam
;

559 
i
, 
j
;

560 
tmp
[6], 
möus
;

561 
öví_ty≥
 *
i_±r
;

562 
bigvty≥
 
out_vÆ
, 
tmp_°r
;

564 
i
 = 0;

565 i‡(
övít‹y
[
INVEN_BODY
].
tvÆ
 !
TV_NOTHING
)

567 
tmp
[
i
] = 
INVEN_BODY
;

568 
i
++;

570 i‡(
övít‹y
[
INVEN_ARM
].
tvÆ
 !
TV_NOTHING
)

572 
tmp
[
i
] = 
INVEN_ARM
;

573 
i
++;

575 i‡(
övít‹y
[
INVEN_OUTER
].
tvÆ
 !
TV_NOTHING
)

577 
tmp
[
i
] = 
INVEN_OUTER
;

578 
i
++;

580 i‡(
övít‹y
[
INVEN_HANDS
].
tvÆ
 !
TV_NOTHING
)

582 
tmp
[
i
] = 
INVEN_HANDS
;

583 
i
++;

585 i‡(
övít‹y
[
INVEN_HEAD
].
tvÆ
 !
TV_NOTHING
)

587 
tmp
[
i
] = 
INVEN_HEAD
;

588 
i
++;

591 i‡(
övít‹y
[
INVEN_FEET
].
tvÆ
 !
TV_NOTHING
)

593 
tmp
[
i
] = 
INVEN_FEET
;

594 
i
++;

596 
möus
 = 
FALSE
;

597 i‡(
i
 > 0)

599 
j
 = 
tmp
[
	`øndöt
(
i
) - 1];

600 
i_±r
 = &
övít‹y
[
j
];

601 i‡(
i_±r
->
Êags
 & 
typ_dam
)

603 
	`objdes
(
tmp_°r
, &
övít‹y
[
j
], 
FALSE
);

604 (Ë
	`•rötf
(
out_vÆ
, "You∏%†ªsi°†damage!", 
tmp_°r
);

605 
	`msg_¥öt
(
out_vÆ
);

606 
möus
 = 
TRUE
;

608 i‡((
i_±r
->
ac
+i_±r->
tﬂc
) > 0)

610 
	`objdes
(
tmp_°r
, &
övít‹y
[
j
], 
FALSE
);

611 (Ë
	`•rötf
(
out_vÆ
, "You∏%†i†damaged!", 
tmp_°r
);

612 
	`msg_¥öt
(
out_vÆ
);

613 
i_±r
->
tﬂc
--;

614 
	`ˇlc_b⁄u£s
();

615 
möus
 = 
TRUE
;

618 (
möus
);

619 
	}
}

623 
	$c‹rode_gas
(
kb_°r
)

624 *
kb_°r
;

626 #ifde‡
ATARIST_MWC


627 
öt32u
 
hﬁdî
;

630 #ifde‡
ATARIST_MWC


631 i‡(!
	`möus_ac
((
öt32u
Ë(
hﬁdî
 = 
TR_RES_ACID
)))

633 i‡(!
	`möus_ac
((
öt32u
Ë
TR_RES_ACID
))

635 
	`èke_hô
(
	`øndöt
(8), 
kb_°r
);

636 i‡(
	`öví_damage
(
£t_c‹rodes
, 5) > 0)

637 
	`msg_¥öt
("There isánácrid smell coming from yourÖack.");

638 
	}
}

642 
	$pois⁄_gas
(
dam
, 
kb_°r
)

643 
dam
;

644 *
kb_°r
;

646 
	`èke_hô
(
dam
, 
kb_°r
);

647 
py
.
Êags
.
pois⁄ed
 +12 + 
	`øndöt
(
dam
);

648 
	}
}

652 
	$fúe_dam
(
dam
, 
kb_°r
)

653 
dam
;

654 *
kb_°r
;

656 i‡(
py
.
Êags
.
fúe_ªsi°
)

657 
dam
 = dam / 3;

658 i‡(
py
.
Êags
.
ªsi°_hót
 > 0)

659 
dam
 = dam / 3;

660 
	`èke_hô
(
dam
, 
kb_°r
);

661 i‡(
	`öví_damage
(
£t_ÊammabÀ
, 3) > 0)

662 
	`msg_¥öt
("There is smoke coming from yourÖack!");

663 
	}
}

667 
	$cﬁd_dam
(
dam
, 
kb_°r
)

668 
dam
;

669 *
kb_°r
;

671 i‡(
py
.
Êags
.
cﬁd_ªsi°
)

672 
dam
 = dam / 3;

673 i‡(
py
.
Êags
.
ªsi°_cﬁd
 > 0)

674 
dam
 = dam / 3;

675 
	`èke_hô
(
dam
, 
kb_°r
);

676 i‡(
	`öví_damage
(
£t_‰o°_de°roy
, 5) > 0)

677 
	`msg_¥öt
("Something shatters inside yourÖack!");

678 
	}
}

682 
	$light_dam
(
dam
, 
kb_°r
)

683 
dam
;

684 *
kb_°r
;

686 i‡(
py
.
Êags
.
lght_ªsi°
)

687 
	`èke_hô
((
dam
 / 3), 
kb_°r
);

689 
	`èke_hô
(
dam
, 
kb_°r
);

690 i‡(
	`öví_damage
(
£t_lighäög_de°roy
, 3) > 0)

691 
	`msg_¥öt
("Thereáre sparks coming from yourÖack!");

692 
	}
}

696 
	$acid_dam
(
dam
, 
kb_°r
)

697 
dam
;

698 *
kb_°r
;

700 
Êag
;

701 #ifde‡
ATARIST_MWC


702 
öt32u
 
hﬁdî
;

705 
Êag
 = 0;

706 #ifde‡
ATARIST_MWC


707 i‡(
	`möus_ac
((
öt32u
Ë(
hﬁdî
 = 
TR_RES_ACID
)))

709 i‡(
	`möus_ac
((
öt32u
Ë
TR_RES_ACID
))

711 
Êag
 = 1;

712 i‡(
py
.
Êags
.
acid_ªsi°
)

713 
Êag
 += 2;

714 
	`èke_hô
 (
dam
 / (
Êag
 + 1), 
kb_°r
);

715 i‡(
	`öví_damage
(
£t_acid_af„˘
, 3) > 0)

716 
	`msg_¥öt
("There isánácrid smell coming from yourÖack!");

717 
	}
}

	@moria3.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

13 
	~"c⁄fig.h
"

14 
	~"c⁄°™t.h
"

15 
	~"ty≥s.h
"

16 
	~"exã∫s.h
"

18 #ifde‡
USG


19 #i‚de‡
ATARIST_MWC


20 
	~<°rög.h
>

23 
	~<°rögs.h
>

26 #i‡
deföed
(
LINT_ARGS
)

27 
hô_å≠
(, );

28 
ˇºy
(, , );

29 
summ⁄_obje˘
(, , , );

34 
	$hô_å≠
(
y
, 
x
)

35 
y
, 
x
;

37 
i
, 
ty
, 
tx
, 
num
, 
dam
;

38 
ˇve_ty≥
 *
c_±r
;

39 
misc
 *
p_±r
;

40 
öví_ty≥
 *
t_±r
;

41 
bigvty≥
 
tmp
;

43 
	`íd_föd
();

44 
	`ch™ge_å≠
(
y
, 
x
);

45 
c_±r
 = &
ˇve
[
y
][
x
];

46 
p_±r
 = &
py
.
misc
;

47 
t_±r
 = &
t_li°
[
c_±r
->
çå
];

48 
dam
 = 
	`pdamrﬁl
(
t_±r
->
damage
);

49 
t_±r
->
subvÆ
)

52 
	`msg_¥öt
("You fell intoáÖit!");

53 i‡(
py
.
Êags
.
fÁŒ
)

54 
	`msg_¥öt
("You gently float down.");

57 
	`objdes
(
tmp
, 
t_±r
, 
TRUE
);

58 
	`èke_hô
(
dam
, 
tmp
);

62 i‡(
	`ã°_hô
(125, 0, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
, 
CLA_MISC_HIT
))

64 
	`objdes
(
tmp
, 
t_±r
, 
TRUE
);

65 
	`èke_hô
(
dam
, 
tmp
);

66 
	`msg_¥öt
("Anárrow hits you.");

69 
	`msg_¥öt
("Anárrow barely misses you.");

72 
	`msg_¥öt
("You fell intoá coveredÖit.");

73 i‡(
py
.
Êags
.
fÁŒ
)

74 
	`msg_¥öt
("You gently float down.");

77 
	`objdes
(
tmp
, 
t_±r
, 
TRUE
);

78 
	`èke_hô
(
dam
, 
tmp
);

80 
	`∂a˚_å≠
(
y
, 
x
, 0);

83 
	`msg_¥öt
("You fellÅhrougháÅrap door!");

84 
√w_Àvñ_Êag
 = 
TRUE
;

85 
dun_Àvñ
++;

86 i‡(
py
.
Êags
.
fÁŒ
)

87 
	`msg_¥öt
("You gently float down.");

90 
	`objdes
(
tmp
, 
t_±r
, 
TRUE
);

91 
	`èke_hô
(
dam
, 
tmp
);

95 
	`msg_¥öt
 (
CNIL
);

98 i‡(
py
.
Êags
.
∑ølysis
 == 0)

100 
	`msg_¥öt
("A strange white mist surrounds you!");

101 i‡(
py
.
Êags
.
‰ì_a˘
)

102 
	`msg_¥öt
("Youáre unaffected.");

105 
	`msg_¥öt
("You fallásleep.");

106 
py
.
Êags
.
∑ølysis
 +
	`øndöt
(10) + 4;

111 (Ë
	`dñëe_obje˘
(
y
, 
x
);

112 
	`∂a˚_obje˘
(
y
, 
x
, 
FALSE
);

113 
	`msg_¥öt
("Hmmm,Åhere was something underÅhisÑock.");

116 i‡(
	`ã°_hô
(125, 0, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
, 
CLA_MISC_HIT
))

118 i‡(!
py
.
Êags
.
su°aö_°r
)

120 (Ë
	`dec_°©
(
A_STR
);

121 
	`objdes
(
tmp
, 
t_±r
, 
TRUE
);

122 
	`èke_hô
(
dam
, 
tmp
);

123 
	`msg_¥öt
("A small dart weakens you!");

126 
	`msg_¥öt
("A small dart hits you.");

129 
	`msg_¥öt
("A small dart barely misses you.");

132 
ãÀp‹t_Êag
 = 
TRUE
;

133 
	`msg_¥öt
("You hitáÅeleportÅrap!");

135 
	`move_light
 (
y
, 
x
, y, x);

138 
	`èke_hô
(
dam
, "a fallingÑock");

139 (Ë
	`dñëe_obje˘
(
y
, 
x
);

140 
	`∂a˚_rubbÀ
(
y
, 
x
);

141 
	`msg_¥öt
("Youáre hit by fallingÑock.");

146 
	`msg_¥öt
("A strangeÑed gas surrounds you.");

147 
	`c‹rode_gas
("corrosion gas");

150 (Ë
	`dñëe_obje˘
(
y
, 
x
);

151 
num
 = 2 + 
	`øndöt
 (3);

152 
i
 = 0; i < 
num
; i++)

154 
ty
 = 
y
;

155 
tx
 = 
x
;

156 (Ë
	`summ⁄_m⁄°î
(&
ty
, &
tx
, 
FALSE
);

160 
	`msg_¥öt
("YouáreÉnveloped in flames!");

161 
	`fúe_dam
(
dam
, "a fireÅrap");

164 
	`msg_¥öt
("Youáre splashed withácid!");

165 
	`acid_dam
(
dam
, "anácidÅrap");

168 
	`msg_¥öt
("AÖungent green gas surrounds you!");

169 
	`pois⁄_gas
(
dam
, "aÖoison gasÅrap");

172 
	`msg_¥öt
("A black gas surrounds you!");

173 
py
.
Êags
.
blöd
 +
	`øndöt
(50) + 50;

176 
	`msg_¥öt
("A gas of scintillating colors surrounds you!");

177 
py
.
Êags
.
c⁄fu£d
 +
	`øndöt
(15) + 15;

180 i‡(
	`ã°_hô
(125, 0, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
, 
CLA_MISC_HIT
))

182 
	`objdes
(
tmp
, 
t_±r
, 
TRUE
);

183 
	`èke_hô
(
dam
, 
tmp
);

184 
	`msg_¥öt
("A small dart hits you!");

185 i‡(
py
.
Êags
.
‰ì_a˘
)

186 
	`msg_¥öt
("Youáre unaffected.");

188 
py
.
Êags
.
¶ow
 +
	`øndöt
(20) + 10;

191 
	`msg_¥öt
("A small dart barely misses you.");

194 i‡(
	`ã°_hô
(125, 0, 0, 
p_±r
->
∑c
+p_±r->
±ﬂc
, 
CLA_MISC_HIT
))

196 i‡(!
py
.
Êags
.
su°aö_c⁄
)

198 (Ë
	`dec_°©
(
A_CON
);

199 
	`objdes
(
tmp
, 
t_±r
, 
TRUE
);

200 
	`èke_hô
(
dam
, 
tmp
);

201 
	`msg_¥öt
("A small dart saps your health!");

204 
	`msg_¥öt
("A small dart hits you.");

207 
	`msg_¥öt
("A small dart barely misses you.");

216 
	`íãr_°‹e
(0);

219 
	`íãr_°‹e
(1);

222 
	`íãr_°‹e
(2);

225 
	`íãr_°‹e
(3);

228 
	`íãr_°‹e
(4);

231 
	`íãr_°‹e
(5);

235 
	`msg_¥öt
("UnknownÅrap value.");

238 
	}
}

245 
	$ˇ°_•ñl
(
¥om±
, 
ôem_vÆ
, 
¢
, 
sc
)

246 *
¥om±
;

247 
ôem_vÆ
;

248 *
¢
, *
sc
;

250 
öt32u
 
j
;

251 
i
, 
k
;

252 
•ñl
[31], 
ªsu…
, 
fú°_•ñl
;

253 
•ñl_ty≥
 *
s_±r
;

255 
ªsu…
 = -1;

256 
i
 = 0;

257 
j
 = 
övít‹y
[
ôem_vÆ
].
Êags
;

258 
fú°_•ñl
 = 
	`bô_pos
(&
j
);

260 
j
 = 
övít‹y
[
ôem_vÆ
].
Êags
 & 
•ñl_À¨√d
;

261 
s_±r
 = 
magic_•ñl
[
py
.
misc
.
p˛ass
-1];

262 
j
)

264 
k
 = 
	`bô_pos
(&
j
);

265 i‡(
s_±r
[
k
].
¶evñ
 <
py
.
misc
.
Àv
)

267 
•ñl
[
i
] = 
k
;

268 
i
++;

271 i‡(
i
 > 0)

273 
ªsu…
 = 
	`gë_•ñl
(
•ñl
, 
i
, 
¢
, 
sc
, 
¥om±
, 
fú°_•ñl
);

274 i‡(
ªsu…
 && 
magic_•ñl
[
py
.
misc
.
p˛ass
-1][*
¢
].
sm™a
 >Öy.misc.
cm™a
)

276 i‡(
˛ass
[
py
.
misc
.
p˛ass
].
•ñl
 =
MAGE
)

277 
ªsu…
 = 
	`gë_check
("You summon yourÜimited strengthÅo cast \
 one! Confirm?");

280 
ªsu…
 = 
	`gë_check
("The gods mayÅhink youÖresumptuous for \
! Confirm?");

284 (
ªsu…
);

285 
	}
}

292 
	$ˇºy
(
y
, 
x
, 
pickup
)

293 
y
, 
x
;

294 
pickup
;

296 
lo˙
, 
i
;

297 
bigvty≥
 
out_vÆ
, 
tmp_°r
;

298 
ˇve_ty≥
 *
c_±r
;

299 
öví_ty≥
 *
i_±r
;

301 
c_±r
 = &
ˇve
[
y
][
x
];

302 
i_±r
 = &
t_li°
[
c_±r
->
çå
];

303 
i
 = 
t_li°
[
c_±r
->
çå
].
tvÆ
;

304 i‡(
i
 <
TV_MAX_PICK_UP
)

306 
	`íd_föd
();

308 i‡(
i
 =
TV_GOLD
)

310 
py
.
misc
.
au
 +
i_±r
->
co°
;

311 
	`objdes
(
tmp_°r
, 
i_±r
, 
TRUE
);

312 (Ë
	`•rötf
(
out_vÆ
,

314 
i_±r
->
co°
, 
tmp_°r
);

315 
	`¥t_gﬁd
();

316 (Ë
	`dñëe_obje˘
(
y
, 
x
);

317 
	`msg_¥öt
(
out_vÆ
);

321 i‡(
	`öví_check_num
(
i_±r
))

323 i‡(
pickup
 && 
¥om±_ˇºy_Êag
)

325 
	`objdes
(
tmp_°r
, 
i_±r
, 
TRUE
);

327 
tmp_°r
[
	`°æí
(tmp_str)-1] = '?';

328 (Ë
	`•rötf
(
out_vÆ
, "Pick u∞%s", 
tmp_°r
);

329 
pickup
 = 
	`gë_check
(
out_vÆ
);

332 i‡(
pickup
 && !
	`öví_check_weight
(
i_±r
))

334 
	`objdes
(
tmp_°r
, 
i_±r
, 
TRUE
);

336 
tmp_°r
[
	`°æí
(tmp_str)-1] = '?';

337 (Ë
	`•rötf
(
out_vÆ
,

339 
tmp_°r
);

340 
pickup
 = 
	`gë_check
(
out_vÆ
);

343 i‡(
pickup
)

345 
lo˙
 = 
	`öví_ˇºy
(
i_±r
);

346 
	`objdes
(
tmp_°r
, &
övít‹y
[
lo˙
], 
TRUE
);

347 (Ë
	`•rötf
(
out_vÆ
, "You havê%†(%c)",
tmp_°r
,
lo˙
+'a');

348 
	`msg_¥öt
(
out_vÆ
);

349 (Ë
	`dñëe_obje˘
(
y
, 
x
);

354 
	`objdes
(
tmp_°r
, 
i_±r
, 
TRUE
);

355 (Ë
	`•rötf
(
out_vÆ
, "You c™'àˇºy %s", 
tmp_°r
);

356 
	`msg_¥öt
(
out_vÆ
);

361 i‡(
i
 =
TV_INVIS_TRAP
 || i =
TV_VIS_TRAP
 || i =
TV_STORE_DOOR
)

362 
	`hô_å≠
(
y
, 
x
);

363 
	}
}

367 
	$dñëe_m⁄°î
(
j
)

368 
j
;

370 
m⁄°î_ty≥
 *
m_±r
;

372 
m_±r
 = &
m_li°
[
j
];

373 
ˇve
[
m_±r
->
fy
][m_±r->
fx
].
˝å
 = 0;

374 i‡(
m_±r
->
ml
)

375 
	`lôe_•Ÿ
(()
m_±r
->
fy
, ()m_±r->
fx
);

376 i‡(
j
 !
mÂå
 - 1)

378 
m_±r
 = &
m_li°
[
mÂå
 - 1];

379 
ˇve
[
m_±r
->
fy
][m_±r->
fx
].
˝å
 = 
j
;

380 
m_li°
[
j
] = m_li°[
mÂå
 - 1];

382 
mÂå
--;

383 
m_li°
[
mÂå
] = 
bœnk_m⁄°î
;

384 i‡(
m⁄_tŸ_mu…
 > 0)

385 
m⁄_tŸ_mu…
--;

386 
	}
}

396 
	$fix1_dñëe_m⁄°î
(
j
)

397 
j
;

399 
m⁄°î_ty≥
 *
m_±r
;

401 
m_±r
 = &
m_li°
[
j
];

405 
m_±r
->
hp
 = -1;

406 
ˇve
[
m_±r
->
fy
][m_±r->
fx
].
˝å
 = 0;

407 i‡(
m_±r
->
ml
)

408 
	`lôe_•Ÿ
(()
m_±r
->
fy
, ()m_±r->
fx
);

409 i‡(
m⁄_tŸ_mu…
 > 0)

410 
m⁄_tŸ_mu…
--;

411 
	}
}

415 
	$fix2_dñëe_m⁄°î
(
j
)

416 
j
;

418 
m⁄°î_ty≥
 *
m_±r
;

420 i‡(
j
 !
mÂå
 - 1)

422 
m_±r
 = &
m_li°
[
mÂå
 - 1];

423 
ˇve
[
m_±r
->
fy
][m_±r->
fx
].
˝å
 = 
j
;

424 
m_li°
[
j
] = m_li°[
mÂå
 - 1];

426 
m_li°
[
mÂå
 - 1] = 
bœnk_m⁄°î
;

427 
mÂå
--;

428 
	}
}

432 
	$summ⁄_obje˘
(
y
, 
x
, 
num
, 
typ
)

433 
y
, 
x
, 
num
, 
typ
;

435 
i
, 
j
, 
k
;

436 
ˇve_ty≥
 *
c_±r
;

437 
ªÆ_typ
, 
ªs
;

439 i‡((
typ
 == 1) || (typ == 5))

440 
ªÆ_typ
 = 1;

442 
ªÆ_typ
 = 256;

443 
ªs
 = 0;

446 
i
 = 0;

449 
j
 = 
y
 - 3 + 
	`øndöt
(5);

450 
k
 = 
x
 - 3 + 
	`øndöt
(5);

451 i‡(
	`ö_bounds
(
j
, 
k
Ë&& 
	`los
(
y
, 
x
, j, k))

453 
c_±r
 = &
ˇve
[
j
][
k
];

454 i‡(
c_±r
->
fvÆ
 <
MAX_OPEN_SPACE
 && (c_±r->
çå
 == 0))

456 i‡((
typ
 == 3) || (typ == 7))

459 i‡(
	`øndöt
(100) < 50)

460 
ªÆ_typ
 = 1;

462 
ªÆ_typ
 = 256;

464 i‡(
ªÆ_typ
 == 1)

465 
	`∂a˚_obje˘
(
j
, 
k
, (
typ
 >= 4));

467 
	`∂a˚_gﬁd
(
j
, 
k
);

468 
	`lôe_•Ÿ
(
j
, 
k
);

469 i‡(
	`ã°_light
(
j
, 
k
))

470 
ªs
 +
ªÆ_typ
;

471 
i
 = 20;

474 
i
++;

476 
i
 <= 20);

477 
num
--;

479 
num
 != 0);

480  
ªs
;

481 
	}
}

485 
	$dñëe_obje˘
(
y
, 
x
)

486 
y
, 
x
;

488 
dñëe
;

489 
ˇve_ty≥
 *
c_±r
;

491 
c_±r
 = &
ˇve
[
y
][
x
];

492 i‡(
c_±r
->
fvÆ
 =
BLOCKED_FLOOR
)

493 
c_±r
->
fvÆ
 = 
CORR_FLOOR
;

494 
	`pusht
(
c_±r
->
çå
);

495 
c_±r
->
çå
 = 0;

496 
c_±r
->
fm
 = 
FALSE
;

497 
	`lôe_•Ÿ
(
y
, 
x
);

498 i‡(
	`ã°_light
(
y
, 
x
))

499 
dñëe
 = 
TRUE
;

501 
dñëe
 = 
FALSE
;

502 (
dñëe
);

503 
	}
}

511 
öt32u
 
	$m⁄°î_dóth
(
y
, 
x
, 
Êags
)

512 
y
, 
x
;

513 
öt32u
 
Êags
;

515 
i
, 
numbî
;

516 
öt32u
 
dump
, 
ªs
;

517 #i‡
	`deföed
(
ATARIST_MWC
)

518 
öt32u
 
hﬁdî
;

521 #i‡!
	`deföed
(
ATARIST_MWC
)

522 i‡(
Êags
 & 
CM_CARRY_OBJ
)

523 
i
 = 1;

525 
i
 = 0;

526 i‡(
Êags
 & 
CM_CARRY_GOLD
)

527 
i
 += 2;

528 i‡(
Êags
 & 
CM_SMALL_OBJ
)

529 
i
 += 4;

531 
numbî
 = 0;

532 i‡((
Êags
 & 
CM_60_RANDOM
Ë&& (
	`øndöt
(100) < 60))

533 
numbî
++;

534 i‡((
Êags
 & 
CM_90_RANDOM
Ë&& (
	`øndöt
(100) < 90))

535 
numbî
++;

536 i‡(
Êags
 & 
CM_1D2_OBJ
)

537 
numbî
 +
	`øndöt
(2);

538 i‡(
Êags
 & 
CM_2D2_OBJ
)

539 
numbî
 +
	`damrﬁl
(2, 2);

540 i‡(
Êags
 & 
CM_4D2_OBJ
)

541 
numbî
 +
	`damrﬁl
(4, 2);

542 i‡(
numbî
 > 0)

543 
dump
 = 
	`summ⁄_obje˘
(
y
, 
x
, 
numbî
, 
i
);

545 
dump
 = 0;

547 
hﬁdî
 = 
CM_CARRY_OBJ
;

548 i‡(
Êags
 & 
hﬁdî
)

549 
i
 = 1;

551 
i
 = 0;

552 
hﬁdî
 = 
CM_CARRY_GOLD
;

553 i‡(
Êags
 & 
hﬁdî
)

554 
i
 += 2;

555 
hﬁdî
 = 
CM_SMALL_OBJ
;

556 i‡(
Êags
 & 
hﬁdî
)

557 
i
 += 4;

559 
numbî
 = 0;

560 
hﬁdî
 = 
CM_60_RANDOM
;

561 i‡((
Êags
 & 
hﬁdî
Ë&& (
	`øndöt
(100) < 60))

562 
numbî
++;

563 
hﬁdî
 = 
CM_90_RANDOM
;

564 i‡((
Êags
 & 
hﬁdî
Ë&& (
	`øndöt
(100) < 90))

565 
numbî
++;

566 
hﬁdî
 = 
CM_1D2_OBJ
;

567 i‡(
Êags
 & 
hﬁdî
)

568 
numbî
 +
	`øndöt
(2);

569 
hﬁdî
 = 
CM_2D2_OBJ
;

570 i‡(
Êags
 & 
hﬁdî
)

571 
numbî
 +
	`damrﬁl
(2, 2);

572 
hﬁdî
 = 
CM_4D2_OBJ
;

573 i‡(
Êags
 & 
hﬁdî
)

574 
numbî
 +
	`damrﬁl
(4, 2);

575 i‡(
numbî
 > 0)

576 
dump
 = 
	`summ⁄_obje˘
(
y
, 
x
, 
numbî
, 
i
);

578 
dump
 = 0;

583 #i‡
	`deföed
(
ATARIST_MWC
)

584 
hﬁdî
 = 
CM_WIN
;

585 i‡(
Êags
 & 
hﬁdî
)

587 i‡(
Êags
 & 
CM_WIN
)

589 i‡(!
dóth
)

591 
tŸÆ_wö√r
 = 
TRUE
;

592 
	`¥t_wö√r
();

593 
	`msg_¥öt
("*** CONGRATULATIONS *** You have wonÅhe game.");

594 
	`msg_¥öt
("You cannot saveÅhis game, but you mayÑetire whenÑeady.");

597 i‡(
dump
)

599 
ªs
 = 0;

600 i‡(
dump
 & 255)

601 #ifde‡
ATARIST_MWC


603 
hﬁdî
 = 
CM_CARRY_OBJ
;

604 i‡(
i
 & 0x04)

605 
hﬁdî
 = 
CM_CARRY_OBJ
|
CM_SMALL_OBJ
;

606 
ªs
 |
hﬁdî
;

610 
ªs
 |
CM_CARRY_OBJ
;

611 i‡(
i
 & 0x04)

612 
ªs
 |
CM_SMALL_OBJ
;

615 i‡(
dump
 >= 256)

616 #ifde‡
ATARIST_MWC


618 
hﬁdî
 = 
CM_CARRY_GOLD
;

619 
ªs
 |
hﬁdî
;

622 
ªs
 |
CM_CARRY_GOLD
;

624 
dump
 = (dump % 256) + (dump / 256);

625 
ªs
 |
dump
 << 
CM_TR_SHIFT
;

628 
ªs
 = 0;

630  
ªs
;

631 
	}
}

636 
	$m⁄_èke_hô
(
m⁄±r
, 
dam
)

637 
m⁄±r
, 
dam
;

639 
öt32u
 
i
;

640 
öt32
 
√w_exp
, 
√w_exp_‰ac
;

641 
m⁄°î_ty≥
 *
m_±r
;

642 
misc
 *
p_±r
;

643 
¸ótuª_ty≥
 *
c_±r
;

644 
m_èke_hô
;

645 
öt32u
 
tmp
;

646 #ifde‡
ATARIST_MWC


647 
öt32u
 
hﬁdî
;

650 
m_±r
 = &
m_li°
[
m⁄±r
];

651 
m_±r
->
hp
 -
dam
;

652 
m_±r
->
c¶ìp
 = 0;

653 i‡(
m_±r
->
hp
 < 0)

655 
i
 = 
	`m⁄°î_dóth
(()
m_±r
->
fy
, ()m_±r->
fx
,

656 
c_li°
[
m_±r
->
m±r
].
cmove
);

657 i‡((
py
.
Êags
.
blöd
 < 1 && 
m_±r
->
ml
)

658 #ifde‡
ATARIST_MWC


659 || (
c_li°
[
m_±r
->
m±r
].
cmove
 & (
hﬁdî
 = 
CM_WIN
)))

661 || (
c_li°
[
m_±r
->
m±r
].
cmove
 & 
CM_WIN
))

664 #ifde‡
ATARIST_MWC


665 
hﬁdî
 = 
CM_TREASURE
;

666 
tmp
 = (
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 & 
hﬁdî
Ë>> 
CM_TR_SHIFT
;

667 i‡(
tmp
 > ((
i
 & 
hﬁdî
Ë>> 
CM_TR_SHIFT
))

668 
i
 = (ò& ~
hﬁdî
Ë| (
tmp
 << 
CM_TR_SHIFT
);

669 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 =

670 (
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 & ~
hﬁdî
Ë| 
i
;

672 
tmp
 = (
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 & 
CM_TREASURE
Ë>> 
CM_TR_SHIFT
;

673 i‡(
tmp
 > ((
i
 & 
CM_TREASURE
Ë>> 
CM_TR_SHIFT
))

674 
i
 = (ò& ~
CM_TREASURE
Ë| (
tmp
 << 
CM_TR_SHIFT
);

675 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 =

676 (
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 & ~
CM_TREASURE
Ë| 
i
;

678 i‡(
c_ªˇŒ
[
m_±r
->
m±r
].
r_kûls
 < 
MAX_SHORT
)

679 
c_ªˇŒ
[
m_±r
->
m±r
].
r_kûls
++;

681 
c_±r
 = &
c_li°
[
m_±r
->
m±r
];

682 
p_±r
 = &
py
.
misc
;

684 
√w_exp
 = (()
c_±r
->
mexp
 * c_±r->
Àvñ
Ë/ 
p_±r
->
Àv
;

685 
√w_exp_‰ac
 = (((()
c_±r
->
mexp
 * c_±r->
Àvñ
Ë% 
p_±r
->
Àv
)

686 * 0x10000L / 
p_±r
->
Àv
Ë+Ö_±r->
exp_‰ac
;

687 i‡(
√w_exp_‰ac
 >= 0x10000L)

689 
√w_exp
++;

690 
p_±r
->
exp_‰ac
 = 
√w_exp_‰ac
 - 0x10000L;

693 
p_±r
->
exp_‰ac
 = 
√w_exp_‰ac
;

695 
p_±r
->
exp
 +
√w_exp
;

698 
m_èke_hô
 = 
m_±r
->
m±r
;

702 i‡(
hack_m⁄±r
 < 
m⁄±r
)

703 
	`dñëe_m⁄°î
(
m⁄±r
);

705 
	`fix1_dñëe_m⁄°î
(
m⁄±r
);

708 
m_èke_hô
 = -1;

709 (
m_èke_hô
);

710 
	}
}

714 
	$py_©èck
(
y
, 
x
)

715 
y
, 
x
;

717 
k
, 
blows
;

718 
¸±r
, 
m⁄±r
, 
tŸ_tohô
, 
ba£_tohô
;

719 
vty≥
 
m_«me
, 
out_vÆ
;

720 
öví_ty≥
 *
i_±r
;

721 
misc
 *
p_±r
;

722 #ifde‡
ATARIST_MWC


723 
öt32u
 
hﬁdî
;

726 
¸±r
 = 
ˇve
[
y
][
x
].
˝å
;

727 
m⁄±r
 = 
m_li°
[
¸±r
].
m±r
;

728 
m_li°
[
¸±r
].
c¶ìp
 = 0;

729 
i_±r
 = &
övít‹y
[
INVEN_WIELD
];

731 i‡(!
m_li°
[
¸±r
].
ml
)

732 (Ë
	`°r˝y
(
m_«me
, "it");

734 (Ë
	`•rötf
(
m_«me
, "thê%s", 
c_li°
[
m⁄±r
].
«me
);

735 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

736 
blows
 = 
	`©èck_blows
(()
i_±r
->
weight
, &
tŸ_tohô
);

739 
blows
 = 2;

740 
tŸ_tohô
 = -3;

742 i‡((
i_±r
->
tvÆ
 >
TV_SLING_AMMO
Ë&& (i_±r->tvÆ <
TV_SPIKE
))

744 
blows
 = 1;

745 
p_±r
 = &
py
.
misc
;

746 
tŸ_tohô
 +
p_±r
->
±ohô
;

748 i‡(
m_li°
[
¸±r
].
ml
)

749 
ba£_tohô
 = 
p_±r
->
bth
;

751 
ba£_tohô
 = (
p_±r
->
bth
 / 2Ë- (
tŸ_tohô
 * (
BTH_PLUS_ADJ
-1))

752 - (
p_±r
->
Àv
 * 
˛ass_Àvñ_adj
[p_±r->
p˛ass
][
CLA_BTH
] / 2);

757 i‡(
	`ã°_hô
(
ba£_tohô
, ()
p_±r
->
Àv
, 
tŸ_tohô
,

758 ()
c_li°
[
m⁄±r
].
ac
, 
CLA_BTH
))

760 (Ë
	`•rötf
(
out_vÆ
, "You hô %s.", 
m_«me
);

761 
	`msg_¥öt
(
out_vÆ
);

762 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

764 
k
 = 
	`pdamrﬁl
(
i_±r
->
damage
);

765 
k
 = 
	`tŸ_dam
(
i_±r
, k, 
m⁄±r
);

766 
k
 = 
	`¸ôiˇl_blow
(()
i_±r
->
weight
, 
tŸ_tohô
, k, 
CLA_BTH
);

770 
k
 = 
	`damrﬁl
(1, 1);

771 
k
 = 
	`¸ôiˇl_blow
(1, 0, k, 
CLA_BTH
);

773 
k
 +
p_±r
->
±odam
;

774 i‡(
k
 < 0) k = 0;

776 i‡(
py
.
Êags
.
c⁄fu£_m⁄°î
)

778 
py
.
Êags
.
c⁄fu£_m⁄°î
 = 
FALSE
;

779 
	`msg_¥öt
("Your hands stop glowing.");

780 i‡((
c_li°
[
m⁄±r
].
cde„n£
 & 
CD_NO_SLEEP
)

781 || (
	`øndöt
(
MAX_MONS_LEVEL
Ë< 
c_li°
[
m⁄±r
].
Àvñ
))

782 (Ë
	`•rötf
(
out_vÆ
, "%†i†u«f„˘ed.", 
m_«me
);

785 (Ë
	`•rötf
(
out_vÆ
, "%†≠≥¨†c⁄fu£d.", 
m_«me
);

786 i‡(
m_li°
[
¸±r
].
c⁄fu£d
)

787 
m_li°
[
¸±r
].
c⁄fu£d
 += 3;

789 
m_li°
[
¸±r
].
c⁄fu£d
 = 2 + 
	`øndöt
(16);

791 
	`msg_¥öt
(
out_vÆ
);

792 i‡(
m_li°
[
¸±r
].
ml
 && 
	`øndöt
(4) == 1)

793 
c_ªˇŒ
[
m⁄±r
].
r_cde„n£
 |=

794 
c_li°
[
m⁄±r
].
cde„n£
 & 
CD_NO_SLEEP
;

798 i‡(
	`m⁄_èke_hô
(
¸±r
, 
k
) >= 0)

800 (Ë
	`•rötf
(
out_vÆ
, "You havê¶aö %s.", 
m_«me
);

801 
	`msg_¥öt
(
out_vÆ
);

802 
	`¥t_ex≥rõn˚
();

803 
blows
 = 0;

806 i‡((
i_±r
->
tvÆ
 >
TV_SLING_AMMO
)

807 && (
i_±r
->
tvÆ
 <
TV_SPIKE
))

809 
i_±r
->
numbî
--;

810 
öví_weight
 -
i_±r
->
weight
;

811 #ifde‡
ATARIST_MWC


812 
py
.
Êags
.
°©us
 |(
hﬁdî
 = 
PY_STR_WGT
);

814 
py
.
Êags
.
°©us
 |
PY_STR_WGT
;

816 i‡(
i_±r
->
numbî
 == 0)

818 
equù_˘r
--;

819 
	`py_b⁄u£s
(
i_±r
, -1);

820 
	`övc›y
(
i_±r
, 
OBJ_NOTHING
);

821 
	`ˇlc_b⁄u£s
();

827 (Ë
	`•rötf
(
out_vÆ
, "You mis†%s.", 
m_«me
);

828 
	`msg_¥öt
(
out_vÆ
);

830 
blows
--;

832 
blows
 >= 1);

833 
	}
}

838 
	$move_ch¨
(
dú
, 
do_pickup
)

839 
dú
, 
do_pickup
;

841 
ﬁd_row
, 
ﬁd_cﬁ
, 
ﬁd_föd_Êag
;

842 
y
, 
x
;

843 
i
, 
j
;

844 
ˇve_ty≥
 *
c_±r
, *
d_±r
;

846 i‡((
py
.
Êags
.
c⁄fu£d
 > 0) &&

847 (
	`øndöt
(4) > 1) &&

848 (
dú
 != 5))

850 
dú
 = 
	`øndöt
(9);

851 
	`íd_föd
();

853 
y
 = 
ch¨_row
;

854 
x
 = 
ch¨_cﬁ
;

855 i‡(
	`mmove
(
dú
, &
y
, &
x
))

857 
c_±r
 = &
ˇve
[
y
][
x
];

863 i‡((
c_±r
->
˝å
 < 2)

864 || (!
m_li°
[
c_±r
->
˝å
].
ml
 && c_±r->
fvÆ
 >
MIN_CLOSED_SPACE
))

866 i‡(
c_±r
->
fvÆ
 <
MAX_OPEN_SPACE
)

869 
ﬁd_row
 = 
ch¨_row
;

870 
ﬁd_cﬁ
 = 
ch¨_cﬁ
;

871 
ch¨_row
 = 
y
;

872 
ch¨_cﬁ
 = 
x
;

874 
	`move_ªc
(
ﬁd_row
, 
ﬁd_cﬁ
, 
ch¨_row
, 
ch¨_cﬁ
);

876 i‡(
	`gë_∑√l
(
ch¨_row
, 
ch¨_cﬁ
, 
FALSE
))

877 
	`¥t_m≠
();

879 i‡(
föd_Êag
)

880 
	`¨ó_af„˘
(
dú
, 
ch¨_row
, 
ch¨_cﬁ
);

883 i‡((
py
.
misc
.
fos
 <1Ë|| (
	`øndöt
(py.misc.fos) == 1) ||

884 (
py
.
Êags
.
°©us
 & 
PY_SEARCH
))

885 
	`£¨ch
(
ch¨_row
, 
ch¨_cﬁ
, 
py
.
misc
.
§h
);

887 i‡(
c_±r
->
fvÆ
 =
LIGHT_FLOOR
)

889 i‡(!
c_±r
->
∂
 && !
py
.
Êags
.
blöd
)

890 
	`light_room
(
ch¨_row
, 
ch¨_cﬁ
);

893 i‡(
c_±r
->
Ã
 && (
py
.
Êags
.
blöd
 < 1))

894 
i
 = (
ch¨_row
 - 1); i <= (char_row + 1); i++)

895 
j
 = (
ch¨_cﬁ
 - 1); j <= (char_col + 1); j++)

897 
d_±r
 = &
ˇve
[
i
][
j
];

898 i‡((
d_±r
->
fvÆ
 =
LIGHT_FLOOR
Ë&& (!d_±r->
∂
))

899 
	`light_room
(
i
, 
j
);

902 
	`move_light
(
ﬁd_row
, 
ﬁd_cﬁ
, 
ch¨_row
, 
ch¨_cﬁ
);

904 i‡(
c_±r
->
çå
 != 0)

906 
	`ˇºy
(
ch¨_row
, 
ch¨_cﬁ
, 
do_pickup
);

909 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_RUBBLE
)

911 
	`move_ªc
(
ch¨_row
, 
ch¨_cﬁ
, 
ﬁd_row
, 
ﬁd_cﬁ
);

912 
	`move_light
(
ch¨_row
, 
ch¨_cﬁ
, 
ﬁd_row
, 
ﬁd_cﬁ
);

913 
ch¨_row
 = 
ﬁd_row
;

914 
ch¨_cﬁ
 = 
ﬁd_cﬁ
;

917 
c_±r
 = &
ˇve
[
ch¨_row
][
ch¨_cﬁ
];

918 i‡(
c_±r
->
çå
 != 0)

920 
i
 = 
t_li°
[
c_±r
->
çå
].
tvÆ
;

921 i‡(
i
 =
TV_INVIS_TRAP
 || i =
TV_VIS_TRAP


922 || 
i
 =
TV_STORE_DOOR
)

923 
	`hô_å≠
(
ch¨_row
, 
ch¨_cﬁ
);

930 i‡(!
föd_Êag
 && (
c_±r
->
çå
 != 0))

932 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_RUBBLE
)

933 
	`msg_¥öt
("There isÑubble blocking your way.");

934 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_CLOSED_DOOR
)

935 
	`msg_¥öt
("There isá closed door blocking your way.");

938 
	`íd_föd
();

939 
‰ì_tu∫_Êag
 = 
TRUE
;

944 
ﬁd_föd_Êag
 = 
föd_Êag
;

945 
	`íd_föd
();

947 i‡(
m_li°
[
c_±r
->
˝å
].
ml
 && 
ﬁd_föd_Êag
)

950 
‰ì_tu∫_Êag
 = 
TRUE
;

954 i‡(
py
.
Êags
.
a‰aid
 < 1)

955 
	`py_©èck
(
y
, 
x
);

957 
	`msg_¥öt
("YouáreÅooáfraid!");

961 
	}
}

966 
	$che°_å≠
(
y
, 
x
)

967 
y
, 
x
;

969 
i
;

970 
j
, 
k
;

971 
öví_ty≥
 *
t_±r
;

973 
t_±r
 = &
t_li°
[
ˇve
[
y
][
x
].
çå
];

974 i‡(
CH_LOSE_STR
 & 
t_±r
->
Êags
)

976 
	`msg_¥öt
("A smallÇeedle hasÖricked you!");

977 i‡(!
py
.
Êags
.
su°aö_°r
)

979 (Ë
	`dec_°©
(
A_STR
);

980 
	`èke_hô
(
	`damrﬁl
(1, 4), "aÖoisonÇeedle");

981 
	`msg_¥öt
("You feel weakened!");

984 
	`msg_¥öt
("Youáre unaffected.");

986 i‡(
CH_POISON
 & 
t_±r
->
Êags
)

988 
	`msg_¥öt
("A smallÇeedle hasÖricked you!");

989 
	`èke_hô
(
	`damrﬁl
(1, 6), "aÖoisonÇeedle");

990 
py
.
Êags
.
pois⁄ed
 +10 + 
	`øndöt
(20);

992 i‡(
CH_PARALYSED
 & 
t_±r
->
Êags
)

994 
	`msg_¥öt
("AÖuff of yellow gas surrounds you!");

995 i‡(
py
.
Êags
.
‰ì_a˘
)

996 
	`msg_¥öt
("Youáre unaffected.");

999 
	`msg_¥öt
("You chokeándÖass out.");

1000 
py
.
Êags
.
∑ølysis
 = 10 + 
	`øndöt
(20);

1003 i‡(
CH_SUMMON
 & 
t_±r
->
Êags
)

1005 
i
 = 0; i < 3; i++)

1007 
j
 = 
y
;

1008 
k
 = 
x
;

1009 (Ë
	`summ⁄_m⁄°î
(&
j
, &
k
, 
FALSE
);

1012 i‡(
CH_EXPLODE
 & 
t_±r
->
Êags
)

1014 
	`msg_¥öt
("There isá suddenÉxplosion!");

1015 (Ë
	`dñëe_obje˘
(
y
, 
x
);

1016 
	`èke_hô
(
	`damrﬁl
(5, 8), "anÉxploding chest");

1018 
	}
}

1022 
	$›íobje˘
()

1024 
y
, 
x
, 
i
, 
dú
;

1025 
Êag
, 
no_obje˘
;

1026 
ˇve_ty≥
 *
c_±r
;

1027 
öví_ty≥
 *
t_±r
;

1028 
misc
 *
p_±r
;

1029 
m⁄°î_ty≥
 *
m_±r
;

1030 
vty≥
 
m_«me
, 
out_vÆ
;

1031 #ifde‡
ATARIST_MWC


1032 
öt32u
 
hﬁdî
;

1035 
y
 = 
ch¨_row
;

1036 
x
 = 
ch¨_cﬁ
;

1037 i‡(
	`gë_dú
(
CNIL
, &
dú
))

1039 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1040 
c_±r
 = &
ˇve
[
y
][
x
];

1041 
no_obje˘
 = 
FALSE
;

1042 i‡(
c_±r
->
˝å
 > 1 && c_±r->
çå
 != 0 &&

1043 (
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_CLOSED_DOOR


1044 || 
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_CHEST
))

1046 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

1047 i‡(
m_±r
->
ml
)

1048 (Ë
	`•rötf
 (
m_«me
, "Thê%s", 
c_li°
[
m_±r
->
m±r
].
«me
);

1050 (Ë
	`°r˝y
 (
m_«me
, "Something");

1051 (Ë
	`•rötf
(
out_vÆ
, "%†i†ö you∏way!", 
m_«me
);

1052 
	`msg_¥öt
(
out_vÆ
);

1054 i‡(
c_±r
->
çå
 != 0)

1056 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_CLOSED_DOOR
)

1058 
t_±r
 = &
t_li°
[
c_±r
->
çå
];

1059 i‡(
t_±r
->
p1
 > 0)

1061 
p_±r
 = &
py
.
misc
;

1062 
i
 = 
p_±r
->
dißrm
 + 2*
	`todis_adj
(Ë+ 
	`°©_adj
(
A_INT
)

1063 + (
˛ass_Àvñ_adj
[
p_±r
->
p˛ass
][
CLA_DISARM
]

1064 * 
p_±r
->
Àv
 / 3);

1065 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

1066 
	`msg_¥öt
("YouáreÅoo confusedÅoÖickÅheÜock.");

1067 i‡((
i
-
t_±r
->
p1
Ë> 
	`øndöt
(100))

1069 
	`msg_¥öt
("You haveÖickedÅheÜock.");

1070 
py
.
misc
.
exp
++;

1071 
	`¥t_ex≥rõn˚
();

1072 
t_±r
->
p1
 = 0;

1075 
	`cou¡_msg_¥öt
("You failedÅoÖickÅheÜock.");

1077 i‡(
t_±r
->
p1
 < 0)

1078 
	`msg_¥öt
("ItáppearsÅo be stuck.");

1079 i‡(
t_±r
->
p1
 == 0)

1081 
	`övc›y
(&
t_li°
[
c_±r
->
çå
], 
OBJ_OPEN_DOOR
);

1082 
c_±r
->
fvÆ
 = 
CORR_FLOOR
;

1083 
	`lôe_•Ÿ
(
y
, 
x
);

1084 
comm™d_cou¡
 = 0;

1088 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_CHEST
)

1090 
p_±r
 = &
py
.
misc
;

1091 
i
 = 
p_±r
->
dißrm
 + 2*
	`todis_adj
(Ë+ 
	`°©_adj
(
A_INT
)

1092 + (
˛ass_Àvñ_adj
[
p_±r
->
p˛ass
][
CLA_DISARM
] *Ö_±r->
Àv
 / 3);

1093 
t_±r
 = &
t_li°
[
c_±r
->
çå
];

1094 
Êag
 = 
FALSE
;

1095 i‡(
CH_LOCKED
 & 
t_±r
->
Êags
)

1096 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

1097 
	`msg_¥öt
("YouáreÅoo confusedÅoÖickÅheÜock.");

1098 i‡((
i
-()
t_±r
->
Àvñ
Ë> 
	`øndöt
(100))

1100 
	`msg_¥öt
("You haveÖickedÅheÜock.");

1101 
Êag
 = 
TRUE
;

1102 
py
.
misc
.
exp
 +
t_±r
->
Àvñ
;

1103 
	`¥t_ex≥rõn˚
();

1106 
	`cou¡_msg_¥öt
("You failedÅoÖickÅheÜock.");

1108 
Êag
 = 
TRUE
;

1109 i‡(
Êag
)

1111 
t_±r
->
Êags
 &~
CH_LOCKED
;

1112 
t_±r
->
«me2
 = 
SN_EMPTY
;

1113 
	`known2
(
t_±r
);

1114 
t_±r
->
co°
 = 0;

1116 
Êag
 = 
FALSE
;

1118 i‡((
CH_LOCKED
 & 
t_±r
->
Êags
) == 0)

1120 
	`che°_å≠
(
y
, 
x
);

1121 i‡(
c_±r
->
çå
 != 0)

1122 
Êag
 = 
TRUE
;

1126 i‡(
Êag
)

1130 #ifde‡
ATARIST_MWC


1131 
t_li°
[
c_±r
->
çå
].
Êags
 &~(
hﬁdî
 = 
TR_CURSED
);

1133 
t_li°
[
c_±r
->
çå
].
Êags
 &~
TR_CURSED
;

1135 (Ë
	`m⁄°î_dóth
(
y
, 
x
, 
t_li°
[
c_±r
->
çå
].
Êags
);

1136 
t_li°
[
c_±r
->
çå
].
Êags
 = 0;

1140 
no_obje˘
 = 
TRUE
;

1142 
no_obje˘
 = 
TRUE
;

1144 i‡(
no_obje˘
)

1146 
	`msg_¥öt
("I doÇot seeánything you can openÅhere.");

1147 
‰ì_tu∫_Êag
 = 
TRUE
;

1150 
	}
}

1154 
	$˛o£obje˘
()

1156 
y
, 
x
, 
dú
, 
no_obje˘
;

1157 
vty≥
 
out_vÆ
, 
m_«me
;

1158 
ˇve_ty≥
 *
c_±r
;

1159 
m⁄°î_ty≥
 *
m_±r
;

1161 
y
 = 
ch¨_row
;

1162 
x
 = 
ch¨_cﬁ
;

1163 i‡(
	`gë_dú
(
CNIL
, &
dú
))

1165 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1166 
c_±r
 = &
ˇve
[
y
][
x
];

1167 
no_obje˘
 = 
FALSE
;

1168 i‡(
c_±r
->
çå
 != 0)

1169 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_OPEN_DOOR
)

1170 i‡(
c_±r
->
˝å
 == 0)

1171 i‡(
t_li°
[
c_±r
->
çå
].
p1
 == 0)

1173 
	`övc›y
(&
t_li°
[
c_±r
->
çå
], 
OBJ_CLOSED_DOOR
);

1174 
c_±r
->
fvÆ
 = 
BLOCKED_FLOOR
;

1175 
	`lôe_•Ÿ
(
y
, 
x
);

1178 
	`msg_¥öt
("The dooráppearsÅo be broken.");

1181 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

1182 i‡(
m_±r
->
ml
)

1183 (Ë
	`•rötf
 (
m_«me
, "Thê%s", 
c_li°
[
m_±r
->
m±r
].
«me
);

1185 (Ë
	`°r˝y
 (
m_«me
, "Something");

1186 (Ë
	`•rötf
(
out_vÆ
, "%†i†ö you∏way!", 
m_«me
);

1187 
	`msg_¥öt
(
out_vÆ
);

1190 
no_obje˘
 = 
TRUE
;

1192 
no_obje˘
 = 
TRUE
;

1194 i‡(
no_obje˘
)

1196 
	`msg_¥öt
("I doÇot seeánything you can closeÅhere.");

1197 
‰ì_tu∫_Êag
 = 
TRUE
;

1200 
	}
}

1205 
	$twÆl
(
y
, 
x
, 
t1
, 
t2
)

1206 
y
, 
x
, 
t1
, 
t2
;

1208 
i
, 
j
;

1209 
ˇve_ty≥
 *
c_±r
;

1210 
ªs
, 
found
;

1212 
ªs
 = 
FALSE
;

1213 i‡(
t1
 > 
t2
)

1215 
c_±r
 = &
ˇve
[
y
][
x
];

1216 i‡(
c_±r
->
Ã
)

1220 
found
 = 
FALSE
;

1221 
i
 = 
y
-1; i <= y+1; i++)

1222 
j
 = 
x
-1; j <= x+1; j++)

1223 i‡(
ˇve
[
i
][
j
].
fvÆ
 <
MAX_CAVE_ROOM
)

1225 
c_±r
->
fvÆ
 = 
ˇve
[
i
][
j
].fval;

1226 
c_±r
->
∂
 = 
ˇve
[
i
][
j
].pl;

1227 
found
 = 
TRUE
;

1230 i‡(!
found
)

1232 
c_±r
->
fvÆ
 = 
CORR_FLOOR
;

1233 
c_±r
->
∂
 = 
FALSE
;

1239 
c_±r
->
fvÆ
 = 
CORR_FLOOR
;

1240 
c_±r
->
∂
 = 
FALSE
;

1242 
c_±r
->
fm
 = 
FALSE
;

1243 i‡(
	`∑√l_c⁄èös
(
y
, 
x
))

1244 i‡((
c_±r
->
é
 || c_±r->
∂
Ë&& c_±r->
çå
 != 0)

1245 
	`msg_¥öt
("You have found something!");

1246 
	`lôe_•Ÿ
(
y
, 
x
);

1247 
ªs
 = 
TRUE
;

1249 (
ªs
);

1250 
	}
}

	@moria4.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

11 
	~<°dlib.h
>

14 
	~"c⁄fig.h
"

15 
	~"c⁄°™t.h
"

16 
	~"ty≥s.h
"

17 
	~"exã∫s.h
"

19 #ifde‡
USG


20 #i‚de‡
ATARIST_MWC


21 
	~<°rög.h
>

24 
	~<°rögs.h
>

27 
	~<˘y≥.h
>

30 #i‡
deföed
(
LINT_ARGS
)

31 
look_øy
(, , );

32 
look_£e
(, , *);

33 
öví_throw
(, 
öví_ty≥
 *);

34 
Á˘s
(
öví_ty≥
 *, *, *, *, *);

35 
dr›_throw
(, , 
öví_ty≥
 *);

36 
py_bash
(, );

38 
look_øy
();

39 
look_£e
();

45 
	$tu¬ñ
(
dú
)

46 
dú
;

48 
i
, 
èbû
;

49 
ˇve_ty≥
 *
c_±r
;

50 
öví_ty≥
 *
i_±r
;

51 
y
, 
x
;

52 
m⁄°î_ty≥
 *
m_±r
;

53 
vty≥
 
out_vÆ
, 
m_«me
;

54 #ifde‡
ATARIST_MWC


55 
öt32u
 
hﬁdî
;

58 i‡((
py
.
Êags
.
c⁄fu£d
 > 0) &&

59 (
	`øndöt
(4) > 1))

60 
dú
 = 
	`øndöt
(9);

61 
y
 = 
ch¨_row
;

62 
x
 = 
ch¨_cﬁ
;

63 (Ë
	`mmove
(
dú
, &
y
, &
x
);

65 
c_±r
 = &
ˇve
[
y
][
x
];

68 
èbû
 = 
py
.
°©s
.
u£_°©
[
A_STR
];

69 
i_±r
 = &
övít‹y
[
INVEN_WIELD
];

74 i‡(
c_±r
->
fvÆ
 < 
MIN_CAVE_WALL


75 && (
c_±r
->
çå
 =0 || (
t_li°
[c_±r->çå].
tvÆ
 !
TV_RUBBLE


76 && 
t_li°
[
c_±r
->
çå
].
tvÆ
 !
TV_SECRET_DOOR
)))

78 i‡(
c_±r
->
çå
 == 0)

80 
	`msg_¥öt
 ("TunnelÅhrough what? Emptyáir?!?");

81 
‰ì_tu∫_Êag
 = 
TRUE
;

85 
	`msg_¥öt
("You can'tÅunnelÅhroughÅhat.");

86 
‰ì_tu∫_Êag
 = 
TRUE
;

91 i‡(
c_±r
->
˝å
 > 1)

93 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

94 i‡(
m_±r
->
ml
)

95 (Ë
	`•rötf
 (
m_«me
, "Thê%s", 
c_li°
[
m_±r
->
m±r
].
«me
);

97 (Ë
	`°r˝y
 (
m_«me
, "Something");

98 (Ë
	`•rötf
(
out_vÆ
, "%†i†ö you∏way!", 
m_«me
);

99 
	`msg_¥öt
(
out_vÆ
);

102 i‡(
py
.
Êags
.
a‰aid
 < 1)

103 
	`py_©èck
(
y
, 
x
);

105 
	`msg_¥öt
("YouáreÅooáfraid!");

107 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

109 #ifde‡
ATARIST_MWC


110 i‡((
hﬁdî
 = 
TR_TUNNEL
Ë& 
i_±r
->
Êags
)

112 i‡(
TR_TUNNEL
 & 
i_±r
->
Êags
)

114 
èbû
 +25 + 
i_±r
->
p1
*50;

117 
èbû
 +(
i_±r
->
damage
[0]*i_±r->damage[1]Ë+ i_±r->
tohô


118 + 
i_±r
->
todam
;

120 
èbû
 >>= 1;

126 i‡(
wóp⁄_hóvy
)

128 
èbû
 +(
py
.
°©s
.
u£_°©
[
A_STR
] * 15Ë- 
i_±r
->
weight
;

129 i‡(
èbû
 < 0)

130 
èbû
 = 0;

135 
c_±r
->
fvÆ
)

137 
GRANITE_WALL
:

138 
i
 = 
	`øndöt
(1200) + 80;

139 i‡(
	`twÆl
(
y
, 
x
, 
èbû
, 
i
))

140 
	`msg_¥öt
("You have finishedÅheÅunnel.");

142 
	`cou¡_msg_¥öt
("YouÅunnel intoÅhe granite wall.");

144 
MAGMA_WALL
:

145 
i
 = 
	`øndöt
(600) + 10;

146 i‡(
	`twÆl
(
y
, 
x
, 
èbû
, 
i
))

147 
	`msg_¥öt
("You have finishedÅheÅunnel.");

149 
	`cou¡_msg_¥öt
("YouÅunnel intoÅhe magma intrusion.");

151 
QUARTZ_WALL
:

152 
i
 = 
	`øndöt
(400) + 10;

153 i‡(
	`twÆl
(
y
, 
x
, 
èbû
, 
i
))

154 
	`msg_¥öt
("You have finishedÅheÅunnel.");

156 
	`cou¡_msg_¥öt
("YouÅunnel intoÅhe quartz vein.");

158 
BOUNDARY_WALL
:

159 
	`msg_¥öt
("This seemsÅo beÖermanentÑock.");

163 i‡(
c_±r
->
çå
 != 0)

166 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_RUBBLE
)

168 i‡(
èbû
 > 
	`øndöt
(180))

170 (Ë
	`dñëe_obje˘
(
y
, 
x
);

171 
	`msg_¥öt
("You haveÑemovedÅheÑubble.");

172 i‡(
	`øndöt
(10) == 1)

174 
	`∂a˚_obje˘
(
y
, 
x
, 
FALSE
);

175 i‡(
	`ã°_light
(
y
, 
x
))

176 
	`msg_¥öt
("You have found something!");

178 
	`lôe_•Ÿ
(
y
, 
x
);

181 
	`cou¡_msg_¥öt
("You dig inÅheÑubble.");

184 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_SECRET_DOOR
)

186 
	`cou¡_msg_¥öt
("YouÅunnel intoÅhe granite wall.");

187 
	`£¨ch
(
ch¨_row
, 
ch¨_cﬁ
, 
py
.
misc
.
§h
);

190 
	`ab‹t
 ();

193 
	`ab‹t
 ();

198 
	`msg_¥öt
("You dig with your hands, makingÇoÖrogress.");

199 
	}
}

203 
	$dißrm_å≠
()

205 
y
, 
x
, 
Àvñ
, 
tmp
, 
dú
, 
no_dißrm
;

206 
tŸ
, 
i
;

207 
ˇve_ty≥
 *
c_±r
;

208 
öví_ty≥
 *
i_±r
;

209 
m⁄°î_ty≥
 *
m_±r
;

210 
vty≥
 
m_«me
, 
out_vÆ
;

212 
y
 = 
ch¨_row
;

213 
x
 = 
ch¨_cﬁ
;

214 i‡(
	`gë_dú
(
CNIL
, &
dú
))

216 (Ë
	`mmove
(
dú
, &
y
, &
x
);

217 
c_±r
 = &
ˇve
[
y
][
x
];

218 
no_dißrm
 = 
FALSE
;

219 i‡(
c_±r
->
˝å
 > 1 && c_±r->
çå
 != 0 &&

220 (
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_VIS_TRAP


221 || 
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_CHEST
))

223 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

224 i‡(
m_±r
->
ml
)

225 (Ë
	`•rötf
 (
m_«me
, "Thê%s", 
c_li°
[
m_±r
->
m±r
].
«me
);

227 (Ë
	`°r˝y
 (
m_«me
, "Something");

228 (Ë
	`•rötf
(
out_vÆ
, "%†i†ö you∏way!", 
m_«me
);

229 
	`msg_¥öt
(
out_vÆ
);

231 i‡(
c_±r
->
çå
 != 0)

233 
tŸ
 = 
py
.
misc
.
dißrm
 + 2*
	`todis_adj
(Ë+ 
	`°©_adj
(
A_INT
)

234 + (
˛ass_Àvñ_adj
[
py
.
misc
.
p˛ass
][
CLA_DISARM
] *Öy.misc.
Àv
 / 3);

235 i‡((
py
.
Êags
.
blöd
 > 0Ë|| (
	`no_light
()))

236 
tŸ
 =Åot / 10;

237 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

238 
tŸ
 =Åot / 10;

239 i‡(
py
.
Êags
.
image
 > 0)

240 
tŸ
 =Åot / 10;

241 
i_±r
 = &
t_li°
[
c_±r
->
çå
];

242 
i
 = 
i_±r
->
tvÆ
;

243 
Àvñ
 = 
i_±r
->level;

244 i‡(
i
 =
TV_VIS_TRAP
)

246 i‡((
tŸ
 + 100 - 
Àvñ
Ë> 
	`øndöt
(100))

248 
	`msg_¥öt
("You have disarmedÅheÅrap.");

249 
py
.
misc
.
exp
 +
i_±r
->
p1
;

250 (Ë
	`dñëe_obje˘
(
y
, 
x
);

252 
tmp
 = 
py
.
Êags
.
c⁄fu£d
;

253 
py
.
Êags
.
c⁄fu£d
 = 0;

254 
	`move_ch¨
(
dú
, 
FALSE
);

255 
py
.
Êags
.
c⁄fu£d
 = 
tmp
;

256 
	`¥t_ex≥rõn˚
();

259 i‡((
tŸ
 > 5Ë&& (
	`øndöt
(tot) > 5))

260 
	`cou¡_msg_¥öt
("You failedÅo disarmÅheÅrap.");

263 
	`msg_¥öt
("You setÅheÅrap off!");

265 
tmp
 = 
py
.
Êags
.
c⁄fu£d
;

266 
py
.
Êags
.
c⁄fu£d
 = 0;

267 
	`move_ch¨
(
dú
, 
FALSE
);

268 
py
.
Êags
.
c⁄fu£d
 +
tmp
;

271 i‡(
i
 =
TV_CHEST
)

273 i‡(!
	`known2_p
(
i_±r
))

275 
	`msg_¥öt
("I don't seeáÅrap.");

276 
‰ì_tu∫_Êag
 = 
TRUE
;

278 i‡(
CH_TRAPPED
 & 
i_±r
->
Êags
)

280 i‡((
tŸ
 - 
Àvñ
Ë> 
	`øndöt
(100))

282 
i_±r
->
Êags
 &~
CH_TRAPPED
;

283 i‡(
CH_LOCKED
 & 
i_±r
->
Êags
)

284 
i_±r
->
«me2
 = 
SN_LOCKED
;

286 
i_±r
->
«me2
 = 
SN_DISARMED
;

287 
	`msg_¥öt
("You have disarmedÅhe chest.");

288 
	`known2
(
i_±r
);

289 
py
.
misc
.
exp
 +
Àvñ
;

290 
	`¥t_ex≥rõn˚
();

292 i‡((
tŸ
 > 5Ë&& (
	`øndöt
(tot) > 5))

293 
	`cou¡_msg_¥öt
("You failedÅo disarmÅhe chest.");

296 
	`msg_¥öt
("You setáÅrap off!");

297 
	`known2
(
i_±r
);

298 
	`che°_å≠
(
y
, 
x
);

303 
	`msg_¥öt
("The chest wasÇotÅrapped.");

304 
‰ì_tu∫_Êag
 = 
TRUE
;

308 
no_dißrm
 = 
TRUE
;

311 
no_dißrm
 = 
TRUE
;

313 i‡(
no_dißrm
)

315 
	`msg_¥öt
("I doÇot seeánythingÅo disarmÅhere.");

316 
‰ì_tu∫_Êag
 = 
TRUE
;

319 
	}
}

371 
	ggl_fxx
, 
	ggl_fxy
, 
	ggl_fyx
, 
	ggl_fyy
;

372 
	ggl_n£í
, 
	ggl_noquîy
;

373 
	ggl_rock
;

376 
	g£t_fxy
[] = { 0, 1, 0, 0, -1 };

377 
	g£t_fxx
[] = { 0, 0, -1, 1, 0 };

378 
	g£t_fyy
[] = { 0, 0, 1, -1, 0 };

379 
	g£t_fyx
[] = { 0, 1, 0, 0, -1 };

381 
	gm≠_düg1
[] = { 1, 3, 0, 2, 4 };

382 
	gm≠_düg2
[] = { 2, 1, 0, 4, 3 };

384 
	#GRADF
 10000

	)

398 
	$look
()

400 
i
, 
ab‹t
;

401 
dú
, 
dummy
;

403 i‡(
py
.
Êags
.
blöd
 > 0)

404 
	`msg_¥öt
("You can't seeá damnÅhing!");

405 i‡(
py
.
Êags
.
image
 > 0)

406 
	`msg_¥öt
("You can't believe what youáre seeing! It'sÜikeá dream!");

407 i‡(
	`gë_Ældú
("Look which dúe˘i⁄?", &
dú
))

409 
ab‹t
 = 
FALSE
;

410 
gl_n£í
 = 0;

411 
gl_rock
 = 0;

412 
gl_noquîy
 = 
FALSE
;

413 i‡(
	`look_£e
(0, 0, &
dummy
))

414 
ab‹t
 = 
TRUE
;

419 
ab‹t
 = 
FALSE
;

420 i‡(
dú
 == 5)

422 
i
 = 1; i <= 4; i++)

424 
gl_fxx
 = 
£t_fxx
[
i
]; 
gl_fyx
 = 
£t_fyx
[i];

425 
gl_fxy
 = 
£t_fxy
[
i
]; 
gl_fyy
 = 
£t_fyy
[i];

426 i‡(
	`look_øy
(0, 2*
GRADF
-1, 1))

428 
ab‹t
 = 
TRUE
;

431 
gl_fxy
 = -gl_fxy;

432 
gl_fyy
 = -gl_fyy;

433 i‡(
	`look_øy
(0, 2*
GRADF
, 2))

435 
ab‹t
 = 
TRUE
;

440 i‡((
dú
 & 1) == 0)

442 
i
 = 
dú
 >> 1;

443 
gl_fxx
 = 
£t_fxx
[
i
]; 
gl_fyx
 = 
£t_fyx
[i];

444 
gl_fxy
 = 
£t_fxy
[
i
]; 
gl_fyy
 = 
£t_fyy
[i];

445 i‡(
	`look_øy
(0, 
GRADF
, 1))

446 
ab‹t
 = 
TRUE
;

449 
gl_fxy
 = -gl_fxy;

450 
gl_fyy
 = -gl_fyy;

451 
ab‹t
 = 
	`look_øy
(0, 
GRADF
, 2);

456 
i
 = 
m≠_düg1
[
dú
 >> 1];

457 
gl_fxx
 = 
£t_fxx
[
i
]; 
gl_fyx
 = 
£t_fyx
[i];

458 
gl_fxy
 = -
£t_fxy
[
i
]; 
gl_fyy
 = -
£t_fyy
[i];

459 i‡(
	`look_øy
(1, 2*
GRADF
, GRADF))

460 
ab‹t
 = 
TRUE
;

463 
i
 = 
m≠_düg2
[
dú
 >> 1];

464 
gl_fxx
 = 
£t_fxx
[
i
]; 
gl_fyx
 = 
£t_fyx
[i];

465 
gl_fxy
 = 
£t_fxy
[
i
]; 
gl_fyy
 = 
£t_fyy
[i];

466 
ab‹t
 = 
	`look_øy
(1, 2*
GRADF
-1, GRADF);

470 
ab‹t
 =
FALSE
 && 
highlight_£ams
 && (++
gl_rock
 < 2));

471 i‡(
ab‹t
)

472 
	`msg_¥öt
("--AbortingÜook--");

475 i‡(
gl_n£í
)

477 i‡(
dú
 == 5)

478 
	`msg_¥öt
("That'sáll you see.");

480 
	`msg_¥öt
("That'sáll you see inÅhat direction.");

482 i‡(
dú
 == 5)

483 
	`msg_¥öt
("You seeÇothing of interest.");

485 
	`msg_¥öt
("You seeÇothing of interest inÅhat direction.");

489 
	}
}

508 
	$look_øy
(
y
, 
‰om
, 
to
)

509 
y
, 
‰om
, 
to
;

511 
max_x
, 
x
;

512 
å™•¨ít
;

516 i‡(
‰om
 <
to
 || 
y
 > 
MAX_SIGHT
)

517  
FALSE
;

522 
x
 = ()(()
GRADF
 * (2 * 
y
 - 1Ë/ 
‰om
 + 1);

523 i‡(
x
 <= 0)

524 
x
 = 1;

528 
max_x
 = ()((()
GRADF
 * (2 * 
y
 + 1Ë- 1Ë/ 
to
);

529 i‡(
max_x
 > 
MAX_SIGHT
)

530 
max_x
 = 
MAX_SIGHT
;

531 i‡(
max_x
 < 
x
)

532  
FALSE
;

538 i‡(
y
 =0 && 
to
 > 1 || y =
x
 && 
‰om
 < 
GRADF
*2)

539 
gl_noquîy
 = 
TRUE
;

541 
gl_noquîy
 = 
FALSE
;

542 i‡(
	`look_£e
(
x
, 
y
, &
å™•¨ít
))

543  
TRUE
;

544 i‡(
y
 =
x
)

545 
gl_noquîy
 = 
FALSE
;

546 i‡(
å™•¨ít
)

547 
öô_å™•¨ít
;

552 i‡(
	`look_øy
(
y
+1, 
‰om
, ()((2 * y + 1Ë* ()
GRADF
 / 
x
)))

553  
TRUE
;

557 i‡(
x
 =
max_x
)

558  
FALSE
;

560 
‰om
 = ()((2 * 
y
 - 1Ë* ()
GRADF
 / 
x
);

561 i‡(
‰om
 <
to
)

562  
FALSE
;

563 
x
++;

564 i‡(
	`look_£e
(
x
, 
y
, &
å™•¨ít
))

565  
TRUE
;

567 !
å™•¨ít
);

568 
öô_å™•¨ít
:

572 i‡(
x
 =
max_x
)

574  
	`look_øy
(
y
+1, 
‰om
, 
to
);

575 
x
++;

576 i‡(
	`look_£e
(
x
, 
y
, &
å™•¨ít
))

577  
TRUE
;

579 
å™•¨ít
);

581 
	}
}

583 
	$look_£e
(
x
, 
y
, 
å™•¨ít
)

584 
x
, 
y
;

585 *
å™•¨ít
;

587 *
d°rög
, *
°rög
, 
quîy
;

588 
ˇve_ty≥
 *
c_±r
;

589 
j
;

590 
bigvty≥
 
out_vÆ
, 
tmp_°r
;

592 i‡(
x
 < 0 || 
y
 < 0 || y > x)

594 (Ë
	`•rötf
(
tmp_°r
, "IŒegÆ cÆ»tÿlook_£e(%d, %d)", 
x
, 
y
);

595 
	`msg_¥öt
(
tmp_°r
);

597 i‡(
x
 =0 && 
y
 == 0)

598 
d°rög
 = "Youáre on";

600 
d°rög
 = "You see";

601 
j
 = 
ch¨_cﬁ
 + 
gl_fxx
 * 
x
 + 
gl_fxy
 * 
y
;

602 
y
 = 
ch¨_row
 + 
gl_fyx
 * 
x
 + 
gl_fyy
 * y;

603 
x
 = 
j
;

604 i‡(!
	`∑√l_c⁄èös
(
y
, 
x
))

606 *
å™•¨ít
 = 
FALSE
;

607  
FALSE
;

609 
c_±r
 = &
ˇve
[
y
][
x
];

610 *
å™•¨ít
 = 
c_±r
->
fvÆ
 <
MAX_OPEN_SPACE
;

611 i‡(
gl_noquîy
)

612  
FALSE
;

613 
out_vÆ
[0] = 0;

614 i‡(
gl_rock
 =0 && 
c_±r
->
˝å
 > 1 && 
m_li°
[c_±r->˝å].
ml
)

616 
j
 = 
m_li°
[
c_±r
->
˝å
].
m±r
;

617 (Ë
	`•rötf
(
out_vÆ
, "%s %s %s. [(r)ecall]",

618 
d°rög
,

619 
	`is_a_vowñ
–
c_li°
[
j
].
«me
[0] ) ? "an" : "a",

620 
c_li°
[
j
].
«me
);

621 
d°rög
 = "It is on";

622 
	`¥t
(
out_vÆ
, 0, 0);

623 
	`move_curs‹_ªœtive
(
y
, 
x
);

624 
quîy
 = 
	`ökey
();

625 i‡(
quîy
 == 'r' || query == 'R')

627 
	`ßve_s¸ìn
();

628 
quîy
 = 
	`roff_ªˇŒ
(
j
);

629 
	`ª°‹e_s¸ìn
();

632 i‡(
c_±r
->
é
 || c_±r->
∂
 || c_±r->
fm
)

634 i‡(
c_±r
->
çå
 != 0)

636 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_SECRET_DOOR
)

637 
gønôe
;

638 i‡(
gl_rock
 ==0 && 
t_li°
[
c_±r
->
çå
].
tvÆ
 !
TV_INVIS_TRAP
)

640 
	`objdes
(
tmp_°r
, &
t_li°
[
c_±r
->
çå
], 
TRUE
);

641 (Ë
	`•rötf
(
out_vÆ
, "%†%†---∑u£---", 
d°rög
, 
tmp_°r
);

642 
d°rög
 = "It is in";

643 
	`¥t
(
out_vÆ
, 0, 0);

644 
	`move_curs‹_ªœtive
(
y
, 
x
);

645 
quîy
 = 
	`ökey
();

648 i‡((
gl_rock
 || 
out_vÆ
[0]Ë&& 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

650 
c_±r
->
fvÆ
)

652 
BOUNDARY_WALL
:

653 
GRANITE_WALL
:

654 
gønôe
:

656 if(
out_vÆ
[0])

657 
°rög
 = "a granite wall";

659 
°rög
 = 
CNIL
;

661 
MAGMA_WALL
: 
°rög
 = "some darkÑock";

663 
QUARTZ_WALL
: 
°rög
 = "a quartz vein";

665 : 
°rög
 = 
CNIL
;

668 i‡(
°rög
)

670 (Ë
	`•rötf
(
out_vÆ
, "%†%†---∑u£---", 
d°rög
, 
°rög
);

671 
	`¥t
(
out_vÆ
, 0, 0);

672 
	`move_curs‹_ªœtive
(
y
, 
x
);

673 
quîy
 = 
	`ökey
();

677 i‡(
out_vÆ
[0])

679 
gl_n£í
++;

680 i‡(
quîy
 =
ESCAPE
)

681  
TRUE
;

684  
FALSE
;

685 
	}
}

688 
	$öví_throw
(
ôem_vÆ
, 
t_±r
)

689 
ôem_vÆ
;

690 
öví_ty≥
 *
t_±r
;

692 
öví_ty≥
 *
i_±r
;

693 #ifde‡
ATARIST_MWC


694 
öt32u
 
hﬁdî
;

697 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

698 *
t_±r
 = *
i_±r
;

699 i‡(
i_±r
->
numbî
 > 1)

701 
t_±r
->
numbî
 = 1;

702 
i_±r
->
numbî
--;

703 
öví_weight
 -
i_±r
->
weight
;

704 #ifde‡
ATARIST_MWC


705 
py
.
Êags
.
°©us
 |(
hﬁdî
 = 
PY_STR_WGT
);

707 
py
.
Êags
.
°©us
 |
PY_STR_WGT
;

711 
	`öví_de°roy
(
ôem_vÆ
);

712 
	}
}

717 
	$Á˘s
(
i_±r
, 
tbth
, 
çth
, 
tdam
, 
tdis
)

718 
öví_ty≥
 *
i_±r
;

719 *
tbth
, *
çth
, *
tdam
, *
tdis
;

721 
tmp_weight
;

723 i‡(
i_±r
->
weight
 < 1)

724 
tmp_weight
 = 1;

726 
tmp_weight
 = 
i_±r
->
weight
;

729 *
tdam
 = 
	`pdamrﬁl
(
i_±r
->
damage
Ë+ i_±r->
todam
;

730 *
tbth
 = 
py
.
misc
.
bthb
 * 75 / 100;

731 *
çth
 = 
py
.
misc
.
±ohô
 + 
i_±r
->
tohô
;

734 i‡(
övít‹y
[
INVEN_WIELD
].
tvÆ
 !
TV_NOTHING
)

735 *
çth
 -
övít‹y
[
INVEN_WIELD
].
tohô
;

737 *
tdis
 = (((
py
.
°©s
.
u£_°©
[
A_STR
]+20)*10)/
tmp_weight
);

738 i‡(*
tdis
 > 10) *tdis = 10;

744 i‡(
övít‹y
[
INVEN_WIELD
].
tvÆ
 =
TV_BOW
)

745 
övít‹y
[
INVEN_WIELD
].
p1
)

748 i‡(
i_±r
->
tvÆ
 =
TV_SLING_AMMO
)

750 *
tbth
 = 
py
.
misc
.
bthb
;

751 *
çth
 +2 * 
övít‹y
[
INVEN_WIELD
].
tohô
;

752 *
tdam
 +
övít‹y
[
INVEN_WIELD
].
todam
;

753 *
tdam
 = *tdam * 2;

754 *
tdis
 = 20;

758 i‡(
i_±r
->
tvÆ
 =
TV_ARROW
)

760 *
tbth
 = 
py
.
misc
.
bthb
;

761 *
çth
 +2 * 
övít‹y
[
INVEN_WIELD
].
tohô
;

762 *
tdam
 +
övít‹y
[
INVEN_WIELD
].
todam
;

763 *
tdam
 = *tdam * 2;

764 *
tdis
 = 25;

768 i‡(
i_±r
->
tvÆ
 =
TV_ARROW
)

770 *
tbth
 = 
py
.
misc
.
bthb
;

771 *
çth
 +2 * 
övít‹y
[
INVEN_WIELD
].
tohô
;

772 *
tdam
 +
övít‹y
[
INVEN_WIELD
].
todam
;

773 *
tdam
 = *tdam * 3;

774 *
tdis
 = 30;

778 i‡(
i_±r
->
tvÆ
 =
TV_ARROW
)

780 *
tbth
 = 
py
.
misc
.
bthb
;

781 *
çth
 +2 * 
övít‹y
[
INVEN_WIELD
].
tohô
;

782 *
tdam
 +
övít‹y
[
INVEN_WIELD
].
todam
;

783 *
tdam
 = *tdam * 4;

784 *
tdis
 = 35;

788 i‡(
i_±r
->
tvÆ
 =
TV_BOLT
)

790 *
tbth
 = 
py
.
misc
.
bthb
;

791 *
çth
 +2 * 
övít‹y
[
INVEN_WIELD
].
tohô
;

792 *
tdam
 +
övít‹y
[
INVEN_WIELD
].
todam
;

793 *
tdam
 = *tdam * 3;

794 *
tdis
 = 25;

798 i‡(
i_±r
->
tvÆ
 =
TV_BOLT
)

800 *
tbth
 = 
py
.
misc
.
bthb
;

801 *
çth
 +2 * 
övít‹y
[
INVEN_WIELD
].
tohô
;

802 *
tdam
 +
övít‹y
[
INVEN_WIELD
].
todam
;

803 *
tdam
 = *tdam * 4;

804 *
tdis
 = 35;

808 
	}
}

811 
	$dr›_throw
(
y
, 
x
, 
t_±r
)

812 
y
, 
x
;

813 
öví_ty≥
 *
t_±r
;

815 
i
, 
j
, 
k
;

816 
Êag
, 
cur_pos
;

817 
bigvty≥
 
out_vÆ
, 
tmp_°r
;

818 
ˇve_ty≥
 *
c_±r
;

820 
Êag
 = 
FALSE
;

821 
i
 = 
y
;

822 
j
 = 
x
;

823 
k
 = 0;

824 i‡(
	`øndöt
(10) > 1)

828 i‡(
	`ö_bounds
(
i
, 
j
))

830 
c_±r
 = &
ˇve
[
i
][
j
];

831 i‡(
c_±r
->
fvÆ
 <
MAX_OPEN_SPACE
 && c_±r->
çå
 == 0)

832 
Êag
 = 
TRUE
;

834 i‡(!
Êag
)

836 
i
 = 
y
 + 
	`øndöt
(3) - 2;

837 
j
 = 
x
 + 
	`øndöt
(3) - 2;

838 
k
++;

841 (!
Êag
Ë&& (
k
 <= 9));

843 i‡(
Êag
)

845 
cur_pos
 = 
	`p›t
();

846 
ˇve
[
i
][
j
].
çå
 = 
cur_pos
;

847 
t_li°
[
cur_pos
] = *
t_±r
;

848 
	`lôe_•Ÿ
(
i
, 
j
);

852 
	`objdes
(
tmp_°r
, 
t_±r
, 
FALSE
);

853 (Ë
	`•rötf
(
out_vÆ
, "Thê%†dißµórs.", 
tmp_°r
);

854 
	`msg_¥öt
(
out_vÆ
);

856 
	}
}

862 
	$throw_obje˘
()

864 
ôem_vÆ
, 
tbth
, 
çth
, 
tdam
, 
tdis
;

865 
y
, 
x
, 
ﬁdy
, 
ﬁdx
, 
cur_dis
, 
dú
;

866 
Êag
, 
visibÀ
;

867 
bigvty≥
 
out_vÆ
, 
tmp_°r
;

868 
öví_ty≥
 
throw_obj
;

869 
ˇve_ty≥
 *
c_±r
;

870 
m⁄°î_ty≥
 *
m_±r
;

871 
i
;

872 
tch¨
;

874 i‡(
öví_˘r
 == 0)

876 
	`msg_¥öt
("But youáreÇot carryingánything.");

877 
‰ì_tu∫_Êag
 = 
TRUE
;

879 i‡(
	`gë_ôem
(&
ôem_vÆ
, "Fúe/Throw which o√?", 0, 
öví_˘r
-1, 
CNIL
,

880 
CNIL
))

882 i‡(
	`gë_dú
(
CNIL
, &
dú
))

884 
	`desc_ªmaö
(
ôem_vÆ
);

885 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

887 
	`msg_¥öt
("Youáre confused.");

890 
dú
 = 
	`øndöt
(9);

892 
dú
 == 5);

894 
	`öví_throw
(
ôem_vÆ
, &
throw_obj
);

895 
	`Á˘s
(&
throw_obj
, &
tbth
, &
çth
, &
tdam
, &
tdis
);

896 
tch¨
 = 
throw_obj
.tchar;

897 
Êag
 = 
FALSE
;

898 
y
 = 
ch¨_row
;

899 
x
 = 
ch¨_cﬁ
;

900 
ﬁdy
 = 
ch¨_row
;

901 
ﬁdx
 = 
ch¨_cﬁ
;

902 
cur_dis
 = 0;

905 (Ë
	`mmove
(
dú
, &
y
, &
x
);

906 
cur_dis
++;

907 
	`lôe_•Ÿ
(
ﬁdy
, 
ﬁdx
);

908 i‡(
cur_dis
 > 
tdis
Ë
Êag
 = 
TRUE
;

909 
c_±r
 = &
ˇve
[
y
][
x
];

910 i‡((
c_±r
->
fvÆ
 <
MAX_OPEN_SPACE
Ë&& (!
Êag
))

912 i‡(
c_±r
->
˝å
 > 1)

914 
Êag
 = 
TRUE
;

915 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

916 
tbth
 =Åbth - 
cur_dis
;

920 i‡(!
m_±r
->
ml
)

921 
tbth
 = (tbth / (
cur_dis
+2))

922 - (
py
.
misc
.
Àv
 *

923 
˛ass_Àvñ_adj
[
py
.
misc
.
p˛ass
][
CLA_BTHB
] / 2)

924 - (
çth
 * (
BTH_PLUS_ADJ
-1));

925 i‡(
	`ã°_hô
(
tbth
, ()
py
.
misc
.
Àv
, 
çth
,

926 ()
c_li°
[
m_±r
->
m±r
].
ac
, 
CLA_BTHB
))

928 
i
 = 
m_±r
->
m±r
;

929 
	`objdes
(
tmp_°r
, &
throw_obj
, 
FALSE
);

931 i‡(!
m_±r
->
ml
)

933 (Ë
	`•rötf
(
out_vÆ
,

934 "You hó∏®¸yá†thê%†föd†®m¨k.", 
tmp_°r
);

935 
visibÀ
 = 
FALSE
;

939 (Ë
	`•rötf
(
out_vÆ
, "The %s hitsÅhe %s.",

940 
tmp_°r
, 
c_li°
[
i
].
«me
);

941 
visibÀ
 = 
TRUE
;

943 
	`msg_¥öt
(
out_vÆ
);

944 
tdam
 = 
	`tŸ_dam
(&
throw_obj
,Ådam, 
i
);

945 
tdam
 = 
	`¸ôiˇl_blow
(()
throw_obj
.
weight
,

946 
çth
, 
tdam
, 
CLA_BTHB
);

947 i‡(
tdam
 < 0)Ådam = 0;

948 
i
 = 
	`m⁄_èke_hô
(()
c_±r
->
˝å
, 
tdam
);

949 i‡(
i
 >= 0)

951 i‡(!
visibÀ
)

952 
	`msg_¥öt
("You have killed something!");

955 (Ë
	`•rötf
(
out_vÆ
,"You have killedÅhe %s.",

956 
c_li°
[
i
].
«me
);

957 
	`msg_¥öt
(
out_vÆ
);

959 
	`¥t_ex≥rõn˚
();

963 
	`dr›_throw
(
ﬁdy
, 
ﬁdx
, &
throw_obj
);

967 i‡(
	`∑√l_c⁄èös
(
y
, 
x
Ë&& (
py
.
Êags
.
blöd
 < 1)

968 && (
c_±r
->
é
 || c_±r->
∂
))

970 
	`¥öt
(
tch¨
, 
y
, 
x
);

971 
	`put_qio
();

977 
Êag
 = 
TRUE
;

978 
	`dr›_throw
(
ﬁdy
, 
ﬁdx
, &
throw_obj
);

980 
ﬁdy
 = 
y
;

981 
ﬁdx
 = 
x
;

983 !
Êag
);

986 
	}
}

991 
	$py_bash
(
y
, 
x
)

992 
y
, 
x
;

994 
m⁄°î
, 
k
, 
avg_max_hp
, 
ba£_tohô
;

995 
¸ótuª_ty≥
 *
c_±r
;

996 
m⁄°î_ty≥
 *
m_±r
;

997 
vty≥
 
m_«me
, 
out_vÆ
;

999 
m⁄°î
 = 
ˇve
[
y
][
x
].
˝å
;

1000 
m_±r
 = &
m_li°
[
m⁄°î
];

1001 
c_±r
 = &
c_li°
[
m_±r
->
m±r
];

1002 
m_±r
->
c¶ìp
 = 0;

1004 i‡(!
m_±r
->
ml
)

1005 (Ë
	`°r˝y
(
m_«me
, "it");

1007 (Ë
	`•rötf
(
m_«me
, "thê%s", 
c_±r
->
«me
);

1008 
ba£_tohô
 = 
py
.
°©s
.
u£_°©
[
A_STR
] + 
övít‹y
[
INVEN_ARM
].
weight
/2

1009 + 
py
.
misc
.
wt
/10;

1010 i‡(!
m_±r
->
ml
)

1011 
ba£_tohô
 = (base_tohit / 2)

1012 - (
py
.
°©s
.
u£_°©
[
A_DEX
]*(
BTH_PLUS_ADJ
-1))

1013 - (
py
.
misc
.
Àv
 * 
˛ass_Àvñ_adj
[py.misc.
p˛ass
][
CLA_BTH
] / 2);

1015 i‡(
	`ã°_hô
(
ba£_tohô
, ()
py
.
misc
.
Àv
,

1016 ()
py
.
°©s
.
u£_°©
[
A_DEX
], ()
c_±r
->
ac
, 
CLA_BTH
))

1018 (Ë
	`•rötf
(
out_vÆ
, "You hô %s.", 
m_«me
);

1019 
	`msg_¥öt
(
out_vÆ
);

1020 
k
 = 
	`pdamrﬁl
(
övít‹y
[
INVEN_ARM
].
damage
);

1021 
k
 = 
	`¸ôiˇl_blow
(()(
övít‹y
[
INVEN_ARM
].
weight
 / 4

1022 + 
py
.
°©s
.
u£_°©
[
A_STR
]), 0, 
k
, 
CLA_BTH
);

1023 
k
 +
py
.
misc
.
wt
/60 + 3;

1024 i‡(
k
 < 0) k = 0;

1027 i‡(
	`m⁄_èke_hô
(
m⁄°î
, 
k
) >= 0)

1029 (Ë
	`•rötf
(
out_vÆ
, "You havê¶aö %s.", 
m_«me
);

1030 
	`msg_¥öt
(
out_vÆ
);

1031 
	`¥t_ex≥rõn˚
();

1035 
m_«me
[0] = 
	`touµî
(()m_name[0]);

1037 
avg_max_hp
 = (
c_±r
->
cde„n£
 & 
CD_MAX_HP
 ?

1038 
c_±r
->
hd
[0] * c_ptr->hd[1] :

1039 (
c_±r
->
hd
[0] * (c_ptr->hd[1] + 1)) >> 1);

1040 i‡((100 + 
	`øndöt
(400) +Ñandint(400))

1041 > (
m_±r
->
hp
 + 
avg_max_hp
))

1043 
m_±r
->
°u¬ed
 +
	`øndöt
(3) + 1;

1044 i‡(
m_±r
->
°u¬ed
 > 24) m_ptr->stunned = 24;

1045 (Ë
	`•rötf
(
out_vÆ
, "%†≠≥¨†°u¬ed!", 
m_«me
);

1048 (Ë
	`•rötf
(
out_vÆ
, "%†ign‹e†you∏bash!", 
m_«me
);

1049 
	`msg_¥öt
(
out_vÆ
);

1054 (Ë
	`•rötf
(
out_vÆ
, "You mis†%s.", 
m_«me
);

1055 
	`msg_¥öt
(
out_vÆ
);

1057 i‡(
	`øndöt
(150Ë> 
py
.
°©s
.
u£_°©
[
A_DEX
])

1059 
	`msg_¥öt
("Youáre off balance.");

1060 
py
.
Êags
.
∑ølysis
 = 1 + 
	`øndöt
(2);

1062 
	}
}

1088 
	$bash
()

1090 
y
, 
x
, 
dú
, 
tmp
;

1091 
ˇve_ty≥
 *
c_±r
;

1092 
öví_ty≥
 *
t_±r
;

1094 
y
 = 
ch¨_row
;

1095 
x
 = 
ch¨_cﬁ
;

1096 i‡(
	`gë_dú
(
CNIL
, &
dú
))

1098 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

1100 
	`msg_¥öt
("Youáre confused.");

1103 
dú
 = 
	`øndöt
(9);

1105 
dú
 == 5);

1107 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1108 
c_±r
 = &
ˇve
[
y
][
x
];

1109 i‡(
c_±r
->
˝å
 > 1)

1111 i‡(
py
.
Êags
.
a‰aid
 > 0)

1112 
	`msg_¥öt
("Youáreáfraid!");

1114 
	`py_bash
(
y
, 
x
);

1116 i‡(
c_±r
->
çå
 != 0)

1118 
t_±r
 = &
t_li°
[
c_±r
->
çå
];

1119 i‡(
t_±r
->
tvÆ
 =
TV_CLOSED_DOOR
)

1121 
	`cou¡_msg_¥öt
("You smash intoÅhe door!");

1122 
tmp
 = 
py
.
°©s
.
u£_°©
[
A_STR
] +Öy.
misc
.
wt
 / 2;

1124 i‡(
	`øndöt
(
tmp
*(20+
	`abs
(
t_±r
->
p1
))) < 10*(tmp-abs(t_ptr->p1)))

1126 
	`msg_¥öt
("The door crashes open!");

1127 
	`övc›y
(&
t_li°
[
c_±r
->
çå
], 
OBJ_OPEN_DOOR
);

1128 
t_±r
->
p1
 = 1 - 
	`øndöt
(2);

1129 
c_±r
->
fvÆ
 = 
CORR_FLOOR
;

1130 i‡(
py
.
Êags
.
c⁄fu£d
 == 0)

1131 
	`move_ch¨
(
dú
, 
FALSE
);

1133 
	`lôe_•Ÿ
(
y
, 
x
);

1135 i‡(
	`øndöt
(150Ë> 
py
.
°©s
.
u£_°©
[
A_DEX
])

1137 
	`msg_¥öt
("Youáre off-balance.");

1138 
py
.
Êags
.
∑ølysis
 = 1 + 
	`øndöt
(2);

1140 i‡(
comm™d_cou¡
 == 0)

1141 
	`msg_¥öt
("The door holds firm.");

1143 i‡(
t_±r
->
tvÆ
 =
TV_CHEST
)

1145 i‡(
	`øndöt
(10) == 1)

1147 
	`msg_¥öt
("You have destroyedÅhe chest.");

1148 
	`msg_¥öt
("and its contents!");

1149 
t_±r
->
ödex
 = 
OBJ_RUINED_CHEST
;

1150 
t_±r
->
Êags
 = 0;

1152 i‡((
CH_LOCKED
 & 
t_±r
->
Êags
Ë&& (
	`øndöt
(10) == 1))

1154 
	`msg_¥öt
("TheÜock breaks open!");

1155 
t_±r
->
Êags
 &~
CH_LOCKED
;

1158 
	`cou¡_msg_¥öt
("The chest holds firm.");

1163 
	`msg_¥öt
("You bash it, butÇothing interesting happens.");

1167 i‡(
c_±r
->
fvÆ
 < 
MIN_CAVE_WALL
)

1168 
	`msg_¥öt
("You bashátÉmpty space.");

1171 
	`msg_¥öt
("You bash it, butÇothing interesting happens.");

1174 
	}
}

	@player.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

14 
∂ayî_ty≥
 
	gpy
;

16 
öt16
 
	gch¨_row
;

17 
öt16
 
	gch¨_cﬁ
;

20 
öt16u
 
	g∂ayî_hp
[
MAX_PLAYER_LEVEL
];

23 #ifde‡
MACGAME


24 *(*
	g∂ayî_tôÀ
)[
MAX_PLAYER_LEVEL
];

26 *
	g∂ayî_tôÀ
[
MAX_CLASS
][
MAX_PLAYER_LEVEL
] = {

85 
öt32u
 
	g∂ayî_exp
[
MAX_PLAYER_LEVEL
] = {

97 #ifde‡
MACGAME


98 
ø˚_ty≥
 *
	gø˚
;

100 
ø˚_ty≥
 
	gø˚
[
MAX_RACES
] = {

137 #ifde‡
MACGAME


138 
background_ty≥
 *
	gbackground
;

140 
background_ty≥
 
	gbackground
[
MAX_BACKGROUND
] = {

273 
˛ass_ty≥
 
	g˛ass
[
MAX_CLASS
] = {

275 {"W¨ri‹",9, 25, 14, 1, 38, 70, 55, 18, 5,-2,-2, 2, 2,-1, 
NONE
, 0, 0},

276 {"Mage", 0, 30, 16, 2, 20, 34, 20, 36,-5, 3, 0, 1,-2, 1, 
MAGE
, 30, 1},

277 {"Prõ°", 2, 25, 16, 2, 32, 48, 35, 30,-3,-3, 3,-1, 0, 2, 
PRIEST
, 20, 1},

278 {"Rogue", 6, 45, 32, 5, 16, 60, 66, 30, 2, 1,-2, 3, 1,-1, 
MAGE
, 0, 5},

279 {"R™gî", 4, 30, 24, 3, 24, 56, 72, 30, 2, 2, 0, 1, 1, 1, 
MAGE
, 40, 3},

280 {"PÆadö",6, 20, 12, 1, 38, 68, 40, 24, 3,-3, 1, 0, 2, 2, 
PRIEST
, 35, 1}

287 
öt16
 
	g˛ass_Àvñ_adj
[
MAX_CLASS
][
MAX_LEV_ADJ
] = {

297 
öt32u
 
	g•ñl_À¨√d
 = 0;

298 
öt32u
 
	g•ñl_w‹ked
 = 0;

299 
öt32u
 
	g•ñl_f‹gŸãn
 = 0;

300 
öt8u
 
	g•ñl_‹dî
[32];

305 #ifde‡
MACGAME


306 
•ñl_ty≥
 (*
magic_•ñl
)[31];

308 
•ñl_ty≥
 
	gmagic_•ñl
[
MAX_CLASS
-1][31] = {

477 *
	g•ñl_«mes
[62] = {

503 
öt16u
 
	g∂ayî_öô
[
MAX_CLASS
][5] = {

	@potions.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

12 
	~"exã∫s.h
"

14 #ifde‡
USG


15 
	~<°rög.h
>

17 
	~<°rögs.h
>

21 
	$quaff
()

23 
öt32u
 
i
, 
l
;

24 
j
, 
k
, 
ôem_vÆ
;

25 
idít
;

26 
öví_ty≥
 *
i_±r
;

27 
misc
 *
m_±r
;

28 
Êags
 *
f_±r
;

31 
˛ass_ty≥
 *
c_±r
;

34 
‰ì_tu∫_Êag
 = 
TRUE
;

35 i‡(
öví_˘r
 == 0)

36 
	`msg_¥öt
("But youáreÇot carryingánything.");

37 i‡(!
	`föd_ønge
(
TV_POTION1
, 
TV_POTION2
, &
j
, &
k
))

38 
	`msg_¥öt
("YouáreÇot carryingányÖotions.");

39 i‡(
	`gë_ôem
(&
ôem_vÆ
, "Quaf‡whichÖŸi⁄?", 
j
, 
k
, 
CNIL
, CNIL))

41 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

42 
i
 = 
i_±r
->
Êags
;

43 
‰ì_tu∫_Êag
 = 
FALSE
;

44 
idít
 = 
FALSE
;

45 i‡(
i
 == 0)

47 
	`msg_¥öt
 ("You feelÜessÅhirsty.");

48 
idít
 = 
TRUE
;

50 
i
 != 0)

52 
j
 = 
	`bô_pos
(&
i
) + 1;

53 i‡(
i_±r
->
tvÆ
 =
TV_POTION2
)

54 
j
 += 32;

56 
j
)

59 i‡(
	`öc_°©
 (
A_STR
))

61 
	`msg_¥öt
("Wow! What bulging muscles!");

62 
idít
 = 
TRUE
;

66 
idít
 = 
TRUE
;

67 
	`lo£_°r
();

70 i‡(
	`ªs_°©
 (
A_STR
))

72 
	`msg_¥öt
("You feel warmáll over.");

73 
idít
 = 
TRUE
;

77 i‡(
	`öc_°©
 (
A_INT
))

79 
	`msg_¥öt
("Aren't you brilliant!");

80 
idít
 = 
TRUE
;

84 
idít
 = 
TRUE
;

85 
	`lo£_öt
();

88 i‡(
	`ªs_°©
 (
A_INT
))

90 
	`msg_¥öt
("You have haveá warm feeling.");

91 
idít
 = 
TRUE
;

95 i‡(
	`öc_°©
 (
A_WIS
))

97 
	`msg_¥öt
("You suddenly haveáÖrofoundÅhought!");

98 
idít
 = 
TRUE
;

102 
idít
 = 
TRUE
;

103 
	`lo£_wis
();

106 i‡(
	`ªs_°©
 (
A_WIS
))

108 
	`msg_¥öt
("You feel your wisdomÑeturning.");

109 
idít
 = 
TRUE
;

113 i‡(
	`öc_°©
 (
A_CHR
))

115 
	`msg_¥öt
("Gee,áin't you cute!");

116 
idít
 = 
TRUE
;

120 
idít
 = 
TRUE
;

121 
	`lo£_chr
();

124 i‡(
	`ªs_°©
 (
A_CHR
))

126 
	`msg_¥öt
("You feel yourÜooksÑeturning.");

127 
idít
 = 
TRUE
;

131 
idít
 = 
	`hp_∂ayî
(
	`damrﬁl
(2, 7));

134 
idít
 = 
	`hp_∂ayî
(
	`damrﬁl
(4, 7));

137 
idít
 = 
	`hp_∂ayî
(
	`damrﬁl
(6, 7));

140 
idít
 = 
	`hp_∂ayî
(1000);

143 i‡(
	`öc_°©
 (
A_CON
))

145 
	`msg_¥öt
("You feelÅingly forá moment.");

146 
idít
 = 
TRUE
;

150 
m_±r
 = &
py
.
misc
;

151 i‡(
m_±r
->
exp
 < 
MAX_EXP
)

153 
l
 = (
m_±r
->
exp
 / 2) + 10;

154 i‡(
l
 > 100000L)Ü = 100000L;

155 
m_±r
->
exp
 +
l
;

156 
	`msg_¥öt
("You feel moreÉxperienced.");

157 
	`¥t_ex≥rõn˚
();

158 
idít
 = 
TRUE
;

162 
f_±r
 = &
py
.
Êags
;

163 i‡(!
f_±r
->
‰ì_a˘
)

166 
	`msg_¥öt
("You fallásleep.");

167 
f_±r
->
∑ølysis
 +
	`øndöt
(4) + 4;

168 
idít
 = 
TRUE
;

172 
f_±r
 = &
py
.
Êags
;

173 i‡(
f_±r
->
blöd
 == 0)

175 
	`msg_¥öt
("Youáre covered byá veil of darkness.");

176 
idít
 = 
TRUE
;

178 
f_±r
->
blöd
 +
	`øndöt
(100) + 100;

181 
f_±r
 = &
py
.
Êags
;

182 i‡(
f_±r
->
c⁄fu£d
 == 0)

184 
	`msg_¥öt
("Hey! This is good stuff! * Hick! *");

185 
idít
 = 
TRUE
;

187 
f_±r
->
c⁄fu£d
 +
	`øndöt
(20) + 12;

190 
f_±r
 = &
py
.
Êags
;

191 i‡(
f_±r
->
pois⁄ed
 == 0)

193 
	`msg_¥öt
("You feel very sick.");

194 
idít
 = 
TRUE
;

196 
f_±r
->
pois⁄ed
 +
	`øndöt
(15) + 10;

199 i‡(
py
.
Êags
.
Á°
 == 0)

200 
idít
 = 
TRUE
;

201 
py
.
Êags
.
Á°
 +
	`øndöt
(25) + 15;

204 i‡(
py
.
Êags
.
¶ow
 == 0)

205 
idít
 = 
TRUE
;

206 
py
.
Êags
.
¶ow
 +
	`øndöt
(25) + 15;

209 i‡(
	`öc_°©
 (
A_DEX
))

211 
	`msg_¥öt
("You feel moreÜimber!");

212 
idít
 = 
TRUE
;

216 i‡(
	`ªs_°©
 (
A_DEX
))

218 
	`msg_¥öt
("You feelÜess clumsy.");

219 
idít
 = 
TRUE
;

223 i‡(
	`ªs_°©
 (
A_CON
))

225 
	`msg_¥öt
("You feel your healthÑeturning!");

226 
idít
 = 
TRUE
;

230 
idít
 = 
	`cuª_blöd√ss
();

233 
idít
 = 
	`cuª_c⁄fusi⁄
();

236 
idít
 = 
	`cuª_pois⁄
();

242 
m_±r
 = &
py
.
misc
;

243 
c_±r
 = &
˛ass
[
m_±r
->
p˛ass
];

244 i‡(
c_±r
->
•ñl
 =
MAGE
)

246 
	`ˇlc_•ñls
(
A_INT
);

247 
	`ˇlc_m™a
(
A_INT
);

249 i‡(
c_±r
->
•ñl
 =
PRIEST
)

251 
	`ˇlc_•ñls
(
A_WIS
);

252 
	`ˇlc_m™a
(
A_WIS
);

257 
öví_ty≥
 *
w_±r
;

258 
vty≥
 
tmp_°r
;

259 *
	`des¸ibe_u£
 ();

261 
k
 = 22; k < 
INVEN_ARRAY_SIZE
; k++)

263 
w_±r
 = &
övít‹y
[
k
];

264 i‡(
w_±r
->
tvÆ
 !
TV_NOTHING
 && 
	`ích™ãd
 (w_ptr))

266 (Ë
	`•rötf
 (
tmp_°r
,

268 
	`des¸ibe_u£
(
k
));

269 
	`msg_¥öt
 (
tmp_°r
);

270 
	`add_ös¸ibe
(
w_±r
, 
ID_MAGIK
);

271 
idít
 = 
TRUE
;

278 i‡(
py
.
misc
.
exp
 > 0)

280 
öt32
 
m
, 
sˇÀ
;

281 
	`msg_¥öt
("You feel your memories fade.");

283 
m
 = 
py
.
misc
.
exp
 / 5;

284 i‡(
py
.
misc
.
exp
 > 
MAX_SHORT
)

286 
sˇÀ
 = 
MAX_LONG
 / 
py
.
misc
.
exp
;

287 
m
 +(
	`øndöt
(()
sˇÀ
Ë* 
py
.
misc
.
exp
) / (scale * 5);

290 
m
 +
	`øndöt
(()
py
.
misc
.
exp
) / 5;

291 
	`lo£_exp
(
m
);

292 
idít
 = 
TRUE
;

296 
f_±r
 = &
py
.
Êags
;

297 (Ë
	`cuª_pois⁄
();

298 i‡(
f_±r
->
food
 > 150) f_ptr->food = 150;

299 
f_±r
->
∑ølysis
 = 4;

300 
	`msg_¥öt
("TheÖotion makes you vomit!");

301 
idít
 = 
TRUE
;

304 i‡(
py
.
Êags
.
övu 
 == 0)

305 
idít
 = 
TRUE
;

306 
py
.
Êags
.
övu 
 +
	`øndöt
(10) + 10;

309 i‡(
py
.
Êags
.
hîo
 == 0)

310 
idít
 = 
TRUE
;

311 
py
.
Êags
.
hîo
 +
	`øndöt
(25) + 25;

314 i‡(
py
.
Êags
.
shîo
 == 0)

315 
idít
 = 
TRUE
;

316 
py
.
Êags
.
shîo
 +
	`øndöt
(25) + 25;

319 
idít
 = 
	`ªmove_„¨
();

322 
idít
 = 
	`ª°‹e_Àvñ
();

325 
f_±r
 = &
py
.
Êags
;

326 i‡(
f_±r
->
ªsi°_hót
 == 0)

327 
idít
 = 
TRUE
;

328 
f_±r
->
ªsi°_hót
 +
	`øndöt
(10) + 10;

331 
f_±r
 = &
py
.
Êags
;

332 i‡(
f_±r
->
ªsi°_cﬁd
 == 0)

333 
idít
 = 
TRUE
;

334 
f_±r
->
ªsi°_cﬁd
 +
	`øndöt
(10) + 10;

337 i‡(
py
.
Êags
.
dëe˘_öv
 == 0)

338 
idít
 = 
TRUE
;

339 
	`dëe˘_öv2
(
	`øndöt
(12)+12);

342 
idít
 = 
	`¶ow_pois⁄
();

345 
idít
 = 
	`cuª_pois⁄
();

348 
m_±r
 = &
py
.
misc
;

349 i‡(
m_±r
->
cm™a
 < m_±r->
m™a
)

351 
m_±r
->
cm™a
 = m_±r->
m™a
;

352 
idít
 = 
TRUE
;

353 
	`msg_¥öt
("Your feel your head clear.");

354 
	`¥t_cm™a
();

358 
f_±r
 = &
py
.
Êags
;

359 i‡(
f_±r
->
tim_ö‰a
 == 0)

361 
	`msg_¥öt
("YourÉyes beginÅoÅingle.");

362 
idít
 = 
TRUE
;

364 
f_±r
->
tim_ö‰a
 +100 + 
	`øndöt
(100);

367 
	`msg_¥öt
 ("InternalÉrror inÖotion()");

372 i‡(
idít
)

374 i‡(!
	`known1_p
(
i_±r
))

376 
m_±r
 = &
py
.
misc
;

378 
m_±r
->
exp
 +(
i_±r
->
Àvñ
 + (m_±r->
Àv
 >> 1)) / m_ptr->lev;

379 
	`¥t_ex≥rõn˚
();

381 
	`idítify
(&
ôem_vÆ
);

382 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

385 i‡(!
	`known1_p
(
i_±r
))

386 
	`ßm∂e
 (
i_±r
);

388 
	`add_food
(
i_±r
->
p1
);

389 
	`desc_ªmaö
(
ôem_vÆ
);

390 
	`öví_de°roy
(
ôem_vÆ
);

392 
	}
}

	@prayer.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

12 
	~"exã∫s.h
"

16 
	$¥ay
()

18 
i
, 
j
, 
ôem_vÆ
, 
dú
;

19 
choi˚
, 
ch™˚
, 
ªsu…
;

20 
•ñl_ty≥
 *
s_±r
;

21 
misc
 *
m_±r
;

22 
Êags
 *
f_±r
;

23 
öví_ty≥
 *
i_±r
;

24 #ifde‡
ATARIST_MWC


25 
öt32u
 
hﬁdî
;

28 
‰ì_tu∫_Êag
 = 
TRUE
;

29 i‡(
py
.
Êags
.
blöd
 > 0)

30 
	`msg_¥öt
("You can't seeÅoÑead yourÖrayer!");

31 i‡(
	`no_light
())

32 
	`msg_¥öt
("You haveÇoÜightÅoÑead by.");

33 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

34 
	`msg_¥öt
("YouáreÅoo confused.");

35 i‡(
˛ass
[
py
.
misc
.
p˛ass
].
•ñl
 !
PRIEST
)

36 
	`msg_¥öt
("Pray hardÉnoughánd yourÖrayers may beánswered.");

37 i‡(
öví_˘r
 == 0)

38 
	`msg_¥öt
 ("But youáreÇot carryingánything!");

39 i‡(!
	`föd_ønge
(
TV_PRAYER_BOOK
, 
TV_NEVER
, &
i
, &
j
))

40 
	`msg_¥öt
 ("YouáreÇot carryingány Holy Books!");

41 i‡(
	`gë_ôem
(&
ôem_vÆ
, "U£ which Hﬁy Book?", 
i
, 
j
, 
CNIL
, CNIL))

43 
ªsu…
 = 
	`ˇ°_•ñl
("RecôêwhichÖøyî?", 
ôem_vÆ
, &
choi˚
, &
ch™˚
);

44 i‡(
ªsu…
 < 0)

45 
	`msg_¥öt
("You don't knowányÖrayers inÅhat book.");

46 i‡(
ªsu…
 > 0)

48 
s_±r
 = &
magic_•ñl
[
py
.
misc
.
p˛ass
-1][
choi˚
];

49 
‰ì_tu∫_Êag
 = 
FALSE
;

51 i‡(
	`øndöt
(100Ë< 
ch™˚
)

52 
	`msg_¥öt
("YouÜost your concentration!");

56 
choi˚
+1)

59 (Ë
	`dëe˘_evû
();

62 (Ë
	`hp_∂ayî
(
	`damrﬁl
(3, 3));

65 
	`bÀss
(
	`øndöt
(12)+12);

68 (Ë
	`ªmove_„¨
();

71 (Ë
	`light_¨ó
(
ch¨_row
, 
ch¨_cﬁ
);

74 (Ë
	`dëe˘_å≠
();

77 (Ë
	`dëe˘_sdo‹
();

80 (Ë
	`¶ow_pois⁄
();

83 i‡(
	`gë_dú
(
CNIL
, &
dú
))

84 (Ë
	`c⁄fu£_m⁄°î
(
dú
, 
ch¨_row
, 
ch¨_cﬁ
);

87 
	`ãÀp‹t
(()(
py
.
misc
.
Àv
*3));

90 (Ë
	`hp_∂ayî
(
	`damrﬁl
(4, 4));

93 
	`bÀss
(
	`øndöt
(24)+24);

96 (Ë
	`¶ìp_m⁄°îs1
(
ch¨_row
, 
ch¨_cﬁ
);

99 
	`¸óã_food
();

102 
i
 = 0; i < 
INVEN_ARRAY_SIZE
; i++)

104 
i_±r
 = &
övít‹y
[
i
];

106 i‡(
i_±r
->
tvÆ
 >
TV_MIN_WEAR


107 && 
i_±r
->
tvÆ
 <
TV_MAX_WEAR
)

108 #ifde‡
ATARIST_MWC


109 
i_±r
->
Êags
 &~(
hﬁdî
 = 
TR_CURSED
);

111 
i_±r
->
Êags
 &~
TR_CURSED
;

116 
f_±r
 = &
py
.
Êags
;

117 
f_±r
->
ªsi°_hót
 +
	`øndöt
(10) + 10;

118 
f_±r
->
ªsi°_cﬁd
 +
	`øndöt
(10) + 10;

121 (Ë
	`cuª_pois⁄
();

124 i‡(
	`gë_dú
(
CNIL
, &
dú
))

125 
	`fúe_bÆl
(
GF_HOLY_ORB
, 
dú
, 
ch¨_row
, 
ch¨_cﬁ
,

126 ()(
	`damrﬁl
(3, 6)+
py
.
misc
.
Àv
),

130 (Ë
	`hp_∂ayî
(
	`damrﬁl
(8, 4));

133 
	`dëe˘_öv2
(
	`øndöt
(24)+24);

136 (Ë
	`¥Ÿe˘_evû
();

139 
	`óπhquake
();

142 
	`m≠_¨ó
();

145 (Ë
	`hp_∂ayî
(
	`damrﬁl
(16, 4));

148 (Ë
	`tu∫_undód
();

151 
	`bÀss
(
	`øndöt
(48)+48);

154 (Ë
	`di•ñ_¸ótuª
(
CD_UNDEAD
, ()(3*
py
.
misc
.
Àv
));

157 (Ë
	`hp_∂ayî
(200);

160 (Ë
	`di•ñ_¸ótuª
(
CD_EVIL
, ()(3*
py
.
misc
.
Àv
));

163 
	`w¨dög_glyph
();

166 (Ë
	`ªmove_„¨
();

167 (Ë
	`cuª_pois⁄
();

168 (Ë
	`hp_∂ayî
(1000);

169 
i
=
A_STR
; i<=
A_CHR
; i++)

170 (Ë
	`ªs_°©
(
i
);

171 (Ë
	`di•ñ_¸ótuª
(
CD_EVIL
, ()(4*
py
.
misc
.
Àv
));

172 (Ë
	`tu∫_undód
();

173 i‡(
py
.
Êags
.
övu 
 < 3)

174 
py
.
Êags
.
övu 
 = 3;

176 
py
.
Êags
.
övu 
++;

182 i‡(!
‰ì_tu∫_Êag
)

184 
m_±r
 = &
py
.
misc
;

185 i‡((
•ñl_w‹ked
 & (1L << 
choi˚
)) == 0)

187 
m_±r
->
exp
 +
s_±r
->
£xp
 << 2;

188 
	`¥t_ex≥rõn˚
();

189 
•ñl_w‹ked
 |(1L << 
choi˚
);

193 
m_±r
 = &
py
.
misc
;

194 i‡(!
‰ì_tu∫_Êag
)

196 i‡(
s_±r
->
sm™a
 > 
m_±r
->
cm™a
)

198 
	`msg_¥öt
("You faint from fatigue!");

199 
py
.
Êags
.
∑ølysis
 =

200 
	`øndöt
(()(5 * (
s_±r
->
sm™a
-
m_±r
->
cm™a
)));

201 
m_±r
->
cm™a
 = 0;

202 
m_±r
->
cm™a_‰ac
 = 0;

203 i‡(
	`øndöt
(3) == 1)

205 
	`msg_¥öt
("You have damaged your health!");

206 (Ë
	`dec_°©
 (
A_CON
);

210 
m_±r
->
cm™a
 -
s_±r
->
sm™a
;

211 
	`¥t_cm™a
();

215 
	}
}

	@recall.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

13 
	~"c⁄fig.h
"

14 
	~"c⁄°™t.h
"

15 
	~"ty≥s.h
"

16 
	~"exã∫s.h
"

18 #i‡
deföed
(
LINT_ARGS
)

19 
roff
(*);

21 
roff
();

24 *
	gdesc_©y≥
[] = {

50 *
	gdesc_amëhod
[] = {

71 *
	gdesc_howmuch
[] = {

81 *
	gdesc_move
[] = {

88 *
	gdesc_•ñl
[] = {

104 *
	gdesc_bª©h
[] = {

110 *
	gdesc_wók√ss
[] = {

118 
vty≥
 
	groffbuf
;

119 *
	grofÂ
;

120 
	grofÂlöe
;

122 
	#∂uøl
(
c
, 
ss
, 
•
Ë((cË=1 ? s†: sp)

	)

127 
	#know¨m‹
(
l
,
d
Ë((dË> 304 / (4 + (l)))

	)

130 
	#knowdamage
(
l
,
a
,
d
Ë((4 + (l))*◊Ë> 80 * (d))

	)

133 
	$boﬁ_roff_ªˇŒ
(
m⁄_num
)

134 
m⁄_num
;

136 
ªˇŒ_ty≥
 *
mp
;

137 
i
;

139 i‡(
wiz¨d
)

140  
TRUE
;

141 
mp
 = &
c_ªˇŒ
[
m⁄_num
];

142 i‡(
mp
->
r_cmove
 || mp->
r_cde„n£
 || mp->
r_kûls
 || mp->
r_•ñls


143 || 
mp
->
r_dóths
)

144  
TRUE
;

145 
i
 = 0; i < 4; i++)

146 i‡(
mp
->
r_©ècks
[
i
])

147  
TRUE
;

148  
FALSE
;

149 
	}
}

152 
	$roff_ªˇŒ
(
m⁄_num
)

153 
m⁄_num
;

155 *
p
, *
q
;

156 
öt8u
 *
pu
;

157 
vty≥
 
ãmp
;

158 
ªˇŒ_ty≥
 *
mp
;

159 
¸ótuª_ty≥
 *
˝
;

160 
i
, 
k
;

161 
öt32u
 
j
;

162 
öt32
 
ãm∂⁄g
;

163 
m•ìd
;

164 
öt32u
 
rcmove
, 
r•ñls
;

165 
öt16u
 
rcde„n£
;

166 
ªˇŒ_ty≥
 
ßve_mem
;

167 #ifde‡
ATARIST_MWC


168 
öt32u
 
hﬁdî
;

169 
öt32u
 
hﬁdî2
;

172 
mp
 = &
c_ªˇŒ
[
m⁄_num
];

173 
˝
 = &
c_li°
[
m⁄_num
];

174 i‡(
wiz¨d
)

176 
ßve_mem
 = *
mp
;

177 
mp
->
r_kûls
 = 
MAX_SHORT
;

178 
mp
->
r_wake
 = mp->
r_ign‹e
 = 
MAX_UCHAR
;

179 #ifde‡
ATARIST_MWC


180 
j
 = (((
˝
->
cmove
 & (
hﬁdî
 = 
CM_4D2_OBJ
)) != 0) * 8) +

181 (((
˝
->
cmove
 & (
hﬁdî
 = 
CM_2D2_OBJ
)) != 0) * 4) +

182 (((
˝
->
cmove
 & (
hﬁdî
 = 
CM_1D2_OBJ
)) != 0) * 2) +

183 ((
˝
->
cmove
 & (
hﬁdî
 = 
CM_90_RANDOM
)) != 0) +

184 ((
˝
->
cmove
 & (
hﬁdî
 = 
CM_60_RANDOM
)) != 0);

185 
hﬁdî
 = 
CM_TREASURE
;

186 
mp
->
r_cmove
 = (
˝
->
cmove
 & ~
hﬁdî
Ë| (
j
 << 
CM_TR_SHIFT
);

188 
j
 = (((
˝
->
cmove
 & 
CM_4D2_OBJ
) != 0) * 8) +

189 (((
˝
->
cmove
 & 
CM_2D2_OBJ
) != 0) * 4) +

190 (((
˝
->
cmove
 & 
CM_1D2_OBJ
) != 0) * 2) +

191 ((
˝
->
cmove
 & 
CM_90_RANDOM
) != 0) +

192 ((
˝
->
cmove
 & 
CM_60_RANDOM
) != 0);

193 
mp
->
r_cmove
 = (
˝
->
cmove
 & ~
CM_TREASURE
Ë| (
j
 << 
CM_TR_SHIFT
);

195 
mp
->
r_cde„n£
 = 
˝
->
cde„n£
;

196 #ifde‡
ATARIST_MWC


197 i‡(
˝
->
•ñls
 & (
hﬁdî
 = 
CS_FREQ
))

199 i‡(
˝
->
•ñls
 & 
CS_FREQ
)

201 
mp
->
r_•ñls
 = 
˝
->
•ñls
 | 
CS_FREQ
;

203 
mp
->
r_•ñls
 = 
˝
->
•ñls
;

204 
j
 = 0;

205 
pu
 = 
˝
->
damage
;

206 *
pu
 !0 && 
j
 < 4)

209 
mp
->
r_©ècks
[()
j
] = 
MAX_UCHAR
;

210 
j
++;

211 
pu
++;

214 i‡(
mp
->
r_cmove
 & 
CM_ONLY_MAGIC
)

215 
mp
->
r_©ècks
[0] = 
MAX_UCHAR
;

217 
rofÂlöe
 = 0;

218 
rofÂ
 = 
roffbuf
;

219 #ifde‡
ATARIST_MWC


220 
hﬁdî
 = ~
CS_FREQ
;

221 
r•ñls
 = 
mp
->
r_•ñls
 & 
˝
->
•ñls
 & 
hﬁdî
;

223 
hﬁdî
 = 
CM_WIN
;

224 
rcmove
 = 
mp
->
r_cmove
 | (
hﬁdî
 & 
˝
->
cmove
);

226 
r•ñls
 = 
mp
->
r_•ñls
 & 
˝
->
•ñls
 & ~
CS_FREQ
;

228 
rcmove
 = 
mp
->
r_cmove
 | (
CM_WIN
 & 
˝
->
cmove
);

230 
rcde„n£
 = 
mp
->
r_cde„n£
 & 
˝
->
cde„n£
;

231 (Ë
	`•rötf
(
ãmp
, "Thê%s:\n", 
˝
->
«me
);

232 
	`roff
(
ãmp
);

234 if(
mp
->
r_dóths
)

236 (Ë
	`•rötf
(
ãmp
,

238 
mp
->
r_dóths
, 
	`∂uøl
(mp->r_deaths, "has", "have") );

239 
	`roff
(
ãmp
);

240 
	`roff
(" been killed byÅhis creature,ánd ");

241 i‡(
mp
->
r_kûls
 == 0)

242 
	`roff
("it isÇotÉver knownÅo have been defeated.");

245 (Ë
	`•rötf
(
ãmp
,

247 
mp
->
r_kûls
, 
	`∂uøl
(mp->r_kills, "has", "have") );

248 
	`roff
(
ãmp
);

251 i‡(
mp
->
r_kûls
)

253 (Ë
	`•rötf
(
ãmp
, "AtÜeast %d ofÅhese creatures %s",

254 
mp
->
r_kûls
, 
	`∂uøl
(mp->r_kills, "has", "have") );

255 
	`roff
(
ãmp
);

256 
	`roff
(" been killed by contributorsÅo your monster memory.");

259 
	`roff
("No known battlesÅoÅhe deatháreÑecalled.");

261 
k
 = 
FALSE
;

262 i‡(
˝
->
Àvñ
 == 0)

264 
	`roff
(" ItÜives inÅheÅown");

265 
k
 = 
TRUE
;

267 i‡(
mp
->
r_kûls
)

270 
i
 = 
˝
->
Àvñ
;

271 i‡(
i
 > 
WIN_MON_APPEAR
)

272 
i
 = 
WIN_MON_APPEAR
;

273 (Ë
	`•rötf
(
ãmp
, " It isÇormally foundát depths of %d feet",

274 
i
 * 50);

275 
	`roff
(
ãmp
);

276 
k
 = 
TRUE
;

279 
m•ìd
 = 
˝
->
•ìd
 - 10;

280 i‡(
rcmove
 & 
CM_ALL_MV_FLAGS
)

282 i‡(
k
)

283 
	`roff
(",ánd");

286 
	`roff
(" It");

287 
k
 = 
TRUE
;

289 
	`roff
(" moves");

290 i‡(
rcmove
 & 
CM_RANDOM_MOVE
)

293 
	`roff
(
desc_howmuch
[()((
rcmove
 & 
CM_RANDOM_MOVE
) >> 3)]);

294 
	`roff
("Érratically");

296 i‡(
m•ìd
 == 1)

297 
	`roff
("átÇormal speed");

300 i‡(
rcmove
 & 
CM_RANDOM_MOVE
)

301 
	`roff
(",ánd");

302 i‡(
m•ìd
 <= 0)

304 i‡(
m•ìd
 == -1)

305 
	`roff
(" very");

306 i‡(
m•ìd
 < -1)

307 
	`roff
(" incredibly");

308 
	`roff
(" slowly");

312 i‡(
m•ìd
 == 3)

313 
	`roff
(" very");

314 i‡(
m•ìd
 > 3)

315 
	`roff
(" unbelievably");

316 
	`roff
(" quickly");

320 i‡(
rcmove
 & 
CM_ATTACK_ONLY
)

322 if(
k
)

323 
	`roff
(", but");

326 
	`roff
(" It");

327 
k
 = 
TRUE
;

329 
	`roff
(" doesÇot deignÅo chase intruders");

331 i‡(
rcmove
 & 
CM_ONLY_MAGIC
)

333 i‡(
k
)

334 
	`roff
 (", but");

337 
	`roff
 (" It");

338 
k
 = 
TRUE
;

340 
	`roff
 ("álways movesándáttacks by using magic");

342 if(
k
)

343 
	`roff
(".");

346 i‡(
mp
->
r_kûls
)

348 
	`roff
(" A kill ofÅhis");

349 i‡(
˝
->
cde„n£
 & 
CD_ANIMAL
)

350 
	`roff
("Çatural");

351 i‡(
˝
->
cde„n£
 & 
CD_EVIL
)

352 
	`roff
("Évil");

353 i‡(
˝
->
cde„n£
 & 
CD_UNDEAD
)

354 
	`roff
(" undead");

358 
ãm∂⁄g
 = ()
˝
->
mexp
 * cp->
Àvñ
 / 
py
.
misc
.
Àv
;

361 
j
 = ((()
˝
->
mexp
 * cp->
Àvñ
 % 
py
.
misc
.
Àv
) * ()1000 /

362 
py
.
misc
.
Àv
+5) / 10;

364 (Ë
	`•rötf
(
ãmp
, " cª©uª i†w‹th %ld.%02ldÖoöt%s", 
ãm∂⁄g
,

365 
j
, (
ãm∂⁄g
 == 1 && j == 0 ? "" : "s"));

366 
	`roff
(
ãmp
);

368 i‡(
py
.
misc
.
Àv
 / 10 =1Ë
p
 = "th";

371 
i
 = 
py
.
misc
.
Àv
 % 10;

372 i‡(
i
 =1Ë
p
 = "st";

373 i‡(
i
 =2Ë
p
 = "nd";

374 i‡(
i
 =3Ë
p
 = "rd";

375 
p
 = "th";

377 
i
 = 
py
.
misc
.
Àv
;

378 i‡(
i
 =8 || i =11 || i =18Ë
q
 = "n";

379 
q
 = "";

380 (Ë
	`•rötf
(
ãmp
, " f‹á%†%d%†Àvñ ch¨a˘î.", 
q
, 
i
, 
p
);

381 
	`roff
(
ãmp
);

386 
k
 = 
TRUE
;

387 
j
 = 
r•ñls
;

388 #ifde‡
ATARIST_MWC


389 
hﬁdî
 = 
CS_BREATHE
;

390 
hﬁdî2
 = 
CS_BR_LIGHT
;

391 
i
 = 0; 
j
 & 
hﬁdî
; i++)

393 
i
 = 0; 
j
 & 
CS_BREATHE
; i++)

396 #ifde‡
ATARIST_MWC


397 i‡(
j
 & (
hﬁdî2
 << 
i
))

399 i‡(
j
 & (
CS_BR_LIGHT
 << 
i
))

402 #ifde‡
ATARIST_MWC


403 
j
 &~(
hﬁdî2
 << 
i
);

405 
j
 &~(
CS_BR_LIGHT
 << 
i
);

407 i‡(
k
)

409 #ifde‡
ATARIST_MWC


410 
hﬁdî2
 = 
CS_FREQ
;

411 i‡(
mp
->
r_•ñls
 & 
hﬁdî2
)

413 i‡(
mp
->
r_•ñls
 & 
CS_FREQ
)

415 
	`roff
(" It can breathe ");

417 
	`roff
(" It isÑesistantÅo ");

418 
k
 = 
FALSE
;

420 #ifde‡
ATARIST_MWC


421 i‡(
j
 & 
hﬁdî
)

423 i‡(
j
 & 
CS_BREATHE
)

425 
	`roff
(", ");

427 
	`roff
("ánd ");

428 
	`roff
(
desc_bª©h
[
i
]);

431 
k
 = 
TRUE
;

432 #ifde‡
ATARIST_MWC


433 
hﬁdî
 = 
CS_SPELLS
;

434 
i
 = 0; 
j
 & 
hﬁdî
; i++)

436 
i
 = 0; 
j
 & 
CS_SPELLS
; i++)

439 i‡(
j
 & (
CS_TEL_SHORT
 << 
i
))

441 
j
 &~(
CS_TEL_SHORT
 << 
i
);

442 i‡(
k
)

444 #ifde‡
ATARIST_MWC


445 
hﬁdî2
 = 
CS_BREATHE
;

446 i‡(
r•ñls
 & 
hﬁdî2
)

448 i‡(
r•ñls
 & 
CS_BREATHE
)

450 
	`roff
(",ánd isálso");

452 
	`roff
(" It is");

453 
	`roff
(" magical, casting spells which ");

454 
k
 = 
FALSE
;

456 #ifde‡
ATARIST_MWC


457 i‡(
j
 & 
hﬁdî
)

459 i‡(
j
 & 
CS_SPELLS
)

461 
	`roff
(", ");

463 
	`roff
(" or ");

464 
	`roff
(
desc_•ñl
[
i
]);

467 #ifde‡
ATARIST_MWC


468 
hﬁdî
 = 
CS_BREATHE
|
CS_SPELLS
;

469 i‡(
r•ñls
 & 
hﬁdî
)

471 i‡(
r•ñls
 & (
CS_BREATHE
|
CS_SPELLS
))

474 i‡((
mp
->
r_•ñls
 & 
CS_FREQ
) > 5)

476 (Ë
	`•rötf
(
ãmp
, "; 1Åimêö %ld", 
˝
->
•ñls
 & 
CS_FREQ
);

477 
	`roff
(
ãmp
);

479 
	`roff
(".");

482 i‡(
	`know¨m‹
(
˝
->
Àvñ
, 
mp
->
r_kûls
))

484 (Ë
	`•rötf
(
ãmp
, " Iàha†™árm‹Ñ©ög o‡%d", 
˝
->
ac
);

485 
	`roff
(
ãmp
);

486 (Ë
	`•rötf
(
ãmp
, "ándá%sÜifeÑating of %dd%d.",

487 ((
˝
->
cde„n£
 & 
CD_MAX_HP
) ? " maximized" : ""),

488 
˝
->
hd
[0], cp->hd[1]);

489 
	`roff
(
ãmp
);

492 
k
 = 
TRUE
;

493 
j
 = 
rcmove
;

494 #ifde‡
ATARIST_MWC


495 
hﬁdî
 = 
CM_SPECIAL
;

496 
hﬁdî2
 = 
CM_INVISIBLE
;

497 
i
 = 0; 
j
 & 
hﬁdî
; i++)

499 
i
 = 0; 
j
 & 
CM_SPECIAL
; i++)

502 #ifde‡
ATARIST_MWC


503 i‡(
j
 & (
hﬁdî2
 << 
i
))

505 i‡(
j
 & (
CM_INVISIBLE
 << 
i
))

508 #ifde‡
ATARIST_MWC


509 
j
 &~(
hﬁdî2
 << 
i
);

511 
j
 &~(
CM_INVISIBLE
 << 
i
);

513 i‡(
k
)

515 
	`roff
(" It can ");

516 
k
 = 
FALSE
;

518 #ifde‡
ATARIST_MWC


519 i‡(
j
 & 
hﬁdî
)

521 i‡(
j
 & 
CM_SPECIAL
)

523 
	`roff
(", ");

525 
	`roff
("ánd ");

526 
	`roff
(
desc_move
[
i
]);

529 i‡(!
k
)

530 
	`roff
(".");

532 
k
 = 
TRUE
;

533 
j
 = 
rcde„n£
;

534 
i
 = 0; 
j
 & 
CD_WEAKNESS
; i++)

536 i‡(
j
 & (
CD_FROST
 << 
i
))

538 
j
 &~(
CD_FROST
 << 
i
);

539 i‡(
k
)

541 
	`roff
(" It is susceptibleÅo ");

542 
k
 = 
FALSE
;

544 i‡(
j
 & 
CD_WEAKNESS
)

545 
	`roff
(", ");

547 
	`roff
("ánd ");

548 
	`roff
(
desc_wók√ss
[
i
]);

551 i‡(!
k
)

552 
	`roff
(".");

553 i‡(
rcde„n£
 & 
CD_INFRA
)

554 
	`roff
(" It is warm blooded");

555 i‡(
rcde„n£
 & 
CD_NO_SLEEP
)

557 i‡(
rcde„n£
 & 
CD_INFRA
)

558 
	`roff
(",ánd");

560 
	`roff
(" It");

561 
	`roff
(" cannot be charmed or slept");

563 i‡(
rcde„n£
 & (
CD_NO_SLEEP
|
CD_INFRA
))

564 
	`roff
(".");

566 i‡(((
mp
->
r_wake
 * mp->r_wakeË> 
˝
->
¶ìp
Ë|| mp->
r_ign‹e
 =
MAX_UCHAR
 ||

567 (
˝
->
¶ìp
 =0 && 
mp
->
r_kûls
 >= 10))

569 
	`roff
(" It ");

570 if(
˝
->
¶ìp
 > 200)

571 
	`roff
("prefersÅo ignore");

572 if(
˝
->
¶ìp
 > 95)

573 
	`roff
("pays veryÜittleáttentionÅo");

574 if(
˝
->
¶ìp
 > 75)

575 
	`roff
("paysÜittleáttentionÅo");

576 if(
˝
->
¶ìp
 > 45)

577 
	`roff
("tendsÅo overlook");

578 if(
˝
->
¶ìp
 > 25)

579 
	`roff
("takes quiteá whileÅo see");

580 if(
˝
->
¶ìp
 > 10)

581 
	`roff
("takesá whileÅo see");

582 if(
˝
->
¶ìp
 > 5)

583 
	`roff
("is fairly observant of");

584 if(
˝
->
¶ìp
 > 3)

585 
	`roff
("is observant of");

586 if(
˝
->
¶ìp
 > 1)

587 
	`roff
("is very observant of");

588 if(
˝
->
¶ìp
 != 0)

589 
	`roff
("is vigilant for");

591 
	`roff
("isÉver vigilant for");

592 (Ë
	`•rötf
(
ãmp
, " intruders, which it mayÇotice from %d feet.",

593 10 * 
˝
->
Øf
);

594 
	`roff
(
ãmp
);

597 #ifde‡
ATARIST_MWC


598 
hﬁdî
 = 
CM_CARRY_OBJ
|
CM_CARRY_BOLD
;

599 i‡(
rcmove
 & 
hﬁdî
)

601 i‡(
rcmove
 & (
CM_CARRY_OBJ
|
CM_CARRY_GOLD
))

604 
	`roff
(" It may");

605 #ifde‡
ATARIST_MWC


606 
j
 = (
rcmove
 & (
hﬁdî
 = 
CM_TREASURE
)Ë>> 
CM_TR_SHIFT
;

608 
j
 = (
rcmove
 & 
CM_TREASURE
Ë>> 
CM_TR_SHIFT
;

610 i‡(
j
 == 1)

612 #ifde‡
ATARIST_MWC


613 i‡((
˝
->
cmove
 & (
hﬁdî
 = 
CM_TREASURE
)Ë=
CM_60_RANDOM
)

615 i‡((
˝
->
cmove
 & 
CM_TREASURE
Ë=
CM_60_RANDOM
)

617 
	`roff
(" sometimes");

619 
	`roff
(" often");

621 #ifde‡
ATARIST_MWC


622 i‡((
j
 =2Ë&& ((
˝
->
cmove
 & (
hﬁdî
 = 
CM_TREASURE
)) ==

624 i‡((
j
 =2Ë&& ((
˝
->
cmove
 & 
CM_TREASURE
) ==

626 (
CM_60_RANDOM
|
CM_90_RANDOM
)))

627 
	`roff
 (" often");

628 
	`roff
(" carry");

629 #ifde‡
ATARIST_MWC


630 
hﬁdî
 = 
CM_SMALL_OBJ
;

631 i‡(
rcmove
 & 
hﬁdî
)

633 i‡(
rcmove
 & 
CM_SMALL_OBJ
)

635 
p
 = " small objects";

637 
p
 = " objects";

638 i‡(
j
 == 1)

640 #ifde‡
ATARIST_MWC


641 i‡(
rcmove
 & 
hﬁdî
)

643 i‡(
rcmove
 & 
CM_SMALL_OBJ
)

645 
p
 = "á small object";

647 
p
 = "án object";

649 i‡(
j
 == 2)

650 
	`roff
(" one orÅwo");

653 (Ë
	`•rötf
(
ãmp
, " u∞tÿ%ld", 
j
);

654 
	`roff
(
ãmp
);

656 #ifde‡
ATARIST_MWC


657 i‡(
rcmove
 & (
hﬁdî
 = 
CM_CARRY_OBJ
))

659 i‡(
rcmove
 & 
CM_CARRY_OBJ
)

662 
	`roff
(
p
);

663 #ifde‡
ATARIST_MWC


664 i‡(
rcmove
 & (
hﬁdî
 = 
CM_CARRY_GOLD
))

666 i‡(
rcmove
 & 
CM_CARRY_GOLD
)

669 
	`roff
(" orÅreasure");

670 i‡(
j
 > 1)

671 
	`roff
("s");

673 
	`roff
(".");

675 i‡(
j
 != 1)

676 
	`roff
("Åreasures.");

678 
	`roff
("Åreasure.");

683 
k
 = 0;

684 
j
 = 0; j < 4; j++)

686 i‡(
mp
->
r_©ècks
[()
j
])

687 
k
++;

688 
pu
 = 
˝
->
damage
;

690 
j
 = 0;

691 
i
 = 0; *
pu
 != 0 && i < 4;Öu++, i++)

693 
©t_ty≥
, 
©t_how
, 
d1
, 
d2
;

696 i‡(!
mp
->
r_©ècks
[
i
])

699 
©t_ty≥
 = 
m⁄°î_©ècks
[*
pu
].
©èck_ty≥
;

700 
©t_how
 = 
m⁄°î_©ècks
[*
pu
].
©èck_desc
;

701 
d1
 = 
m⁄°î_©ècks
[*
pu
].
©èck_di˚
;

702 
d2
 = 
m⁄°î_©ècks
[*
pu
].
©èck_sides
;

704 
j
++;

705 i‡(
j
 == 1)

706 
	`roff
(" It can ");

707 i‡(
j
 =
k
)

708 
	`roff
(",ánd ");

710 
	`roff
(", ");

712 i‡(
©t_how
 > 19)

713 
©t_how
 = 0;

714 
	`roff
(
desc_amëhod
[
©t_how
]);

715 i‡(
©t_ty≥
 !1 || 
d1
 > 0 && 
d2
 > 0)

717 
	`roff
("Åo ");

718 i‡(
©t_ty≥
 > 24)

719 
©t_ty≥
 = 0;

720 
	`roff
(
desc_©y≥
[
©t_ty≥
]);

721 i‡(
d1
 && 
d2
)

723 i‡(
	`knowdamage
(
˝
->
Àvñ
, 
mp
->
r_©ècks
[
i
], 
d1
*
d2
))

725 i‡(
©t_ty≥
 == 19)

726 
	`roff
(" by");

728 
	`roff
(" with damage");

729 (Ë
	`•rötf
(
ãmp
, " %dd%d", 
d1
, 
d2
 );

730 
	`roff
(
ãmp
);

735 i‡(
j
)

736 
	`roff
(".");

737 i‡(
k
 > 0 && 
mp
->
r_©ècks
[0] >= 10)

738 
	`roff
(" It hasÇoÖhysicaláttacks.");

740 
	`roff
(" Nothing is knownábout itsáttack.");

742 #ifde‡
ATARIST_MWC


743 i‡(
˝
->
cmove
 & (
hﬁdî
 = 
CM_WIN
))

745 i‡(
˝
->
cmove
 & 
CM_WIN
)

747 
	`roff
(" Killing one ofÅhese winsÅhe game!");

748 
	`roff
("\n");

749 
	`¥t
("--∑u£--", 
rofÂlöe
, 0);

750 i‡(
wiz¨d
)

751 *
mp
 = 
ßve_mem
;

752  
	`ökey
();

753 
	}
}

756 
	$roff
(
p
)

757 *
p
;

759 *
q
, *
r
;

761 *
p
)

763 *
rofÂ
 = *
p
;

764 i‡(*
p
 ='\n' || 
rofÂ
 >
roffbuf
 + (roffbuf)-1)

766 
q
 = 
rofÂ
;

767 i‡(*
p
 != '\n')

768 *
q
 != ' ')

769 
q
--;

770 *
q
 = 0;

771 
	`¥t
(
roffbuf
, 
rofÂlöe
, 0);

772 
rofÂlöe
++;

773 
r
 = 
roffbuf
;

774 
q
 < 
rofÂ
)

776 
q
++;

777 *
r
 = *
q
;

778 
r
++;

780 
rofÂ
 = 
r
;

783 
rofÂ
++;

784 
p
++;

786 
	}
}

	@rnd.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

63 
	#RNG_M
 2147483647L

	)

64 
	#RNG_A
 16807L

	)

65 
	#RNG_Q
 127773L

	)

66 
	#RNG_R
 2836L

	)

69 
öt32u
 
	g∫d_£ed
;

71 
öt32u
 
	$gë_∫d_£ed
 ()

73  
∫d_£ed
;

74 
	}
}

76 
	$£t_∫d_£ed
 (
£edvÆ
)

77 
öt32u
 
£edvÆ
;

81 
∫d_£ed
 = (
£edvÆ
 % (
RNG_M
 - 1)) + 1;

82 
	}
}

85 
öt32
 
	$∫d
 ()

87 
low
, 
high
, 
ã°
;

89 
high
 = 
∫d_£ed
 / 
RNG_Q
;

90 
low
 = 
∫d_£ed
 % 
RNG_Q
;

91 
ã°
 = 
RNG_A
 * 
low
 - 
RNG_R
 * 
high
;

92 i‡(
ã°
 > 0)

93 
∫d_£ed
 = 
ã°
;

95 
∫d_£ed
 = 
ã°
 + 
RNG_M
;

96  
∫d_£ed
;

97 
	}
}

99 #ifde‡
TEST_RNG


101 
	$maö
 ()

103 
i
, 
øndom
;

105 
	`£t_∫d_£ed
 (0L);

107 
i
 = 1; i < 10000; i++)

108 (Ë
	`∫d
 ();

110 
øndom
 = 
	`∫d
 ();

111 
	`¥ötf
 ("z[10001] = %ld, should bê1043618065\n", 
øndom
);

112 i‡(
øndom
 == 1043618065L)

113 
	`¥ötf
 ("success!!!\n");

114 
	}
}

	@save.c

11 
	#DEBUG
(
x
Ë
	)
x

13 
	#DEBUG
(
x
)

	)

16 
	~<°dio.h
>

18 #i‚de‡
STDIO_LOADED


19 
	#STDIO_LOADED


	)

22 #ifde‡
__TURBOC__


23 
	~<io.h
>

26 
	~"c⁄fig.h
"

27 
	~"c⁄°™t.h
"

28 
	~"ty≥s.h
"

30 #i‚de‡
USG


32 
	~<sys/ty≥s.h
>

33 
	~<sys/fûe.h
>

34 
	~<sys/∑øm.h
>

37 #ifde‡
VMS


38 
	~<°rög.h
>

39 
	~<fûe.h
>

41 #ifde‡
USG


42 #i‚de‡
ATARIST_MWC


43 
	~<°rög.h
>

44 #i‚de‡
ATARIST_TC


45 
	~<f˙é.h
>

48 
	~"°rög.h
"

51 
	~<°rögs.h
>

58 
	~"exã∫s.h
"

60 #ifde‡
ATARIST_TC


61 
	~<time.h
>

64 
DEBUG
(
FILE
 *
logfûe
);

66 #i‡
deföed
(
LINT_ARGS
)

67 
sv_wrôe
();

68 
wr_byã
(
öt8u
);

69 
wr_sh‹t
(
öt16u
);

70 
wr_l⁄g
(
öt32u
);

71 
wr_byãs
(
öt8u
 *, );

72 
wr_°rög
(*);

73 
wr_sh‹ts
(
öt16u
 *, );

74 
wr_ôem
(
öví_ty≥
 *);

75 
wr_m⁄°î
(
m⁄°î_ty≥
 *);

76 
rd_byã
(
öt8u
 *);

77 
rd_sh‹t
(
öt16u
 *);

78 
rd_l⁄g
(
öt32u
 *);

79 
rd_byãs
(
öt8u
 *, );

80 
rd_°rög
(*);

81 
rd_sh‹ts
(
öt16u
 *, );

82 
rd_ôem
(
öví_ty≥
 *);

83 
rd_m⁄°î
(
m⁄°î_ty≥
 *);

85 
sv_wrôe
();

86 
wr_byã
();

87 
wr_sh‹t
();

88 
wr_l⁄g
();

89 
wr_byãs
();

90 
wr_°rög
();

91 
wr_sh‹ts
();

92 
wr_ôem
();

93 
wr_m⁄°î
();

94 
rd_byã
();

95 
rd_sh‹t
();

96 
rd_l⁄g
();

97 
rd_byãs
();

98 
rd_°rög
();

99 
rd_sh‹ts
();

100 
rd_ôem
();

101 
rd_m⁄°î
();

104 #i‡!
deföed
(
ATARIST_MWC
)

105 #ifde‡
MAC


106 
	~<time.h
>

108 
time
();

111 *
mÆloc
();

116 
FILE
 *
	gfûïå
;

117 
öt8u
 
	gx‹_byã
;

118 
	g‰om_ßvefûe
;

119 
öt32u
 
	g°¨t_time
;

127 
	$sv_wrôe
()

129 
öt32u
 
l
;

130 
i
, 
j
;

131 
cou¡
;

132 
öt8u
 
ch¨_tmp
, 
¥ev_ch¨
;

133 
ˇve_ty≥
 *
c_±r
;

134 
ªˇŒ_ty≥
 *
r_±r
;

135 
°©s
 *
s_±r
;

136 
Êags
 *
f_±r
;

137 
°‹e_ty≥
 *
°_±r
;

138 
misc
 *
m_±r
;

139 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
ATARI_ST
)

140 
öví_ty≥
 *
t_±r
;

145 i‡(
eof_Êag
)

146 
dóth
 = 
FALSE
;

148 
l
 = 0;

149 i‡(
föd_cut
)

150 
l
 |= 0x1;

151 i‡(
föd_examöe
)

152 
l
 |= 0x2;

153 i‡(
föd_¥£lf
)

154 
l
 |= 0x4;

155 i‡(
föd_bound
)

156 
l
 |= 0x8;

157 i‡(
¥om±_ˇºy_Êag
)

158 
l
 |= 0x10;

159 i‡(
rogue_like_comm™ds
)

160 
l
 |= 0x20;

161 i‡(
show_weight_Êag
)

162 
l
 |= 0x40;

163 i‡(
highlight_£ams
)

164 
l
 |= 0x80;

165 i‡(
föd_ign‹e_do‹s
)

166 
l
 |= 0x100;

167 i‡(
sound_bìp_Êag
)

168 
l
 |= 0x200;

169 i‡(
di•œy_cou¡s
)

170 
l
 |= 0x400;

171 i‡(
dóth
)

172 
l
 |= 0x80000000L;

173 i‡(
tŸÆ_wö√r
)

174 
l
 |= 0x40000000L;

176 
i
 = 0; i < 
MAX_CREATURES
; i++)

178 
r_±r
 = &
c_ªˇŒ
[
i
];

179 i‡(
r_±r
->
r_cmove
 ||Ñ_±r->
r_cde„n£
 ||Ñ_±r->
r_kûls
 ||

180 
r_±r
->
r_•ñls
 ||Ñ_±r->
r_dóths
 ||Ñ_±r->
r_©ècks
[0] ||

181 
r_±r
->
r_©ècks
[1] ||Ñ_ptr->r_attacks[2] ||Ñ_ptr->r_attacks[3])

183 
	`wr_sh‹t
((
öt16u
)
i
);

184 
	`wr_l⁄g
(
r_±r
->
r_cmove
);

185 
	`wr_l⁄g
(
r_±r
->
r_•ñls
);

186 
	`wr_sh‹t
(
r_±r
->
r_kûls
);

187 
	`wr_sh‹t
(
r_±r
->
r_dóths
);

188 
	`wr_sh‹t
(
r_±r
->
r_cde„n£
);

189 
	`wr_byã
(
r_±r
->
r_wake
);

190 
	`wr_byã
(
r_±r
->
r_ign‹e
);

191 
	`wr_byãs
(
r_±r
->
r_©ècks
, 
MAX_MON_NATTACK
);

194 
	`wr_sh‹t
((
öt16u
)0xFFFF);

196 
	`wr_l⁄g
(
l
);

198 
m_±r
 = &
py
.
misc
;

199 
	`wr_°rög
(
m_±r
->
«me
);

200 
	`wr_byã
(
m_±r
->
mÆe
);

201 
	`wr_l⁄g
((
öt32u
)
m_±r
->
au
);

202 
	`wr_l⁄g
((
öt32u
)
m_±r
->
max_exp
);

203 
	`wr_l⁄g
((
öt32u
)
m_±r
->
exp
);

204 
	`wr_sh‹t
(
m_±r
->
exp_‰ac
);

205 
	`wr_sh‹t
(
m_±r
->
age
);

206 
	`wr_sh‹t
(
m_±r
->
ht
);

207 
	`wr_sh‹t
(
m_±r
->
wt
);

208 
	`wr_sh‹t
(
m_±r
->
Àv
);

209 
	`wr_sh‹t
(
m_±r
->
max_dlv
);

210 
	`wr_sh‹t
((
öt16u
)
m_±r
->
§h
);

211 
	`wr_sh‹t
((
öt16u
)
m_±r
->
fos
);

212 
	`wr_sh‹t
((
öt16u
)
m_±r
->
bth
);

213 
	`wr_sh‹t
((
öt16u
)
m_±r
->
bthb
);

214 
	`wr_sh‹t
((
öt16u
)
m_±r
->
m™a
);

215 
	`wr_sh‹t
((
öt16u
)
m_±r
->
mhp
);

216 
	`wr_sh‹t
((
öt16u
)
m_±r
->
±ohô
);

217 
	`wr_sh‹t
((
öt16u
)
m_±r
->
±odam
);

218 
	`wr_sh‹t
((
öt16u
)
m_±r
->
∑c
);

219 
	`wr_sh‹t
((
öt16u
)
m_±r
->
±ﬂc
);

220 
	`wr_sh‹t
((
öt16u
)
m_±r
->
dis_th
);

221 
	`wr_sh‹t
((
öt16u
)
m_±r
->
dis_td
);

222 
	`wr_sh‹t
((
öt16u
)
m_±r
->
dis_ac
);

223 
	`wr_sh‹t
((
öt16u
)
m_±r
->
dis_èc
);

224 
	`wr_sh‹t
((
öt16u
)
m_±r
->
dißrm
);

225 
	`wr_sh‹t
((
öt16u
)
m_±r
->
ßve
);

226 
	`wr_sh‹t
((
öt16u
)
m_±r
->
sc
);

227 
	`wr_sh‹t
((
öt16u
)
m_±r
->
°l
);

228 
	`wr_byã
(
m_±r
->
p˛ass
);

229 
	`wr_byã
(
m_±r
->
¥a˚
);

230 
	`wr_byã
(
m_±r
->
hôdõ
);

231 
	`wr_byã
(
m_±r
->
expÁ˘
);

232 
	`wr_sh‹t
((
öt16u
)
m_±r
->
cm™a
);

233 
	`wr_sh‹t
(
m_±r
->
cm™a_‰ac
);

234 
	`wr_sh‹t
((
öt16u
)
m_±r
->
chp
);

235 
	`wr_sh‹t
(
m_±r
->
chp_‰ac
);

236 
i
 = 0; i < 4; i++)

237 
	`wr_°rög
 (
m_±r
->
hi°‹y
[
i
]);

239 
s_±r
 = &
py
.
°©s
;

240 
	`wr_byãs
(
s_±r
->
max_°©
, 6);

241 
	`wr_byãs
(
s_±r
->
cur_°©
, 6);

242 
	`wr_sh‹ts
((
öt16u
 *)
s_±r
->
mod_°©
, 6);

243 
	`wr_byãs
(
s_±r
->
u£_°©
, 6);

245 
f_±r
 = &
py
.
Êags
;

246 
	`wr_l⁄g
(
f_±r
->
°©us
);

247 
	`wr_sh‹t
((
öt16u
)
f_±r
->
ª°
);

248 
	`wr_sh‹t
((
öt16u
)
f_±r
->
blöd
);

249 
	`wr_sh‹t
((
öt16u
)
f_±r
->
∑ølysis
);

250 
	`wr_sh‹t
((
öt16u
)
f_±r
->
c⁄fu£d
);

251 
	`wr_sh‹t
((
öt16u
)
f_±r
->
food
);

252 
	`wr_sh‹t
((
öt16u
)
f_±r
->
food_dige°ed
);

253 
	`wr_sh‹t
((
öt16u
)
f_±r
->
¥Ÿe˘i⁄
);

254 
	`wr_sh‹t
((
öt16u
)
f_±r
->
•ìd
);

255 
	`wr_sh‹t
((
öt16u
)
f_±r
->
Á°
);

256 
	`wr_sh‹t
((
öt16u
)
f_±r
->
¶ow
);

257 
	`wr_sh‹t
((
öt16u
)
f_±r
->
a‰aid
);

258 
	`wr_sh‹t
((
öt16u
)
f_±r
->
pois⁄ed
);

259 
	`wr_sh‹t
((
öt16u
)
f_±r
->
image
);

260 
	`wr_sh‹t
((
öt16u
)
f_±r
->
¥Ÿevû
);

261 
	`wr_sh‹t
((
öt16u
)
f_±r
->
övu 
);

262 
	`wr_sh‹t
((
öt16u
)
f_±r
->
hîo
);

263 
	`wr_sh‹t
((
öt16u
)
f_±r
->
shîo
);

264 
	`wr_sh‹t
((
öt16u
)
f_±r
->
bÀs£d
);

265 
	`wr_sh‹t
((
öt16u
)
f_±r
->
ªsi°_hót
);

266 
	`wr_sh‹t
((
öt16u
)
f_±r
->
ªsi°_cﬁd
);

267 
	`wr_sh‹t
((
öt16u
)
f_±r
->
dëe˘_öv
);

268 
	`wr_sh‹t
((
öt16u
)
f_±r
->
w‹d_ªˇŒ
);

269 
	`wr_sh‹t
((
öt16u
)
f_±r
->
£e_ö‰a
);

270 
	`wr_sh‹t
((
öt16u
)
f_±r
->
tim_ö‰a
);

271 
	`wr_byã
(
f_±r
->
£e_öv
);

272 
	`wr_byã
(
f_±r
->
ãÀp‹t
);

273 
	`wr_byã
(
f_±r
->
‰ì_a˘
);

274 
	`wr_byã
(
f_±r
->
¶ow_dige°
);

275 
	`wr_byã
(
f_±r
->
aggøv©e
);

276 
	`wr_byã
(
f_±r
->
fúe_ªsi°
);

277 
	`wr_byã
(
f_±r
->
cﬁd_ªsi°
);

278 
	`wr_byã
(
f_±r
->
acid_ªsi°
);

279 
	`wr_byã
(
f_±r
->
ªgíî©e
);

280 
	`wr_byã
(
f_±r
->
lght_ªsi°
);

281 
	`wr_byã
(
f_±r
->
fÁŒ
);

282 
	`wr_byã
(
f_±r
->
su°aö_°r
);

283 
	`wr_byã
(
f_±r
->
su°aö_öt
);

284 
	`wr_byã
(
f_±r
->
su°aö_wis
);

285 
	`wr_byã
(
f_±r
->
su°aö_c⁄
);

286 
	`wr_byã
(
f_±r
->
su°aö_dex
);

287 
	`wr_byã
(
f_±r
->
su°aö_chr
);

288 
	`wr_byã
(
f_±r
->
c⁄fu£_m⁄°î
);

289 
	`wr_byã
(
f_±r
->
√w_•ñls
);

291 
	`wr_sh‹t
((
öt16u
)
missûe_˘r
);

292 
	`wr_l⁄g
((
öt32u
)
tu∫
);

293 
	`wr_sh‹t
((
öt16u
)
öví_˘r
);

294 
i
 = 0; i < 
öví_˘r
; i++)

295 
	`wr_ôem
(&
övít‹y
[
i
]);

296 
i
 = 
INVEN_WIELD
; i < 
INVEN_ARRAY_SIZE
; i++)

297 
	`wr_ôem
(&
övít‹y
[
i
]);

298 
	`wr_sh‹t
((
öt16u
)
öví_weight
);

299 
	`wr_sh‹t
((
öt16u
)
equù_˘r
);

300 
	`wr_l⁄g
(
•ñl_À¨√d
);

301 
	`wr_l⁄g
(
•ñl_w‹ked
);

302 
	`wr_l⁄g
(
•ñl_f‹gŸãn
);

303 
	`wr_byãs
(
•ñl_‹dî
, 32);

304 
	`wr_byãs
(
obje˘_idít
, 
OBJECT_IDENT_SIZE
);

305 
	`wr_l⁄g
(
øndes_£ed
);

306 
	`wr_l⁄g
(
town_£ed
);

307 
	`wr_sh‹t
((
öt16u
)
œ°_msg
);

308 
i
 = 0; i < 
MAX_SAVE_MSG
; i++)

309 
	`wr_°rög
(
ﬁd_msg
[
i
]);

312 
	`wr_sh‹t
((
öt16u
)
∑nic_ßve
);

313 
	`wr_sh‹t
((
öt16u
)
tŸÆ_wö√r
);

314 
	`wr_sh‹t
((
öt16u
)
nosc‹e
);

315 
	`wr_sh‹ts
(
∂ayî_hp
, 
MAX_PLAYER_LEVEL
);

317 
i
 = 0; i < 
MAX_STORES
; i++)

319 
°_±r
 = &
°‹e
[
i
];

320 
	`wr_l⁄g
((
öt32u
)
°_±r
->
°‹e_›í
);

321 
	`wr_sh‹t
((
öt16u
)
°_±r
->
ösu…_cur
);

322 
	`wr_byã
(
°_±r
->
ow√r
);

323 
	`wr_byã
(
°_±r
->
°‹e_˘r
);

324 
	`wr_sh‹t
(
°_±r
->
good_buy
);

325 
	`wr_sh‹t
(
°_±r
->
bad_buy
);

326 
j
 = 0; j < 
°_±r
->
°‹e_˘r
; j++)

328 
	`wr_l⁄g
((
öt32u
)
°_±r
->
°‹e_öví
[
j
].
sco°
);

329 
	`wr_ôem
(&
°_±r
->
°‹e_öví
[
j
].
sôem
);

334 #ifde‡
MAC


335 
l
 = 
	`time
((
time_t
 *)0);

337 
l
 = 
	`time
((*)0);

339 i‡(
l
 < 
°¨t_time
)

343 
l
 = 
°¨t_time
 + 86400L;

345 
	`wr_l⁄g
(
l
);

348 
	`wr_°rög
(
dõd_‰om
);

351 
l
 = 
	`tŸÆ_poöts
 ();

352 
	`wr_l⁄g
 (
l
);

355 
	`wr_l⁄g
 ((
öt32u
Ë
búth_d©e
);

359 i‡(
dóth
)

361 i‡(
	`„º‹
(
fûïå
Ë|| 
	`fÊush
(fûïåË=
EOF
)

362  
FALSE
;

363  
TRUE
;

366 
	`wr_sh‹t
((
öt16u
)
dun_Àvñ
);

367 
	`wr_sh‹t
((
öt16u
)
ch¨_row
);

368 
	`wr_sh‹t
((
öt16u
)
ch¨_cﬁ
);

369 
	`wr_sh‹t
((
öt16u
)
m⁄_tŸ_mu…
);

370 
	`wr_sh‹t
((
öt16u
)
cur_height
);

371 
	`wr_sh‹t
((
öt16u
)
cur_width
);

372 
	`wr_sh‹t
((
öt16u
)
max_∑√l_rows
);

373 
	`wr_sh‹t
((
öt16u
)
max_∑√l_cﬁs
);

375 
i
 = 0; i < 
MAX_HEIGHT
; i++)

376 
j
 = 0; j < 
MAX_WIDTH
; j++)

378 
c_±r
 = &
ˇve
[
i
][
j
];

379 i‡(
c_±r
->
˝å
 != 0)

381 
	`wr_byã
((
öt8u
)
i
);

382 
	`wr_byã
((
öt8u
)
j
);

383 
	`wr_byã
(
c_±r
->
˝å
);

386 
	`wr_byã
((
öt8u
)0xFF);

387 
i
 = 0; i < 
MAX_HEIGHT
; i++)

388 
j
 = 0; j < 
MAX_WIDTH
; j++)

390 
c_±r
 = &
ˇve
[
i
][
j
];

391 i‡(
c_±r
->
çå
 != 0)

393 
	`wr_byã
((
öt8u
)
i
);

394 
	`wr_byã
((
öt8u
)
j
);

395 
	`wr_byã
(
c_±r
->
çå
);

398 
	`wr_byã
((
öt8u
)0xFF);

401 
cou¡
 = 0;

402 
¥ev_ch¨
 = 0;

403 
i
 = 0; i < 
MAX_HEIGHT
; i++)

404 
j
 = 0; j < 
MAX_WIDTH
; j++)

406 
c_±r
 = &
ˇve
[
i
][
j
];

407 
ch¨_tmp
 = 
c_±r
->
fvÆ
 | (c_±r->
Ã
 << 4Ë| (c_±r->
fm
 << 5) |

408 (
c_±r
->
∂
 << 6Ë| (c_±r->
é
 << 7);

409 i‡(
ch¨_tmp
 !
¥ev_ch¨
 || 
cou¡
 =
MAX_UCHAR
)

411 
	`wr_byã
((
öt8u
)
cou¡
);

412 
	`wr_byã
(
¥ev_ch¨
);

413 
¥ev_ch¨
 = 
ch¨_tmp
;

414 
cou¡
 = 1;

417 
cou¡
++;

420 
	`wr_byã
((
öt8u
)
cou¡
);

421 
	`wr_byã
(
¥ev_ch¨
);

423 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
ATARI_ST
)

430 
t_±r
 = &
t_li°
[
t˝å
 - 1];

431 
i
 = 
t˝å
 - 1; i >
MIN_TRIX
; i--)

433 #ifde‡
MSDOS


434 i‡(
t_±r
->
tch¨
 =
wÆlsym
)

435 
t_±r
->
tch¨
 = '#';

437 #ifde‡
ATARI_ST


438 i‡(
t_±r
->
tch¨
 == ()240)

439 
t_±r
->
tch¨
 = '#';

441 
t_±r
--;

444 
	`wr_sh‹t
((
öt16u
)
t˝å
);

445 
i
 = 
MIN_TRIX
; i < 
t˝å
; i++)

446 
	`wr_ôem
(&
t_li°
[
i
]);

447 
	`wr_sh‹t
((
öt16u
)
mÂå
);

448 
i
 = 
MIN_MONIX
; i < 
mÂå
; i++)

449 
	`wr_m⁄°î
(&
m_li°
[
i
]);

451 i‡(
	`„º‹
(
fûïå
Ë|| (
	`fÊush
(fûïåË=
EOF
))

452  
FALSE
;

453  
TRUE
;

454 
	}
}

456 #ifde‡
MAC


463 
	$ßve_ch¨
(
Æways_ask
)

464 
Æways_ask
;

466 
rc
, 
Æªady_£t
, 
¥o˚ed
;

467 
öt16
 
vª‚um
;

470 i‡(
ch¨a˘î_ßved
Ë(
TRUE
);

472 
	`íabÀfûemíu
(
FALSE
);

474 
Æªady_£t
 = 
	`gëßvedeÁu…s
(
ßvefûe
, &
vª‚um
);

476 i‡(!
Æªady_£t
 || 
Æways_ask
)

480 
	`sÂosôi⁄
(
vª‚um
);

481 
¥o˚ed
 = 
	`d›utfûe
(
dóth
 ? "Save memoriesás:" : "Save gameás:",

482 
ßvefûe
, &
vª‚um
);

485 
¥o˚ed
 = 
TRUE
;

487 i‡(
¥o˚ed
)

489 
	`ch™gedúe˘‹y
(
vª‚um
);

490 
rc
 = 
	`_ßve_ch¨
(
ßvefûe
);

491 
	`ª°‹edúe˘‹y
();

494 
rc
 = 
FALSE
;

496 i‡(
rc
)

497 (Ë
	`£tfûeöfo
(
ßvefûe
, 
vª‚um
, 
SAVE_FTYPE
);

499 
	`íabÀfûemíu
(
TRUE
);

501 (
rc
);

502 
	}
}

508 
	$ßve_ch¨
()

510 
i
;

511 
vty≥
 
ãmp
;

513 #ifde‡
SECURE


514 
	`bePœyî
();

517 !
	`_ßve_ch¨
(
ßvefûe
))

519 (Ë
	`•rötf
(
ãmp
, "Savefûê'%s' faûs.", 
ßvefûe
);

520 
	`msg_¥öt
(
ãmp
);

521 
i
 = 0;

522 i‡(
	`ac˚ss
(
ßvefûe
, 0) < 0

523 || 
	`gë_check
("FileÉxists. Delete old savefile?") == 0

524 || (
i
 = 
	`u∆ök
(
ßvefûe
)) < 0)

526 i‡(
i
 < 0)

528 (Ë
	`•rötf
(
ãmp
, "C™'àdñëê'%s'", 
ßvefûe
);

529 
	`msg_¥öt
(
ãmp
);

531 
	`¥t
("New Savefile [ESCÅo give up]:", 0, 0);

532 i‡(!
	`gë_°rög
(
ãmp
, 0, 31, 45))

533  
FALSE
;

534 i‡(
ãmp
[0])

535 (Ë
	`°r˝y
(
ßvefûe
, 
ãmp
);

537 (Ë
	`•rötf
(
ãmp
, "Savög wôh %s...", 
ßvefûe
);

538 
	`¥t
(
ãmp
, 0, 0);

540 #ifde‡
SECURE


541 
	`beGames
();

543  
TRUE
;

544 
	}
}

547 
	$_ßve_ch¨
(
‚am
)

548 *
‚am
;

550 
vty≥
 
ãmp
;

551 
ok
, 
fd
;

552 
öt8u
 
ch¨_tmp
;

554 i‡(
ch¨a˘î_ßved
)

555  
TRUE
;

557 
	`nosig«ls
();

558 
	`put_qio
();

559 
	`di°urb
 (1, 0);

560 
	`ch™ge_•ìd
(-
∑ck_hóvy
);

561 
∑ck_hóvy
 = 0;

562 
ok
 = 
FALSE
;

565 #i‡!
	`deföed
(
ATARIST_MWC
Ë&& !deföed(
VMS
)

566 
fd
 = -1;

567 
fûïå
 = 
NULL
;

568 #i‡
	`deföed
(
MAC
Ë|| deföed(
AMIGA
)

570 
fd
 = 
	`›í
(
‚am
, 
O_RDWR
|
O_CREAT
|
O_TRUNC
);

571 #ifde‡
MAC


572 
	`macbegöwaô
 ();

575 
fd
 = 
	`›í
(
‚am
, 
O_RDWR
|
O_CREAT
|
O_EXCL
, 0600);

576 i‡(
fd
 < 0 && 
	`ac˚ss
(
‚am
, 0) >= 0 &&

577 (
‰om_ßvefûe
 ||

578 (
wiz¨d
 && 
	`gë_check
("Can't makeÇew savefile. Overwrite old?"))))

580 (Ë
	`chmod
(
‚am
, 0600);

581 
fd
 = 
	`›í
(
‚am
, 
O_RDWR
|
O_TRUNC
, 0600);

584 i‡(
fd
 >= 0)

586 (Ë
	`˛o£
(
fd
);

589 #i‡
	`deföed
(
©¨i°
Ë|| deföed(
ATARI_ST
Ë|| deföed(
THINK_C
Ë|| deföed(
MSDOS
)

590 
fûïå
 = 
	`f›í
(
ßvefûe
, "wb");

592 
fûïå
 = 
	`f›í
(
ßvefûe
, "w");

594 #i‡!
	`deföed
(
ATARIST_MWC
Ë&& !deföed(
VMS
)

597 
	`DEBUG
(
logfûe
 = 
	`f›í
("IO_LOG", "a"));

598 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "Savög d©®tÿ%s\n", 
ßvefûe
));

599 i‡(
fûïå
 !
NULL
)

601 
x‹_byã
 = 0;

602 
	`wr_byã
((
öt8u
)
CUR_VERSION_MAJ
);

603 
x‹_byã
 = 0;

604 
	`wr_byã
((
öt8u
)
CUR_VERSION_MIN
);

605 
x‹_byã
 = 0;

606 
	`wr_byã
((
öt8u
)
PATCH_LEVEL
);

607 
x‹_byã
 = 0;

608 
ch¨_tmp
 = 
	`øndöt
(256) - 1;

609 
	`wr_byã
(
ch¨_tmp
);

612 
ok
 = 
	`sv_wrôe
();

614 
	`DEBUG
(
	`f˛o£
 (
logfûe
));

616 i‡(
	`f˛o£
(
fûïå
Ë=
EOF
)

617 
ok
 = 
FALSE
;

620 #ifde‡
MAC


621 
	`ma˚ndwaô
 ();

624 i‡(!
ok
)

626 i‡(
fd
 >= 0)

627 (Ë
	`u∆ök
(
‚am
);

628 
	`sig«ls
();

629 i‡(
fd
 >= 0)

630 (Ë
	`•rötf
(
ãmp
, "Eº‹ wrôögÅÿfûê%s", 
‚am
);

632 (Ë
	`•rötf
(
ãmp
, "C™'à¸óãÇew fûê%s", 
‚am
);

633 
	`msg_¥öt
(
ãmp
);

634  
FALSE
;

637 
ch¨a˘î_ßved
 = 1;

639 
tu∫
 = -1;

640 
	`sig«ls
();

642  
TRUE
;

643 
	}
}

646 #ifde‡
MAC


648 
	$gë_ch¨
(
gíî©e
)

649 *
gíî©e
;

651 
rc
, 
exô_Êag
;

652 
öt16
 
vª‚um
;

654 (Ë
	`gëßvedeÁu…s
(
ßvefûe
, &
vª‚um
);

656 
	`ch™gedúe˘‹y
(
vª‚um
);

657 
rc
 = 
	`_gë_ch¨
(
gíî©e
, &
exô_Êag
);

658 
	`ª°‹edúe˘‹y
();

660 i‡(
exô_Êag
)

661 
	`exô_game
();

663 (
rc
);

664 
	}
}

669 #ifde‡
MAC


670 
	$_gë_ch¨
(
gíî©e
, 
exô_Êag
)

671 *
gíî©e
, *
exô_Êag
;

673 
	$gë_ch¨
(
gíî©e
)

674 *
gíî©e
;

677 
i
, 
j
;

678 
fd
, 
c
, 
ok
, 
tŸÆ_cou¡
;

679 
öt32u
 
l
, 
age
, 
time_ßved
;

680 
vty≥
 
ãmp
;

681 
öt16u
 
öt16u_tmp
;

682 
ˇve_ty≥
 *
c_±r
;

683 
ªˇŒ_ty≥
 *
r_±r
;

684 
misc
 *
m_±r
;

685 
°©s
 *
s_±r
;

686 
Êags
 *
f_±r
;

687 
°‹e_ty≥
 *
°_±r
;

688 
öt8u
 
ch¨_tmp
, 
ych¨
, 
xch¨
, 
cou¡
;

689 
öt8u
 
vîsi⁄_maj
, 
vîsi⁄_mö
, 
∑tch_Àvñ
;

690 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
ATARI_ST
)

691 
öví_ty≥
 *
t_±r
;

694 #ifde‡
MAC


695 *
exô_Êag
 = 
FALSE
;

698 
	`nosig«ls
();

699 *
gíî©e
 = 
TRUE
;

700 
fd
 = -1;

702 #i‚de‡
MAC


705 i‡(
	`ac˚ss
(
ßvefûe
, 0) != 0)

707 
	`sig«ls
();

708 
	`msg_¥öt
("Savefile doesÇotÉxist.");

709  
FALSE
;

713 
	`˛ór_s¸ìn
();

715 (Ë
	`•rötf
(
ãmp
, "Savefûê%†¥e£¡. Aâem±ögÑe°‹e.", 
ßvefûe
);

716 
	`put_buf„r
(
ãmp
, 23, 0);

718 i‡(
tu∫
 >= 0)

719 
	`msg_¥öt
("IMPOSSIBLE! AttemptÅoÑestore while stillálive!");

724 #i‡
	`deföed
(
MAC
Ë|| deföed(
AMIGA
)

725 i‡((
fd
 = 
	`›í
(
ßvefûe
, 
O_RDONLY
)) < 0)

727 #ifde‡
ATARI_ST


728 i‡(
FALSE
)

730 i‡((
fd
 = 
	`›í
(
ßvefûe
, 
O_RDONLY
, 0)) < 0

731 && (
	`chmod
(
ßvefûe
, 0400) < 0 ||

732 (
fd
 = 
	`›í
(
ßvefûe
, 
O_RDONLY
, 0)) < 0))

735 
	`msg_¥öt
("Can't open file forÑeading.");

738 
tu∫
 = -1;

739 
ok
 = 
TRUE
;

741 (Ë
	`˛o£
(
fd
);

742 
fd
 = -1;

744 #i‡
	`deföed
(
©¨i°
Ë|| deföed(
ATARI_ST
Ë|| deföed(
THINK_C
Ë|| deföed(
MSDOS
)

745 
fûïå
 = 
	`f›í
(
ßvefûe
, "rb");

747 
fûïå
 = 
	`f›í
(
ßvefûe
, "r");

749 i‡(
fûïå
 =
NULL
)

750 
îr‹
;

752 #ifde‡
MAC


753 
	`macbegöwaô
 ();

756 
	`¥t
("Restoring Memory...", 0, 0);

757 
	`put_qio
();

759 
	`DEBUG
(
logfûe
 = 
	`f›í
("IO_LOG", "a"));

760 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "Ródög d©®‰om %s\n", 
ßvefûe
));

762 
x‹_byã
 = 0;

763 
	`rd_byã
(&
vîsi⁄_maj
);

764 
x‹_byã
 = 0;

765 
	`rd_byã
(&
vîsi⁄_mö
);

766 
x‹_byã
 = 0;

767 
	`rd_byã
(&
∑tch_Àvñ
);

768 
x‹_byã
 = 0;

769 
	`rd_byã
(&
x‹_byã
);

773 i‡((
vîsi⁄_maj
 !
CUR_VERSION_MAJ
)

778 || (
vîsi⁄_mö
 > 
CUR_VERSION_MIN
)

779 || (
vîsi⁄_mö
 =
CUR_VERSION_MIN
 && 
∑tch_Àvñ
 > 
PATCH_LEVEL
)

781 || (
vîsi⁄_mö
 =0 && 
∑tch_Àvñ
 < 14))

783 
	`¥t
("Sorry. This savefile is fromá different version of umoria.",

785 
îr‹
;

788 
	`rd_sh‹t
(&
öt16u_tmp
);

789 
öt16u_tmp
 != 0xFFFF)

791 i‡(
öt16u_tmp
 >
MAX_CREATURES
)

792 
îr‹
;

793 
r_±r
 = &
c_ªˇŒ
[
öt16u_tmp
];

794 
	`rd_l⁄g
(&
r_±r
->
r_cmove
);

795 
	`rd_l⁄g
(&
r_±r
->
r_•ñls
);

796 
	`rd_sh‹t
(&
r_±r
->
r_kûls
);

797 
	`rd_sh‹t
(&
r_±r
->
r_dóths
);

798 
	`rd_sh‹t
(&
r_±r
->
r_cde„n£
);

799 
	`rd_byã
(&
r_±r
->
r_wake
);

800 
	`rd_byã
(&
r_±r
->
r_ign‹e
);

801 
	`rd_byãs
(
r_±r
->
r_©ècks
, 
MAX_MON_NATTACK
);

802 
	`rd_sh‹t
(&
öt16u_tmp
);

806 i‡((
vîsi⁄_mö
 < 2Ë|| (vîsi⁄_mö =2 && 
∑tch_Àvñ
 < 2))

807 
	`rd_sh‹t
(&
öt16u_tmp
);

808 
	`rd_l⁄g
(&
l
);

810 i‡(
l
 & 0x1)

811 
föd_cut
 = 
TRUE
;

813 
föd_cut
 = 
FALSE
;

814 i‡(
l
 & 0x2)

815 
föd_examöe
 = 
TRUE
;

817 
föd_examöe
 = 
FALSE
;

818 i‡(
l
 & 0x4)

819 
föd_¥£lf
 = 
TRUE
;

821 
föd_¥£lf
 = 
FALSE
;

822 i‡(
l
 & 0x8)

823 
föd_bound
 = 
TRUE
;

825 
föd_bound
 = 
FALSE
;

826 i‡(
l
 & 0x10)

827 
¥om±_ˇºy_Êag
 = 
TRUE
;

829 
¥om±_ˇºy_Êag
 = 
FALSE
;

830 i‡(
l
 & 0x20)

831 
rogue_like_comm™ds
 = 
TRUE
;

833 
rogue_like_comm™ds
 = 
FALSE
;

834 i‡(
l
 & 0x40)

835 
show_weight_Êag
 = 
TRUE
;

837 
show_weight_Êag
 = 
FALSE
;

838 i‡(
l
 & 0x80)

839 
highlight_£ams
 = 
TRUE
;

841 
highlight_£ams
 = 
FALSE
;

842 i‡(
l
 & 0x100)

843 
föd_ign‹e_do‹s
 = 
TRUE
;

845 
föd_ign‹e_do‹s
 = 
FALSE
;

848 i‡((
vîsi⁄_mö
 < 2Ë|| (vîsi⁄_mö =2 && 
∑tch_Àvñ
 < 2))

849 
sound_bìp_Êag
 = 
TRUE
;

850 i‡(
l
 & 0x200)

851 
sound_bìp_Êag
 = 
TRUE
;

853 
sound_bìp_Êag
 = 
FALSE
;

856 i‡((
vîsi⁄_mö
 < 2Ë|| (vîsi⁄_mö =2 && 
∑tch_Àvñ
 < 2))

857 
di•œy_cou¡s
 = 
TRUE
;

858 i‡(
l
 & 0x400)

859 
di•œy_cou¡s
 = 
TRUE
;

861 
di•œy_cou¡s
 = 
FALSE
;

865 i‡(
to_be_wiz¨d
 && (
l
 & 0x40000000L))

867 
	`msg_¥öt
 ("Sorry,Åhis character isÑetired from moria.");

868 
	`msg_¥öt
 ("You canÇotÑesurrectáÑetired character.");

870 i‡(
to_be_wiz¨d
 && (
l
 & 0x80000000L)

871 && 
	`gë_check
("Resurrectá dead character?"))

872 
l
 &= ~0x80000000L;

873 i‡((
l
 & 0x80000000L) == 0)

875 
m_±r
 = &
py
.
misc
;

876 
	`rd_°rög
(
m_±r
->
«me
);

877 
	`rd_byã
(&
m_±r
->
mÆe
);

878 
	`rd_l⁄g
((
öt32u
 *)&
m_±r
->
au
);

879 
	`rd_l⁄g
((
öt32u
 *)&
m_±r
->
max_exp
);

880 
	`rd_l⁄g
((
öt32u
 *)&
m_±r
->
exp
);

881 
	`rd_sh‹t
(&
m_±r
->
exp_‰ac
);

882 
	`rd_sh‹t
(&
m_±r
->
age
);

883 
	`rd_sh‹t
(&
m_±r
->
ht
);

884 
	`rd_sh‹t
(&
m_±r
->
wt
);

885 
	`rd_sh‹t
(&
m_±r
->
Àv
);

886 
	`rd_sh‹t
(&
m_±r
->
max_dlv
);

887 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
§h
);

888 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
fos
);

889 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
bth
);

890 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
bthb
);

891 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
m™a
);

892 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
mhp
);

893 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
±ohô
);

894 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
±odam
);

895 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
∑c
);

896 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
±ﬂc
);

897 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
dis_th
);

898 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
dis_td
);

899 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
dis_ac
);

900 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
dis_èc
);

901 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
dißrm
);

902 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
ßve
);

903 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
sc
);

904 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
°l
);

905 
	`rd_byã
(&
m_±r
->
p˛ass
);

906 
	`rd_byã
(&
m_±r
->
¥a˚
);

907 
	`rd_byã
(&
m_±r
->
hôdõ
);

908 
	`rd_byã
(&
m_±r
->
expÁ˘
);

909 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
cm™a
);

910 
	`rd_sh‹t
(&
m_±r
->
cm™a_‰ac
);

911 
	`rd_sh‹t
((
öt16u
 *)&
m_±r
->
chp
);

912 
	`rd_sh‹t
(&
m_±r
->
chp_‰ac
);

913 
i
 = 0; i < 4; i++)

914 
	`rd_°rög
 (
m_±r
->
hi°‹y
[
i
]);

916 
s_±r
 = &
py
.
°©s
;

917 
	`rd_byãs
(
s_±r
->
max_°©
, 6);

918 
	`rd_byãs
(
s_±r
->
cur_°©
, 6);

919 
	`rd_sh‹ts
((
öt16u
 *)
s_±r
->
mod_°©
, 6);

920 
	`rd_byãs
(
s_±r
->
u£_°©
, 6);

922 
f_±r
 = &
py
.
Êags
;

923 
	`rd_l⁄g
(&
f_±r
->
°©us
);

924 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
ª°
);

925 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
blöd
);

926 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
∑ølysis
);

927 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
c⁄fu£d
);

928 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
food
);

929 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
food_dige°ed
);

930 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
¥Ÿe˘i⁄
);

931 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
•ìd
);

932 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
Á°
);

933 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
¶ow
);

934 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
a‰aid
);

935 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
pois⁄ed
);

936 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
image
);

937 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
¥Ÿevû
);

938 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
övu 
);

939 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
hîo
);

940 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
shîo
);

941 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
bÀs£d
);

942 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
ªsi°_hót
);

943 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
ªsi°_cﬁd
);

944 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
dëe˘_öv
);

945 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
w‹d_ªˇŒ
);

946 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
£e_ö‰a
);

947 
	`rd_sh‹t
((
öt16u
 *)&
f_±r
->
tim_ö‰a
);

948 
	`rd_byã
(&
f_±r
->
£e_öv
);

949 
	`rd_byã
(&
f_±r
->
ãÀp‹t
);

950 
	`rd_byã
(&
f_±r
->
‰ì_a˘
);

951 
	`rd_byã
(&
f_±r
->
¶ow_dige°
);

952 
	`rd_byã
(&
f_±r
->
aggøv©e
);

953 
	`rd_byã
(&
f_±r
->
fúe_ªsi°
);

954 
	`rd_byã
(&
f_±r
->
cﬁd_ªsi°
);

955 
	`rd_byã
(&
f_±r
->
acid_ªsi°
);

956 
	`rd_byã
(&
f_±r
->
ªgíî©e
);

957 
	`rd_byã
(&
f_±r
->
lght_ªsi°
);

958 
	`rd_byã
(&
f_±r
->
fÁŒ
);

959 
	`rd_byã
(&
f_±r
->
su°aö_°r
);

960 
	`rd_byã
(&
f_±r
->
su°aö_öt
);

961 
	`rd_byã
(&
f_±r
->
su°aö_wis
);

962 
	`rd_byã
(&
f_±r
->
su°aö_c⁄
);

963 
	`rd_byã
(&
f_±r
->
su°aö_dex
);

964 
	`rd_byã
(&
f_±r
->
su°aö_chr
);

965 
	`rd_byã
(&
f_±r
->
c⁄fu£_m⁄°î
);

966 
	`rd_byã
(&
f_±r
->
√w_•ñls
);

968 
	`rd_sh‹t
((
öt16u
 *)&
missûe_˘r
);

969 
	`rd_l⁄g
((
öt32u
 *)&
tu∫
);

970 
	`rd_sh‹t
((
öt16u
 *)&
öví_˘r
);

971 i‡(
öví_˘r
 > 
INVEN_WIELD
)

972 
îr‹
;

973 
i
 = 0; i < 
öví_˘r
; i++)

974 
	`rd_ôem
(&
övít‹y
[
i
]);

975 
i
 = 
INVEN_WIELD
; i < 
INVEN_ARRAY_SIZE
; i++)

976 
	`rd_ôem
(&
övít‹y
[
i
]);

977 
	`rd_sh‹t
((
öt16u
 *)&
öví_weight
);

978 
	`rd_sh‹t
((
öt16u
 *)&
equù_˘r
);

979 
	`rd_l⁄g
(&
•ñl_À¨√d
);

980 
	`rd_l⁄g
(&
•ñl_w‹ked
);

981 
	`rd_l⁄g
(&
•ñl_f‹gŸãn
);

982 
	`rd_byãs
(
•ñl_‹dî
, 32);

983 
	`rd_byãs
(
obje˘_idít
, 
OBJECT_IDENT_SIZE
);

984 
	`rd_l⁄g
(&
øndes_£ed
);

985 
	`rd_l⁄g
(&
town_£ed
);

986 
	`rd_sh‹t
((
öt16u
 *)&
œ°_msg
);

987 
i
 = 0; i < 
MAX_SAVE_MSG
; i++)

988 
	`rd_°rög
(
ﬁd_msg
[
i
]);

990 
	`rd_sh‹t
((
öt16u
 *)&
∑nic_ßve
);

991 
	`rd_sh‹t
((
öt16u
 *)&
tŸÆ_wö√r
);

992 
	`rd_sh‹t
((
öt16u
 *)&
nosc‹e
);

993 
	`rd_sh‹ts
(
∂ayî_hp
, 
MAX_PLAYER_LEVEL
);

995 i‡((
vîsi⁄_mö
 >= 2)

996 || (
vîsi⁄_mö
 =1 && 
∑tch_Àvñ
 >= 3))

997 
i
 = 0; i < 
MAX_STORES
; i++)

999 
°_±r
 = &
°‹e
[
i
];

1000 
	`rd_l⁄g
((
öt32u
 *)&
°_±r
->
°‹e_›í
);

1001 
	`rd_sh‹t
((
öt16u
 *)&
°_±r
->
ösu…_cur
);

1002 
	`rd_byã
(&
°_±r
->
ow√r
);

1003 
	`rd_byã
(&
°_±r
->
°‹e_˘r
);

1004 
	`rd_sh‹t
(&
°_±r
->
good_buy
);

1005 
	`rd_sh‹t
(&
°_±r
->
bad_buy
);

1006 i‡(
°_±r
->
°‹e_˘r
 > 
STORE_INVEN_MAX
)

1007 
îr‹
;

1008 
j
 = 0; j < 
°_±r
->
°‹e_˘r
; j++)

1010 
	`rd_l⁄g
((
öt32u
 *)&
°_±r
->
°‹e_öví
[
j
].
sco°
);

1011 
	`rd_ôem
(&
°_±r
->
°‹e_öví
[
j
].
sôem
);

1015 i‡((
vîsi⁄_mö
 >= 2)

1016 || (
vîsi⁄_mö
 =1 && 
∑tch_Àvñ
 >= 3))

1017 
	`rd_l⁄g
(&
time_ßved
);

1019 i‡(
vîsi⁄_mö
 >= 2)

1020 
	`rd_°rög
(
dõd_‰om
);

1022 i‡((
vîsi⁄_mö
 >= 3)

1023 || (
vîsi⁄_mö
 =2 && 
∑tch_Àvñ
 >= 2))

1024 
	`rd_l⁄g
 ((
öt32u
 *)&
max_sc‹e
);

1026 
max_sc‹e
 = 0;

1028 i‡((
vîsi⁄_mö
 >= 3)

1029 || (
vîsi⁄_mö
 =2 && 
∑tch_Àvñ
 >= 2))

1030 
	`rd_l⁄g
 ((
öt32u
 *)&
búth_d©e
);

1032 #ifde‡
MAC


1033 
búth_d©e
 = 
	`time
((
time_t
 *)0);

1035 
búth_d©e
 = 
	`time
((*)0);

1038 i‡((
c
 = 
	`gëc
(
fûïå
)Ë=
EOF
 || (
l
 & 0x80000000L))

1040 i‡((
l
 & 0x80000000L) == 0)

1042 i‡(!
to_be_wiz¨d
 || 
tu∫
 < 0)

1043 
îr‹
;

1044 
	`¥t
("AttemptingáÑesurrection!", 0, 0);

1045 i‡(
py
.
misc
.
chp
 < 0)

1047 
py
.
misc
.
chp
 = 0;

1048 
py
.
misc
.
chp_‰ac
 = 0;

1051 i‡(
py
.
Êags
.
food
 < 0)

1052 
py
.
Êags
.
food
 = 0;

1054 i‡(
py
.
Êags
.
pois⁄ed
 > 1)

1055 
py
.
Êags
.
pois⁄ed
 = 1;

1056 
dun_Àvñ
 = 0;

1057 
ch¨a˘î_gíî©ed
 = 1;

1060 
to_be_wiz¨d
 = 
FALSE
;

1061 
nosc‹e
 |= 0x1;

1067 
	`msg_¥öt
("Restoring Memory ofá departed spirit...");

1068 
tu∫
 = -1;

1070 
	`put_qio
();

1071 
˛o£fûes
;

1073 i‡(
	`ungëc
(
c
, 
fûïå
Ë=
EOF
)

1074 
îr‹
;

1076 
	`¥t
("Restoring Character...", 0, 0);

1077 
	`put_qio
();

1082 
	`rd_sh‹t
((
öt16u
 *)&
dun_Àvñ
);

1083 
	`rd_sh‹t
((
öt16u
 *)&
ch¨_row
);

1084 
	`rd_sh‹t
((
öt16u
 *)&
ch¨_cﬁ
);

1085 
	`rd_sh‹t
((
öt16u
 *)&
m⁄_tŸ_mu…
);

1086 
	`rd_sh‹t
((
öt16u
 *)&
cur_height
);

1087 
	`rd_sh‹t
((
öt16u
 *)&
cur_width
);

1088 
	`rd_sh‹t
((
öt16u
 *)&
max_∑√l_rows
);

1089 
	`rd_sh‹t
((
öt16u
 *)&
max_∑√l_cﬁs
);

1092 
	`rd_byã
(&
ch¨_tmp
);

1093 
ch¨_tmp
 != 0xFF)

1095 
ych¨
 = 
ch¨_tmp
;

1096 
	`rd_byã
(&
xch¨
);

1097 
	`rd_byã
(&
ch¨_tmp
);

1098 i‡(
xch¨
 > 
MAX_WIDTH
 || 
ych¨
 > 
MAX_HEIGHT
)

1099 
îr‹
;

1100 
ˇve
[
ych¨
][
xch¨
].
˝å
 = 
ch¨_tmp
;

1101 
	`rd_byã
(&
ch¨_tmp
);

1104 
	`rd_byã
(&
ch¨_tmp
);

1105 
ch¨_tmp
 != 0xFF)

1107 
ych¨
 = 
ch¨_tmp
;

1108 
	`rd_byã
(&
xch¨
);

1109 
	`rd_byã
(&
ch¨_tmp
);

1110 i‡(
xch¨
 > 
MAX_WIDTH
 || 
ych¨
 > 
MAX_HEIGHT
)

1111 
îr‹
;

1112 
ˇve
[
ych¨
][
xch¨
].
çå
 = 
ch¨_tmp
;

1113 
	`rd_byã
(&
ch¨_tmp
);

1116 
c_±r
 = &
ˇve
[0][0];

1117 
tŸÆ_cou¡
 = 0;

1118 
tŸÆ_cou¡
 !
MAX_HEIGHT
*
MAX_WIDTH
)

1120 
	`rd_byã
(&
cou¡
);

1121 
	`rd_byã
(&
ch¨_tmp
);

1122 
i
 = 
cou¡
; i > 0; i--)

1124 #i‚de‡
ATARIST_MWC


1125 i‡(
c_±r
 >&
ˇve
[
MAX_HEIGHT
][0])

1126 
îr‹
;

1128 
c_±r
->
fvÆ
 = 
ch¨_tmp
 & 0xF;

1129 
c_±r
->
Ã
 = (
ch¨_tmp
 >> 4) & 0x1;

1130 
c_±r
->
fm
 = (
ch¨_tmp
 >> 5) & 0x1;

1131 
c_±r
->
∂
 = (
ch¨_tmp
 >> 6) & 0x1;

1132 
c_±r
->
é
 = (
ch¨_tmp
 >> 7) & 0x1;

1133 
c_±r
++;

1135 
tŸÆ_cou¡
 +
cou¡
;

1138 
	`rd_sh‹t
((
öt16u
 *)&
t˝å
);

1139 i‡(
t˝å
 > 
MAX_TALLOC
)

1140 
îr‹
;

1141 
i
 = 
MIN_TRIX
; i < 
t˝å
; i++)

1142 
	`rd_ôem
(&
t_li°
[
i
]);

1143 
	`rd_sh‹t
((
öt16u
 *)&
mÂå
);

1144 i‡(
mÂå
 > 
MAX_MALLOC
)

1145 
îr‹
;

1146 
i
 = 
MIN_MONIX
; i < 
mÂå
; i++)

1147 
	`rd_m⁄°î
(&
m_li°
[
i
]);

1149 #i‡
	`deföed
(
MSDOS
Ë|| deföed(
ATARI_ST
)

1151 
t_±r
 = &
t_li°
[
t˝å
 - 1];

1152 
i
 = 
t˝å
 - 1; i >
MIN_TRIX
; i--)

1154 #ifde‡
MSDOS


1155 i‡(
t_±r
->
tch¨
 == '#')

1156 
t_±r
->
tch¨
 = 
wÆlsym
;

1158 #ifde‡
ATARI_ST


1159 i‡(
t_±r
->
tch¨
 == '#')

1160 
t_±r
->
tch¨
 = () 240;

1162 
t_±r
--;

1166 *
gíî©e
 = 
FALSE
;

1168 i‡((
vîsi⁄_mö
 =1 && 
∑tch_Àvñ
 < 3)

1169 || (
vîsi⁄_mö
 == 0))

1170 
i
 = 0; i < 
MAX_STORES
; i++)

1172 
°_±r
 = &
°‹e
[
i
];

1173 
	`rd_l⁄g
((
öt32u
 *)&
°_±r
->
°‹e_›í
);

1174 
	`rd_sh‹t
((
öt16u
 *)&
°_±r
->
ösu…_cur
);

1175 
	`rd_byã
(&
°_±r
->
ow√r
);

1176 
	`rd_byã
(&
°_±r
->
°‹e_˘r
);

1177 
	`rd_sh‹t
(&
°_±r
->
good_buy
);

1178 
	`rd_sh‹t
(&
°_±r
->
bad_buy
);

1179 i‡(
°_±r
->
°‹e_˘r
 > 
STORE_INVEN_MAX
)

1180 
îr‹
;

1181 
j
 = 0; j < 
°_±r
->
°‹e_˘r
; j++)

1183 
	`rd_l⁄g
((
öt32u
 *)&
°_±r
->
°‹e_öví
[
j
].
sco°
);

1184 
	`rd_ôem
(&
°_±r
->
°‹e_öví
[
j
].
sôem
);

1189 i‡(
vîsi⁄_mö
 =0 && 
∑tch_Àvñ
 < 16)

1190 
time_ßved
 = 0;

1191 i‡(
vîsi⁄_mö
 =1 && 
∑tch_Àvñ
 < 3)

1192 
	`rd_l⁄g
(&
time_ßved
);

1194 i‡(
	`„º‹
(
fûïå
))

1195 
îr‹
;

1197 i‡(
tu∫
 < 0)

1198 
îr‹
:

1199 
ok
 = 
FALSE
;

1203 i‡(
py
.
misc
.
chp
 >= 0)

1204 (Ë
	`°r˝y
(
dõd_‰om
, "(aliveánd well)");

1205 
ch¨a˘î_gíî©ed
 = 1;

1208 
˛o£fûes
:

1210 
	`DEBUG
(
	`f˛o£
 (
logfûe
));

1212 i‡(
fûïå
 !
NULL
)

1214 i‡(
	`f˛o£
(
fûïå
) < 0)

1215 
ok
 = 
FALSE
;

1217 i‡(
fd
 >= 0)

1218 (Ë
	`˛o£
(
fd
);

1220 #ifde‡
MAC


1221 
	`ma˚ndwaô
 ();

1224 i‡(!
ok
)

1225 
	`msg_¥öt
("Error duringÑeading of file.");

1229 
‰om_ßvefûe
 = 1;

1231 
	`sig«ls
();

1233 i‡(
∑nic_ßve
 == 1)

1235 (Ë
	`•rötf
(
ãmp
, "This game is fromáÖanic save. \
 willÇot beáddedÅo scoreboard.");

1237 
	`msg_¥öt
 (
ãmp
);

1239 i‡((!
nosc‹e
 & 0x04Ë&& 
	`du∂iˇã_ch¨a˘î
 ())

1241 (Ë
	`•rötf
 (
ãmp
, "This character isálready onÅhe \
; it willÇot be scoredágain.");

1243 
	`msg_¥öt
 (
ãmp
);

1244 
nosc‹e
 |= 0x4;

1247 i‡(
tu∫
 >= 0)

1249 
wóp⁄_hóvy
 = 
FALSE
;

1250 
∑ck_hóvy
 = 0;

1251 
	`check_°ªngth
();

1256 #ifde‡
MAC


1257 
°¨t_time
 = 
	`time
((
time_t
 *)0);

1259 
°¨t_time
 = 
	`time
((*)0);

1262 i‡(
°¨t_time
 < 
time_ßved
)

1263 
age
 = 0;

1265 
age
 = 
°¨t_time
 - 
time_ßved
;

1267 
age
 = (age + 43200L) / 86400L;

1268 i‡(
age
 > 10)áge = 10;

1269 
i
 = 0; i < 
age
; i++)

1270 
	`°‹e_maöt
();

1273 i‡(
nosc‹e
)

1274 
	`msg_¥öt
("This save file cannot be usedÅo get onÅhe score board.");

1276 i‡(
vîsi⁄_maj
 !
CUR_VERSION_MAJ


1277 || 
vîsi⁄_mö
 !
CUR_VERSION_MIN
)

1279 (Ë
	`•rötf
(
ãmp
,

1281 
vîsi⁄_maj
, 
vîsi⁄_mö
,

1282 
vîsi⁄_mö
 <
CUR_VERSION_MIN


1284 
CUR_VERSION_MAJ
, 
CUR_VERSION_MIN
);

1285 
	`msg_¥öt
(
ãmp
);

1288 i‡(
tu∫
 >= 0)

1289  
TRUE
;

1291  
FALSE
;

1294 
tu∫
 = -1;

1295 
	`¥t
("PleaseÅryágain withoutÅhat savefile.", 1, 0);

1296 
	`sig«ls
();

1297 #ifde‡
MAC


1298 *
exô_Êag
 = 
TRUE
;

1300 
	`exô_game
();

1303  
FALSE
;

1304 
	}
}

1306 
	$wr_byã
(
c
)

1307 
öt8u
 
c
;

1309 
x‹_byã
 ^
c
;

1310 (Ë
	`putc
(()
x‹_byã
, 
fûïå
);

1311 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "BYTE: %02X = %d\n", (Ë
x‹_byã
, (Ë
c
));

1312 
	}
}

1314 
	$wr_sh‹t
(
s
)

1315 
öt16u
 
s
;

1317 
x‹_byã
 ^(
s
 & 0xFF);

1318 (Ë
	`putc
(()
x‹_byã
, 
fûïå
);

1319 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "SHORT: %02X", (Ë
x‹_byã
));

1320 
x‹_byã
 ^((
s
 >> 8) & 0xFF);

1321 (Ë
	`putc
(()
x‹_byã
, 
fûïå
);

1322 
	`DEBUG
(
	`Ârötf
 (
logfûe
, " %02X = %d\n", (Ë
x‹_byã
, (Ë
s
));

1323 
	}
}

1325 
	$wr_l⁄g
(
l
)

1326 
öt32u
 
l
;

1328 
x‹_byã
 ^(
l
 & 0xFF);

1329 (Ë
	`putc
(()
x‹_byã
, 
fûïå
);

1330 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "LONG: %02X", (Ë
x‹_byã
));

1331 
x‹_byã
 ^((
l
 >> 8) & 0xFF);

1332 (Ë
	`putc
(()
x‹_byã
, 
fûïå
);

1333 
	`DEBUG
(
	`Ârötf
 (
logfûe
, " %02X", (Ë
x‹_byã
));

1334 
x‹_byã
 ^((
l
 >> 16) & 0xFF);

1335 (Ë
	`putc
(()
x‹_byã
, 
fûïå
);

1336 
	`DEBUG
(
	`Ârötf
 (
logfûe
, " %02X", (Ë
x‹_byã
));

1337 
x‹_byã
 ^((
l
 >> 24) & 0xFF);

1338 (Ë
	`putc
(()
x‹_byã
, 
fûïå
);

1339 
	`DEBUG
(
	`Ârötf
 (
logfûe
, " %02X = %ld\n", (Ë
x‹_byã
, (Ë
l
));

1340 
	}
}

1342 
	$wr_byãs
(
c
, 
cou¡
)

1343 
öt8u
 *
c
;

1344 
cou¡
;

1346 
i
;

1347 
öt8u
 *
±r
;

1349 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "%d BYTES:", 
cou¡
));

1350 
±r
 = 
c
;

1351 
i
 = 0; i < 
cou¡
; i++)

1353 
x‹_byã
 ^*
±r
++;

1354 (Ë
	`putc
(()
x‹_byã
, 
fûïå
);

1355 
	`DEBUG
(
	`Ârötf
 (
logfûe
, " %02X = %d", (Ë
x‹_byã
,

1356 (Ë(
±r
[-1])));

1358 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "\n"));

1359 
	}
}

1361 
	$wr_°rög
(
°r
)

1362 *
°r
;

1364 
	`DEBUG
(*
s
 = 
°r
);

1365 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "STRING:"));

1366 *
°r
 != '\0')

1368 
x‹_byã
 ^*
°r
++;

1369 (Ë
	`putc
(()
x‹_byã
, 
fûïå
);

1370 
	`DEBUG
(
	`Ârötf
 (
logfûe
, " %02X", (Ë
x‹_byã
));

1372 
x‹_byã
 ^*
°r
;

1373 (Ë
	`putc
(()
x‹_byã
, 
fûïå
);

1374 
	`DEBUG
(
	`Ârötf
 (
logfûe
, " %02X = \"%s\"\n", (Ë
x‹_byã
, 
s
));

1375 
	}
}

1377 
	$wr_sh‹ts
(
s
, 
cou¡
)

1378 
öt16u
 *
s
;

1379 
cou¡
;

1381 
i
;

1382 
öt16u
 *
•å
;

1384 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "%d SHORTS:", 
cou¡
));

1385 
•å
 = 
s
;

1386 
i
 = 0; i < 
cou¡
; i++)

1388 
x‹_byã
 ^(*
•å
 & 0xFF);

1389 (Ë
	`putc
(()
x‹_byã
, 
fûïå
);

1390 
	`DEBUG
(
	`Ârötf
 (
logfûe
, " %02X", (Ë
x‹_byã
));

1391 
x‹_byã
 ^((*
•å
++ >> 8) & 0xFF);

1392 (Ë
	`putc
(()
x‹_byã
, 
fûïå
);

1393 
	`DEBUG
(
	`Ârötf
 (
logfûe
, " %02X = %d", (Ë
x‹_byã
, (Ë
•å
[-1]));

1395 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "\n"));

1396 
	}
}

1398 
	$wr_ôem
(
ôem
)

1399 
öví_ty≥
 *
ôem
;

1401 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "ITEM:\n"));

1402 
	`wr_sh‹t
(
ôem
->
ödex
);

1403 
	`wr_byã
(
ôem
->
«me2
);

1404 
	`wr_°rög
(
ôem
->
ös¸ù
);

1405 
	`wr_l⁄g
(
ôem
->
Êags
);

1406 
	`wr_byã
(
ôem
->
tvÆ
);

1407 
	`wr_byã
(
ôem
->
tch¨
);

1408 
	`wr_sh‹t
((
öt16u
)
ôem
->
p1
);

1409 
	`wr_l⁄g
((
öt32u
)
ôem
->
co°
);

1410 
	`wr_byã
(
ôem
->
subvÆ
);

1411 
	`wr_byã
(
ôem
->
numbî
);

1412 
	`wr_sh‹t
(
ôem
->
weight
);

1413 
	`wr_sh‹t
((
öt16u
)
ôem
->
tohô
);

1414 
	`wr_sh‹t
((
öt16u
)
ôem
->
todam
);

1415 
	`wr_sh‹t
((
öt16u
)
ôem
->
ac
);

1416 
	`wr_sh‹t
((
öt16u
)
ôem
->
tﬂc
);

1417 
	`wr_byãs
(
ôem
->
damage
, 2);

1418 
	`wr_byã
(
ôem
->
Àvñ
);

1419 
	`wr_byã
(
ôem
->
idít
);

1420 
	}
}

1422 
	$wr_m⁄°î
(
m⁄
)

1423 
m⁄°î_ty≥
 *
m⁄
;

1425 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "MONSTER:\n"));

1426 
	`wr_sh‹t
((
öt16u
)
m⁄
->
hp
);

1427 
	`wr_sh‹t
((
öt16u
)
m⁄
->
c¶ìp
);

1428 
	`wr_sh‹t
((
öt16u
)
m⁄
->
c•ìd
);

1429 
	`wr_sh‹t
(
m⁄
->
m±r
);

1430 
	`wr_byã
(
m⁄
->
fy
);

1431 
	`wr_byã
(
m⁄
->
fx
);

1432 
	`wr_byã
(
m⁄
->
cdis
);

1433 
	`wr_byã
(
m⁄
->
ml
);

1434 
	`wr_byã
(
m⁄
->
°u¬ed
);

1435 
	`wr_byã
(
m⁄
->
c⁄fu£d
);

1436 
	}
}

1438 
	$rd_byã
(
±r
)

1439 
öt8u
 *
±r
;

1441 
öt8u
 
c
;

1443 
c
 = 
	`gëc
(
fûïå
) & 0xFF;

1444 *
±r
 = 
c
 ^ 
x‹_byã
;

1445 
x‹_byã
 = 
c
;

1446 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "BYTE: %02X = %d\n", (Ë
c
, (Ë*
±r
));

1447 
	}
}

1449 
	$rd_sh‹t
(
±r
)

1450 
öt16u
 *
±r
;

1452 
öt8u
 
c
;

1453 
öt16u
 
s
;

1455 
c
 = (
	`gëc
(
fûïå
) & 0xFF);

1456 
s
 = 
c
 ^ 
x‹_byã
;

1457 
x‹_byã
 = (
	`gëc
(
fûïå
) & 0xFF);

1458 
s
 |(
öt16u
)(
c
 ^ 
x‹_byã
) << 8;

1459 *
±r
 = 
s
;

1460 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "SHORT: %02X %02X = %d\n", (Ë
c
, (Ë
x‹_byã
,\

1461 (Ë
s
));

1462 
	}
}

1464 
	$rd_l⁄g
(
±r
)

1465 
öt32u
 *
±r
;

1467 
öt32u
 
l
;

1468 
öt8u
 
c
;

1470 
c
 = (
	`gëc
(
fûïå
) & 0xFF);

1471 
l
 = 
c
 ^ 
x‹_byã
;

1472 
x‹_byã
 = (
	`gëc
(
fûïå
) & 0xFF);

1473 
l
 |(
öt32u
)(
c
 ^ 
x‹_byã
) << 8;

1474 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "LONG: %02X %02X ", (Ë
c
, (Ë
x‹_byã
));

1475 
c
 = (
	`gëc
(
fûïå
) & 0xFF);

1476 
l
 |(
öt32u
)(
c
 ^ 
x‹_byã
) << 16;

1477 
x‹_byã
 = (
	`gëc
(
fûïå
) & 0xFF);

1478 
l
 |(
öt32u
)(
c
 ^ 
x‹_byã
) << 24;

1479 *
±r
 = 
l
;

1480 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "%02X %02X = %ld\n", (Ë
c
, (Ë
x‹_byã
,\

1481 (Ë
l
));

1482 
	}
}

1484 
	$rd_byãs
(
ch_±r
, 
cou¡
)

1485 
öt8u
 *
ch_±r
;

1486 
cou¡
;

1488 
i
;

1489 
öt8u
 *
±r
;

1490 
öt8u
 
c
;

1492 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "%d BYTES:", 
cou¡
));

1493 
±r
 = 
ch_±r
;

1494 
i
 = 0; i < 
cou¡
; i++)

1496 
c
 = (
	`gëc
(
fûïå
) & 0xFF);

1497 *
±r
++ = 
c
 ^ 
x‹_byã
;

1498 
x‹_byã
 = 
c
;

1499 
	`DEBUG
(
	`Ârötf
 (
logfûe
, " %02X = %d", (Ë
c
, (Ë
±r
[-1]));

1501 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "\n"));

1502 
	}
}

1504 
	$rd_°rög
(
°r
)

1505 *
°r
;

1507 
öt8u
 
c
;

1509 
	`DEBUG
(*
s
 = 
°r
);

1510 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "STRING: "));

1513 
c
 = (
	`gëc
(
fûïå
) & 0xFF);

1514 *
°r
 = 
c
 ^ 
x‹_byã
;

1515 
x‹_byã
 = 
c
;

1516 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "%02X ", (Ë
c
));

1518 *
°r
++ != '\0');

1519 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "\"%s\"\n", 
s
));

1520 
	}
}

1522 
	$rd_sh‹ts
(
±r
, 
cou¡
)

1523 
öt16u
 *
±r
;

1524 
cou¡
;

1526 
i
;

1527 
öt16u
 *
•å
;

1528 
öt16u
 
s
;

1529 
öt8u
 
c
;

1531 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "%d SHORTS:", 
cou¡
));

1532 
•å
 = 
±r
;

1533 
i
 = 0; i < 
cou¡
; i++)

1535 
c
 = (
	`gëc
(
fûïå
) & 0xFF);

1536 
s
 = 
c
 ^ 
x‹_byã
;

1537 
x‹_byã
 = (
	`gëc
(
fûïå
) & 0xFF);

1538 
s
 |(
öt16u
)(
c
 ^ 
x‹_byã
) << 8;

1539 *
•å
++ = 
s
;

1540 
	`DEBUG
(
	`Ârötf
 (
logfûe
, " %02X %02X = %d", (Ë
c
, (Ë
x‹_byã
,\

1541 (Ë
s
));

1543 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "\n"));

1544 
	}
}

1546 
	$rd_ôem
(
ôem
)

1547 
öví_ty≥
 *
ôem
;

1549 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "ITEM:\n"));

1550 
	`rd_sh‹t
(&
ôem
->
ödex
);

1551 
	`rd_byã
(&
ôem
->
«me2
);

1552 
	`rd_°rög
(
ôem
->
ös¸ù
);

1553 
	`rd_l⁄g
(&
ôem
->
Êags
);

1554 
	`rd_byã
(&
ôem
->
tvÆ
);

1555 
	`rd_byã
(&
ôem
->
tch¨
);

1556 
	`rd_sh‹t
((
öt16u
 *)&
ôem
->
p1
);

1557 
	`rd_l⁄g
((
öt32u
 *)&
ôem
->
co°
);

1558 
	`rd_byã
(&
ôem
->
subvÆ
);

1559 
	`rd_byã
(&
ôem
->
numbî
);

1560 
	`rd_sh‹t
(&
ôem
->
weight
);

1561 
	`rd_sh‹t
((
öt16u
 *)&
ôem
->
tohô
);

1562 
	`rd_sh‹t
((
öt16u
 *)&
ôem
->
todam
);

1563 
	`rd_sh‹t
((
öt16u
 *)&
ôem
->
ac
);

1564 
	`rd_sh‹t
((
öt16u
 *)&
ôem
->
tﬂc
);

1565 
	`rd_byãs
(
ôem
->
damage
, 2);

1566 
	`rd_byã
(&
ôem
->
Àvñ
);

1567 
	`rd_byã
(&
ôem
->
idít
);

1568 
	}
}

1570 
	$rd_m⁄°î
(
m⁄
)

1571 
m⁄°î_ty≥
 *
m⁄
;

1573 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "MONSTER:\n"));

1574 
	`rd_sh‹t
((
öt16u
 *)&
m⁄
->
hp
);

1575 
	`rd_sh‹t
((
öt16u
 *)&
m⁄
->
c¶ìp
);

1576 
	`rd_sh‹t
((
öt16u
 *)&
m⁄
->
c•ìd
);

1577 
	`rd_sh‹t
(&
m⁄
->
m±r
);

1578 
	`rd_byã
(&
m⁄
->
fy
);

1579 
	`rd_byã
(&
m⁄
->
fx
);

1580 
	`rd_byã
(&
m⁄
->
cdis
);

1581 
	`rd_byã
(&
m⁄
->
ml
);

1582 
	`rd_byã
(&
m⁄
->
°u¬ed
);

1583 
	`rd_byã
(&
m⁄
->
c⁄fu£d
);

1584 
	}
}

1589 
	$£t_fûïå
(
fûe
)

1590 
FILE
 *
fûe
;

1592 
fûïå
 = 
fûe
;

1593 
	}
}

1595 
	$wr_highsc‹e
(
sc‹e
)

1596 
high_sc‹es
 *
sc‹e
;

1598 
	`DEBUG
(
logfûe
 = 
	`f›í
 ("IO_LOG", "a"));

1599 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "Saving score:\n"));

1601 
	`wr_byã
(
x‹_byã
);

1603 
	`wr_l⁄g
((
öt32u
Ë
sc‹e
->
poöts
);

1604 
	`wr_l⁄g
((
öt32u
Ë
sc‹e
->
búth_d©e
);

1605 
	`wr_sh‹t
((
öt16u
Ë
sc‹e
->
uid
);

1606 
	`wr_sh‹t
((
öt16u
Ë
sc‹e
->
mhp
);

1607 
	`wr_sh‹t
((
öt16u
Ë
sc‹e
->
chp
);

1608 
	`wr_byã
(
sc‹e
->
dun_Àvñ
);

1609 
	`wr_byã
(
sc‹e
->
Àv
);

1610 
	`wr_byã
(
sc‹e
->
max_dlv
);

1611 
	`wr_byã
(
sc‹e
->
£x
);

1612 
	`wr_byã
(
sc‹e
->
ø˚
);

1613 
	`wr_byã
(
sc‹e
->
˛ass
);

1614 
	`wr_byãs
((
öt8u
 *)
sc‹e
->
«me
, 
PLAYER_NAME_SIZE
);

1615 
	`wr_byãs
((
öt8u
 *)
sc‹e
->
dõd_‰om
, 25);

1616 
	`DEBUG
(
	`f˛o£
 (
logfûe
));

1617 
	}
}

1619 
	$rd_highsc‹e
(
sc‹e
)

1620 
high_sc‹es
 *
sc‹e
;

1622 
	`DEBUG
(
logfûe
 = 
	`f›í
 ("IO_LOG", "a"));

1623 
	`DEBUG
(
	`Ârötf
 (
logfûe
, "Reading score:\n"));

1625 
	`rd_byã
 (&
x‹_byã
);

1627 
	`rd_l⁄g
((
öt32u
 *)&
sc‹e
->
poöts
);

1628 
	`rd_l⁄g
((
öt32u
 *)&
sc‹e
->
búth_d©e
);

1629 
	`rd_sh‹t
((
öt16u
 *)&
sc‹e
->
uid
);

1630 
	`rd_sh‹t
((
öt16u
 *)&
sc‹e
->
mhp
);

1631 
	`rd_sh‹t
((
öt16u
 *)&
sc‹e
->
chp
);

1632 
	`rd_byã
(&
sc‹e
->
dun_Àvñ
);

1633 
	`rd_byã
(&
sc‹e
->
Àv
);

1634 
	`rd_byã
(&
sc‹e
->
max_dlv
);

1635 
	`rd_byã
(&
sc‹e
->
£x
);

1636 
	`rd_byã
(&
sc‹e
->
ø˚
);

1637 
	`rd_byã
(&
sc‹e
->
˛ass
);

1638 
	`rd_byãs
((
öt8u
 *)
sc‹e
->
«me
, 
PLAYER_NAME_SIZE
);

1639 
	`rd_byãs
((
öt8u
 *)
sc‹e
->
dõd_‰om
, 25);

1640 
	`DEBUG
(
	`f˛o£
 (
logfûe
));

1641 
	}
}

	@scrolls.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

13 
	~"c⁄fig.h
"

14 
	~"c⁄°™t.h
"

15 
	~"ty≥s.h
"

16 
	~"exã∫s.h
"

18 #ifde‡
USG


19 
	~<°rög.h
>

21 
	~<°rögs.h
>

25 
	$ªad_s¸ﬁl
()

27 
öt32u
 
i
;

28 
j
, 
k
, 
ôem_vÆ
, 
y
, 
x
;

29 
tmp
[6], 
Êag
, 
u£d_up
;

30 
bigvty≥
 
out_vÆ
, 
tmp_°r
;

31 
idít
, 
l
;

32 
öví_ty≥
 *
i_±r
;

33 
misc
 *
m_±r
;

34 #ifde‡
ATARIST_MWC


35 
öt32u
 
hﬁdî
 = 
TR_CURSED
;

38 
‰ì_tu∫_Êag
 = 
TRUE
;

39 i‡(
py
.
Êags
.
blöd
 > 0)

40 
	`msg_¥öt
("You can't seeÅoÑeadÅhe scroll.");

41 i‡(
	`no_light
())

42 
	`msg_¥öt
("You haveÇoÜightÅoÑead by.");

43 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

44 
	`msg_¥öt
("YouáreÅoo confusedÅoÑeadá scroll.");

45 i‡(
öví_˘r
 == 0)

46 
	`msg_¥öt
("YouáreÇot carryingánything!");

47 i‡(!
	`föd_ønge
(
TV_SCROLL1
, 
TV_SCROLL2
, &
j
, &
k
))

48 
	`msg_¥öt
 ("YouáreÇot carryingány scrolls!");

49 i‡(
	`gë_ôem
(&
ôem_vÆ
, "Ród which s¸ﬁl?", 
j
, 
k
, 
CNIL
, CNIL))

51 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

52 
‰ì_tu∫_Êag
 = 
FALSE
;

53 
u£d_up
 = 
TRUE
;

54 
i
 = 
i_±r
->
Êags
;

55 
idít
 = 
FALSE
;

57 
i
 != 0)

59 
j
 = 
	`bô_pos
(&
i
) + 1;

60 i‡(
i_±r
->
tvÆ
 =
TV_SCROLL2
)

61 
j
 += 32;

64 
j
)

67 
i_±r
 = &
övít‹y
[
INVEN_WIELD
];

68 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

70 
	`objdes
(
tmp_°r
, 
i_±r
, 
FALSE
);

71 (Ë
	`•rötf
(
out_vÆ
, "You∏%†glow†Áöéy!", 
tmp_°r
);

72 
	`msg_¥öt
(
out_vÆ
);

73 i‡(
	`ích™t
(&
i_±r
->
tohô
, 10))

75 #ifde‡
ATARIST_MWC


76 
i_±r
->
Êags
 &~
hﬁdî
;

78 
i_±r
->
Êags
 &~
TR_CURSED
;

80 
	`ˇlc_b⁄u£s
();

83 
	`msg_¥öt
("TheÉnchantment fails.");

84 
idít
 = 
TRUE
;

88 
i_±r
 = &
övít‹y
[
INVEN_WIELD
];

89 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

91 
	`objdes
(
tmp_°r
, 
i_±r
, 
FALSE
);

92 (Ë
	`•rötf
(
out_vÆ
, "You∏%†glow†Áöéy!", 
tmp_°r
);

93 
	`msg_¥öt
(
out_vÆ
);

94 i‡((
i_±r
->
tvÆ
 >
TV_HAFTED
)&&(i_±r->tvÆ <
TV_DIGGING
))

95 
j
 = 
i_±r
->
damage
[0] * i_ptr->damage[1];

98 
j
 = 10;

99 i‡(
	`ích™t
(&
i_±r
->
todam
, 
j
))

101 #ifde‡
ATARIST_MWC


102 
i_±r
->
Êags
 &~
hﬁdî
;

104 
i_±r
->
Êags
 &~
TR_CURSED
;

106 
	`ˇlc_b⁄u£s
 ();

109 
	`msg_¥öt
("TheÉnchantment fails.");

110 
idít
 = 
TRUE
;

114 
k
 = 0;

115 
l
 = 0;

116 i‡(
övít‹y
[
INVEN_BODY
].
tvÆ
 !
TV_NOTHING
)

117 
tmp
[
k
++] = 
INVEN_BODY
;

118 i‡(
övít‹y
[
INVEN_ARM
].
tvÆ
 !
TV_NOTHING
)

119 
tmp
[
k
++] = 
INVEN_ARM
;

120 i‡(
övít‹y
[
INVEN_OUTER
].
tvÆ
 !
TV_NOTHING
)

121 
tmp
[
k
++] = 
INVEN_OUTER
;

122 i‡(
övít‹y
[
INVEN_HANDS
].
tvÆ
 !
TV_NOTHING
)

123 
tmp
[
k
++] = 
INVEN_HANDS
;

124 i‡(
övít‹y
[
INVEN_HEAD
].
tvÆ
 !
TV_NOTHING
)

125 
tmp
[
k
++] = 
INVEN_HEAD
;

127 i‡(
övít‹y
[
INVEN_FEET
].
tvÆ
 !
TV_NOTHING
)

128 
tmp
[
k
++] = 
INVEN_FEET
;

130 i‡(
k
 > 0Ë
l
 = 
tmp
[
	`øndöt
(k)-1];

131 #ifde‡
ATARIST_MWC


132 i‡(
hﬁdî
 & 
övít‹y
[
INVEN_BODY
].
Êags
)

133 
l
 = 
INVEN_BODY
;

134 i‡(
hﬁdî
 & 
övít‹y
[
INVEN_ARM
].
Êags
)

135 
l
 = 
INVEN_ARM
;

136 i‡(
hﬁdî
 & 
övít‹y
[
INVEN_OUTER
].
Êags
)

137 
l
 = 
INVEN_OUTER
;

138 i‡(
hﬁdî
 & 
övít‹y
[
INVEN_HEAD
].
Êags
)

139 
l
 = 
INVEN_HEAD
;

140 i‡(
hﬁdî
 & 
övít‹y
[
INVEN_HANDS
].
Êags
)

141 
l
 = 
INVEN_HANDS
;

142 i‡(
hﬁdî
 & 
övít‹y
[
INVEN_FEET
].
Êags
)

143 
l
 = 
INVEN_FEET
;

145 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_BODY
].
Êags
)

146 
l
 = 
INVEN_BODY
;

147 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_ARM
].
Êags
)

148 
l
 = 
INVEN_ARM
;

149 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_OUTER
].
Êags
)

150 
l
 = 
INVEN_OUTER
;

151 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_HEAD
].
Êags
)

152 
l
 = 
INVEN_HEAD
;

153 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_HANDS
].
Êags
)

154 
l
 = 
INVEN_HANDS
;

155 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_FEET
].
Êags
)

156 
l
 = 
INVEN_FEET
;

159 i‡(
l
 > 0)

161 
i_±r
 = &
övít‹y
[
l
];

162 
	`objdes
(
tmp_°r
, 
i_±r
, 
FALSE
);

163 (Ë
	`•rötf
(
out_vÆ
, "You∏%†glow†Áöéy!", 
tmp_°r
);

164 
	`msg_¥öt
(
out_vÆ
);

165 i‡(
	`ích™t
(&
i_±r
->
tﬂc
, 10))

167 #ifde‡
ATARIST_MWC


168 
i_±r
->
Êags
 &~
hﬁdî
;

170 
i_±r
->
Êags
 &~
TR_CURSED
;

172 
	`ˇlc_b⁄u£s
 ();

175 
	`msg_¥öt
("TheÉnchantment fails.");

176 
idít
 = 
TRUE
;

180 
	`msg_¥öt
("This isán identify scroll.");

181 
idít
 = 
TRUE
;

182 
u£d_up
 = 
	`idít_•ñl
();

188 
i_±r
->
tvÆ
 !
TV_SCROLL1
 || i_±r->
Êags
 != 0x00000008)

190 
ôem_vÆ
--;

191 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

195 i‡(
	`ªmove_cur£
())

197 
	`msg_¥öt
("You feelás if someone is watching over you.");

198 
idít
 = 
TRUE
;

202 
idít
 = 
	`light_¨ó
(
ch¨_row
, 
ch¨_cﬁ
);

205 
k
 = 0; k < 
	`øndöt
(3); k++)

207 
y
 = 
ch¨_row
;

208 
x
 = 
ch¨_cﬁ
;

209 
idít
 |
	`summ⁄_m⁄°î
(&
y
, &
x
, 
FALSE
);

213 
	`ãÀp‹t
(10);

214 
idít
 = 
TRUE
;

217 
	`ãÀp‹t
(100);

218 
idít
 = 
TRUE
;

221 
dun_Àvñ
 +(-3Ë+ 2*
	`øndöt
(2);

222 i‡(
dun_Àvñ
 < 1)

223 
dun_Àvñ
 = 1;

224 
√w_Àvñ_Êag
 = 
TRUE
;

225 
idít
 = 
TRUE
;

228 i‡(
py
.
Êags
.
c⁄fu£_m⁄°î
 == 0)

230 
	`msg_¥öt
("Your hands beginÅo glow.");

231 
py
.
Êags
.
c⁄fu£_m⁄°î
 = 
TRUE
;

232 
idít
 = 
TRUE
;

236 
idít
 = 
TRUE
;

237 
	`m≠_¨ó
();

240 
idít
 = 
	`¶ìp_m⁄°îs1
(
ch¨_row
, 
ch¨_cﬁ
);

243 
idít
 = 
TRUE
;

244 
	`w¨dög_glyph
();

247 
idít
 = 
	`dëe˘_åósuª
();

250 
idít
 = 
	`dëe˘_obje˘
();

253 
idít
 = 
	`dëe˘_å≠
();

256 
idít
 = 
	`dëe˘_sdo‹
();

259 
	`msg_¥öt
("This isá mass genocide scroll.");

260 (Ë
	`mass_gíocide
();

261 
idít
 = 
TRUE
;

264 
idít
 = 
	`dëe˘_övisibÀ
();

267 
	`msg_¥öt
("There isá highÖitched hummingÇoise.");

268 (Ë
	`aggøv©e_m⁄°î
(20);

269 
idít
 = 
TRUE
;

272 
idít
 = 
	`å≠_¸óti⁄
();

275 
idít
 = 
	`td_de°roy
();

278 
idít
 = 
	`do‹_¸óti⁄
();

281 
	`msg_¥öt
("This isá Recharge-Item scroll.");

282 
idít
 = 
TRUE
;

283 
u£d_up
 = 
	`ªch¨ge
(60);

286 
	`msg_¥öt
("This isá genocide scroll.");

287 (Ë
	`gíocide
();

288 
idít
 = 
TRUE
;

291 
idít
 = 
	`u∆ight_¨ó
(
ch¨_row
, 
ch¨_cﬁ
);

294 
idít
 = 
	`¥Ÿe˘_evû
();

297 
idít
 = 
TRUE
;

298 
	`¸óã_food
();

301 
idít
 = 
	`di•ñ_¸ótuª
(
CD_UNDEAD
, 60);

304 
i_±r
 = &
övít‹y
[
INVEN_WIELD
];

305 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

307 
	`objdes
(
tmp_°r
, 
i_±r
, 
FALSE
);

308 (Ë
	`•rötf
(
out_vÆ
, "You∏%†glow†brighéy!", 
tmp_°r
);

309 
	`msg_¥öt
(
out_vÆ
);

310 
Êag
 = 
FALSE
;

311 
k
 = 0; k < 
	`øndöt
(2); k++)

312 i‡(
	`ích™t
(&
i_±r
->
tohô
, 10))

313 
Êag
 = 
TRUE
;

314 i‡((
i_±r
->
tvÆ
 >
TV_HAFTED
)&&(i_±r->tvÆ <
TV_DIGGING
))

315 
j
 = 
i_±r
->
damage
[0] * i_ptr->damage[1];

318 
j
 = 10;

319 
k
 = 0; k < 
	`øndöt
(2); k++)

320 i‡(
	`ích™t
(&
i_±r
->
todam
, 
j
))

321 
Êag
 = 
TRUE
;

322 i‡(
Êag
)

324 #ifde‡
ATARIST_MWC


325 
i_±r
->
Êags
 &~
hﬁdî
;

327 
i_±r
->
Êags
 &~
TR_CURSED
;

329 
	`ˇlc_b⁄u£s
 ();

332 
	`msg_¥öt
("TheÉnchantment fails.");

333 
idít
 = 
TRUE
;

337 
i_±r
 = &
övít‹y
[
INVEN_WIELD
];

338 i‡(
i_±r
->
tvÆ
 !
TV_NOTHING
)

340 
	`objdes
(
tmp_°r
, 
i_±r
, 
FALSE
);

341 ()
	`•rötf
(
out_vÆ
,"You∏%†glow†bœck, fades.",
tmp_°r
);

342 
	`msg_¥öt
(
out_vÆ
);

343 
	`unmagic_«me
(
i_±r
);

344 
i_±r
->
tohô
 = -
	`øndöt
(5) -Ñandint(5);

345 
i_±r
->
todam
 = -
	`øndöt
(5) -Ñandint(5);

346 
i_±r
->
tﬂc
 = 0;

350 
	`py_b⁄u£s
(
i_±r
, -1);

351 
i_±r
->
Êags
 = 
TR_CURSED
;

352 
	`ˇlc_b⁄u£s
 ();

353 
idít
 = 
TRUE
;

357 
k
 = 0;

358 
l
 = 0;

359 i‡(
övít‹y
[
INVEN_BODY
].
tvÆ
 !
TV_NOTHING
)

360 
tmp
[
k
++] = 
INVEN_BODY
;

361 i‡(
övít‹y
[
INVEN_ARM
].
tvÆ
 !
TV_NOTHING
)

362 
tmp
[
k
++] = 
INVEN_ARM
;

363 i‡(
övít‹y
[
INVEN_OUTER
].
tvÆ
 !
TV_NOTHING
)

364 
tmp
[
k
++] = 
INVEN_OUTER
;

365 i‡(
övít‹y
[
INVEN_HANDS
].
tvÆ
 !
TV_NOTHING
)

366 
tmp
[
k
++] = 
INVEN_HANDS
;

367 i‡(
övít‹y
[
INVEN_HEAD
].
tvÆ
 !
TV_NOTHING
)

368 
tmp
[
k
++] = 
INVEN_HEAD
;

370 i‡(
övít‹y
[
INVEN_FEET
].
tvÆ
 !
TV_NOTHING
)

371 
tmp
[
k
++] = 
INVEN_FEET
;

373 i‡(
k
 > 0Ë
l
 = 
tmp
[
	`øndöt
(k)-1];

374 #ifde‡
ATARIST_MWC


375 i‡(
hﬁdî
 & 
övít‹y
[
INVEN_BODY
].
Êags
)

376 
l
 = 
INVEN_BODY
;

377 i‡(
hﬁdî
 & 
övít‹y
[
INVEN_ARM
].
Êags
)

378 
l
 = 
INVEN_ARM
;

379 i‡(
hﬁdî
 & 
övít‹y
[
INVEN_OUTER
].
Êags
)

380 
l
 = 
INVEN_OUTER
;

381 i‡(
hﬁdî
 & 
övít‹y
[
INVEN_HEAD
].
Êags
)

382 
l
 = 
INVEN_HEAD
;

383 i‡(
hﬁdî
 & 
övít‹y
[
INVEN_HANDS
].
Êags
)

384 
l
 = 
INVEN_HANDS
;

385 i‡(
hﬁdî
 & 
övít‹y
[
INVEN_FEET
].
Êags
)

386 
l
 = 
INVEN_FEET
;

388 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_BODY
].
Êags
)

389 
l
 = 
INVEN_BODY
;

390 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_ARM
].
Êags
)

391 
l
 = 
INVEN_ARM
;

392 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_OUTER
].
Êags
)

393 
l
 = 
INVEN_OUTER
;

394 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_HEAD
].
Êags
)

395 
l
 = 
INVEN_HEAD
;

396 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_HANDS
].
Êags
)

397 
l
 = 
INVEN_HANDS
;

398 i‡(
TR_CURSED
 & 
övít‹y
[
INVEN_FEET
].
Êags
)

399 
l
 = 
INVEN_FEET
;

402 i‡(
l
 > 0)

404 
i_±r
 = &
övít‹y
[
l
];

405 
	`objdes
(
tmp_°r
, 
i_±r
, 
FALSE
);

406 (Ë
	`•rötf
(
out_vÆ
,"You∏%†glow†brighéy!", 
tmp_°r
);

407 
	`msg_¥öt
(
out_vÆ
);

408 
Êag
 = 
FALSE
;

409 
k
 = 0; k < 
	`øndöt
(2) + 1; k++)

410 i‡(
	`ích™t
(&
i_±r
->
tﬂc
, 10))

411 
Êag
 = 
TRUE
;

412 i‡(
Êag
)

414 #ifde‡
ATARIST_MWC


415 
i_±r
->
Êags
 &~
hﬁdî
;

417 
i_±r
->
Êags
 &~
TR_CURSED
;

419 
	`ˇlc_b⁄u£s
 ();

422 
	`msg_¥öt
("TheÉnchantment fails.");

423 
idít
 = 
TRUE
;

427 i‡((
övít‹y
[
INVEN_BODY
].
tvÆ
 !
TV_NOTHING
)

428 && (
	`øndöt
(4) == 1))

429 
k
 = 
INVEN_BODY
;

430 i‡((
övít‹y
[
INVEN_ARM
].
tvÆ
 !
TV_NOTHING
)

431 && (
	`øndöt
(3) ==1))

432 
k
 = 
INVEN_ARM
;

433 i‡((
övít‹y
[
INVEN_OUTER
].
tvÆ
 !
TV_NOTHING
)

434 && (
	`øndöt
(3) ==1))

435 
k
 = 
INVEN_OUTER
;

436 i‡((
övít‹y
[
INVEN_HEAD
].
tvÆ
 !
TV_NOTHING
)

437 && (
	`øndöt
(3) ==1))

438 
k
 = 
INVEN_HEAD
;

439 i‡((
övít‹y
[
INVEN_HANDS
].
tvÆ
 !
TV_NOTHING
)

440 && (
	`øndöt
(3) ==1))

441 
k
 = 
INVEN_HANDS
;

442 i‡((
övít‹y
[
INVEN_FEET
].
tvÆ
 !
TV_NOTHING
)

443 && (
	`øndöt
(3) ==1))

444 
k
 = 
INVEN_FEET
;

445 i‡(
övít‹y
[
INVEN_BODY
].
tvÆ
 !
TV_NOTHING
)

446 
k
 = 
INVEN_BODY
;

447 i‡(
övít‹y
[
INVEN_ARM
].
tvÆ
 !
TV_NOTHING
)

448 
k
 = 
INVEN_ARM
;

449 i‡(
övít‹y
[
INVEN_OUTER
].
tvÆ
 !
TV_NOTHING
)

450 
k
 = 
INVEN_OUTER
;

451 i‡(
övít‹y
[
INVEN_HEAD
].
tvÆ
 !
TV_NOTHING
)

452 
k
 = 
INVEN_HEAD
;

453 i‡(
övít‹y
[
INVEN_HANDS
].
tvÆ
 !
TV_NOTHING
)

454 
k
 = 
INVEN_HANDS
;

455 i‡(
övít‹y
[
INVEN_FEET
].
tvÆ
 !
TV_NOTHING
)

456 
k
 = 
INVEN_FEET
;

458 
k
 = 0;

460 i‡(
k
 > 0)

462 
i_±r
 = &
övít‹y
[
k
];

463 
	`objdes
(
tmp_°r
, 
i_±r
, 
FALSE
);

464 ()
	`•rötf
(
out_vÆ
,"You∏%†glow†bœck, fades.",
tmp_°r
);

465 
	`msg_¥öt
(
out_vÆ
);

466 
	`unmagic_«me
(
i_±r
);

467 
i_±r
->
Êags
 = 
TR_CURSED
;

468 
i_±r
->
tohô
 = 0;

469 
i_±r
->
todam
 = 0;

470 
i_±r
->
tﬂc
 = -
	`øndöt
(5) -Ñandint(5);

471 
	`ˇlc_b⁄u£s
 ();

472 
idít
 = 
TRUE
;

476 
idít
 = 
FALSE
;

477 
k
 = 0; k < 
	`øndöt
(3); k++)

479 
y
 = 
ch¨_row
;

480 
x
 = 
ch¨_cﬁ
;

481 
idít
 |
	`summ⁄_undód
(&
y
, &
x
);

485 
idít
 = 
TRUE
;

486 
	`bÀss
(
	`øndöt
(12)+6);

489 
idít
 = 
TRUE
;

490 
	`bÀss
(
	`øndöt
(24)+12);

493 
idít
 = 
TRUE
;

494 
	`bÀss
(
	`øndöt
(48)+24);

497 
idít
 = 
TRUE
;

498 i‡(
py
.
Êags
.
w‹d_ªˇŒ
 == 0)

499 
py
.
Êags
.
w‹d_ªˇŒ
 = 25 + 
	`øndöt
(30);

500 
	`msg_¥öt
("Theáirábout you becomes charged.");

503 
	`de°roy_¨ó
(
ch¨_row
, 
ch¨_cﬁ
);

504 
idít
 = 
TRUE
;

507 
	`msg_¥öt
("InternalÉrror in scroll()");

512 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

513 i‡(
idít
)

515 i‡(!
	`known1_p
(
i_±r
))

517 
m_±r
 = &
py
.
misc
;

519 
m_±r
->
exp
 +(
i_±r
->
Àvñ
 +(m_±r->
Àv
 >> 1)) / m_ptr->lev;

520 
	`¥t_ex≥rõn˚
();

522 
	`idítify
(&
ôem_vÆ
);

523 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

526 i‡(!
	`known1_p
(
i_±r
))

527 
	`ßm∂e
 (
i_±r
);

528 i‡(
u£d_up
)

530 
	`desc_ªmaö
(
ôem_vÆ
);

531 
	`öví_de°roy
(
ôem_vÆ
);

534 
	}
}

	@sets.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

13 
	$£t_room
(
ñemít
)

14 
ñemít
;

16 i‡((
ñemít
 =
DARK_FLOOR
Ë|| (ñemíà=
LIGHT_FLOOR
))

17 (
TRUE
);

18 (
FALSE
);

19 
	}
}

21 
	$£t_c‹r
(
ñemít
)

22 
ñemít
;

24 i‡(
ñemít
 =
CORR_FLOOR
 ||ÉÀmíà=
BLOCKED_FLOOR
)

25 (
TRUE
);

26 (
FALSE
);

27 
	}
}

29 
	$£t_Êo‹
(
ñemít
)

30 
ñemít
;

32 i‡(
ñemít
 <
MAX_CAVE_FLOOR
)

33 (
TRUE
);

35 (
FALSE
);

36 
	}
}

38 
	$£t_c‹rodes
(
ôem
)

39 
öví_ty≥
 *
ôem
;

41 
ôem
->
tvÆ
)

43 
TV_SWORD
: 
TV_HELM
: 
TV_SHIELD
: 
TV_HARD_ARMOR
:

44 
TV_WAND
:

45  (
TRUE
);

47 (
FALSE
);

48 
	}
}

51 
	$£t_ÊammabÀ
(
ôem
)

52 
öví_ty≥
 *
ôem
;

54 
ôem
->
tvÆ
)

56 
TV_ARROW
: 
TV_BOW
: 
TV_HAFTED
: 
TV_POLEARM
:

57 
TV_BOOTS
: 
TV_GLOVES
: 
TV_CLOAK
: 
TV_SOFT_ARMOR
:

59 i‡(
ôem
->
Êags
 & 
TR_RES_FIRE
)

60  
FALSE
;

62  
TRUE
;

64 
TV_STAFF
: 
TV_SCROLL1
: 
TV_SCROLL2
:

65  
TRUE
;

67 (
FALSE
);

68 
	}
}

71 
	$£t_‰o°_de°roy
(
ôem
)

72 
öví_ty≥
 *
ôem
;

74 i‡((
ôem
->
tvÆ
 =
TV_POTION1
Ë|| (ôem->tvÆ =
TV_POTION2
)

75 || (
ôem
->
tvÆ
 =
TV_FLASK
))

76 (
TRUE
);

77 (
FALSE
);

78 
	}
}

81 
	$£t_acid_af„˘
(
ôem
)

82 
öví_ty≥
 *
ôem
;

84 
ôem
->
tvÆ
)

86 
TV_MISC
: 
TV_CHEST
:

87  
TRUE
;

88 
TV_BOLT
: 
TV_ARROW
:

89 
TV_BOW
: 
TV_HAFTED
: 
TV_POLEARM
: 
TV_BOOTS
:

90 
TV_GLOVES
: 
TV_CLOAK
: 
TV_SOFT_ARMOR
:

91 i‡(
ôem
->
Êags
 & 
TR_RES_ACID
)

92  (
FALSE
);

94  (
TRUE
);

96 (
FALSE
);

97 
	}
}

100 
	$£t_lighäög_de°roy
(
ôem
)

101 
öví_ty≥
 *
ôem
;

103 i‡((
ôem
->
tvÆ
 =
TV_RING
Ë|| (ôem->tvÆ =
TV_WAND
)

104 || (
ôem
->
tvÆ
 =
TV_SPIKE
))

105 (
TRUE
);

107 (
FALSE
);

108 
	}
}

112 #ifde‡
__TURBOC__


113 #¥agm®
¨gu£d


115 
	$£t_nuŒ
(
ôem
)

116 
öví_ty≥
 *
ôem
;

117 #i‡
	`deföed
(
MAC
Ë&& !deföed(
THINK_C
)

118 #¥agm®
	`unu£d
(
ôem
)

121 (
FALSE
);

122 
	}
}

125 
	$£t_acid_de°roy
(
ôem
)

126 
öví_ty≥
 *
ôem
;

128 
ôem
->
tvÆ
)

130 
TV_ARROW
: 
TV_BOW
: 
TV_HAFTED
: 
TV_POLEARM
:

131 
TV_BOOTS
: 
TV_GLOVES
: 
TV_CLOAK
: 
TV_HELM
:

132 
TV_SHIELD
: 
TV_HARD_ARMOR
: 
TV_SOFT_ARMOR
:

133 i‡(
ôem
->
Êags
 & 
TR_RES_ACID
)

134  
FALSE
;

136  
TRUE
;

137 
TV_STAFF
:

138 
TV_SCROLL1
: 
TV_SCROLL2
: 
TV_FOOD
: 
TV_OPEN_DOOR
:

139 
TV_CLOSED_DOOR
:

140 (
TRUE
);

142 (
FALSE
);

143 
	}
}

146 
	$£t_fúe_de°roy
(
ôem
)

147 
öví_ty≥
 *
ôem
;

149 
ôem
->
tvÆ
)

151 
TV_ARROW
: 
TV_BOW
: 
TV_HAFTED
: 
TV_POLEARM
:

152 
TV_BOOTS
: 
TV_GLOVES
: 
TV_CLOAK
: 
TV_SOFT_ARMOR
:

153 i‡(
ôem
->
Êags
 & 
TR_RES_FIRE
)

154  
FALSE
;

156  
TRUE
;

157 
TV_STAFF
: 
TV_SCROLL1
: 
TV_SCROLL2
: 
TV_POTION1
:

158 
TV_POTION2
: 
TV_FLASK
: 
TV_FOOD
: 
TV_OPEN_DOOR
:

159 
TV_CLOSED_DOOR
:

160 (
TRUE
);

162 (
FALSE
);

163 
	}
}

165 
	$£t_œrge
(
ôem
)

166 
åósuª_ty≥
 *
ôem
;

168 
ôem
->
tvÆ
)

170 
TV_CHEST
: 
TV_BOW
: 
TV_POLEARM
:

171 
TV_HARD_ARMOR
: 
TV_SOFT_ARMOR
: 
TV_STAFF
:

172  
TRUE
;

173 
TV_HAFTED
: 
TV_SWORD
: 
TV_DIGGING
:

174 i‡(
ôem
->
weight
 > 150)

175  
TRUE
;

177  
FALSE
;

179  
FALSE
;

180 
	}
}

182 
	$gíîÆ_°‹e
(
ñemít
)

183 
ñemít
;

185 
ñemít
)

187 
TV_DIGGING
: 
TV_BOOTS
: 
TV_CLOAK
: 
TV_FOOD
:

188 
TV_FLASK
: 
TV_LIGHT
: 
TV_SPIKE
:

189 (
TRUE
);

191 (
FALSE
);

192 
	}
}

195 
	$¨m‹y
(
ñemít
)

196 
ñemít
;

198 
ñemít
)

200 
TV_BOOTS
: 
TV_GLOVES
: 
TV_HELM
: 
TV_SHIELD
:

201 
TV_HARD_ARMOR
: 
TV_SOFT_ARMOR
:

202 (
TRUE
);

204 (
FALSE
);

205 
	}
}

208 
	$wóp⁄smôh
(
ñemít
)

209 
ñemít
;

211 
ñemít
)

213 
TV_SLING_AMMO
: 
TV_BOLT
: 
TV_ARROW
: 
TV_BOW
:

214 
TV_HAFTED
: 
TV_POLEARM
: 
TV_SWORD
:

215 (
TRUE
);

217 (
FALSE
);

218 
	}
}

221 
	$ãm∂e
(
ñemít
)

222 
ñemít
;

224 
ñemít
)

226 
TV_HAFTED
: 
TV_SCROLL1
: 
TV_SCROLL2
: 
TV_POTION1
:

227 
TV_POTION2
: 
TV_PRAYER_BOOK
:

228 (
TRUE
);

230 (
FALSE
);

231 
	}
}

234 
	$Æchemi°
(
ñemít
)

235 
ñemít
;

237 
ñemít
)

239 
TV_SCROLL1
: 
TV_SCROLL2
: 
TV_POTION1
: 
TV_POTION2
:

240 (
TRUE
);

242 (
FALSE
);

243 
	}
}

246 
	$magic_sh›
(
ñemít
)

247 
ñemít
;

249 
ñemít
)

251 
TV_AMULET
: 
TV_RING
: 
TV_STAFF
: 
TV_WAND
:

252 
TV_SCROLL1
: 
TV_SCROLL2
: 
TV_POTION1
: 
TV_POTION2
:

253 
TV_MAGIC_BOOK
:

254 (
TRUE
);

256 (
FALSE
);

257 
	}
}

259 #ifde‡
MAC


262 
	$°‹e_buy
(
°‹ío
, 
ñemít
)

263 
°‹ío
;

264 
ñemít
;

266 
°‹ío
)

268 0: (
	`gíîÆ_°‹e
(
ñemít
));

269 1: (
	`¨m‹y
(
ñemít
));

270 2: (
	`wóp⁄smôh
(
ñemít
));

271 3: (
	`ãm∂e
(
ñemít
));

272 4: (
	`Æchemi°
(
ñemít
));

273 5: (
	`magic_sh›
(
ñemít
));

275 (
FALSE
);

276 
	}
}

	@signals.c

14 
	~<°dio.h
>

16 
	~"c⁄fig.h
"

17 
	~"c⁄°™t.h
"

21 #ifde‡
MAC


23 
	$nosig«ls
()

25 
	}
}

27 
	$sig«ls
()

29 
	}
}

31 
	$öô_sig«ls
()

33 
	}
}

37 #ifde‡
ATARIST_MWC


40 
	~"ty≥s.h
"

41 
	~"exã∫s.h
"

47 #i‡!
deföed
(
ATARIST_MWC
Ë&& !deföed(
ATARIST_TC
)

49 #i‡
deföed
(
SYS_V
Ë&& deföed(
löt
)

52 
	#_h_IEEETRAP


	)

53 °ru˘ { 
	m°uff
; } 
	tÂvmach
;

57 
	~<sig«l.h
>

59 
	~"ty≥s.h
"

60 
	~"exã∫s.h
"

62 #i‚de‡
USG


64 
	~<sys/ty≥s.h
>

65 
	~<sys/∑øm.h
>

68 #ifde‡
USG


69 #i‚de‡
ATARIST_MWC


70 
	~<°rög.h
>

73 
	~<°rögs.h
>

76 #i‚de‡
VMS


77 #ifde‡
USG


78 
exô
();

79 #ifde‡
__TURBOC__


80 
¶ìp
();

82 
¶ìp
();

87 
	gîr‹_sig
 = -1;

88 
	gsig«l_cou¡
 = 0;

91 #i‚de‡
USG


92 #ifde‡
__386BSD__


93 
	$sig«l_h™dÀr
(
sig
, 
code
, 
s˝
)

95 
	$sig«l_h™dÀr
(
sig
, 
code
, 
s˝
)

97 
sig
, 
code
;

98 
sigc⁄ãxt
 *
s˝
;

100 
smask
;

102 
smask
 = 
	`sig£tmask
(0Ë| (1 << 
sig
);

104 #i‡
	`deföed
(
__TURBOC__
Ë|| deföed(
AMIGA
)

105 
	$sig«l_h™dÀr
(
sig
)

107 
	$sig«l_h™dÀr
(
sig
)

109 
sig
;

113 if(
îr‹_sig
 >= 0)

115 if(++
sig«l_cou¡
 > 10)

116 (Ë
	`sig«l
(
sig
, 
SIG_DFL
);

119 
îr‹_sig
 = 
sig
;

122 i‡(
sig
 =
SIGINT


123 #i‡!
	`deföed
(
MSDOS
Ë&& !deföed(
AMIGA
Ë&& !deföed(
ATARIST_TC
)

124 || 
sig
 =
SIGQUIT


128 i‡(
dóth
)

129 (Ë
	`sig«l
(
sig
, 
SIG_IGN
);

130 i‡(!
ch¨a˘î_ßved
 && 
ch¨a˘î_gíî©ed
)

132 i‡(!
	`gë_check
("Really commit *Suicide*?"))

134 i‡(
tu∫
 > 0)

135 
	`di°urb
(1, 0);

136 
	`îa£_löe
(0, 0);

137 
	`put_qio
();

138 
îr‹_sig
 = -1;

139 #ifde‡
USG


140 (Ë
	`sig«l
(
sig
, 
sig«l_h™dÀr
);

142 (Ë
	`sig£tmask
(
smask
);

145 i‡(
waô_f‹_m‹e
)

146 
	`put_buf„r
(" -m‹e-", 
MSG_LINE
, 0);

147 
	`put_qio
();

150 (Ë
	`°r˝y
(
dõd_‰om
, "Interrupting");

153 (Ë
	`°r˝y
(
dõd_‰om
, "Abortion");

154 
	`¥t
("Interrupt!", 0, 0);

155 
dóth
 = 
TRUE
;

156 
	`exô_game
();

159 
	`¥t
(

162 i‡(!
dóth
 && !
ch¨a˘î_ßved
 && 
ch¨a˘î_gíî©ed
)

164 
∑nic_ßve
 = 1;

165 
	`¥t
("Your guardianángel isÅryingÅo save you.", 0, 0);

166 (Ë
	`•rötf
(
dõd_‰om
,"’™i¯ßvê%d)",
sig
);

167 i‡(!
	`ßve_ch¨
())

169 (Ë
	`°r˝y
(
dõd_‰om
, "software bug");

170 
dóth
 = 
TRUE
;

171 
tu∫
 = -1;

176 
dóth
 = 
TRUE
;

177 (Ë
	`_ßve_ch¨
(
ßvefûe
);

179 
	`ª°‹e_ãrm
();

180 #i‡!
	`deföed
(
MSDOS
Ë&& !deföed(
AMIGA
Ë&& !deföed(
ATARIST_TC
)

182 (Ë
	`sig«l
(
sig
, 
SIG_DFL
);

183 (Ë
	`kûl
(
	`gëpid
(), 
sig
);

184 (Ë
	`¶ìp
(5);

186 
	`exô
(1);

187 
	}
}

191 #i‚de‡
USG


192 
	gmask
;

195 
	$nosig«ls
()

197 #i‡!
	`deföed
(
ATARIST_MWC
Ë&& !deföed(
ATARIST_TC
)

198 #ifde‡
SIGTSTP


199 #i‡
	`deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

200 (Ë
	`sig«l
(
SIGTSTP
, (
__Sigfunc
)
SIG_IGN
);

202 (Ë
	`sig«l
(
SIGTSTP
, 
SIG_IGN
);

204 #i‚de‡
USG


205 
mask
 = 
	`sig£tmask
(0);

208 i‡(
îr‹_sig
 < 0)

209 
îr‹_sig
 = 0;

211 
	}
}

213 
	$sig«ls
()

215 #i‡!
	`deföed
(
ATARIST_MWC
Ë&& !deföed(
ATARIST_TC
)

216 #ifde‡
SIGTSTP


217 #i‡
	`deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

218 (Ë
	`sig«l
(
SIGTSTP
, (
__Sigfunc
)
su•íd
);

220 #ifde‡ 
__386BSD__


221 (Ë
	`sig«l
(
SIGTSTP
, (
sig_t
)
su•íd
);

223 (Ë
	`sig«l
(
SIGTSTP
, 
su•íd
);

226 #i‚de‡
USG


227 (Ë
	`sig£tmask
(
mask
);

230 i‡(
îr‹_sig
 == 0)

231 
îr‹_sig
 = -1;

233 
	}
}

236 
	$öô_sig«ls
()

238 #i‡!
	`deföed
(
ATARIST_MWC
Ë&& !deföed(
ATARIST_TC
)

240 (Ë
	`sig«l
(
SIGINT
, 
sig«l_h™dÀr
);

242 #i‡
	`deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

245 (Ë
	`sig«l
(
SIGINT
, (
__Sigfunc
)
sig«l_h™dÀr
);

246 (Ë
	`sig«l
(
SIGQUIT
, (
__Sigfunc
)
sig«l_h™dÀr
);

247 (Ë
	`sig«l
(
SIGTSTP
,(
__Sigfunc
)
SIG_IGN
);

248 (Ë
	`sig«l
(
SIGILL
, (
__Sigfunc
)
sig«l_h™dÀr
);

249 (Ë
	`sig«l
(
SIGHUP
, (
__Sigfunc
)
SIG_IGN
);

250 (Ë
	`sig«l
(
SIGTRAP
,(
__Sigfunc
)
sig«l_h™dÀr
);

251 (Ë
	`sig«l
(
SIGIOT
, (
__Sigfunc
)
sig«l_h™dÀr
);

252 (Ë
	`sig«l
(
SIGEMT
, (
__Sigfunc
)
sig«l_h™dÀr
);

253 (Ë
	`sig«l
(
SIGKILL
, (
__Sigfunc
)
sig«l_h™dÀr
);

254 (Ë
	`sig«l
(
SIGBUS
, (
__Sigfunc
)
sig«l_h™dÀr
);

255 (Ë
	`sig«l
(
SIGSEGV
, (
__Sigfunc
)
sig«l_h™dÀr
);

256 (Ë
	`sig«l
(
SIGSYS
, (
__Sigfunc
)
sig«l_h™dÀr
);

257 (Ë
	`sig«l
(
SIGTERM
,(
__Sigfunc
)
sig«l_h™dÀr
);

258 (Ë
	`sig«l
(
SIGPIPE
, (
__Sigfunc
)
sig«l_h™dÀr
);

262 (Ë
	`sig«l
(
SIGINT
, 
sig«l_h™dÀr
);

263 (Ë
	`sig«l
(
SIGFPE
, 
sig«l_h™dÀr
);

265 #i‡
	`deföed
(
MSDOS
)

269 #ifde‡
AMIGA


271 (Ë
	`sig«l
(
SIGTERM
, 
sig«l_h™dÀr
);

272 (Ë
	`sig«l
(
SIGABRT
, 
sig«l_h™dÀr
);

274 (Ë
	`sig«l
(
SIGILL
, 
sig«l_h™dÀr
);

275 (Ë
	`sig«l
(
SIGSEGV
, 
sig«l_h™dÀr
);

281 (Ë
	`sig«l
(
SIGHUP
, 
SIG_IGN
);

282 (Ë
	`sig«l
(
SIGQUIT
, 
sig«l_h™dÀr
);

283 (Ë
	`sig«l
(
SIGILL
, 
sig«l_h™dÀr
);

284 (Ë
	`sig«l
(
SIGTRAP
, 
sig«l_h™dÀr
);

285 (Ë
	`sig«l
(
SIGIOT
, 
sig«l_h™dÀr
);

286 #ifde‡
SIGEMT


287 (Ë
	`sig«l
(
SIGEMT
, 
sig«l_h™dÀr
);

289 #ifde‡
SIGDANGER


290 (Ë
	`sig«l
(
SIGDANGER
, 
sig«l_h™dÀr
);

292 (Ë
	`sig«l
(
SIGKILL
, 
sig«l_h™dÀr
);

293 (Ë
	`sig«l
(
SIGBUS
, 
sig«l_h™dÀr
);

294 (Ë
	`sig«l
(
SIGSEGV
, 
sig«l_h™dÀr
);

295 #ifde‡
SIGSYS


296 (Ë
	`sig«l
(
SIGSYS
, 
sig«l_h™dÀr
);

298 (Ë
	`sig«l
(
SIGTERM
, 
sig«l_h™dÀr
);

299 (Ë
	`sig«l
(
SIGPIPE
, 
sig«l_h™dÀr
);

300 #ifde‡
SIGXCPU


301 (Ë
	`sig«l
(
SIGXCPU
, 
sig«l_h™dÀr
);

303 #ifde‡
SIGPWR


304 (Ë
	`sig«l
(
SIGPWR
, 
sig«l_h™dÀr
);

310 
	}
}

312 
	$ign‹e_sig«ls
()

314 #i‡!
	`deföed
(
ATARIST_MWC
)

315 (Ë
	`sig«l
(
SIGINT
, 
SIG_IGN
);

316 #ifde‡
SIGQUIT


317 (Ë
	`sig«l
(
SIGQUIT
, 
SIG_IGN
);

320 
	}
}

322 
	$deÁu…_sig«ls
()

324 #i‡!
	`deföed
(
ATARIST_MWC
)

325 (Ë
	`sig«l
(
SIGINT
, 
SIG_DFL
);

326 #ifde‡
SIGQUIT


327 (Ë
	`sig«l
(
SIGQUIT
, 
SIG_DFL
);

330 
	}
}

332 
	$ª°‹e_sig«ls
()

334 #i‡!
	`deföed
(
ATARIST_MWC
)

335 #i‡
	`deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

336 (Ë
	`sig«l
(
SIGINT
, (
__Sigfunc
)
sig«l_h™dÀr
);

338 (Ë
	`sig«l
(
SIGINT
, 
sig«l_h™dÀr
);

340 #ifde‡
SIGQUIT


341 #i‡
	`deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

342 (Ë
	`sig«l
(
SIGQUIT
, (
__Sigfunc
)
sig«l_h™dÀr
);

344 (Ë
	`sig«l
(
SIGQUIT
, 
sig«l_h™dÀr
);

348 
	}
}

	@spells.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

11 
	~<°dlib.h
>

14 
	~"c⁄fig.h
"

15 
	~"c⁄°™t.h
"

16 
	~"ty≥s.h
"

17 
	~"exã∫s.h
"

19 #ifde‡
USG


20 #i‚de‡
ATARIST_MWC


21 
	~<°rög.h
>

24 
	~<°rögs.h
>

27 #i‡
deföed
(
LINT_ARGS
)

28 
ª∂a˚_•Ÿ
(, , );

30 
ª∂a˚_•Ÿ
();

38 
	$m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
)

39 *
m_«me
;

40 
m⁄°î_ty≥
 *
m_±r
;

41 
¸ótuª_ty≥
 *
r_±r
;

43 i‡(!
m_±r
->
ml
)

44 (Ë
	`°r˝y
 (
m_«me
, "It");

46 (Ë
	`•rötf
 (
m_«me
, "Thê%s", 
r_±r
->
«me
);

47 
	}
}

49 
	$lowî_m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
)

50 *
m_«me
;

51 
m⁄°î_ty≥
 *
m_±r
;

52 
¸ótuª_ty≥
 *
r_±r
;

54 i‡(!
m_±r
->
ml
)

55 (Ë
	`°r˝y
 (
m_«me
, "it");

57 (Ë
	`•rötf
 (
m_«me
, "thê%s", 
r_±r
->
«me
);

58 
	}
}

61 
	$¶ìp_m⁄°îs1
(
y
, 
x
)

62 
y
, 
x
;

64 
i
, 
j
;

65 
ˇve_ty≥
 *
c_±r
;

66 
m⁄°î_ty≥
 *
m_±r
;

67 
¸ótuª_ty≥
 *
r_±r
;

68 
¶ìp
;

69 
vty≥
 
out_vÆ
, 
m_«me
;

71 
¶ìp
 = 
FALSE
;

72 
i
 = 
y
-1; i <= y+1; i++)

73 
j
 = 
x
-1; j <= x+1; j++)

75 
c_±r
 = &
ˇve
[
i
][
j
];

76 i‡(
c_±r
->
˝å
 > 1)

78 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

79 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

81 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

82 i‡((
	`øndöt
(
MAX_MONS_LEVEL
Ë< 
r_±r
->
Àvñ
) ||

83 (
CD_NO_SLEEP
 & 
r_±r
->
cde„n£
))

85 i‡(
m_±r
->
ml
 && (
r_±r
->
cde„n£
 & 
CD_NO_SLEEP
))

86 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
CD_NO_SLEEP
;

87 (Ë
	`•rötf
(
out_vÆ
, "%†i†u«f„˘ed.", 
m_«me
);

88 
	`msg_¥öt
(
out_vÆ
);

92 
¶ìp
 = 
TRUE
;

93 
m_±r
->
c¶ìp
 = 500;

94 (Ë
	`•rötf
(
out_vÆ
, "%†ÁŒ†a¶ìp.", 
m_«me
);

95 
	`msg_¥öt
(
out_vÆ
);

99 (
¶ìp
);

100 
	}
}

103 
	$dëe˘_åósuª
()

105 
i
, 
j
, 
dëe˘
;

106 
ˇve_ty≥
 *
c_±r
;

108 
dëe˘
 = 
FALSE
;

109 
i
 = 
∑√l_row_mö
; i <
∑√l_row_max
; i++)

110 
j
 = 
∑√l_cﬁ_mö
; j <
∑√l_cﬁ_max
; j++)

112 
c_±r
 = &
ˇve
[
i
][
j
];

113 i‡((
c_±r
->
çå
 !0Ë&& (
t_li°
[c_±r->çå].
tvÆ
 =
TV_GOLD
) &&

114 !
	`ã°_light
(
i
, 
j
))

116 
c_±r
->
fm
 = 
TRUE
;

117 
	`lôe_•Ÿ
(
i
, 
j
);

118 
dëe˘
 = 
TRUE
;

121 (
dëe˘
);

122 
	}
}

126 
	$dëe˘_obje˘
()

128 
i
, 
j
, 
dëe˘
;

129 
ˇve_ty≥
 *
c_±r
;

131 
dëe˘
 = 
FALSE
;

132 
i
 = 
∑√l_row_mö
; i <
∑√l_row_max
; i++)

133 
j
 = 
∑√l_cﬁ_mö
; j <
∑√l_cﬁ_max
; j++)

135 
c_±r
 = &
ˇve
[
i
][
j
];

136 i‡((
c_±r
->
çå
 !0Ë&& (
t_li°
[c_±r->çå].
tvÆ
 < 
TV_MAX_OBJECT
)

137 && !
	`ã°_light
(
i
, 
j
))

139 
c_±r
->
fm
 = 
TRUE
;

140 
	`lôe_•Ÿ
(
i
, 
j
);

141 
dëe˘
 = 
TRUE
;

144 (
dëe˘
);

145 
	}
}

149 
	$dëe˘_å≠
()

151 
i
, 
j
;

152 
dëe˘
;

153 
ˇve_ty≥
 *
c_±r
;

154 
öví_ty≥
 *
t_±r
;

156 
dëe˘
 = 
FALSE
;

157 
i
 = 
∑√l_row_mö
; i <
∑√l_row_max
; i++)

158 
j
 = 
∑√l_cﬁ_mö
; j <
∑√l_cﬁ_max
; j++)

160 
c_±r
 = &
ˇve
[
i
][
j
];

161 i‡(
c_±r
->
çå
 != 0)

162 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_INVIS_TRAP
)

164 
c_±r
->
fm
 = 
TRUE
;

165 
	`ch™ge_å≠
(
i
, 
j
);

166 
dëe˘
 = 
TRUE
;

168 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_CHEST
)

170 
t_±r
 = &
t_li°
[
c_±r
->
çå
];

171 
	`known2
(
t_±r
);

174 (
dëe˘
);

175 
	}
}

179 
	$dëe˘_sdo‹
()

181 
i
, 
j
, 
dëe˘
;

182 
ˇve_ty≥
 *
c_±r
;

184 
dëe˘
 = 
FALSE
;

185 
i
 = 
∑√l_row_mö
; i <
∑√l_row_max
; i++)

186 
j
 = 
∑√l_cﬁ_mö
; j <
∑√l_cﬁ_max
; j++)

188 
c_±r
 = &
ˇve
[
i
][
j
];

189 i‡(
c_±r
->
çå
 != 0)

191 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_SECRET_DOOR
)

193 
c_±r
->
fm
 = 
TRUE
;

194 
	`ch™ge_å≠
(
i
, 
j
);

195 
dëe˘
 = 
TRUE
;

198 i‡(((
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_UP_STAIR
) ||

199 (
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_DOWN_STAIR
)) &&

200 !
c_±r
->
fm
)

202 
c_±r
->
fm
 = 
TRUE
;

203 
	`lôe_•Ÿ
(
i
, 
j
);

204 
dëe˘
 = 
TRUE
;

207 (
dëe˘
);

208 
	}
}

212 
	$dëe˘_övisibÀ
()

214 
i
, 
Êag
;

215 
m⁄°î_ty≥
 *
m_±r
;

216 #ifde‡
ATARIST_MWC


217 
öt32u
 
hﬁdî
;

220 
Êag
 = 
FALSE
;

221 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

223 
m_±r
 = &
m_li°
[
i
];

224 i‡(
	`∑√l_c⁄èös
(()
m_±r
->
fy
, ()m_±r->
fx
) &&

225 #ifde‡
ATARIST_MWC


226 ((
hﬁdî
 = 
CM_INVISIBLE
Ë& 
c_li°
[
m_±r
->
m±r
].
cmove
))

228 (
CM_INVISIBLE
 & 
c_li°
[
m_±r
->
m±r
].
cmove
))

231 
m_±r
->
ml
 = 
TRUE
;

233 
	`¥öt
(()
c_li°
[
m_±r
->
m±r
].
cch¨
, ()m_±r->
fy
,

234 ()
m_±r
->
fx
);

235 
Êag
 = 
TRUE
;

238 i‡(
Êag
)

240 
	`msg_¥öt
("You senseÅheÖresence of invisible creatures!");

241 
	`msg_¥öt
(
CNIL
);

243 
	`¸ótuªs
(
FALSE
);

245 (
Êag
);

246 
	}
}

251 
	$light_¨ó
(
y
, 
x
)

252 
y
, 
x
;

254 
i
, 
j
, 
light
;

256 i‡(
py
.
Êags
.
blöd
 < 1)

257 
	`msg_¥öt
("Youáre surrounded byá whiteÜight.");

258 
light
 = 
TRUE
;

259 i‡(
ˇve
[
y
][
x
].
Ã
 && (
dun_Àvñ
 > 0))

260 
	`light_room
(
y
, 
x
);

263 
i
 = 
y
-1; i <= y+1; i++)

264 
j
 = 
x
-1; j <= x+1; j++)

266 
ˇve
[
i
][
j
].
∂
 = 
TRUE
;

267 
	`lôe_•Ÿ
(
i
, 
j
);

269 (
light
);

270 
	}
}

274 
	$u∆ight_¨ó
(
y
, 
x
)

275 
y
, 
x
;

277 
i
, 
j
;

278 
tmp1
, 
tmp2
, 
u∆ight
;

279 
°¨t_row
, 
°¨t_cﬁ
, 
íd_row
, 
íd_cﬁ
;

280 
ˇve_ty≥
 *
c_±r
;

282 
u∆ight
 = 
FALSE
;

283 i‡(
ˇve
[
y
][
x
].
Ã
 && (
dun_Àvñ
 > 0))

285 
tmp1
 = (
SCREEN_HEIGHT
/2);

286 
tmp2
 = (
SCREEN_WIDTH
 /2);

287 
°¨t_row
 = (
y
/
tmp1
)*tmp1 + 1;

288 
°¨t_cﬁ
 = (
x
/
tmp2
)*tmp2 + 1;

289 
íd_row
 = 
°¨t_row
 + 
tmp1
 - 1;

290 
íd_cﬁ
 = 
°¨t_cﬁ
 + 
tmp2
 - 1;

291 
i
 = 
°¨t_row
; i <
íd_row
; i++)

293 
j
 = 
°¨t_cﬁ
; j <
íd_cﬁ
; j++)

295 
c_±r
 = &
ˇve
[
i
][
j
];

296 i‡(
c_±r
->
Ã
 && c_±r->
fvÆ
 <
MAX_CAVE_FLOOR
)

298 
c_±r
->
∂
 = 
FALSE
;

299 
c_±r
->
fvÆ
 = 
DARK_FLOOR
;

300 
	`lôe_•Ÿ
 (
i
, 
j
);

301 i‡(!
	`ã°_light
(
i
, 
j
))

302 
u∆ight
 = 
TRUE
;

308 
i
 = 
y
-1; i <= y+1; i++)

309 
j
 = 
x
-1; j <= x+1; j++)

311 
c_±r
 = &
ˇve
[
i
][
j
];

312 i‡((
c_±r
->
fvÆ
 =
CORR_FLOOR
Ë&& c_±r->
∂
)

315 
c_±r
->
∂
 = 
FALSE
;

316 
u∆ight
 = 
TRUE
;

320 i‡(
u∆ight
 && 
py
.
Êags
.
blöd
 <= 0)

321 
	`msg_¥öt
("Darkness surrounds you.");

323 (
u∆ight
);

324 
	}
}

328 
	$m≠_¨ó
()

330 
ˇve_ty≥
 *
c_±r
;

331 
i7
, 
i8
, 
n
, 
m
;

332 
i
, 
j
, 
k
, 
l
;

334 
i
 = 
∑√l_row_mö
 - 
	`øndöt
(10);

335 
j
 = 
∑√l_row_max
 + 
	`øndöt
(10);

336 
k
 = 
∑√l_cﬁ_mö
 - 
	`øndöt
(20);

337 
l
 = 
∑√l_cﬁ_max
 + 
	`øndöt
(20);

338 
m
 = 
i
; m <
j
; m++)

339 
n
 = 
k
;Ç <
l
;Ç++)

340 i‡(
	`ö_bounds
(
m
, 
n
Ë&& (
ˇve
[m][n].
fvÆ
 <
MAX_CAVE_FLOOR
))

341 
i7
 = 
m
-1; i7 <= m+1; i7++)

342 
i8
 = 
n
-1; i8 <=Ç+1; i8++)

344 
c_±r
 = &
ˇve
[
i7
][
i8
];

345 i‡(
c_±r
->
fvÆ
 >
MIN_CAVE_WALL
)

346 
c_±r
->
∂
 = 
TRUE
;

347 i‡((
c_±r
->
çå
 != 0) &&

348 (
t_li°
[
c_±r
->
çå
].
tvÆ
 >
TV_MIN_VISIBLE
) &&

349 (
t_li°
[
c_±r
->
çå
].
tvÆ
 <
TV_MAX_VISIBLE
))

350 
c_±r
->
fm
 = 
TRUE
;

352 
	`¥t_m≠
();

353 
	}
}

357 
	$idít_•ñl
()

359 
ôem_vÆ
;

360 
bigvty≥
 
out_vÆ
, 
tmp_°r
;

361 
idít
;

362 
öví_ty≥
 *
i_±r
;

364 
idít
 = 
FALSE
;

365 i‡(
	`gë_ôem
(&
ôem_vÆ
, "Iãm you wish idítifõd?", 0, 
INVEN_ARRAY_SIZE
,

366 
CNIL
, CNIL))

368 
idít
 = 
TRUE
;

369 
	`idítify
(&
ôem_vÆ
);

370 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

371 
	`known2
(
i_±r
);

372 
	`objdes
(
tmp_°r
, 
i_±r
, 
TRUE
);

373 i‡(
ôem_vÆ
 >
INVEN_WIELD
)

375 
	`ˇlc_b⁄u£s
();

376 (Ë
	`•rötf
 (
out_vÆ
, "%s: %s", 
	`des¸ibe_u£
(
ôem_vÆ
), 
tmp_°r
);

379 (Ë
	`•rötf
(
out_vÆ
, "%¯%s", 
ôem_vÆ
+97, 
tmp_°r
);

380 
	`msg_¥öt
(
out_vÆ
);

382 (
idít
);

383 
	}
}

387 
	$aggøv©e_m⁄°î
 (
dis_af„˘
)

388 
dis_af„˘
;

390 
i
, 
aggøv©e
;

391 
m⁄°î_ty≥
 *
m_±r
;

393 
aggøv©e
 = 
FALSE
;

394 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

396 
m_±r
 = &
m_li°
[
i
];

397 
m_±r
->
c¶ìp
 = 0;

398 i‡((
m_±r
->
cdis
 <
dis_af„˘
Ë&& (m_±r->
c•ìd
 < 2))

400 
m_±r
->
c•ìd
++;

401 
aggøv©e
 = 
TRUE
;

404 i‡(
aggøv©e
)

405 
	`msg_¥öt
 ("You heará sudden stirring inÅhe distance!");

406 (
aggøv©e
);

407 
	}
}

411 
	$å≠_¸óti⁄
()

413 
i
, 
j
, 
å≠
;

414 
ˇve_ty≥
 *
c_±r
;

416 
å≠
 = 
TRUE
;

417 
i
 = 
ch¨_row
-1; i <= char_row+1; i++)

418 
j
 = 
ch¨_cﬁ
-1; j <= char_col+1; j++)

424 i‡(
i
 =
ch¨_row
 && 
j
 =
ch¨_cﬁ
)

426 
c_±r
 = &
ˇve
[
i
][
j
];

427 i‡(
c_±r
->
fvÆ
 <
MAX_CAVE_FLOOR
)

429 i‡(
c_±r
->
çå
 != 0)

430 (Ë
	`dñëe_obje˘
(
i
, 
j
);

431 
	`∂a˚_å≠
(
i
, 
j
, 
	`øndöt
(
MAX_TRAP
)-1);

433 
t_li°
[
c_±r
->
çå
].
p1
 = 0;

435 
	`lôe_•Ÿ
(
i
, 
j
);

438 (
å≠
);

439 
	}
}

443 
	$do‹_¸óti⁄
()

445 
i
, 
j
, 
do‹
;

446 
k
;

447 
ˇve_ty≥
 *
c_±r
;

449 
do‹
 = 
FALSE
;

450 
i
 = 
ch¨_row
-1; i <= char_row+1; i++)

451 
j
 = 
ch¨_cﬁ
-1; j <= char_col+1; j++)

452 i‡((
i
 !
ch¨_row
Ë|| (
j
 !
ch¨_cﬁ
))

454 
c_±r
 = &
ˇve
[
i
][
j
];

455 i‡(
c_±r
->
fvÆ
 <
MAX_CAVE_FLOOR
)

457 
do‹
 = 
TRUE
;

458 i‡(
c_±r
->
çå
 != 0)

459 (Ë
	`dñëe_obje˘
(
i
, 
j
);

460 
k
 = 
	`p›t
();

461 
c_±r
->
fvÆ
 = 
BLOCKED_FLOOR
;

462 
c_±r
->
çå
 = 
k
;

463 
	`övc›y
(&
t_li°
[
k
], 
OBJ_CLOSED_DOOR
);

464 
	`lôe_•Ÿ
(
i
, 
j
);

467 (
do‹
);

468 
	}
}

472 
	$td_de°roy
()

474 
i
, 
j
, 
de°roy
;

475 
ˇve_ty≥
 *
c_±r
;

477 
de°roy
 = 
FALSE
;

478 
i
 = 
ch¨_row
-1; i <= char_row+1; i++)

479 
j
 = 
ch¨_cﬁ
-1; j <= char_col+1; j++)

481 
c_±r
 = &
ˇve
[
i
][
j
];

482 i‡(
c_±r
->
çå
 != 0)

484 i‡(((
t_li°
[
c_±r
->
çå
].
tvÆ
 >
TV_INVIS_TRAP
) &&

485 (
t_li°
[
c_±r
->
çå
].
tvÆ
 <
TV_CLOSED_DOOR
) &&

486 (
t_li°
[
c_±r
->
çå
].
tvÆ
 !
TV_RUBBLE
)) ||

487 (
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_SECRET_DOOR
))

489 i‡(
	`dñëe_obje˘
(
i
, 
j
))

490 
de°roy
 = 
TRUE
;

492 i‡((
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_CHEST
)

493 && (
t_li°
[
c_±r
->
çå
].
Êags
 != 0))

496 
t_li°
[
c_±r
->
çå
].
Êags
 &~(
CH_TRAPPED
|
CH_LOCKED
);

497 
t_li°
[
c_±r
->
çå
].
«me2
 = 
SN_UNLOCKED
;

498 
	`msg_¥öt
 ("You have disarmedÅhe chest.");

499 
	`known2
(&
t_li°
[
c_±r
->
çå
]);

500 
de°roy
 = 
TRUE
;

504 (
de°roy
);

505 
	}
}

509 
	$dëe˘_m⁄°îs
()

511 
i
, 
dëe˘
;

512 
m⁄°î_ty≥
 *
m_±r
;

513 #ifde‡
ATARIST_MWC


514 
öt32u
 
hﬁdî
;

517 
dëe˘
 = 
FALSE
;

518 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

520 
m_±r
 = &
m_li°
[
i
];

521 i‡(
	`∑√l_c⁄èös
(()
m_±r
->
fy
, ()m_±r->
fx
) &&

522 #ifde‡
ATARIST_MWC


523 (((
hﬁdî
 = 
CM_INVISIBLE
Ë& 
c_li°
[
m_±r
->
m±r
].
cmove
) == 0))

525 ((
CM_INVISIBLE
 & 
c_li°
[
m_±r
->
m±r
].
cmove
) == 0))

528 
m_±r
->
ml
 = 
TRUE
;

530 
	`¥öt
(()
c_li°
[
m_±r
->
m±r
].
cch¨
, ()m_±r->
fy
,

531 ()
m_±r
->
fx
);

532 
dëe˘
 = 
TRUE
;

535 i‡(
dëe˘
)

537 
	`msg_¥öt
("You senseÅheÖresence of monsters!");

538 
	`msg_¥öt
(
CNIL
);

540 
	`¸ótuªs
(
FALSE
);

542 (
dëe˘
);

543 
	}
}

548 
	$light_löe
(
dú
, 
y
, 
x
)

549 
dú
, 
y
, 
x
;

551 
i
;

552 
ˇve_ty≥
 *
c_±r
;

553 
m⁄°î_ty≥
 *
m_±r
;

554 
¸ótuª_ty≥
 *
r_±r
;

555 
di°
, 
Êag
;

556 
vty≥
 
out_vÆ
, 
m_«me
;

558 
di°
 = -1;

559 
Êag
 = 
FALSE
;

563 
di°
++;

564 
c_±r
 = &
ˇve
[
y
][
x
];

565 i‡((
di°
 > 
OBJ_BOLT_RANGE
Ë|| 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

566 
Êag
 = 
TRUE
;

569 i‡(!
c_±r
->
∂
 && !c_±r->
é
)

572 
c_±r
->
∂
 = 
TRUE
;

573 i‡(
c_±r
->
fvÆ
 =
LIGHT_FLOOR
)

575 i‡(
	`∑√l_c⁄èös
(
y
, 
x
))

576 
	`light_room
(
y
, 
x
);

579 
	`lôe_•Ÿ
(
y
, 
x
);

582 
c_±r
->
∂
 = 
TRUE
;

583 i‡(
c_±r
->
˝å
 > 1)

585 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

586 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

588 
	`upd©e_m⁄
 (()
c_±r
->
˝å
);

589 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

590 i‡(
CD_LIGHT
 & 
r_±r
->
cde„n£
)

592 i‡(
m_±r
->
ml
)

593 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
CD_LIGHT
;

594 
i
 = 
	`m⁄_èke_hô
(()
c_±r
->
˝å
, 
	`damrﬁl
(2, 8));

595 i‡(
i
 >= 0)

597 (Ë
	`•rötf
(
out_vÆ
,

598 "%†shrivñ†away i¿thêlight!", 
m_«me
);

599 
	`msg_¥öt
(
out_vÆ
);

600 
	`¥t_ex≥rõn˚
();

604 (Ë
	`•rötf
(
out_vÆ
, "%s cringes fromÅheÜight!",

605 
m_«me
);

606 
	`msg_¥öt
 (
out_vÆ
);

611 (Ë
	`mmove
(
dú
, &
y
, &
x
);

613 !
Êag
);

614 
	}
}

618 
	$°¨lôe
(
y
, 
x
)

619 
y
, 
x
;

621 
i
;

623 i‡(
py
.
Êags
.
blöd
 < 1)

624 
	`msg_¥öt
("TheÉnd ofÅhe staff bursts intoá blue shimmeringÜight.");

625 
i
 = 1; i <= 9; i++)

626 i‡(
i
 != 5)

627 
	`light_löe
(
i
, 
y
, 
x
);

628 
	}
}

632 
	$dißrm_Æl
(
dú
, 
y
, 
x
)

633 
dú
, 
y
, 
x
;

635 
ˇve_ty≥
 *
c_±r
;

636 
öví_ty≥
 *
t_±r
;

637 
dißrm
, 
di°
;

639 
dißrm
 = 
FALSE
;

640 
di°
 = -1;

644 
di°
++;

645 
c_±r
 = &
ˇve
[
y
][
x
];

648 i‡(
c_±r
->
çå
 != 0)

650 
t_±r
 = &
t_li°
[
c_±r
->
çå
];

651 i‡((
t_±r
->
tvÆ
 =
TV_INVIS_TRAP
Ë|| (t_±r->tvÆ =
TV_VIS_TRAP
))

653 i‡(
	`dñëe_obje˘
(
y
, 
x
))

654 
dißrm
 = 
TRUE
;

656 i‡(
t_±r
->
tvÆ
 =
TV_CLOSED_DOOR
)

657 
t_±r
->
p1
 = 0;

658 i‡(
t_±r
->
tvÆ
 =
TV_SECRET_DOOR
)

660 
c_±r
->
fm
 = 
TRUE
;

661 
	`ch™ge_å≠
(
y
, 
x
);

662 
dißrm
 = 
TRUE
;

664 i‡((
t_±r
->
tvÆ
 =
TV_CHEST
Ë&& (t_±r->
Êags
 != 0))

666 
	`msg_¥öt
("Click!");

667 
t_±r
->
Êags
 &~(
CH_TRAPPED
|
CH_LOCKED
);

668 
dißrm
 = 
TRUE
;

669 
t_±r
->
«me2
 = 
SN_UNLOCKED
;

670 
	`known2
(
t_±r
);

673 (Ë
	`mmove
(
dú
, &
y
, &
x
);

675 (
di°
 <
OBJ_BOLT_RANGE
Ë&& 
c_±r
->
fvÆ
 <
MAX_OPEN_SPACE
);

676 (
dißrm
);

677 
	}
}

681 
	$gë_Êags
(
typ
, 
wóp⁄_ty≥
, 
h¨m_ty≥
, 
de°roy
)

682 
typ
;

683 
öt32u
 *
wóp⁄_ty≥
; *
h¨m_ty≥
;

684 (**
de°roy
)();

686 
typ
)

688 
GF_MAGIC_MISSILE
:

689 *
wóp⁄_ty≥
 = 0;

690 *
h¨m_ty≥
 = 0;

691 *
de°roy
 = 
£t_nuŒ
;

693 
GF_LIGHTNING
:

694 *
wóp⁄_ty≥
 = 
CS_BR_LIGHT
;

695 *
h¨m_ty≥
 = 
CD_LIGHT
;

696 *
de°roy
 = 
£t_lighäög_de°roy
;

698 
GF_POISON_GAS
:

699 *
wóp⁄_ty≥
 = 
CS_BR_GAS
;

700 *
h¨m_ty≥
 = 
CD_POISON
;

701 *
de°roy
 = 
£t_nuŒ
;

703 
GF_ACID
:

704 *
wóp⁄_ty≥
 = 
CS_BR_ACID
;

705 *
h¨m_ty≥
 = 
CD_ACID
;

706 *
de°roy
 = 
£t_acid_de°roy
;

708 
GF_FROST
:

709 *
wóp⁄_ty≥
 = 
CS_BR_FROST
;

710 *
h¨m_ty≥
 = 
CD_FROST
;

711 *
de°roy
 = 
£t_‰o°_de°roy
;

713 
GF_FIRE
:

714 *
wóp⁄_ty≥
 = 
CS_BR_FIRE
;

715 *
h¨m_ty≥
 = 
CD_FIRE
;

716 *
de°roy
 = 
£t_fúe_de°roy
;

718 
GF_HOLY_ORB
:

719 *
wóp⁄_ty≥
 = 0;

720 *
h¨m_ty≥
 = 
CD_EVIL
;

721 *
de°roy
 = 
£t_nuŒ
;

724 
	`msg_¥öt
("ERROR in get_flags()\n");

726 
	}
}

730 
	$fúe_bﬁt
(
typ
, 
dú
, 
y
, 
x
, 
dam
, 
bﬁt_typ
)

731 
typ
, 
dú
, 
y
, 
x
, 
dam
;

732 *
bﬁt_typ
;

734 
i
, 
ﬁdy
, 
ﬁdx
, 
di°
, 
Êag
;

735 
öt32u
 
wóp⁄_ty≥
; 
h¨m_ty≥
;

736 (*
dummy
)();

737 
ˇve_ty≥
 *
c_±r
;

738 
m⁄°î_ty≥
 *
m_±r
;

739 
¸ótuª_ty≥
 *
r_±r
;

740 
vty≥
 
out_vÆ
, 
m_«me
;

742 
Êag
 = 
FALSE
;

743 
	`gë_Êags
(
typ
, &
wóp⁄_ty≥
, &
h¨m_ty≥
, &
dummy
);

744 
ﬁdy
 = 
y
;

745 
ﬁdx
 = 
x
;

746 
di°
 = 0;

749 (Ë
	`mmove
(
dú
, &
y
, &
x
);

750 
di°
++;

751 
c_±r
 = &
ˇve
[
y
][
x
];

752 
	`lôe_•Ÿ
(
ﬁdy
, 
ﬁdx
);

753 i‡((
di°
 > 
OBJ_BOLT_RANGE
Ë|| 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

754 
Êag
 = 
TRUE
;

757 i‡(
c_±r
->
˝å
 > 1)

759 
Êag
 = 
TRUE
;

760 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

761 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

765 
i
 = 
c_±r
->
∂
;

766 
c_±r
->
∂
 = 
TRUE
;

767 
	`upd©e_m⁄
 (()
c_±r
->
˝å
);

768 
c_±r
->
∂
 = 
i
;

770 
	`put_qio
();

772 
	`lowî_m⁄°î_«me
(
m_«me
, 
m_±r
, 
r_±r
);

773 (Ë
	`•rötf
(
out_vÆ
, "Thê%†°rike†%s.", 
bﬁt_typ
, 
m_«me
);

774 
	`msg_¥öt
(
out_vÆ
);

775 i‡(
h¨m_ty≥
 & 
r_±r
->
cde„n£
)

777 
dam
 = dam*2;

778 i‡(
m_±r
->
ml
)

779 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
h¨m_ty≥
;

781 i‡(
wóp⁄_ty≥
 & 
r_±r
->
•ñls
)

783 
dam
 = dam / 4;

784 i‡(
m_±r
->
ml
)

785 
c_ªˇŒ
[
m_±r
->
m±r
].
r_•ñls
 |
wóp⁄_ty≥
;

787 
	`m⁄°î_«me
(
m_«me
, 
m_±r
, 
r_±r
);

788 
i
 = 
	`m⁄_èke_hô
(()
c_±r
->
˝å
, 
dam
);

789 i‡(
i
 >= 0)

791 (Ë
	`•rötf
(
out_vÆ
, "%s dies iná fit ofágony.",

792 
m_«me
);

793 
	`msg_¥öt
(
out_vÆ
);

794 
	`¥t_ex≥rõn˚
();

796 i‡(
dam
 > 0)

798 (Ë
	`•rötf
 (
out_vÆ
, "%†s¸óm†öág⁄y.", 
m_«me
);

799 
	`msg_¥öt
 (
out_vÆ
);

802 i‡(
	`∑√l_c⁄èös
(
y
, 
x
Ë&& (
py
.
Êags
.
blöd
 < 1))

804 
	`¥öt
('*', 
y
, 
x
);

806 
	`put_qio
();

809 
ﬁdy
 = 
y
;

810 
ﬁdx
 = 
x
;

812 !
Êag
);

813 
	}
}

818 
	$fúe_bÆl
(
typ
, 
dú
, 
y
, 
x
, 
dam_hp
, 
des¸ù
)

819 
typ
, 
dú
, 
y
, 
x
, 
dam_hp
;

820 *
des¸ù
;

822 
i
, 
j
;

823 
dam
, 
max_dis
, 
thô
, 
tkûl
, 
k
, 
tmp
;

824 
ﬁdy
, 
ﬁdx
, 
di°
, 
Êag
, 
h¨m_ty≥
;

825 
öt32u
 
wóp⁄_ty≥
;

826 (*
de°roy
)();

827 
ˇve_ty≥
 *
c_±r
;

828 
m⁄°î_ty≥
 *
m_±r
;

829 
¸ótuª_ty≥
 *
r_±r
;

830 
vty≥
 
out_vÆ
;

832 
thô
 = 0;

833 
tkûl
 = 0;

834 
max_dis
 = 2;

835 
	`gë_Êags
(
typ
, &
wóp⁄_ty≥
, &
h¨m_ty≥
, &
de°roy
);

836 
Êag
 = 
FALSE
;

837 
ﬁdy
 = 
y
;

838 
ﬁdx
 = 
x
;

839 
di°
 = 0;

842 (Ë
	`mmove
(
dú
, &
y
, &
x
);

843 
di°
++;

844 
	`lôe_•Ÿ
(
ﬁdy
, 
ﬁdx
);

845 i‡(
di°
 > 
OBJ_BOLT_RANGE
)

846 
Êag
 = 
TRUE
;

849 
c_±r
 = &
ˇve
[
y
][
x
];

850 i‡((
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
Ë|| (c_±r->
˝å
 > 1))

852 
Êag
 = 
TRUE
;

853 i‡(
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

855 
y
 = 
ﬁdy
;

856 
x
 = 
ﬁdx
;

860 
i
 = 
y
-
max_dis
; i <= y+max_dis; i++)

861 
j
 = 
x
-
max_dis
; j <= x+max_dis; j++)

862 i‡(
	`ö_bounds
(
i
, 
j
Ë&& (
	`di°™˚
(
y
, 
x
, i, jË<
max_dis
)

863 && 
	`los
(
y
, 
x
, 
i
, 
j
))

865 
c_±r
 = &
ˇve
[
i
][
j
];

866 i‡((
c_±r
->
çå
 != 0) &&

867 (*
de°roy
)(&
t_li°
[
c_±r
->
çå
]))

868 (Ë
	`dñëe_obje˘
(
i
, 
j
);

869 i‡(
c_±r
->
fvÆ
 <
MAX_OPEN_SPACE
)

871 i‡(
c_±r
->
˝å
 > 1)

873 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

874 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

878 
tmp
 = 
c_±r
->
∂
;

879 
c_±r
->
∂
 = 
TRUE
;

880 
	`upd©e_m⁄
(()
c_±r
->
˝å
);

882 
thô
++;

883 
dam
 = 
dam_hp
;

884 i‡(
h¨m_ty≥
 & 
r_±r
->
cde„n£
)

886 
dam
 = dam*2;

887 i‡(
m_±r
->
ml
)

888 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |=
h¨m_ty≥
;

890 i‡(
wóp⁄_ty≥
 & 
r_±r
->
•ñls
)

892 
dam
 = dam / 4;

893 i‡(
m_±r
->
ml
)

894 
c_ªˇŒ
[
m_±r
->
m±r
].
r_•ñls
 |=
wóp⁄_ty≥
;

896 
dam
 = (dam/(
	`di°™˚
(
i
, 
j
, 
y
, 
x
)+1));

897 
k
 = 
	`m⁄_èke_hô
(()
c_±r
->
˝å
, 
dam
);

898 i‡(
k
 >= 0)

899 
tkûl
++;

900 
c_±r
->
∂
 = 
tmp
;

902 i‡(
	`∑√l_c⁄èös
(
i
, 
j
Ë&&(
py
.
Êags
.
blöd
 < 1))

903 
	`¥öt
('*', 
i
, 
j
);

907 
	`put_qio
();

909 
i
 = (
y
 - 2); i <= (y + 2); i++)

910 
j
 = (
x
 - 2); j <= (x + 2); j++)

911 i‡(
	`ö_bounds
(
i
, 
j
Ë&& 
	`∑√l_c⁄èös
(i, j) &&

912 (
	`di°™˚
(
y
, 
x
, 
i
, 
j
Ë<
max_dis
))

913 
	`lôe_•Ÿ
(
i
, 
j
);

916 i‡(
thô
 == 1)

918 (Ë
	`•rötf
(
out_vÆ
,

920 
des¸ù
);

921 
	`msg_¥öt
(
out_vÆ
);

923 i‡(
thô
 > 1)

925 (Ë
	`•rötf
(
out_vÆ
,

927 
des¸ù
);

928 
	`msg_¥öt
(
out_vÆ
);

930 i‡(
tkûl
 == 1)

931 
	`msg_¥öt
("There isá scream ofágony!");

932 i‡(
tkûl
 > 1)

933 
	`msg_¥öt
("Thereáre several screams ofágony!");

934 i‡(
tkûl
 >= 0)

935 
	`¥t_ex≥rõn˚
();

938 i‡(
	`∑√l_c⁄èös
(
y
, 
x
Ë&& (
py
.
Êags
.
blöd
 < 1))

940 
	`¥öt
('*', 
y
, 
x
);

942 
	`put_qio
();

944 
ﬁdy
 = 
y
;

945 
ﬁdx
 = 
x
;

948 !
Êag
);

949 
	}
}

954 
	$bª©h
(
typ
, 
y
, 
x
, 
dam_hp
, 
ddesc
, 
m⁄±r
)

955 
typ
, 
y
, 
x
, 
dam_hp
;

956 *
ddesc
;

957 
m⁄±r
;

959 
i
, 
j
;

960 
dam
, 
max_dis
, 
h¨m_ty≥
;

961 
öt32u
 
wóp⁄_ty≥
;

962 
öt32u
 
tmp
, 
åós
;

963 (*
de°roy
)();

964 
ˇve_ty≥
 *
c_±r
;

965 
m⁄°î_ty≥
 *
m_±r
;

966 
¸ótuª_ty≥
 *
r_±r
;

967 #ifde‡
ATARIST_MWC


968 
öt32u
 
hﬁdî
;

971 
max_dis
 = 2;

972 
	`gë_Êags
(
typ
, &
wóp⁄_ty≥
, &
h¨m_ty≥
, &
de°roy
);

973 
i
 = 
y
-2; i <= y+2; i++)

974 
j
 = 
x
-2; j <= x+2; j++)

975 i‡(
	`ö_bounds
(
i
, 
j
Ë&& (
	`di°™˚
(
y
, 
x
, i, jË<
max_dis
)

976 && 
	`los
(
y
, 
x
, 
i
, 
j
))

978 
c_±r
 = &
ˇve
[
i
][
j
];

979 i‡((
c_±r
->
çå
 != 0) &&

980 (*
de°roy
)(&
t_li°
[
c_±r
->
çå
]))

981 (Ë
	`dñëe_obje˘
(
i
, 
j
);

982 i‡(
c_±r
->
fvÆ
 <
MAX_OPEN_SPACE
)

987 i‡(
	`∑√l_c⁄èös
(
i
, 
j
Ë&& !(
py
.
Êags
.
°©us
 & 
PY_BLIND
))

988 
	`¥öt
('*', 
i
, 
j
);

989 i‡(
c_±r
->
˝å
 > 1)

991 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

992 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

993 
dam
 = 
dam_hp
;

994 i‡(
h¨m_ty≥
 & 
r_±r
->
cde„n£
)

995 
dam
 = dam*2;

996 i‡(
wóp⁄_ty≥
 & 
r_±r
->
•ñls
)

997 
dam
 = (dam / 4);

998 
dam
 = (dam/(
	`di°™˚
(
i
, 
j
, 
y
, 
x
)+1));

1001 
m_±r
->
hp
 = m_±r->h∞- 
dam
;

1002 
m_±r
->
c¶ìp
 = 0;

1003 i‡(
m_±r
->
hp
 < 0)

1005 
åós
 = 
	`m⁄°î_dóth
(()
m_±r
->
fy
, ()m_±r->
fx
,

1006 
r_±r
->
cmove
);

1007 i‡(
m_±r
->
ml
)

1009 #ifde‡
ATARIST_MWC


1010 
hﬁdî
 = 
CM_TREASURE
;

1011 
tmp
 = (
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 & 
hﬁdî
)

1012 >> 
CM_TR_SHIFT
;

1013 i‡(
tmp
 > ((
åós
 & 
hﬁdî
Ë>> 
CM_TR_SHIFT
))

1014 
åós
 = (åó†& ~
hﬁdî
)|(
tmp
 << 
CM_TR_SHIFT
);

1015 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 = 
åós
 |

1016 (
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 & ~
hﬁdî
);

1018 
tmp
 = (
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 & 
CM_TREASURE
)

1019 >> 
CM_TR_SHIFT
;

1020 i‡(
tmp
 > ((
åós
 & 
CM_TREASURE
Ë>> 
CM_TR_SHIFT
))

1021 
åós
 = (åó†& ~
CM_TREASURE
)|(
tmp
<<
CM_TR_SHIFT
);

1022 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 = 
åós
 |

1023 (
c_ªˇŒ
[
m_±r
->
m±r
].
r_cmove
 & ~
CM_TREASURE
);

1028 i‡(
m⁄±r
 < 
c_±r
->
˝å
)

1029 
	`dñëe_m⁄°î
((Ë
c_±r
->
˝å
);

1034 
	`fix1_dñëe_m⁄°î
((Ë
c_±r
->
˝å
);

1037 i‡(
c_±r
->
˝å
 == 1)

1039 
dam
 = (
dam_hp
/(
	`di°™˚
(
i
, 
j
, 
y
, 
x
)+1));

1042 i‡(
dam
 == 0)

1043 
dam
 = 1;

1044 
typ
)

1046 
GF_LIGHTNING
: 
	`light_dam
(
dam
, 
ddesc
); ;

1047 
GF_POISON_GAS
: 
	`pois⁄_gas
(
dam
, 
ddesc
); ;

1048 
GF_ACID
: 
	`acid_dam
(
dam
, 
ddesc
); ;

1049 
GF_FROST
: 
	`cﬁd_dam
(
dam
, 
ddesc
); ;

1050 
GF_FIRE
: 
	`fúe_dam
(
dam
, 
ddesc
); ;

1056 
	`put_qio
();

1058 
i
 = (
y
 - 2); i <= (y + 2); i++)

1059 
j
 = (
x
 - 2); j <= (x + 2); j++)

1060 i‡(
	`ö_bounds
(
i
, 
j
Ë&& 
	`∑√l_c⁄èös
(i, j) &&

1061 (
	`di°™˚
(
y
, 
x
, 
i
, 
j
Ë<
max_dis
))

1062 
	`lôe_•Ÿ
(
i
, 
j
);

1063 
	}
}

1067 
	$ªch¨ge
(
num
)

1068 
num
;

1070 
i
, 
j
, 
ôem_vÆ
;

1071 
ªs
;

1072 
öví_ty≥
 *
i_±r
;

1074 
ªs
 = 
FALSE
;

1075 i‡(!
	`föd_ønge
(
TV_STAFF
, 
TV_WAND
, &
i
, &
j
))

1076 
	`msg_¥öt
("You haveÇothingÅoÑecharge.");

1077 i‡(
	`gë_ôem
(&
ôem_vÆ
, "Rech¨gêwhich iãm?", 
i
, 
j
, 
CNIL
, CNIL))

1079 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

1080 
ªs
 = 
TRUE
;

1086 
i
 = 
num
 + 50 - ()
i_±r
->
Àvñ
 - i_±r->
p1
;

1087 i‡(
i
 < 19)

1088 
i
 = 1;

1090 
i
 = 
	`øndöt
 (i/10);

1092 i‡(
i
 == 1)

1094 
	`msg_¥öt
("There isá bright flash ofÜight.");

1095 
	`öví_de°roy
(
ôem_vÆ
);

1099 
num
 = (num/(
i_±r
->
Àvñ
+2)) + 1;

1100 
i_±r
->
p1
 +2 + 
	`øndöt
(
num
);

1101 i‡(
	`known2_p
(
i_±r
))

1102 
	`˛ór_known2
(
i_±r
);

1103 
	`˛ór_em±y
(
i_±r
);

1106 (
ªs
);

1107 
	}
}

1111 
	$hp_m⁄°î
(
dú
, 
y
, 
x
, 
dam
)

1112 
dú
, 
y
, 
x
, 
dam
;

1114 
i
;

1115 
Êag
, 
di°
, 
m⁄°î
;

1116 
ˇve_ty≥
 *
c_±r
;

1117 
m⁄°î_ty≥
 *
m_±r
;

1118 
¸ótuª_ty≥
 *
r_±r
;

1119 
vty≥
 
out_vÆ
, 
m_«me
;

1121 
m⁄°î
 = 
FALSE
;

1122 
Êag
 = 
FALSE
;

1123 
di°
 = 0;

1126 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1127 
di°
++;

1128 
c_±r
 = &
ˇve
[
y
][
x
];

1129 i‡((
di°
 > 
OBJ_BOLT_RANGE
Ë|| 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

1130 
Êag
 = 
TRUE
;

1131 i‡(
c_±r
->
˝å
 > 1)

1133 
Êag
 = 
TRUE
;

1134 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

1135 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1136 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

1137 
m⁄°î
 = 
TRUE
;

1138 
i
 = 
	`m⁄_èke_hô
(()
c_±r
->
˝å
, 
dam
);

1139 i‡(
i
 >= 0)

1141 (Ë
	`•rötf
(
out_vÆ
, "%†dõ†öá fô o‡ag⁄y.", 
m_«me
);

1142 
	`msg_¥öt
(
out_vÆ
);

1143 
	`¥t_ex≥rõn˚
();

1145 i‡(
dam
 > 0)

1147 (Ë
	`•rötf
(
out_vÆ
, "%†s¸óm†öág⁄y.", 
m_«me
);

1148 
	`msg_¥öt
(
out_vÆ
);

1152 !
Êag
);

1153 (
m⁄°î
);

1154 
	}
}

1158 
	$døö_li„
(
dú
, 
y
, 
x
)

1159 
dú
, 
y
, 
x
;

1161 
i
;

1162 
Êag
, 
di°
, 
døö
;

1163 
ˇve_ty≥
 *
c_±r
;

1164 
m⁄°î_ty≥
 *
m_±r
;

1165 
¸ótuª_ty≥
 *
r_±r
;

1166 
vty≥
 
out_vÆ
, 
m_«me
;

1168 
døö
 = 
FALSE
;

1169 
Êag
 = 
FALSE
;

1170 
di°
 = 0;

1173 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1174 
di°
++;

1175 
c_±r
 = &
ˇve
[
y
][
x
];

1176 i‡((
di°
 > 
OBJ_BOLT_RANGE
Ë|| 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

1177 
Êag
 = 
TRUE
;

1178 i‡(
c_±r
->
˝å
 > 1)

1180 
Êag
 = 
TRUE
;

1181 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

1182 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1183 i‡((
r_±r
->
cde„n£
 & 
CD_UNDEAD
) == 0)

1185 
døö
 = 
TRUE
;

1186 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

1187 
i
 = 
	`m⁄_èke_hô
(()
c_±r
->
˝å
, 75);

1188 i‡(
i
 >= 0)

1190 (Ë
	`•rötf
(
out_vÆ
, "%†dõ†öá fô o‡ag⁄y.",
m_«me
);

1191 
	`msg_¥öt
(
out_vÆ
);

1192 
	`¥t_ex≥rõn˚
();

1196 (Ë
	`•rötf
(
out_vÆ
, "%†s¸óm†öág⁄y.", 
m_«me
);

1197 
	`msg_¥öt
(
out_vÆ
);

1201 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
CD_UNDEAD
;

1204 !
Êag
);

1205 (
døö
);

1206 
	}
}

1211 
	$•ìd_m⁄°î
(
dú
, 
y
, 
x
, 
•d
)

1212 
dú
, 
y
, 
x
, 
•d
;

1214 
Êag
, 
di°
, 
•ìd
;

1215 
ˇve_ty≥
 *
c_±r
;

1216 
m⁄°î_ty≥
 *
m_±r
;

1217 
¸ótuª_ty≥
 *
r_±r
;

1218 
vty≥
 
out_vÆ
, 
m_«me
;

1220 
•ìd
 = 
FALSE
;

1221 
Êag
 = 
FALSE
;

1222 
di°
 = 0;

1225 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1226 
di°
++;

1227 
c_±r
 = &
ˇve
[
y
][
x
];

1228 i‡((
di°
 > 
OBJ_BOLT_RANGE
Ë|| 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

1229 
Êag
 = 
TRUE
;

1230 i‡(
c_±r
->
˝å
 > 1)

1232 
Êag
 = 
TRUE
;

1233 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

1234 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1235 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

1236 i‡(
•d
 > 0)

1238 
m_±r
->
c•ìd
 +
•d
;

1239 
m_±r
->
c¶ìp
 = 0;

1240 (Ë
	`•rötf
 (
out_vÆ
, "%†°¨t†movög fa°î.", 
m_«me
);

1241 
	`msg_¥öt
 (
out_vÆ
);

1242 
•ìd
 = 
TRUE
;

1244 i‡(
	`øndöt
(
MAX_MONS_LEVEL
Ë> 
r_±r
->
Àvñ
)

1246 
m_±r
->
c•ìd
 +
•d
;

1247 
m_±r
->
c¶ìp
 = 0;

1248 (Ë
	`•rötf
 (
out_vÆ
, "%†°¨t†movög slowî.", 
m_«me
);

1249 
	`msg_¥öt
 (
out_vÆ
);

1250 
•ìd
 = 
TRUE
;

1254 
m_±r
->
c¶ìp
 = 0;

1255 (Ë
	`•rötf
(
out_vÆ
, "%†i†u«f„˘ed.", 
m_«me
);

1256 
	`msg_¥öt
(
out_vÆ
);

1260 !
Êag
);

1261 (
•ìd
);

1262 
	}
}

1266 
	$c⁄fu£_m⁄°î
(
dú
, 
y
, 
x
)

1267 
dú
, 
y
, 
x
;

1269 
Êag
, 
di°
, 
c⁄fu£
;

1270 
ˇve_ty≥
 *
c_±r
;

1271 
m⁄°î_ty≥
 *
m_±r
;

1272 
¸ótuª_ty≥
 *
r_±r
;

1273 
vty≥
 
out_vÆ
, 
m_«me
;

1275 
c⁄fu£
 = 
FALSE
;

1276 
Êag
 = 
FALSE
;

1277 
di°
 = 0;

1280 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1281 
di°
++;

1282 
c_±r
 = &
ˇve
[
y
][
x
];

1283 i‡((
di°
 > 
OBJ_BOLT_RANGE
Ë|| 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

1284 
Êag
 = 
TRUE
;

1285 i‡(
c_±r
->
˝å
 > 1)

1287 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

1288 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1289 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

1290 
Êag
 = 
TRUE
;

1291 i‡((
	`øndöt
(
MAX_MONS_LEVEL
Ë< 
r_±r
->
Àvñ
) ||

1292 (
CD_NO_SLEEP
 & 
r_±r
->
cde„n£
))

1294 i‡(
m_±r
->
ml
 && (
r_±r
->
cde„n£
 & 
CD_NO_SLEEP
))

1295 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
CD_NO_SLEEP
;

1298 i‡(! (
CD_NO_SLEEP
 & 
r_±r
->
cde„n£
))

1299 
m_±r
->
c¶ìp
 = 0;

1300 (Ë
	`•rötf
(
out_vÆ
, "%†i†u«f„˘ed.", 
m_«me
);

1301 
	`msg_¥öt
(
out_vÆ
);

1305 i‡(
m_±r
->
c⁄fu£d
)

1306 
m_±r
->
c⁄fu£d
 += 3;

1308 
m_±r
->
c⁄fu£d
 = 2 + 
	`øndöt
(16);

1309 
c⁄fu£
 = 
TRUE
;

1310 
m_±r
->
c¶ìp
 = 0;

1311 (Ë
	`•rötf
(
out_vÆ
, "%†≠≥¨†c⁄fu£d.", 
m_«me
);

1312 
	`msg_¥öt
(
out_vÆ
);

1316 !
Êag
);

1317 (
c⁄fu£
);

1318 
	}
}

1322 
	$¶ìp_m⁄°î
(
dú
, 
y
, 
x
)

1323 
dú
, 
y
, 
x
;

1325 
Êag
, 
di°
, 
¶ìp
;

1326 
ˇve_ty≥
 *
c_±r
;

1327 
m⁄°î_ty≥
 *
m_±r
;

1328 
¸ótuª_ty≥
 *
r_±r
;

1329 
vty≥
 
out_vÆ
, 
m_«me
;

1331 
¶ìp
 = 
FALSE
;

1332 
Êag
 = 
FALSE
;

1333 
di°
 = 0;

1336 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1337 
di°
++;

1338 
c_±r
 = &
ˇve
[
y
][
x
];

1339 i‡((
di°
 > 
OBJ_BOLT_RANGE
Ë|| 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

1340 
Êag
 = 
TRUE
;

1341 i‡(
c_±r
->
˝å
 > 1)

1343 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

1344 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1345 
Êag
 = 
TRUE
;

1346 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

1347 i‡((
	`øndöt
(
MAX_MONS_LEVEL
Ë< 
r_±r
->
Àvñ
) ||

1348 (
CD_NO_SLEEP
 & 
r_±r
->
cde„n£
))

1350 i‡(
m_±r
->
ml
 && (
r_±r
->
cde„n£
 & 
CD_NO_SLEEP
))

1351 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
CD_NO_SLEEP
;

1352 (Ë
	`•rötf
(
out_vÆ
, "%†i†u«f„˘ed.", 
m_«me
);

1353 
	`msg_¥öt
(
out_vÆ
);

1357 
m_±r
->
c¶ìp
 = 500;

1358 
¶ìp
 = 
TRUE
;

1359 (Ë
	`•rötf
(
out_vÆ
, "%†ÁŒ†a¶ìp.", 
m_«me
);

1360 
	`msg_¥öt
(
out_vÆ
);

1364 !
Êag
);

1365 (
¶ìp
);

1366 
	}
}

1370 
	$wÆl_to_mud
(
dú
, 
y
, 
x
)

1371 
dú
, 
y
, 
x
;

1373 
i
, 
wÆl
, 
di°
;

1374 
bigvty≥
 
out_vÆ
, 
tmp_°r
;

1375 
Êag
;

1376 
ˇve_ty≥
 *
c_±r
;

1377 
m⁄°î_ty≥
 *
m_±r
;

1378 
¸ótuª_ty≥
 *
r_±r
;

1379 
vty≥
 
m_«me
;

1381 
wÆl
 = 
FALSE
;

1382 
Êag
 = 
FALSE
;

1383 
di°
 = 0;

1386 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1387 
di°
++;

1388 
c_±r
 = &
ˇve
[
y
][
x
];

1390 i‡(
di°
 =
OBJ_BOLT_RANGE
)

1391 
Êag
 = 
TRUE
;

1392 i‡((
c_±r
->
fvÆ
 >
MIN_CAVE_WALL
Ë&& (c_±r->fvÆ !
BOUNDARY_WALL
))

1394 
Êag
 = 
TRUE
;

1395 (Ë
	`twÆl
(
y
, 
x
, 1, 0);

1396 i‡(
	`ã°_light
(
y
, 
x
))

1398 
	`msg_¥öt
("The wallÅurns into mud.");

1399 
wÆl
 = 
TRUE
;

1402 i‡((
c_±r
->
çå
 !0Ë&& (c_±r->
fvÆ
 >
MIN_CLOSED_SPACE
))

1404 
Êag
 = 
TRUE
;

1405 i‡(
	`∑√l_c⁄èös
(
y
, 
x
Ë&& 
	`ã°_light
(y, x))

1407 
	`objdes
(
tmp_°r
, &
t_li°
[
c_±r
->
çå
], 
FALSE
);

1408 (Ë
	`•rötf
(
out_vÆ
, "Thê%†tu∫†ötÿmud.", 
tmp_°r
);

1409 
	`msg_¥öt
(
out_vÆ
);

1410 
wÆl
 = 
TRUE
;

1412 i‡(
t_li°
[
c_±r
->
çå
].
tvÆ
 =
TV_RUBBLE
)

1414 (Ë
	`dñëe_obje˘
(
y
, 
x
);

1415 i‡(
	`øndöt
(10) == 1)

1417 
	`∂a˚_obje˘
(
y
, 
x
, 
FALSE
);

1418 i‡(
	`ã°_light
(
y
, 
x
))

1419 
	`msg_¥öt
("You have found something!");

1421 
	`lôe_•Ÿ
(
y
, 
x
);

1423 (Ë
	`dñëe_obje˘
(
y
, 
x
);

1425 i‡(
c_±r
->
˝å
 > 1)

1427 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

1428 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1429 i‡(
CD_STONE
 & 
r_±r
->
cde„n£
)

1431 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

1432 
i
 = 
	`m⁄_èke_hô
(()
c_±r
->
˝å
, 100);

1435 i‡(
i
 >= 0)

1437 
c_ªˇŒ
[
i
].
r_cde„n£
 |
CD_STONE
;

1438 (Ë
	`•rötf
(
out_vÆ
, "%†dissﬁves!", 
m_«me
);

1439 
	`msg_¥öt
(
out_vÆ
);

1440 
	`¥t_ex≥rõn˚
();

1444 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
CD_STONE
;

1445 (Ë
	`•rötf
(
out_vÆ
, "%†gru¡†öÖaö!",
m_«me
);

1446 
	`msg_¥öt
(
out_vÆ
);

1448 
Êag
 = 
TRUE
;

1452 !
Êag
);

1453 (
wÆl
);

1454 
	}
}

1458 
	$td_de°roy2
(
dú
, 
y
, 
x
)

1459 
dú
, 
y
, 
x
;

1461 
de°roy2
, 
di°
;

1462 
ˇve_ty≥
 *
c_±r
;

1463 
öví_ty≥
 *
t_±r
;

1465 
de°roy2
 = 
FALSE
;

1466 
di°
= 0;

1469 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1470 
di°
++;

1471 
c_±r
 = &
ˇve
[
y
][
x
];

1473 i‡(
c_±r
->
çå
 != 0)

1475 
t_±r
 = &
t_li°
[
c_±r
->
çå
];

1476 i‡((
t_±r
->
tvÆ
 =
TV_INVIS_TRAP
Ë|| (t_±r->tvÆ =
TV_CLOSED_DOOR
)

1477 || (
t_±r
->
tvÆ
 =
TV_VIS_TRAP
Ë|| (t_±r->tvÆ =
TV_OPEN_DOOR
)

1478 || (
t_±r
->
tvÆ
 =
TV_SECRET_DOOR
))

1480 i‡(
	`dñëe_obje˘
(
y
, 
x
))

1482 
	`msg_¥öt
("There isá bright flash ofÜight!");

1483 
de°roy2
 = 
TRUE
;

1486 i‡((
t_±r
->
tvÆ
 =
TV_CHEST
Ë&& (t_±r->
Êags
 != 0))

1488 
	`msg_¥öt
("Click!");

1489 
t_±r
->
Êags
 &~(
CH_TRAPPED
|
CH_LOCKED
);

1490 
de°roy2
 = 
TRUE
;

1491 
t_±r
->
«me2
 = 
SN_UNLOCKED
;

1492 
	`known2
(
t_±r
);

1496 (
di°
 <
OBJ_BOLT_RANGE
Ë|| 
c_±r
->
fvÆ
 <
MAX_OPEN_SPACE
);

1497 (
de°roy2
);

1498 
	}
}

1503 
	$pﬁy_m⁄°î
(
dú
, 
y
, 
x
)

1504 
dú
, 
y
, 
x
;

1506 
di°
, 
Êag
, 
pﬁy
;

1507 
ˇve_ty≥
 *
c_±r
;

1508 
¸ótuª_ty≥
 *
r_±r
;

1509 
m⁄°î_ty≥
 *
m_±r
;

1510 
vty≥
 
out_vÆ
, 
m_«me
;

1512 
pﬁy
 = 
FALSE
;

1513 
Êag
 = 
FALSE
;

1514 
di°
 = 0;

1517 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1518 
di°
++;

1519 
c_±r
 = &
ˇve
[
y
][
x
];

1520 i‡((
di°
 > 
OBJ_BOLT_RANGE
Ë|| 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

1521 
Êag
 = 
TRUE
;

1522 i‡(
c_±r
->
˝å
 > 1)

1524 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

1525 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1526 i‡(
	`øndöt
(
MAX_MONS_LEVEL
Ë> 
r_±r
->
Àvñ
)

1528 
Êag
 = 
TRUE
;

1529 
	`dñëe_m⁄°î
(()
c_±r
->
˝å
);

1531 
pﬁy
 = 
	`∂a˚_m⁄°î
(
y
, 
x
,

1532 
	`øndöt
(
m_Àvñ
[
MAX_MONS_LEVEL
]-m_level[0])

1533 - 1 + 
m_Àvñ
[0], 
FALSE
);

1535 i‡(
pﬁy
 && 
	`∑√l_c⁄èös
(
y
, 
x
Ë&& (
c_±r
->
é
 || c_±r->
∂
))

1536 
pﬁy
 = 
TRUE
;

1540 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

1541 (Ë
	`•rötf
(
out_vÆ
, "%†i†u«f„˘ed.", 
m_«me
);

1542 
	`msg_¥öt
(
out_vÆ
);

1546 !
Êag
);

1547 (
pﬁy
);

1548 
	}
}

1552 
	$buûd_wÆl
(
dú
, 
y
, 
x
)

1553 
dú
, 
y
, 
x
;

1555 
i
;

1556 
buûd
, 
damage
, 
di°
, 
Êag
;

1557 
ˇve_ty≥
 *
c_±r
;

1558 
m⁄°î_ty≥
 *
m_±r
;

1559 
¸ótuª_ty≥
 *
r_±r
;

1560 
vty≥
 
m_«me
, 
out_vÆ
;

1561 #ifde‡
ATARIST_MWC


1562 
öt32u
 
hﬁdî
;

1565 
buûd
 = 
FALSE
;

1566 
di°
 = 0;

1567 
Êag
 = 
FALSE
;

1570 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1571 
di°
++;

1572 
c_±r
 = &
ˇve
[
y
][
x
];

1573 i‡((
di°
 > 
OBJ_BOLT_RANGE
Ë|| 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

1574 
Êag
 = 
TRUE
;

1577 i‡(
c_±r
->
çå
 != 0)

1578 (Ë
	`dñëe_obje˘
(
y
, 
x
);

1579 i‡(
c_±r
->
˝å
 > 1)

1582 
Êag
 = 
TRUE
;

1583 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

1584 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1586 #ifde‡
ATARIST_MWC


1587 i‡(!(
r_±r
->
cmove
 & (
hﬁdî
 = 
CM_PHASE
)))

1589 i‡(!(
r_±r
->
cmove
 & 
CM_PHASE
))

1593 i‡(
r_±r
->
cmove
 & 
CM_ATTACK_ONLY
)

1594 
damage
 = 3000;

1596 
damage
 = 
	`damrﬁl
 (4, 8);

1598 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

1599 (Ë
	`•rötf
 (
out_vÆ
, "%†waû†ouàöÖaö!", 
m_«me
);

1600 
	`msg_¥öt
 (
out_vÆ
);

1601 
i
 = 
	`m⁄_èke_hô
(()
c_±r
->
˝å
, 
damage
);

1602 i‡(
i
 >= 0)

1604 (Ë
	`•rötf
 (
out_vÆ
, "%s isÉmbedded inÅheÑock.",

1605 
m_«me
);

1606 
	`msg_¥öt
 (
out_vÆ
);

1607 
	`¥t_ex≥rõn˚
();

1610 i‡(
r_±r
->
cch¨
 == 'E' ||Ñ_ptr->cchar == 'X')

1614 
m_±r
->
hp
 +
	`damrﬁl
(4, 8);

1617 
c_±r
->
fvÆ
 = 
MAGMA_WALL
;

1618 
c_±r
->
fm
 = 
FALSE
;

1620 
c_±r
->
∂
 = (c_±r->
é
 || c_ptr->pl);

1621 
	`lôe_•Ÿ
(
y
, 
x
);

1622 
i
++;

1623 
buûd
 = 
TRUE
;

1626 !
Êag
);

1627 (
buûd
);

1628 
	}
}

1632 
	$˛⁄e_m⁄°î
(
dú
, 
y
, 
x
)

1633 
dú
, 
y
, 
x
;

1635 
ˇve_ty≥
 *
c_±r
;

1636 
di°
, 
Êag
;

1638 
di°
 = 0;

1639 
Êag
 = 
FALSE
;

1642 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1643 
di°
++;

1644 
c_±r
 = &
ˇve
[
y
][
x
];

1645 i‡((
di°
 > 
OBJ_BOLT_RANGE
Ë|| 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

1646 
Êag
 = 
TRUE
;

1647 i‡(
c_±r
->
˝å
 > 1)

1649 
m_li°
[
c_±r
->
˝å
].
c¶ìp
 = 0;

1651  
	`mu…ùly_m⁄°î
(
y
, 
x
, ()
m_li°
[
c_±r
->
˝å
].
m±r
, 0);

1654 !
Êag
);

1655 (
FALSE
);

1656 
	}
}

1660 
	$ãÀp‹t_away
(
m⁄±r
, 
dis
)

1661 
m⁄±r
, 
dis
;

1663 
yn
, 
xn
, 
˘r
;

1664 
m⁄°î_ty≥
 *
m_±r
;

1666 
m_±r
 = &
m_li°
[
m⁄±r
];

1667 
˘r
 = 0;

1672 
yn
 = 
m_±r
->
fy
 + (
	`øndöt
(2*
dis
+1) - (dis + 1));

1673 
xn
 = 
m_±r
->
fx
 + (
	`øndöt
(2*
dis
+1) - (dis + 1));

1675 !
	`ö_bounds
(
yn
, 
xn
));

1676 
˘r
++;

1677 i‡(
˘r
 > 9)

1679 
˘r
 = 0;

1680 
dis
 += 5;

1683 (
ˇve
[
yn
][
xn
].
fvÆ
 >
MIN_CLOSED_SPACE
Ë|| (ˇve[yn][xn].
˝å
 != 0));

1684 
	`move_ªc
(()
m_±r
->
fy
, ()m_±r->
fx
, 
yn
, 
xn
);

1685 
	`lôe_•Ÿ
(()
m_±r
->
fy
, ()m_±r->
fx
);

1686 
m_±r
->
fy
 = 
yn
;

1687 
m_±r
->
fx
 = 
xn
;

1690 
m_±r
->
ml
 = 
FALSE
;

1691 
m_±r
->
cdis
 = 
	`di°™˚
 (
ch¨_row
, 
ch¨_cﬁ
, 
yn
, 
xn
);

1692 
	`upd©e_m⁄
 (
m⁄±r
);

1693 
	}
}

1697 
	$ãÀp‹t_to
(
ny
, 
nx
)

1698 
ny
, 
nx
;

1700 
dis
, 
˘r
, 
y
, 
x
;

1701 
i
, 
j
;

1702 
ˇve_ty≥
 *
c_±r
;

1704 
dis
 = 1;

1705 
˘r
 = 0;

1708 
y
 = 
ny
 + (
	`øndöt
(2*
dis
+1) - (dis + 1));

1709 
x
 = 
nx
 + (
	`øndöt
(2*
dis
+1) - (dis + 1));

1710 
˘r
++;

1711 i‡(
˘r
 > 9)

1713 
˘r
 = 0;

1714 
dis
++;

1717 !
	`ö_bounds
(
y
, 
x
Ë|| (
ˇve
[y][x].
fvÆ
 >
MIN_CLOSED_SPACE
)

1718 || (
ˇve
[
y
][
x
].
˝å
 >= 2));

1719 
	`move_ªc
(
ch¨_row
, 
ch¨_cﬁ
, 
y
, 
x
);

1720 
i
 = 
ch¨_row
-1; i <= char_row+1; i++)

1721 
j
 = 
ch¨_cﬁ
-1; j <= char_col+1; j++)

1723 
c_±r
 = &
ˇve
[
i
][
j
];

1724 
c_±r
->
é
 = 
FALSE
;

1725 
	`lôe_•Ÿ
(
i
, 
j
);

1727 
	`lôe_•Ÿ
(
ch¨_row
, 
ch¨_cﬁ
);

1728 
ch¨_row
 = 
y
;

1729 
ch¨_cﬁ
 = 
x
;

1730 
	`check_võw
();

1732 
	`¸ótuªs
(
FALSE
);

1733 
	}
}

1737 
	$ãÀp‹t_m⁄°î
(
dú
, 
y
, 
x
)

1738 
dú
, 
y
, 
x
;

1740 
Êag
, 
ªsu…
, 
di°
;

1741 
ˇve_ty≥
 *
c_±r
;

1743 
Êag
 = 
FALSE
;

1744 
ªsu…
 = 
FALSE
;

1745 
di°
 = 0;

1748 (Ë
	`mmove
(
dú
, &
y
, &
x
);

1749 
di°
++;

1750 
c_±r
 = &
ˇve
[
y
][
x
];

1751 i‡((
di°
 > 
OBJ_BOLT_RANGE
Ë|| 
c_±r
->
fvÆ
 >
MIN_CLOSED_SPACE
)

1752 
Êag
 = 
TRUE
;

1753 i‡(
c_±r
->
˝å
 > 1)

1755 
m_li°
[
c_±r
->
˝å
].
c¶ìp
 = 0;

1756 
	`ãÀp‹t_away
(()
c_±r
->
˝å
, 
MAX_SIGHT
);

1757 
ªsu…
 = 
TRUE
;

1760 !
Êag
);

1761 (
ªsu…
);

1762 
	}
}

1767 
	$mass_gíocide
()

1769 
i
, 
ªsu…
;

1770 
m⁄°î_ty≥
 *
m_±r
;

1771 
¸ótuª_ty≥
 *
r_±r
;

1772 #ifde‡
ATARIST_MWC


1773 
öt32u
 
hﬁdî
;

1776 
ªsu…
 = 
FALSE
;

1777 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

1779 
m_±r
 = &
m_li°
[
i
];

1780 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1781 #ifde‡
ATARIST_MWC


1782 i‡((
m_±r
->
cdis
 <
MAX_SIGHT
) &&

1783 ((
r_±r
->
cmove
 & (
hﬁdî
 = 
CM_WIN
)) == 0))

1785 i‡((
m_±r
->
cdis
 <
MAX_SIGHT
Ë&& ((
r_±r
->
cmove
 & 
CM_WIN
) == 0))

1788 
	`dñëe_m⁄°î
(
i
);

1789 
ªsu…
 = 
TRUE
;

1792 (
ªsu…
);

1793 
	}
}

1798 
	$gíocide
()

1800 
i
, 
kûÀd
;

1801 
typ
;

1802 
m⁄°î_ty≥
 *
m_±r
;

1803 
¸ótuª_ty≥
 *
r_±r
;

1804 
vty≥
 
out_vÆ
;

1805 #ifde‡
ATARIST_MWC


1806 
öt32u
 
hﬁdî
;

1809 
kûÀd
 = 
FALSE
;

1810 i‡(
	`gë_com
("WhichÅy≥ o‡¸ótuª dÿyou wishÉxãrmö©ed?", &
typ
))

1811 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

1813 
m_±r
 = &
m_li°
[
i
];

1814 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1815 i‡(
typ
 =
c_li°
[
m_±r
->
m±r
].
cch¨
)

1816 #ifde‡
ATARIST_MWC


1817 i‡((
r_±r
->
cmove
 & (
hﬁdî
 = 
CM_WIN
)) == 0)

1819 i‡((
r_±r
->
cmove
 & 
CM_WIN
) == 0)

1822 
	`dñëe_m⁄°î
(
i
);

1823 
kûÀd
 = 
TRUE
;

1830 (Ë
	`•rötf
(
out_vÆ
, "Thê%†i†u«f„˘ed.", 
r_±r
->
«me
);

1831 
	`msg_¥öt
(
out_vÆ
);

1834 (
kûÀd
);

1835 
	}
}

1840 
	$•ìd_m⁄°îs
(
•d
)

1841 
•d
;

1843 
i
, 
•ìd
;

1844 
m⁄°î_ty≥
 *
m_±r
;

1845 
¸ótuª_ty≥
 *
r_±r
;

1846 
vty≥
 
out_vÆ
, 
m_«me
;

1848 
•ìd
 = 
FALSE
;

1849 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

1851 
m_±r
 = &
m_li°
[
i
];

1852 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1853 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

1855 i‡((
m_±r
->
cdis
 > 
MAX_SIGHT
) ||

1856 !
	`los
(
ch¨_row
, 
ch¨_cﬁ
, ()
m_±r
->
fy
, ()m_±r->
fx
))

1859 i‡(
•d
 > 0)

1861 
m_±r
->
c•ìd
 +
•d
;

1862 
m_±r
->
c¶ìp
 = 0;

1863 i‡(
m_±r
->
ml
)

1865 
•ìd
 = 
TRUE
;

1866 (Ë
	`•rötf
 (
out_vÆ
, "%†°¨t†movög fa°î.", 
m_«me
);

1867 
	`msg_¥öt
 (
out_vÆ
);

1870 i‡(
	`øndöt
(
MAX_MONS_LEVEL
Ë> 
r_±r
->
Àvñ
)

1872 
m_±r
->
c•ìd
 +
•d
;

1873 
m_±r
->
c¶ìp
 = 0;

1874 i‡(
m_±r
->
ml
)

1876 (Ë
	`•rötf
 (
out_vÆ
, "%†°¨t†movög slowî.", 
m_«me
);

1877 
	`msg_¥öt
 (
out_vÆ
);

1878 
•ìd
 = 
TRUE
;

1881 i‡(
m_±r
->
ml
)

1883 
m_±r
->
c¶ìp
 = 0;

1884 (Ë
	`•rötf
(
out_vÆ
, "%†i†u«f„˘ed.", 
m_«me
);

1885 
	`msg_¥öt
(
out_vÆ
);

1888 (
•ìd
);

1889 
	}
}

1893 
	$¶ìp_m⁄°îs2
()

1895 
i
, 
¶ìp
;

1896 
m⁄°î_ty≥
 *
m_±r
;

1897 
¸ótuª_ty≥
 *
r_±r
;

1898 
vty≥
 
out_vÆ
, 
m_«me
;

1900 
¶ìp
 = 
FALSE
;

1901 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

1903 
m_±r
 = &
m_li°
[
i
];

1904 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1905 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

1906 i‡((
m_±r
->
cdis
 > 
MAX_SIGHT
) ||

1907 !
	`los
(
ch¨_row
, 
ch¨_cﬁ
, ()
m_±r
->
fy
, ()m_±r->
fx
))

1910 i‡((
	`øndöt
(
MAX_MONS_LEVEL
Ë< 
r_±r
->
Àvñ
) ||

1911 (
CD_NO_SLEEP
 & 
r_±r
->
cde„n£
))

1913 i‡(
m_±r
->
ml
)

1915 i‡(
r_±r
->
cde„n£
 & 
CD_NO_SLEEP
)

1916 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
CD_NO_SLEEP
;

1917 (Ë
	`•rötf
(
out_vÆ
, "%†i†u«f„˘ed.", 
m_«me
);

1918 
	`msg_¥öt
(
out_vÆ
);

1923 
m_±r
->
c¶ìp
 = 500;

1924 i‡(
m_±r
->
ml
)

1926 (Ë
	`•rötf
(
out_vÆ
, "%†ÁŒ†a¶ìp.", 
m_«me
);

1927 
	`msg_¥öt
(
out_vÆ
);

1928 
¶ìp
 = 
TRUE
;

1932 (
¶ìp
);

1933 
	}
}

1938 
	$mass_pﬁy
()

1940 
i
;

1941 
y
, 
x
, 
mass
;

1942 
m⁄°î_ty≥
 *
m_±r
;

1943 
¸ótuª_ty≥
 *
r_±r
;

1944 #ifde‡
ATARIST_MWC


1945 
öt32u
 
hﬁdî
;

1948 
mass
 = 
FALSE
;

1949 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

1951 
m_±r
 = &
m_li°
[
i
];

1952 i‡(
m_±r
->
cdis
 <
MAX_SIGHT
)

1954 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

1955 #ifde‡
ATARIST_MWC


1956 i‡((
r_±r
->
cmove
 & (
hﬁdî
 = 
CM_WIN
)) == 0)

1958 i‡((
r_±r
->
cmove
 & 
CM_WIN
) == 0)

1961 
y
 = 
m_±r
->
fy
;

1962 
x
 = 
m_±r
->
fx
;

1963 
	`dñëe_m⁄°î
(
i
);

1965 
mass
 = 
	`∂a˚_m⁄°î
(
y
, 
x
,

1966 
	`øndöt
(
m_Àvñ
[
MAX_MONS_LEVEL
]-m_level[0])

1967 - 1 + 
m_Àvñ
[0], 
FALSE
);

1971 (
mass
);

1972 
	}
}

1976 
	$dëe˘_evû
()

1978 
i
, 
Êag
;

1979 
m⁄°î_ty≥
 *
m_±r
;

1981 
Êag
 = 
FALSE
;

1982 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

1984 
m_±r
 = &
m_li°
[
i
];

1985 i‡(
	`∑√l_c⁄èös
(()
m_±r
->
fy
, ()m_±r->
fx
) &&

1986 (
CD_EVIL
 & 
c_li°
[
m_±r
->
m±r
].
cde„n£
))

1988 
m_±r
->
ml
 = 
TRUE
;

1990 
	`¥öt
(()
c_li°
[
m_±r
->
m±r
].
cch¨
, ()m_±r->
fy
,

1991 ()
m_±r
->
fx
);

1992 
Êag
 = 
TRUE
;

1995 i‡(
Êag
)

1997 
	`msg_¥öt
("You senseÅheÖresence ofÉvil!");

1998 
	`msg_¥öt
(
CNIL
);

2000 
	`¸ótuªs
(
FALSE
);

2002 (
Êag
);

2003 
	}
}

2007 
	$hp_∂ayî
(
num
)

2008 
num
;

2010 
ªs
;

2011 
misc
 *
m_±r
;

2013 
ªs
 = 
FALSE
;

2014 
m_±r
 = &
py
.
misc
;

2015 i‡(
m_±r
->
chp
 < m_±r->
mhp
)

2017 
m_±r
->
chp
 +
num
;

2018 i‡(
m_±r
->
chp
 > m_±r->
mhp
)

2020 
m_±r
->
chp
 = m_±r->
mhp
;

2021 
m_±r
->
chp_‰ac
 = 0;

2023 
	`¥t_chp
();

2025 
num
 =Çum / 5;

2026 i‡(
num
 < 3) {

2027 i‡(
num
 =0Ë
	`msg_¥öt
("You feeláÜittle better.");

2028 
	`msg_¥öt
("You feel better.");

2030 i‡(
num
 < 7Ë
	`msg_¥öt
("You feel much better.");

2031 
	`msg_¥öt
("You feel very good.");

2033 
ªs
 = 
TRUE
;

2035 (
ªs
);

2036 
	}
}

2040 
	$cuª_c⁄fusi⁄
()

2042 
cuª
;

2043 
Êags
 *
f_±r
;

2045 
cuª
 = 
FALSE
;

2046 
f_±r
 = &
py
.
Êags
;

2047 i‡(
f_±r
->
c⁄fu£d
 > 1)

2049 
f_±r
->
c⁄fu£d
 = 1;

2050 
cuª
 = 
TRUE
;

2052 (
cuª
);

2053 
	}
}

2057 
	$cuª_blöd√ss
()

2059 
cuª
;

2060 
Êags
 *
f_±r
;

2062 
cuª
 = 
FALSE
;

2063 
f_±r
 = &
py
.
Êags
;

2064 i‡(
f_±r
->
blöd
 > 1)

2066 
f_±r
->
blöd
 = 1;

2067 
cuª
 = 
TRUE
;

2069 (
cuª
);

2070 
	}
}

2074 
	$cuª_pois⁄
()

2076 
cuª
;

2077 
Êags
 *
f_±r
;

2079 
cuª
 = 
FALSE
;

2080 
f_±r
 = &
py
.
Êags
;

2081 i‡(
f_±r
->
pois⁄ed
 > 1)

2083 
f_±r
->
pois⁄ed
 = 1;

2084 
cuª
 = 
TRUE
;

2086 (
cuª
);

2087 
	}
}

2091 
	$ªmove_„¨
()

2093 
ªsu…
;

2094 
Êags
 *
f_±r
;

2096 
ªsu…
 = 
FALSE
;

2097 
f_±r
 = &
py
.
Êags
;

2098 i‡(
f_±r
->
a‰aid
 > 1)

2100 
f_±r
->
a‰aid
 = 1;

2101 
ªsu…
 = 
TRUE
;

2103 (
ªsu…
);

2104 
	}
}

2110 
	$óπhquake
()

2112 
i
, 
j
;

2113 
ˇve_ty≥
 *
c_±r
;

2114 
m⁄°î_ty≥
 *
m_±r
;

2115 
¸ótuª_ty≥
 *
r_±r
;

2116 
damage
, 
tmp
;

2117 
vty≥
 
out_vÆ
, 
m_«me
;

2118 #ifde‡
ATARIST_MWC


2119 
öt32u
 
hﬁdî
;

2122 
i
 = 
ch¨_row
-8; i <= char_row+8; i++)

2123 
j
 = 
ch¨_cﬁ
-8; j <= char_col+8; j++)

2124 i‡(((
i
 !
ch¨_row
Ë|| (
j
 !
ch¨_cﬁ
)) &&

2125 
	`ö_bounds
(
i
, 
j
Ë&& (
	`øndöt
(8) == 1))

2127 
c_±r
 = &
ˇve
[
i
][
j
];

2128 i‡(
c_±r
->
çå
 != 0)

2129 (Ë
	`dñëe_obje˘
(
i
, 
j
);

2130 i‡(
c_±r
->
˝å
 > 1)

2132 
m_±r
 = &
m_li°
[
c_±r
->
˝å
];

2133 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

2135 #ifde‡
ATARIST_MWC


2136 i‡(!(
r_±r
->
cmove
 & (
hﬁdî
 = 
CM_PHASE
)))

2138 i‡(!(
r_±r
->
cmove
 & 
CM_PHASE
))

2141 if(
r_±r
->
cmove
 & 
CM_ATTACK_ONLY
)

2142 
damage
 = 3000;

2144 
damage
 = 
	`damrﬁl
 (4, 8);

2146 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

2147 (Ë
	`•rötf
 (
out_vÆ
, "%†waû†ouàöÖaö!", 
m_«me
);

2148 
	`msg_¥öt
 (
out_vÆ
);

2149 
i
 = 
	`m⁄_èke_hô
(()
c_±r
->
˝å
, 
damage
);

2150 i‡(
i
 >= 0)

2152 (Ë
	`•rötf
 (
out_vÆ
, "%s isÉmbedded inÅheÑock.",

2153 
m_«me
);

2154 
	`msg_¥öt
 (
out_vÆ
);

2155 
	`¥t_ex≥rõn˚
();

2158 i‡(
r_±r
->
cch¨
 == 'E' ||Ñ_ptr->cchar == 'X')

2162 
m_±r
->
hp
 +
	`damrﬁl
(4, 8);

2166 i‡((
c_±r
->
fvÆ
 >
MIN_CAVE_WALL
Ë&& (c_±r->fvÆ !
BOUNDARY_WALL
))

2168 
c_±r
->
fvÆ
 = 
CORR_FLOOR
;

2169 
c_±r
->
∂
 = 
FALSE
;

2170 
c_±r
->
fm
 = 
FALSE
;

2172 i‡(
c_±r
->
fvÆ
 <
MAX_CAVE_FLOOR
)

2174 
tmp
 = 
	`øndöt
(10);

2175 i‡(
tmp
 < 6)

2176 
c_±r
->
fvÆ
 = 
QUARTZ_WALL
;

2177 i‡(
tmp
 < 9)

2178 
c_±r
->
fvÆ
 = 
MAGMA_WALL
;

2180 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

2182 
c_±r
->
fm
 = 
FALSE
;

2184 
	`lôe_•Ÿ
(
i
, 
j
);

2186 
	}
}

2190 
	$¥Ÿe˘_evû
()

2192 
ªs
;

2193 
Êags
 *
f_±r
;

2195 
f_±r
 = &
py
.
Êags
;

2196 i‡(
f_±r
->
¥Ÿevû
 == 0)

2197 
ªs
 = 
TRUE
;

2199 
ªs
 = 
FALSE
;

2200 
f_±r
->
¥Ÿevû
 +
	`øndöt
(25Ë+ 3*
py
.
misc
.
Àv
;

2201 (
ªs
);

2202 
	}
}

2206 
	$¸óã_food
()

2208 
ˇve_ty≥
 *
c_±r
;

2210 
c_±r
 = &
ˇve
[
ch¨_row
][
ch¨_cﬁ
];

2211 i‡(
c_±r
->
çå
 != 0)

2214 
	`msg_¥öt
 ("There isálreadyán object under you.");

2216 
‰ì_tu∫_Êag
 = 
TRUE
;

2220 
	`∂a˚_obje˘
(
ch¨_row
, 
ch¨_cﬁ
, 
FALSE
);

2221 
	`övc›y
(&
t_li°
[
c_±r
->
çå
], 
OBJ_MUSH
);

2223 
	}
}

2228 
	$di•ñ_¸ótuª
(
cÊag
, 
damage
)

2229 
cÊag
;

2230 
damage
;

2232 
i
;

2233 
k
, 
di•ñ
;

2234 
m⁄°î_ty≥
 *
m_±r
;

2235 
¸ótuª_ty≥
 *
r_±r
;

2236 
vty≥
 
out_vÆ
, 
m_«me
;

2238 
di•ñ
 = 
FALSE
;

2239 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

2241 
m_±r
 = &
m_li°
[
i
];

2242 i‡((
m_±r
->
cdis
 <
MAX_SIGHT
) &&

2243 (
cÊag
 & 
c_li°
[
m_±r
->
m±r
].
cde„n£
) &&

2244 
	`los
(
ch¨_row
, 
ch¨_cﬁ
, ()
m_±r
->
fy
, ()m_±r->
fx
))

2246 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

2247 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
cÊag
;

2248 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

2249 
k
 = 
	`m⁄_èke_hô
 (
i
, 
	`øndöt
(
damage
));

2252 i‡(
k
 >= 0)

2253 (Ë
	`•rötf
(
out_vÆ
, "%†dissﬁves!", 
m_«me
);

2255 (Ë
	`•rötf
(
out_vÆ
, "%†shuddîs.", 
m_«me
);

2256 
	`msg_¥öt
(
out_vÆ
);

2257 
di•ñ
 = 
TRUE
;

2258 i‡(
k
 >= 0)

2259 
	`¥t_ex≥rõn˚
();

2262 (
di•ñ
);

2263 
	}
}

2267 
	$tu∫_undód
()

2269 
i
, 
tu∫_und
;

2270 
m⁄°î_ty≥
 *
m_±r
;

2271 
¸ótuª_ty≥
 *
r_±r
;

2272 
vty≥
 
out_vÆ
, 
m_«me
;

2274 
tu∫_und
 = 
FALSE
;

2275 
i
 = 
mÂå
 - 1; i >
MIN_MONIX
; i--)

2277 
m_±r
 = &
m_li°
[
i
];

2278 
r_±r
 = &
c_li°
[
m_±r
->
m±r
];

2279 i‡((
m_±r
->
cdis
 <
MAX_SIGHT
) &&

2280 (
CD_UNDEAD
 & 
r_±r
->
cde„n£
) &&

2281 (
	`los
(
ch¨_row
, 
ch¨_cﬁ
, ()
m_±r
->
fy
, ()m_±r->
fx
)))

2283 
	`m⁄°î_«me
 (
m_«me
, 
m_±r
, 
r_±r
);

2284 i‡(((
py
.
misc
.
Àv
+1Ë> 
r_±r
->
Àvñ
) ||

2285 (
	`øndöt
(5) == 1))

2287 i‡(
m_±r
->
ml
)

2289 (Ë
	`•rötf
(
out_vÆ
, "%†run†‰™tiˇŒy!", 
m_«me
);

2290 
	`msg_¥öt
(
out_vÆ
);

2291 
tu∫_und
 = 
TRUE
;

2292 
c_ªˇŒ
[
m_±r
->
m±r
].
r_cde„n£
 |
CD_UNDEAD
;

2294 
m_±r
->
c⁄fu£d
 = 
py
.
misc
.
Àv
;

2296 i‡(
m_±r
->
ml
)

2298 (Ë
	`•rötf
(
out_vÆ
, "%†i†u«f„˘ed.", 
m_«me
);

2299 
	`msg_¥öt
(
out_vÆ
);

2303 (
tu∫_und
);

2304 
	}
}

2308 
	$w¨dög_glyph
()

2310 
i
;

2311 
ˇve_ty≥
 *
c_±r
;

2313 
c_±r
 = &
ˇve
[
ch¨_row
][
ch¨_cﬁ
];

2314 i‡(
c_±r
->
çå
 == 0)

2316 
i
 = 
	`p›t
();

2317 
c_±r
->
çå
 = 
i
;

2318 
	`övc›y
(&
t_li°
[
i
], 
OBJ_SCARE_MON
);

2320 
	}
}

2324 
	$lo£_°r
()

2326 i‡(!
py
.
Êags
.
su°aö_°r
)

2328 (Ë
	`dec_°©
 (
A_STR
);

2329 
	`msg_¥öt
("You feel very sick.");

2332 
	`msg_¥öt
("You feel sick forá moment, itÖasses.");

2333 
	}
}

2337 
	$lo£_öt
()

2339 i‡(!
py
.
Êags
.
su°aö_öt
)

2341 (Ë
	`dec_°©
(
A_INT
);

2342 
	`msg_¥öt
("You become very dizzy.");

2345 
	`msg_¥öt
("You become dizzy forá moment, itÖasses.");

2346 
	}
}

2350 
	$lo£_wis
()

2352 i‡(!
py
.
Êags
.
su°aö_wis
)

2354 (Ë
	`dec_°©
(
A_WIS
);

2355 
	`msg_¥öt
("You feel veryÇaive.");

2358 
	`msg_¥öt
("You feelÇaive forá moment, itÖasses.");

2359 
	}
}

2363 
	$lo£_dex
()

2365 i‡(!
py
.
Êags
.
su°aö_dex
)

2367 (Ë
	`dec_°©
(
A_DEX
);

2368 
	`msg_¥öt
("You feel very sore.");

2371 
	`msg_¥öt
("You feel sore forá moment, itÖasses.");

2372 
	}
}

2376 
	$lo£_c⁄
()

2378 i‡(!
py
.
Êags
.
su°aö_c⁄
)

2380 (Ë
	`dec_°©
(
A_CON
);

2381 
	`msg_¥öt
("You feel very sick.");

2384 
	`msg_¥öt
("You feel sick forá moment, itÖasses.");

2385 
	}
}

2389 
	$lo£_chr
()

2391 i‡(!
py
.
Êags
.
su°aö_chr
)

2393 (Ë
	`dec_°©
(
A_CHR
);

2394 
	`msg_¥öt
("Your skin startsÅo itch.");

2397 
	`msg_¥öt
("Your skin startsÅo itch, but feels betterÇow.");

2398 
	}
}

2402 
	$lo£_exp
(
amou¡
)

2403 
öt32
 
amou¡
;

2405 
i
;

2406 
misc
 *
m_±r
;

2407 
˛ass_ty≥
 *
c_±r
;

2409 
m_±r
 = &
py
.
misc
;

2410 i‡(
amou¡
 > 
m_±r
->
exp
)

2411 
m_±r
->
exp
 = 0;

2413 
m_±r
->
exp
 -
amou¡
;

2414 
	`¥t_ex≥rõn˚
();

2416 
i
 = 0;

2417 (
∂ayî_exp
[
i
] * 
m_±r
->
expÁ˘
 / 100Ë<m_±r->
exp
)

2418 
i
++;

2420 
i
++;

2422 i‡(
m_±r
->
Àv
 !
i
)

2424 
m_±r
->
Àv
 = 
i
;

2426 
	`ˇlc_hôpoöts
();

2427 
c_±r
 = &
˛ass
[
m_±r
->
p˛ass
];

2428 i‡(
c_±r
->
•ñl
 =
MAGE
)

2430 
	`ˇlc_•ñls
(
A_INT
);

2431 
	`ˇlc_m™a
(
A_INT
);

2433 i‡(
c_±r
->
•ñl
 =
PRIEST
)

2435 
	`ˇlc_•ñls
(
A_WIS
);

2436 
	`ˇlc_m™a
(
A_WIS
);

2438 
	`¥t_Àvñ
();

2439 
	`¥t_tôÀ
();

2441 
	}
}

2445 
	$¶ow_pois⁄
()

2447 
¶ow
;

2448 
Êags
 *
f_±r
;

2450 
¶ow
 = 
FALSE
;

2451 
f_±r
 = &
py
.
Êags
;

2452 i‡(
f_±r
->
pois⁄ed
 > 0)

2454 
f_±r
->
pois⁄ed
 = f_ptr->poisoned / 2;

2455 i‡(
f_±r
->
pois⁄ed
 < 1) f_ptr->poisoned = 1;

2456 
¶ow
 = 
TRUE
;

2457 
	`msg_¥öt
("TheÉffect ofÅheÖoison has beenÑeduced.");

2459 (
¶ow
);

2460 
	}
}

2464 
	$bÀss
(
amou¡
)

2465 
amou¡
;

2467 
py
.
Êags
.
bÀs£d
 +
amou¡
;

2468 
	}
}

2472 
	$dëe˘_öv2
(
amou¡
)

2473 
amou¡
;

2475 
py
.
Êags
.
dëe˘_öv
 +
amou¡
;

2476 
	}
}

2479 
	$ª∂a˚_•Ÿ
(
y
, 
x
, 
typ
)

2480 
y
, 
x
, 
typ
;

2482 
ˇve_ty≥
 *
c_±r
;

2484 
c_±r
 = &
ˇve
[
y
][
x
];

2485 
typ
)

2488 
c_±r
->
fvÆ
 = 
CORR_FLOOR
;

2491 
c_±r
->
fvÆ
 = 
GRANITE_WALL
;

2494 
c_±r
->
fvÆ
 = 
MAGMA_WALL
;

2497 
c_±r
->
fvÆ
 = 
QUARTZ_WALL
;

2500 
c_±r
->
∂
 = 
FALSE
;

2501 
c_±r
->
fm
 = 
FALSE
;

2502 
c_±r
->
Ã
 = 
FALSE
;

2503 i‡(
c_±r
->
çå
 != 0)

2504 (Ë
	`dñëe_obje˘
(
y
, 
x
);

2505 i‡(
c_±r
->
˝å
 > 1)

2506 
	`dñëe_m⁄°î
(()
c_±r
->
˝å
);

2507 
	}
}

2514 
	$de°roy_¨ó
(
y
, 
x
)

2515 
y
, 
x
;

2517 
i
, 
j
, 
k
;

2519 i‡(
dun_Àvñ
 > 0)

2521 
i
 = (
y
-15); i <= (y+15); i++)

2522 
j
 = (
x
-15); j <= (x+15); j++)

2523 i‡(
	`ö_bounds
(
i
, 
j
Ë&& (
ˇve
[i][j].
fvÆ
 !
BOUNDARY_WALL
))

2525 
k
 = 
	`di°™˚
(
i
, 
j
, 
y
, 
x
);

2526 i‡(
k
 == 0)

2527 
	`ª∂a˚_•Ÿ
(
i
, 
j
, 1);

2528 i‡(
k
 < 13)

2529 
	`ª∂a˚_•Ÿ
(
i
, 
j
, 
	`øndöt
(6));

2530 i‡(
k
 < 16)

2531 
	`ª∂a˚_•Ÿ
(
i
, 
j
, 
	`øndöt
(9));

2534 
	`msg_¥öt
("There isá searing blast ofÜight!");

2535 
py
.
Êags
.
blöd
 +10 + 
	`øndöt
(10);

2536 
	}
}

2540 
	$ích™t
(
∂us£s
, 
limô
)

2541 
öt16
 *
∂us£s
;

2542 
öt16
 
limô
;

2545 
ch™˚
, 
ªs
;

2547 i‡(
limô
 <= 0)

2548 (
FALSE
);

2549 
ch™˚
 = 0;

2550 
ªs
 = 
FALSE
;

2551 i‡(*
∂us£s
 > 0)

2553 
ch™˚
 = *
∂us£s
;

2554 i‡(
	`øndöt
(100) == 1)

2555 
ch™˚
 = 
	`øndöt
(chance) - 1;

2557 i‡(
	`øndöt
(
limô
Ë> 
ch™˚
)

2559 *
∂us£s
 += 1;

2560 
ªs
 = 
TRUE
;

2562 (
ªs
);

2563 
	}
}

2567 
	$ªmove_cur£
()

2569 
i
, 
ªsu…
;

2570 
öví_ty≥
 *
i_±r
;

2571 #ifde‡
ATARIST_MWC


2572 
öt32u
 
hﬁdî
 = 
TR_CURSED
;

2575 
ªsu…
 = 
FALSE
;

2576 
i
 = 
INVEN_WIELD
; i <
INVEN_OUTER
; i++)

2578 
i_±r
 = &
övít‹y
[
i
];

2579 #ifde‡
ATARIST_MWC


2580 i‡(
hﬁdî
 & 
i_±r
->
Êags
)

2582 i‡(
TR_CURSED
 & 
i_±r
->
Êags
)

2585 #ifde‡
ATARIST_MWC


2586 
i_±r
->
Êags
 &~
hﬁdî
;

2588 
i_±r
->
Êags
 &~
TR_CURSED
;

2590 
	`ˇlc_b⁄u£s
();

2591 
ªsu…
 = 
TRUE
;

2594 (
ªsu…
);

2595 
	}
}

2599 
	$ª°‹e_Àvñ
()

2601 
ª°‹e
;

2602 
misc
 *
m_±r
;

2604 
ª°‹e
 = 
FALSE
;

2605 
m_±r
 = &
py
.
misc
;

2606 i‡(
m_±r
->
max_exp
 > m_±r->
exp
)

2608 
ª°‹e
 = 
TRUE
;

2609 
	`msg_¥öt
("You feel yourÜifeÉnergiesÑeturning.");

2611 
m_±r
->
exp
 < m_±r->
max_exp
)

2613 
m_±r
->
exp
 = m_±r->
max_exp
;

2614 
	`¥t_ex≥rõn˚
();

2617 (
ª°‹e
);

2618 
	}
}

	@staffs.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

12 
	~"exã∫s.h
"

14 #ifde‡
USG


15 
	~<°rög.h
>

17 
	~<°rögs.h
>

22 
	$u£
()

24 
öt32u
 
i
;

25 
j
, 
k
, 
ôem_vÆ
, 
ch™˚
, 
y
, 
x
;

26 
idít
;

27 
misc
 *
m_±r
;

28 
öví_ty≥
 *
i_±r
;

30 
‰ì_tu∫_Êag
 = 
TRUE
;

31 i‡(
öví_˘r
 == 0)

32 
	`msg_¥öt
("But youáreÇot carryingánything.");

33 i‡(!
	`föd_ønge
(
TV_STAFF
, 
TV_NEVER
, &
j
, &
k
))

34 
	`msg_¥öt
("YouáreÇot carryingány staffs.");

35 i‡(
	`gë_ôem
(&
ôem_vÆ
, "U£ which sèff?", 
j
, 
k
, 
CNIL
, CNIL))

37 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

38 
‰ì_tu∫_Êag
 = 
FALSE
;

39 
m_±r
 = &
py
.
misc
;

40 
ch™˚
 = 
m_±r
->
ßve
 + 
	`°©_adj
(
A_INT
Ë- ()
i_±r
->
Àvñ
 - 5

41 + (
˛ass_Àvñ_adj
[
m_±r
->
p˛ass
][
CLA_DEVICE
] * m_±r->
Àv
 / 3);

42 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

43 
ch™˚
 = chance / 2;

44 i‡((
ch™˚
 < 
USE_DEVICE
Ë&& (
	`øndöt
(USE_DEVICE - chance + 1) == 1))

45 
ch™˚
 = 
USE_DEVICE
;

46 i‡(
ch™˚
 <= 0) chance = 1;

47 i‡(
	`øndöt
(
ch™˚
Ë< 
USE_DEVICE
)

48 
	`msg_¥öt
("You failedÅo useÅhe staffÖroperly.");

49 i‡(
i_±r
->
p1
 > 0)

51 
i
 = 
i_±r
->
Êags
;

52 
idít
 = 
FALSE
;

53 (
i_±r
->
p1
)--;

54 
i
 != 0)

56 
j
 = 
	`bô_pos
(&
i
) + 1;

58 
j
)

61 
idít
 = 
	`light_¨ó
(
ch¨_row
, 
ch¨_cﬁ
);

64 
idít
 = 
	`dëe˘_sdo‹
();

67 
idít
 = 
	`dëe˘_å≠
();

70 
idít
 = 
	`dëe˘_åósuª
();

73 
idít
 = 
	`dëe˘_obje˘
();

76 
	`ãÀp‹t
(100);

77 
idít
 = 
TRUE
;

80 
idít
 = 
TRUE
;

81 
	`óπhquake
();

84 
idít
 = 
FALSE
;

85 
k
 = 0; k < 
	`øndöt
(4); k++)

87 
y
 = 
ch¨_row
;

88 
x
 = 
ch¨_cﬁ
;

89 
idít
 |
	`summ⁄_m⁄°î
(&
y
, &
x
, 
FALSE
);

93 
idít
 = 
TRUE
;

94 
	`de°roy_¨ó
(
ch¨_row
, 
ch¨_cﬁ
);

97 
idít
 = 
TRUE
;

98 
	`°¨lôe
(
ch¨_row
, 
ch¨_cﬁ
);

101 
idít
 = 
	`•ìd_m⁄°îs
(1);

104 
idít
 = 
	`•ìd_m⁄°îs
(-1);

107 
idít
 = 
	`¶ìp_m⁄°îs2
();

110 
idít
 = 
	`hp_∂ayî
(
	`øndöt
(8));

113 
idít
 = 
	`dëe˘_övisibÀ
();

116 i‡(
py
.
Êags
.
Á°
 == 0)

117 
idít
 = 
TRUE
;

118 
py
.
Êags
.
Á°
 +
	`øndöt
(30) + 15;

121 i‡(
py
.
Êags
.
¶ow
 == 0)

122 
idít
 = 
TRUE
;

123 
py
.
Êags
.
¶ow
 +
	`øndöt
(30) + 15;

126 
idít
 = 
	`mass_pﬁy
();

129 i‡(
	`ªmove_cur£
())

131 i‡(
py
.
Êags
.
blöd
 < 1)

132 
	`msg_¥öt
("The staff glows blue forá moment..");

133 
idít
 = 
TRUE
;

137 
idít
 = 
	`dëe˘_evû
();

140 i‡((
	`cuª_blöd√ss
()Ë|| (
	`cuª_pois⁄
()) ||

141 (
	`cuª_c⁄fusi⁄
()))

142 
idít
 = 
TRUE
;

145 
idít
 = 
	`di•ñ_¸ótuª
(
CD_EVIL
, 60);

148 
idít
 = 
	`u∆ight_¨ó
(
ch¨_row
, 
ch¨_cﬁ
);

154 
	`msg_¥öt
("InternalÉrror in staffs()");

159 i‡(
idít
)

161 i‡(!
	`known1_p
(
i_±r
))

163 
m_±r
 = &
py
.
misc
;

165 
m_±r
->
exp
 +(
i_±r
->
Àvñ
 + (m_±r->
Àv
 >> 1)) /

166 
m_±r
->
Àv
;

167 
	`¥t_ex≥rõn˚
();

169 
	`idítify
(&
ôem_vÆ
);

170 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

173 i‡(!
	`known1_p
(
i_±r
))

174 
	`ßm∂e
 (
i_±r
);

175 
	`desc_ch¨ges
(
ôem_vÆ
);

179 
	`msg_¥öt
("The staff hasÇo chargesÜeft.");

180 i‡(!
	`known2_p
(
i_±r
))

181 
	`add_ös¸ibe
(
i_±r
, 
ID_EMPTY
);

184 
	}
}

	@store1.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

12 
	~"exã∫s.h
"

14 #ifde‡
USG


15 #i‚de‡
ATARIST_MWC


16 
	~<°rög.h
>

19 
	~<°rögs.h
>

22 #i‡
deföed
(
LINT_ARGS
)

23 
ö£π_°‹e
(, , 
öt32
, 
öví_ty≥
 *);

24 
°‹e_¸óã
();

26 
ö£π_°‹e
();

27 
°‹e_¸óã
();

32 
öt32
 
	$ôem_vÆue
(
i_±r
)

33 
öví_ty≥
 *
i_±r
;

35 
öt32
 
vÆue
;

37 
vÆue
 = 
i_±r
->
co°
;

39 i‡(
i_±r
->
idít
 & 
ID_DAMD
)

40 
vÆue
 = 0;

41 i‡(((
i_±r
->
tvÆ
 >
TV_BOW
Ë&& (i_±r->tvÆ <
TV_SWORD
)) ||

42 ((
i_±r
->
tvÆ
 >
TV_BOOTS
Ë&& (i_±r->tvÆ <
TV_SOFT_ARMOR
)))

44 i‡(!
	`known2_p
(
i_±r
))

45 
vÆue
 = 
obje˘_li°
[
i_±r
->
ödex
].
co°
;

46 i‡((
i_±r
->
tvÆ
 >
TV_BOW
Ë&& (i_±r->tvÆ <
TV_SWORD
))

48 i‡(
i_±r
->
tohô
 < 0)

49 
vÆue
 = 0;

50 i‡(
i_±r
->
todam
 < 0)

51 
vÆue
 = 0;

52 i‡(
i_±r
->
tﬂc
 < 0)

53 
vÆue
 = 0;

55 
vÆue
 = 
i_±r
->
co°
+(i_±r->
tohô
+i_±r->
todam
+i_±r->
tﬂc
)*100;

59 i‡(
i_±r
->
tﬂc
 < 0)

60 
vÆue
 = 0;

62 
vÆue
 = 
i_±r
->
co°
+i_±r->
tﬂc
*100;

65 i‡((
i_±r
->
tvÆ
 >
TV_SLING_AMMO
Ë&& (i_±r->tvÆ <
TV_SPIKE
))

67 i‡(!
	`known2_p
(
i_±r
))

68 
vÆue
 = 
obje˘_li°
[
i_±r
->
ödex
].
co°
;

71 i‡(
i_±r
->
tohô
 < 0)

72 
vÆue
 = 0;

73 i‡(
i_±r
->
todam
 < 0)

74 
vÆue
 = 0;

75 i‡(
i_±r
->
tﬂc
 < 0)

76 
vÆue
 = 0;

80 
vÆue
 = 
i_±r
->
co°
+(i_±r->
tohô
+i_±r->
todam
+i_±r->
tﬂc
)*5;

83 i‡((
i_±r
->
tvÆ
 =
TV_SCROLL1
Ë|| (i_±r->tvÆ =
TV_SCROLL2
) ||

84 (
i_±r
->
tvÆ
 =
TV_POTION1
Ë|| (i_±r->tvÆ =
TV_POTION2
))

86 i‡(!
	`known1_p
(
i_±r
))

87 
vÆue
 = 20;

89 i‡(
i_±r
->
tvÆ
 =
TV_FOOD
)

91 i‡((
i_±r
->
subvÆ
 < (
ITEM_SINGLE_STACK_MIN
 + 
MAX_MUSH
))

92 && !
	`known1_p
(
i_±r
))

93 
vÆue
 = 1;

95 i‡((
i_±r
->
tvÆ
 =
TV_AMULET
Ë|| (i_±r->tvÆ =
TV_RING
))

97 i‡(!
	`known1_p
(
i_±r
))

99 
vÆue
 = 45;

100 i‡(!
	`known2_p
(
i_±r
))

104 
vÆue
 = 
obje˘_li°
[
i_±r
->
ödex
].
co°
;

106 i‡((
i_±r
->
tvÆ
 =
TV_STAFF
Ë|| (i_±r->tvÆ =
TV_WAND
))

108 i‡(!
	`known1_p
(
i_±r
))

110 i‡(
i_±r
->
tvÆ
 =
TV_WAND
)

111 
vÆue
 = 50;

113 
vÆue
 = 70;

115 i‡(
	`known2_p
(
i_±r
))

116 
vÆue
 = 
i_±r
->
co°
 + (i_±r->co° / 20Ë* i_±r->
p1
;

119 i‡(
i_±r
->
tvÆ
 =
TV_DIGGING
)

121 i‡(!
	`known2_p
(
i_±r
))

122 
vÆue
 = 
obje˘_li°
[
i_±r
->
ödex
].
co°
;

125 i‡(
i_±r
->
p1
 < 0)

126 
vÆue
 = 0;

131 
vÆue
 = 
i_±r
->
co°


132 + (
i_±r
->
p1
 - 
obje˘_li°
[i_±r->
ödex
].p1) * 100;

133 i‡(
vÆue
 < 0)

134 
vÆue
 = 0;

139 i‡(
i_±r
->
subvÆ
 > 
ITEM_GROUP_MIN
)

140 
vÆue
 = vÆuê* 
i_±r
->
numbî
;

141 (
vÆue
);

142 
	}
}

146 
öt32
 
	$£Œ_¥i˚
(
¢um
, 
max_£Œ
, 
mö_£Œ
, 
ôem
)

147 
¢um
;

148 
öt32
 *
max_£Œ
, *
mö_£Œ
;

149 
öví_ty≥
 *
ôem
;

151 
öt32
 
i
;

152 
°‹e_ty≥
 *
s_±r
;

154 
s_±r
 = &
°‹e
[
¢um
];

155 
i
 = 
	`ôem_vÆue
(
ôem
);

157 i‡((
ôem
->
co°
 > 0Ë&& (
i
 > 0))

159 
i
 = i * 
rgﬁd_adj
[
ow√rs
[
s_±r
->
ow√r
].
ow√r_ø˚
][
py
.
misc
.
¥a˚
] / 100;

160 i‡(
i
 < 1) i = 1;

161 *
max_£Œ
 = 
i
 * 
ow√rs
[
s_±r
->
ow√r
].
max_öÊ©e
 / 100;

162 *
mö_£Œ
 = 
i
 * 
ow√rs
[
s_±r
->
ow√r
].
mö_öÊ©e
 / 100;

163 i‡(*
mö_£Œ
 > *
max_£Œ
) *min_sell = *max_sell;

164 (
i
);

169 
	}
}

173 
	$°‹e_check_num
(
t_±r
, 
°‹e_num
)

174 
öví_ty≥
 *
t_±r
;

175 
°‹e_num
;

177 
°‹e_check
, 
i
;

178 
°‹e_ty≥
 *
s_±r
;

179 
öví_ty≥
 *
i_±r
;

181 
°‹e_check
 = 
FALSE
;

182 
s_±r
 = &
°‹e
[
°‹e_num
];

183 i‡(
s_±r
->
°‹e_˘r
 < 
STORE_INVEN_MAX
)

184 
°‹e_check
 = 
TRUE
;

185 i‡(
t_±r
->
subvÆ
 >
ITEM_SINGLE_STACK_MIN
)

186 
i
 = 0; i < 
s_±r
->
°‹e_˘r
; i++)

188 
i_±r
 = &
s_±r
->
°‹e_öví
[
i
].
sôem
;

191 i‡(
i_±r
->
tvÆ
 =
t_±r
->tvÆ && i_±r->
subvÆ
 ==Å_ptr->subval

192 && (()
i_±r
->
numbî
 + ()
t_±r
->number < 256)

193 && (
t_±r
->
subvÆ
 < 
ITEM_GROUP_MIN


194 || (
i_±r
->
p1
 =
t_±r
->p1)))

195 
°‹e_check
 = 
TRUE
;

197 (
°‹e_check
);

198 
	}
}

202 
	$ö£π_°‹e
(
°‹e_num
, 
pos
, 
ico°
, 
i_±r
)

203 
pos
;

204 
°‹e_num
;

205 
öt32
 
ico°
;

206 
öví_ty≥
 *
i_±r
;

208 
i
;

209 
°‹e_ty≥
 *
s_±r
;

211 
s_±r
 = &
°‹e
[
°‹e_num
];

212 
i
 = 
s_±r
->
°‹e_˘r
-1; i >
pos
; i--)

213 
s_±r
->
°‹e_öví
[
i
+1] = s_ptr->store_inven[i];

214 
s_±r
->
°‹e_öví
[
pos
].
sôem
 = *
i_±r
;

215 
s_±r
->
°‹e_öví
[
pos
].
sco°
 = -
ico°
;

216 
s_±r
->
°‹e_˘r
++;

217 
	}
}

221 
	$°‹e_ˇºy
(
°‹e_num
, 
ùos
, 
t_±r
)

222 
°‹e_num
;

223 *
ùos
;

224 
öví_ty≥
 *
t_±r
;

226 
ôem_num
, 
ôem_vÆ
, 
Êag
;

227 
typ
, 
subt
;

228 
öt32
 
ico°
, 
dummy
;

229 
öví_ty≥
 *
i_±r
;

230 
°‹e_ty≥
 *
s_±r
;

232 *
ùos
 = -1;

233 i‡(
	`£Œ_¥i˚
(
°‹e_num
, &
ico°
, &
dummy
, 
t_±r
) > 0)

235 
s_±r
 = &
°‹e
[
°‹e_num
];

236 
ôem_vÆ
 = 0;

237 
ôem_num
 = 
t_±r
->
numbî
;

238 
Êag
 = 
FALSE
;

239 
typ
 = 
t_±r
->
tvÆ
;

240 
subt
 = 
t_±r
->
subvÆ
;

243 
i_±r
 = &
s_±r
->
°‹e_öví
[
ôem_vÆ
].
sôem
;

244 i‡(
typ
 =
i_±r
->
tvÆ
)

246 i‡(
subt
 =
i_±r
->
subvÆ
 &&

247 
subt
 >
ITEM_SINGLE_STACK_MIN


248 && (
subt
 < 
ITEM_GROUP_MIN
 || 
i_±r
->
p1
 =
t_±r
->p1))

250 *
ùos
 = 
ôem_vÆ
;

251 
i_±r
->
numbî
 +
ôem_num
;

255 i‡(
subt
 > 
ITEM_GROUP_MIN
)

257 (Ë
	`£Œ_¥i˚
 (
°‹e_num
, &
ico°
, &
dummy
, 
i_±r
);

258 
s_±r
->
°‹e_öví
[
ôem_vÆ
].
sco°
 = -
ico°
;

262 i‡(
i_±r
->
numbî
 > 24)

263 
i_±r
->
numbî
 = 24;

264 
Êag
 = 
TRUE
;

267 i‡(
typ
 > 
i_±r
->
tvÆ
)

269 
	`ö£π_°‹e
(
°‹e_num
, 
ôem_vÆ
, 
ico°
, 
t_±r
);

270 
Êag
 = 
TRUE
;

271 *
ùos
 = 
ôem_vÆ
;

273 
ôem_vÆ
++;

275 (
ôem_vÆ
 < 
s_±r
->
°‹e_˘r
Ë&& (!
Êag
));

276 i‡(!
Êag
)

278 
	`ö£π_°‹e
(
°‹e_num
, ()
s_±r
->
°‹e_˘r
, 
ico°
, 
t_±r
);

279 *
ùos
 = 
s_±r
->
°‹e_˘r
 - 1;

282 
	}
}

286 
	$°‹e_de°roy
(
°‹e_num
, 
ôem_vÆ
, 
⁄e_of
)

287 
°‹e_num
, 
ôem_vÆ
;

288 
⁄e_of
;

290 
j
, 
numbî
;

291 
°‹e_ty≥
 *
s_±r
;

292 
öví_ty≥
 *
i_±r
;

294 
s_±r
 = &
°‹e
[
°‹e_num
];

295 
i_±r
 = &
s_±r
->
°‹e_öví
[
ôem_vÆ
].
sôem
;

300 i‡((
i_±r
->
subvÆ
 >
ITEM_SINGLE_STACK_MIN
) &&

301 (
i_±r
->
subvÆ
 <
ITEM_SINGLE_STACK_MAX
))

303 i‡(
⁄e_of
)

304 
numbî
 = 1;

306 
numbî
 = 
	`øndöt
(()
i_±r
->number);

309 
numbî
 = 
i_±r
->number;

311 i‡(
numbî
 !
i_±r
->number)

312 
i_±r
->
numbî
 -=Çumber;

315 
j
 = 
ôem_vÆ
; j < 
s_±r
->
°‹e_˘r
-1; j++)

316 
s_±r
->
°‹e_öví
[
j
] = s_ptr->store_inven[j+1];

317 
	`övc›y
(&
s_±r
->
°‹e_öví
[s_±r->
°‹e_˘r
-1].
sôem
, 
OBJ_NOTHING
);

318 
s_±r
->
°‹e_öví
[s_±r->
°‹e_˘r
-1].
sco°
 = 0;

319 
s_±r
->
°‹e_˘r
--;

321 
	}
}

325 
	$°‹e_öô
()

327 
i
, 
j
, 
k
;

328 
°‹e_ty≥
 *
s_±r
;

330 
i
 = 
MAX_OWNERS
 / 
MAX_STORES
;

331 
j
 = 0; j < 
MAX_STORES
; j++)

333 
s_±r
 = &
°‹e
[
j
];

334 
s_±r
->
ow√r
 = 
MAX_STORES
*(
	`øndöt
(
i
)-1Ë+ 
j
;

335 
s_±r
->
ösu…_cur
 = 0;

336 
s_±r
->
°‹e_›í
 = 0;

337 
s_±r
->
°‹e_˘r
 = 0;

338 
s_±r
->
good_buy
 = 0;

339 
s_±r
->
bad_buy
 = 0;

340 
k
 = 0; k < 
STORE_INVEN_MAX
; k++)

342 
	`övc›y
(&
s_±r
->
°‹e_öví
[
k
].
sôem
, 
OBJ_NOTHING
);

343 
s_±r
->
°‹e_öví
[
k
].
sco°
 = 0;

346 
	}
}

350 
	$°‹e_¸óã
(
°‹e_num
)

351 
°‹e_num
;

353 
i
, 
åõs
;

354 
cur_pos
, 
dummy
;

355 
°‹e_ty≥
 *
s_±r
;

356 
öví_ty≥
 *
t_±r
;

358 
åõs
 = 0;

359 
cur_pos
 = 
	`p›t
();

360 
s_±r
 = &
°‹e
[
°‹e_num
];

363 
i
 = 
°‹e_choi˚
[
°‹e_num
][
	`øndöt
(
STORE_CHOICES
)-1];

364 
	`övc›y
(&
t_li°
[
cur_pos
], 
i
);

365 
	`magic_åósuª
(
cur_pos
, 
OBJ_TOWN_LEVEL
);

366 
t_±r
 = &
t_li°
[
cur_pos
];

367 i‡(
	`°‹e_check_num
(
t_±r
, 
°‹e_num
))

369 i‡((
t_±r
->
co°
 > 0) &&

370 (
t_±r
->
co°
 < 
ow√rs
[
s_±r
->
ow√r
].
max_co°
))

374 
	`°‹e_bought
(
t_±r
);

375 
	`°‹e_ˇºy
(
°‹e_num
, &
dummy
, 
t_±r
);

376 
åõs
 = 10;

379 
åõs
++;

381 
åõs
 <= 3);

382 
	`pusht
((
öt8u
)
cur_pos
);

383 
	}
}

387 
	$°‹e_maöt
()

389 
i
, 
j
;

390 
°‹e_ty≥
 *
s_±r
;

392 
i
 = 0; i < 
MAX_STORES
; i++)

394 
s_±r
 = &
°‹e
[
i
];

395 
s_±r
->
ösu…_cur
 = 0;

396 i‡(
s_±r
->
°‹e_˘r
 >
STORE_MIN_INVEN
)

398 
j
 = 
	`øndöt
(
STORE_TURN_AROUND
);

399 i‡(
s_±r
->
°‹e_˘r
 >
STORE_MAX_INVEN
)

400 
j
 +1 + 
s_±r
->
°‹e_˘r
 - 
STORE_MAX_INVEN
;

401 --
j
 >= 0)

402 
	`°‹e_de°roy
(
i
, 
	`øndöt
(()
s_±r
->
°‹e_˘r
)-1, 
FALSE
);

405 i‡(
s_±r
->
°‹e_˘r
 <
STORE_MAX_INVEN
)

407 
j
 = 
	`øndöt
(
STORE_TURN_AROUND
);

408 i‡(
s_±r
->
°‹e_˘r
 < 
STORE_MIN_INVEN
)

409 
j
 +
STORE_MIN_INVEN
 - 
s_±r
->
°‹e_˘r
;

410 --
j
 >= 0)

411 
	`°‹e_¸óã
(
i
);

414 
	}
}

417 
	$n⁄ìdtob¨gaö
(
°‹e_num
, 
mö¥i˚
)

418 
°‹e_num
;

419 
öt32
 
mö¥i˚
;

421 
Êagn⁄ìd
;

422 
b¨gaö_ªc‹d
;

423 
°‹e_ty≥
 *
s_±r
;

425 
s_±r
 = &
°‹e
[
°‹e_num
];

426 i‡(
s_±r
->
good_buy
 =
MAX_SHORT
)

427  
TRUE
;

428 
b¨gaö_ªc‹d
 = (
s_±r
->
good_buy
 - 3 * s_±r->
bad_buy
 - 5);

429 
Êagn⁄ìd
 = ((
b¨gaö_ªc‹d
 > 0)

430 && (()
b¨gaö_ªc‹d
 * ()bargain_record

431 > 
mö¥i˚
/50));

432  (
Êagn⁄ìd
);

433 
	}
}

437 
	$upd©eb¨gaö
(
°‹e_num
, 
¥i˚
, 
mö¥i˚
)

438 
°‹e_num
;

439 
öt32
 
¥i˚
, 
mö¥i˚
;

441 
°‹e_ty≥
 *
s_±r
;

443 
s_±r
 = &
°‹e
[
°‹e_num
];

444 i‡(
mö¥i˚
 > 9)

445 i‡(
¥i˚
 =
mö¥i˚
)

447 i‡(
s_±r
->
good_buy
 < 
MAX_SHORT
)

448 
s_±r
->
good_buy
++;

452 i‡(
s_±r
->
bad_buy
 < 
MAX_SHORT
)

453 
s_±r
->
bad_buy
++;

455 
	}
}

	@store2.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

11 
	~<°dlib.h
>

14 
	~"c⁄fig.h
"

15 
	~"c⁄°™t.h
"

16 
	~"ty≥s.h
"

17 
	~"exã∫s.h
"

19 #ifde‡
USG


20 #i‚de‡
ATARIST_MWC


21 
	~<°rög.h
>

24 
	~<°rögs.h
>

27 #i‡
deföed
(
LINT_ARGS
)

28 
¥t_commít1
();

29 
¥t_commít2
(
öt32
, int32, );

30 
¥t_commít3
(
öt32
, int32, );

31 
¥t_commít4
();

32 
¥t_commít5
();

33 
¥t_commít6
();

34 
di•œy_comm™ds
();

35 
haggÀ_comm™ds
();

36 
di•œy_övít‹y
(, );

37 
di•œy_co°
(, );

38 
°‹e_¥t_gﬁd
();

39 
di•œy_°‹e
(, );

40 
gë_°‹e_ôem
(*, *, , );

41 
ö¸ó£_ösu…s
();

42 
de¸ó£_ösu…s
();

43 
haggÀ_ösu…s
();

44 
gë_haggÀ
(*, 
öt32
 *, );

45 
ª˚ive_of„r
(, *, 
öt32
 *, int32, , );

46 
purcha£_haggÀ
(, 
öt32
 *, 
öví_ty≥
 *);

47 
£Œ_haggÀ
(, 
öt32
 *, 
öví_ty≥
 *);

48 
°‹e_purcha£
(, *);

49 
°‹e_£Œ
(, *);

52 #ifde‡
ATARIST_TC


54 
	~<°dlib.h
>

57 
©ﬁ
();

59 *
	gcommít1
[14] = {

68 *
	gcommít2a
[3] = {

74 *
	gcommít2b
[16] = {

93 *
	gcommít3a
[3] = {

99 *
	gcommít3b
[15] = {

115 *
	gcommít4a
[5] = {

123 *
	gcommít4b
[5] = {

128 *
	gcommít5
[10] = {

136 *
	gcommít6
[5] = {

143 
öt16
 
œ°_°‹e_öc
;

147 
	$¥t_commít1
()

149 
	`msg_¥öt
(
commít1
[
	`øndöt
(14)-1]);

150 
	}
}

154 
	$¥t_commít2
(
of„r
, 
askög
, 
föÆ
)

155 
öt32
 
of„r
, 
askög
; 
föÆ
;

157 
vty≥
 
commít
;

159 i‡(
föÆ
 > 0)

160 (Ë
	`°r˝y
(
commít
, 
commít2a
[
	`øndöt
(3)-1]);

162 (Ë
	`°r˝y
(
commít
, 
commít2b
[
	`øndöt
(16)-1]);

164 
	`ö£π_ um
(
commít
, "%A1", 
of„r
, 
FALSE
);

165 
	`ö£π_ um
(
commít
, "%A2", 
askög
, 
FALSE
);

166 
	`msg_¥öt
(
commít
);

167 
	}
}

170 
	$¥t_commít3
(
of„r
, 
askög
, 
föÆ
)

171 
öt32
 
of„r
, 
askög
; 
föÆ
;

173 
vty≥
 
commít
;

175 i‡(
föÆ
 > 0)

176 (Ë
	`°r˝y
 (
commít
, 
commít3a
[
	`øndöt
(3)-1]);

178 (Ë
	`°r˝y
 (
commít
, 
commít3b
[
	`øndöt
(15)-1]);

180 
	`ö£π_ um
(
commít
, "%A1", 
of„r
, 
FALSE
);

181 
	`ö£π_ um
(
commít
, "%A2", 
askög
, 
FALSE
);

182 
	`msg_¥öt
(
commít
);

183 
	}
}

187 
	$¥t_commít4
()

189 
tmp
;

191 
tmp
 = 
	`øndöt
(5) - 1;

192 
	`msg_¥öt
(
commít4a
[
tmp
]);

193 
	`msg_¥öt
(
commít4b
[
tmp
]);

194 
	}
}

197 
	$¥t_commít5
()

199 
	`msg_¥öt
(
commít5
[
	`øndöt
(10)-1]);

200 
	}
}

203 
	$¥t_commít6
()

205 
	`msg_¥öt
 (
commít6
[
	`øndöt
(5)-1]);

206 
	}
}

210 
	$di•œy_comm™ds
()

212 
	`¥t
("You may:", 20, 0);

213 
	`¥t
("Ö) Purchaseán item. b) Browse store's inventory.", 21, 0);

214 
	`¥t
(" s) Sellán item. i/e/t/w/x) Inventory/Equipment Lists.",

216 
	`¥t
("ESC) Exit from Building. ^R) RedrawÅhe screen.", 23, 0);

217 
	}
}

221 
	$haggÀ_comm™ds
(
typ
)

222 
typ
;

224 i‡(
typ
 == -1)

225 
	`¥t
("Specifyánásking-price in goldÖieces.", 21, 0);

227 
	`¥t
("Specifyán offer in goldÖieces.", 21, 0);

228 
	`¥t
("ESC) Quit Haggling.", 22, 0);

229 
	`îa£_löe
 (23, 0);

230 
	}
}

234 
	$di•œy_övít‹y
(
°‹e_num
, 
°¨t
)

235 
°‹e_num
, 
°¨t
;

237 
°‹e_ty≥
 *
s_±r
;

238 
öví_ty≥
 *
i_±r
;

239 
i
, 
j
, 
°›
;

240 
bigvty≥
 
out_vÆ1
, 
out_vÆ2
;

241 
öt32
 
x
;

243 
s_±r
 = &
°‹e
[
°‹e_num
];

244 
i
 = (
°¨t
 % 12);

245 
°›
 = ((
°¨t
 / 12) + 1) * 12;

246 i‡(
°›
 > 
s_±r
->
°‹e_˘r
) stop = s_ptr->store_ctr;

247 
°¨t
 < 
°›
)

249 
i_±r
 = &
s_±r
->
°‹e_öví
[
°¨t
].
sôem
;

250 
x
 = 
i_±r
->
numbî
;

251 i‡((
i_±r
->
subvÆ
 >
ITEM_SINGLE_STACK_MIN
)

252 && (
i_±r
->
subvÆ
 <
ITEM_SINGLE_STACK_MAX
))

253 
i_±r
->
numbî
 = 1;

254 
	`objdes
(
out_vÆ1
, 
i_±r
, 
TRUE
);

255 
i_±r
->
numbî
 = 
x
;

256 (Ë
	`•rötf
(
out_vÆ2
, "%cË%s", 'a'+
i
, 
out_vÆ1
);

257 
	`¥t
(
out_vÆ2
, 
i
+5, 0);

258 
x
 = 
s_±r
->
°‹e_öví
[
°¨t
].
sco°
;

259 i‡(
x
 <= 0)

261 
öt32
 
vÆue
 = -
x
;

262 
vÆue
 = vÆuê* 
	`chr_adj
() / 100;

263 i‡(
vÆue
 <= 0)

264 
vÆue
 = 1;

265 (Ë
	`•rötf
(
out_vÆ2
, "%9ld", 
vÆue
);

268 (Ë
	`•rötf
(
out_vÆ2
,"%9ld [Fixed]", 
x
);

269 
	`¥t
(
out_vÆ2
, 
i
+5, 59);

270 
i
++;

271 
°¨t
++;

273 i‡(
i
 < 12)

274 
j
 = 0; j < (11 - 
i
 + 1); j++)

275 
	`îa£_löe
 (
j
+
i
+5, 0);

276 i‡(
s_±r
->
°‹e_˘r
 > 12)

277 
	`put_buf„r
("- cont. -", 17, 60);

279 
	`îa£_löe
 (17, 60);

280 
	}
}

284 
	$di•œy_co°
(
°‹e_num
, 
pos
)

285 
°‹e_num
, 
pos
;

287 
i
;

288 
öt32
 
j
;

289 
vty≥
 
out_vÆ
;

290 
°‹e_ty≥
 *
s_±r
;

292 
s_±r
 = &
°‹e
[
°‹e_num
];

293 
i
 = (
pos
 % 12);

294 i‡(
s_±r
->
°‹e_öví
[
pos
].
sco°
 < 0)

296 
j
 = - 
s_±r
->
°‹e_öví
[
pos
].
sco°
;

297 
j
 = j * 
	`chr_adj
() / 100;

298 (Ë
	`•rötf
(
out_vÆ
, "%ld", 
j
);

301 (Ë
	`•rötf
(
out_vÆ
, "%9ld [Fixed]", 
s_±r
->
°‹e_öví
[
pos
].
sco°
);

302 
	`¥t
(
out_vÆ
, 
i
+5, 59);

303 
	}
}

307 
	$°‹e_¥t_gﬁd
()

309 
vty≥
 
out_vÆ
;

311 (Ë
	`•rötf
(
out_vÆ
, "Gﬁd Remaöög : %ld", 
py
.
misc
.
au
);

312 
	`¥t
(
out_vÆ
, 18, 17);

313 
	}
}

317 
	$di•œy_°‹e
(
°‹e_num
, 
cur_t›
)

318 
°‹e_num
, 
cur_t›
;

320 
°‹e_ty≥
 *
s_±r
;

322 
s_±r
 = &
°‹e
[
°‹e_num
];

323 
	`˛ór_s¸ìn
();

324 
	`put_buf„r
(
ow√rs
[
s_±r
->
ow√r
].
ow√r_«me
, 3, 9);

325 
	`put_buf„r
("Item", 4, 3);

326 
	`put_buf„r
("Asking Price", 4, 60);

327 
	`°‹e_¥t_gﬁd
();

328 
	`di•œy_comm™ds
();

329 
	`di•œy_övít‹y
(
°‹e_num
, 
cur_t›
);

330 
	}
}

334 
	$gë_°‹e_ôem
(
com_vÆ
, 
pmt
, 
i
, 
j
)

335 *
com_vÆ
;

336 *
pmt
;

337 
i
, 
j
;

339 
comm™d
;

340 
vty≥
 
out_vÆ
;

341 
Êag
;

343 *
com_vÆ
 = -1;

344 
Êag
 = 
FALSE
;

345 (Ë
	`•rötf
(
out_vÆ
, "(Iãm†%c-%c, ESCÅÿexôË%s", 
i
+'a', 
j
+'a', 
pmt
);

346 
	`gë_com
(
out_vÆ
, &
comm™d
))

348 
comm™d
 -= 'a';

349 i‡(
comm™d
 >
i
 && comm™d <
j
)

351 
Êag
 = 
TRUE
;

352 *
com_vÆ
 = 
comm™d
;

355 
	`bñl
();

357 
	`îa£_löe
(
MSG_LINE
, 0);

358 (
Êag
);

359 
	}
}

363 
	$ö¸ó£_ösu…s
(
°‹e_num
)

364 
°‹e_num
;

366 
ö¸ó£
;

367 
°‹e_ty≥
 *
s_±r
;

369 
ö¸ó£
 = 
FALSE
;

370 
s_±r
 = &
°‹e
[
°‹e_num
];

371 
s_±r
->
ösu…_cur
++;

372 i‡(
s_±r
->
ösu…_cur
 > 
ow√rs
[s_±r->
ow√r
].
ösu…_max
)

374 
	`¥t_commít4
();

375 
s_±r
->
ösu…_cur
 = 0;

376 
s_±r
->
bad_buy
++;

377 
s_±r
->
°‹e_›í
 = 
tu∫
 + 2500 + 
	`øndöt
(2500);

378 
ö¸ó£
 = 
TRUE
;

380 (
ö¸ó£
);

381 
	}
}

385 
	$de¸ó£_ösu…s
(
°‹e_num
)

386 
°‹e_num
;

388 
°‹e_ty≥
 *
s_±r
;

390 
s_±r
 = &
°‹e
[
°‹e_num
];

391 i‡(
s_±r
->
ösu…_cur
 != 0)

392 
s_±r
->
ösu…_cur
--;

393 
	}
}

397 
	$haggÀ_ösu…s
(
°‹e_num
)

398 
°‹e_num
;

400 
haggÀ
;

402 
haggÀ
 = 
FALSE
;

403 i‡(
	`ö¸ó£_ösu…s
(
°‹e_num
))

404 
haggÀ
 = 
TRUE
;

407 
	`¥t_commít5
();

408 
	`msg_¥öt
 (
CNIL
);

410 (
haggÀ
);

411 
	}
}

414 
	$gë_haggÀ
(
commít
, 
√w_of„r
, 
num_of„r
)

415 *
commít
;

416 
öt32
 *
√w_of„r
;

417 
num_of„r
;

419 
öt32
 
i
;

420 
vty≥
 
out_vÆ
, 
deÁu…_of„r
;

421 
Êag
, 
˛í
;

422 
‹ig_˛í
;

423 *
p
;

424 
ö¸emít
;

426 
Êag
 = 
TRUE
;

427 
ö¸emít
 = 
FALSE
;

428 
˛í
 = 
	`°æí
(
commít
);

429 
‹ig_˛í
 = 
˛í
;

430 i‡(
num_of„r
 == 0)

431 
œ°_°‹e_öc
 = 0;

432 
i
 = 0;

435 
	`¥t
(
commít
, 0, 0);

436 i‡(
num_of„r
 && 
œ°_°‹e_öc
 != 0)

438 (Ë
	`•rötf
 (
deÁu…_of„r
, "[%c%d] ",

439 (
œ°_°‹e_öc
 < 0) ? '-' : '+',

440 
	`abs
 (
œ°_°‹e_öc
));

441 
	`¥t
 (
deÁu…_of„r
, 0, 
‹ig_˛í
);

442 
˛í
 = 
‹ig_˛í
 + 
	`°æí
 (
deÁu…_of„r
);

444 i‡(!
	`gë_°rög
(
out_vÆ
, 0, 
˛í
, 40))

445 
Êag
 = 
FALSE
;

446 
p
 = 
out_vÆ
; *p == ' ';Ö++)

448 i‡(*
p
 == '+' || *p == '-')

449 
ö¸emít
 = 
TRUE
;

450 i‡(
num_of„r
 && 
ö¸emít
)

452 
i
 = 
	`©ﬁ
 (
out_vÆ
);

456 i‡(
i
 == 0)

457 
ö¸emít
 = 
FALSE
;

459 
œ°_°‹e_öc
 = 
i
;

461 i‡(
num_of„r
 && *
out_vÆ
 == '\0')

463 
i
 = 
œ°_°‹e_öc
;

464 
ö¸emít
 = 
TRUE
;

467 
i
 = 
	`©ﬁ
 (
out_vÆ
);

471 i‡(
Êag
 && 
num_of„r
 =0 && 
ö¸emít
)

473 
	`msg_¥öt
("You haven'tÉven made your first offer yet!");

474 
i
 = 0;

475 
ö¸emít
 = 
FALSE
;

478 
Êag
 && (
i
 == 0));

479 i‡(
Êag
)

481 i‡(
ö¸emít
)

482 *
√w_of„r
 +
i
;

484 *
√w_of„r
 = 
i
;

487 
	`îa£_löe
 (0, 0);

488 (
Êag
);

489 
	}
}

492 
	$ª˚ive_of„r
(
°‹e_num
, 
commít
, 
√w_of„r
, 
œ°_of„r
,

493 
num_of„r
, 
Á˘‹
)

494 
°‹e_num
;

495 *
commít
;

496 
öt32
 *
√w_of„r
, 
œ°_of„r
;

497 
num_of„r
, 
Á˘‹
;

499 
Êag
;

500 
ª˚ive
;

502 
ª˚ive
 = 0;

503 
Êag
 = 
FALSE
;

506 i‡(
	`gë_haggÀ
(
commít
, 
√w_of„r
, 
num_of„r
))

508 i‡(*
√w_of„r
*
Á˘‹
 >
œ°_of„r
*factor)

509 
Êag
 = 
TRUE
;

510 i‡(
	`haggÀ_ösu…s
(
°‹e_num
))

512 
ª˚ive
 = 2;

513 
Êag
 = 
TRUE
;

518 *
√w_of„r
 = 
œ°_of„r
;

522 
ª˚ive
 = 1;

523 
Êag
 = 
TRUE
;

526 !
Êag
);

527 (
ª˚ive
);

528 
	}
}

532 
	$purcha£_haggÀ
(
°‹e_num
, 
¥i˚
, 
ôem
)

533 
°‹e_num
;

534 
öt32
 *
¥i˚
;

535 
öví_ty≥
 *
ôem
;

537 
öt32
 
max_£Œ
, 
mö_£Œ
, 
max_buy
;

538 
öt32
 
co°
, 
cur_ask
, 
föÆ_ask
, 
mö_of„r
;

539 
öt32
 
œ°_of„r
, 
√w_of„r
;

540 
öt32
 
x1
, 
x2
, 
x3
;

541 
öt32
 
mö_≥r
, 
max_≥r
;

542 
Êag
, 
lo›_Êag
;

543 *
commít
;

544 
vty≥
 
out_vÆ
;

545 
purcha£
, 
num_of„r
, 
föÆ_Êag
, 
did¡_haggÀ
;

546 
°‹e_ty≥
 *
s_±r
;

547 
ow√r_ty≥
 *
o_±r
;

549 
Êag
 = 
FALSE
;

550 
purcha£
 = 0;

551 *
¥i˚
 = 0;

552 
föÆ_Êag
 = 0;

553 
did¡_haggÀ
 = 
FALSE
;

554 
s_±r
 = &
°‹e
[
°‹e_num
];

555 
o_±r
 = &
ow√rs
[
s_±r
->
ow√r
];

556 
co°
 = 
	`£Œ_¥i˚
(
°‹e_num
, &
max_£Œ
, &
mö_£Œ
, 
ôem
);

557 
max_£Œ
 = max_£Œ * 
	`chr_adj
() / 100;

558 i‡(
max_£Œ
 <= 0) max_sell = 1;

559 
mö_£Œ
 = mö_£Œ * 
	`chr_adj
() / 100;

560 i‡(
mö_£Œ
 <= 0) min_sell = 1;

562 
max_buy
 = 
co°
 * (200 - ()
o_±r
->
max_öÊ©e
) / 100;

563 i‡(
max_buy
 <= 0) max_buy = 1;

564 
mö_≥r
 = 
o_±r
->
haggÀ_≥r
;

565 
max_≥r
 = 
mö_≥r
 * 3;

566 
	`haggÀ_comm™ds
(1);

567 
cur_ask
 = 
max_£Œ
;

568 
föÆ_ask
 = 
mö_£Œ
;

569 
mö_of„r
 = 
max_buy
;

570 
œ°_of„r
 = 
mö_of„r
;

571 
√w_of„r
 = 0;

572 
num_of„r
 = 0;

573 
commít
 = "Asking";

576 i‡(
	`n⁄ìdtob¨gaö
(
°‹e_num
, 
föÆ_ask
))

578 
	`msg_¥öt
("AfteráÜong bargaining session, youágree uponÅheÖrice.");

579 
cur_ask
 = 
mö_£Œ
;

580 
commít
 = "Final offer";

581 
did¡_haggÀ
 = 
TRUE
;

585 
œ°_°‹e_öc
 = 
mö_£Œ
;

586 
num_of„r
 = 1;

593 
lo›_Êag
 = 
TRUE
;

594 (Ë
	`•rötf
(
out_vÆ
, "%†: %ld", 
commít
, 
cur_ask
);

595 
	`put_buf„r
(
out_vÆ
, 1, 0);

596 
purcha£
 = 
	`ª˚ive_of„r
(
°‹e_num
, "What do you offer? ",

597 &
√w_of„r
, 
œ°_of„r
, 
num_of„r
, 1);

598 i‡(
purcha£
 != 0)

599 
Êag
 = 
TRUE
;

602 i‡(
√w_of„r
 > 
cur_ask
)

604 
	`¥t_commít6
();

606 
√w_of„r
 = 
œ°_of„r
;

611 i‡(
œ°_of„r
 + 
œ°_°‹e_öc
 > 
cur_ask
)

612 
œ°_°‹e_öc
 = 0;

614 i‡(
√w_of„r
 =
cur_ask
)

616 
Êag
 = 
TRUE
;

617 *
¥i˚
 = 
√w_of„r
;

620 
lo›_Êag
 = 
FALSE
;

623 !
Êag
 && 
lo›_Êag
);

624 i‡(!
Êag
)

626 
x1
 = (
√w_of„r
 - 
œ°_of„r
Ë* 100 / (
cur_ask
 -Üast_offer);

627 i‡(
x1
 < 
mö_≥r
)

629 
Êag
 = 
	`haggÀ_ösu…s
(
°‹e_num
);

630 i‡(
Êag
Ë
purcha£
 = 2;

632 i‡(
x1
 > 
max_≥r
)

634 
x1
 = x1 * 75 / 100;

635 i‡(
x1
 < 
max_≥r
) x1 = max_per;

637 
x2
 = 
x1
 + 
	`øndöt
(5) - 3;

638 
x3
 = ((
cur_ask
 - 
√w_of„r
Ë* 
x2
 / 100) + 1;

640 i‡(
x3
 < 0)

641 
x3
 = 0;

642 
cur_ask
 -
x3
;

643 i‡(
cur_ask
 < 
föÆ_ask
)

645 
cur_ask
 = 
föÆ_ask
;

646 
commít
 = "Final Offer";

649 
œ°_°‹e_öc
 = 
föÆ_ask
 - 
√w_of„r
;

650 
föÆ_Êag
++;

651 i‡(
föÆ_Êag
 > 3)

653 i‡(
	`ö¸ó£_ösu…s
(
°‹e_num
))

654 
purcha£
 = 2;

656 
purcha£
 = 1;

657 
Êag
 = 
TRUE
;

660 i‡(
√w_of„r
 >
cur_ask
)

662 
Êag
 = 
TRUE
;

663 *
¥i˚
 = 
√w_of„r
;

665 i‡(!
Êag
)

667 
œ°_of„r
 = 
√w_of„r
;

668 
num_of„r
++;

669 
	`îa£_löe
 (1, 0);

670 (Ë
	`•rötf
(
out_vÆ
, "You∏œ° of„∏: %ld", 
œ°_of„r
);

671 
	`put_buf„r
(
out_vÆ
, 1, 39);

672 
	`¥t_commít2
(
œ°_of„r
, 
cur_ask
, 
föÆ_Êag
);

676 i‡(
cur_ask
 - 
œ°_of„r
 < 
œ°_°‹e_öc
)

677 
œ°_°‹e_öc
 = 
cur_ask
 - 
œ°_of„r
;

681 !
Êag
);

684 i‡((
purcha£
 =0Ë&& (!
did¡_haggÀ
))

685 
	`upd©eb¨gaö
(
°‹e_num
, *
¥i˚
, 
föÆ_ask
);

687 (
purcha£
);

688 
	}
}

692 
	$£Œ_haggÀ
(
°‹e_num
, 
¥i˚
, 
ôem
)

693 
°‹e_num
;

694 
öt32
 *
¥i˚
;

695 
öví_ty≥
 *
ôem
;

697 
öt32
 
max_£Œ
, 
max_buy
, 
mö_buy
;

698 
öt32
 
co°
, 
cur_ask
, 
föÆ_ask
, 
mö_of„r
;

699 
öt32
 
œ°_of„r
, 
√w_of„r
;

700 
öt32
 
max_gﬁd
;

701 
öt32
 
x1
, 
x2
, 
x3
;

702 
öt32
 
mö_≥r
, 
max_≥r
;

703 
Êag
, 
lo›_Êag
;

704 *
commít
;

705 
vty≥
 
out_vÆ
;

706 
°‹e_ty≥
 *
s_±r
;

707 
ow√r_ty≥
 *
o_±r
;

708 
£Œ
, 
num_of„r
, 
föÆ_Êag
, 
did¡_haggÀ
;

710 
Êag
 = 
FALSE
;

711 
£Œ
 = 0;

712 *
¥i˚
 = 0;

713 
föÆ_Êag
 = 0;

714 
did¡_haggÀ
 = 
FALSE
;

715 
s_±r
 = &
°‹e
[
°‹e_num
];

716 
co°
 = 
	`ôem_vÆue
(
ôem
);

717 i‡(
co°
 < 1)

719 
£Œ
 = 3;

720 
Êag
 = 
TRUE
;

724 
o_±r
 = &
ow√rs
[
s_±r
->
ow√r
];

725 
co°
 = co° * (200 - 
	`chr_adj
()) / 100;

726 
co°
 = co° * (200 - 
rgﬁd_adj
[
o_±r
->
ow√r_ø˚
][
py
.
misc
.
¥a˚
]) / 100;

727 i‡(
co°
 < 1) cost = 1;

728 
max_£Œ
 = 
co°
 * 
o_±r
->
max_öÊ©e
 / 100;

730 
max_buy
 = 
co°
 * (200 - ()
o_±r
->
max_öÊ©e
) / 100;

731 
mö_buy
 = 
co°
 * (200 - 
o_±r
->
mö_öÊ©e
) / 100;

732 i‡(
mö_buy
 < 1) min_buy = 1;

733 i‡(
max_buy
 < 1) max_buy = 1;

734 i‡(
mö_buy
 < 
max_buy
) min_buy = max_buy;

735 
mö_≥r
 = 
o_±r
->
haggÀ_≥r
;

736 
max_≥r
 = 
mö_≥r
 * 3;

737 
max_gﬁd
 = 
o_±r
->
max_co°
;

739 i‡(!
Êag
)

741 
	`haggÀ_comm™ds
(-1);

742 
num_of„r
 = 0;

743 i‡(
max_buy
 > 
max_gﬁd
)

745 
föÆ_Êag
= 1;

746 
commít
 = "Final Offer";

748 
œ°_°‹e_öc
 = 0;

749 
cur_ask
 = 
max_gﬁd
;

750 
föÆ_ask
 = 
max_gﬁd
;

751 
	`msg_¥öt
("Iám sorry, but I haveÇotÅhe moneyÅoáfford such \
 fine item.");

753 
did¡_haggÀ
 = 
TRUE
;

757 
cur_ask
 = 
max_buy
;

758 
föÆ_ask
 = 
mö_buy
;

759 i‡(
föÆ_ask
 > 
max_gﬁd
)

760 
föÆ_ask
 = 
max_gﬁd
;

761 
commít
 = "Offer";

764 i‡(
	`n⁄ìdtob¨gaö
(
°‹e_num
, 
föÆ_ask
))

766 
	`msg_¥öt
("AfteráÜong bargaining session, youágree upon \
Örice.");

768 
cur_ask
 = 
föÆ_ask
;

769 
commít
 = "Final offer";

770 
did¡_haggÀ
 = 
TRUE
;

774 
œ°_°‹e_öc
 = 
föÆ_ask
;

775 
num_of„r
 = 1;

778 
mö_of„r
 = 
max_£Œ
;

779 
œ°_of„r
 = 
mö_of„r
;

780 
√w_of„r
 = 0;

781 i‡(
cur_ask
 < 1) cur_ask = 1;

786 
lo›_Êag
 = 
TRUE
;

787 (Ë
	`•rötf
(
out_vÆ
, "%†: %ld", 
commít
, 
cur_ask
);

788 
	`put_buf„r
(
out_vÆ
, 1, 0);

789 
£Œ
 = 
	`ª˚ive_of„r
(
°‹e_num
, "WhatÖrice do youásk? ",

790 &
√w_of„r
, 
œ°_of„r
, 
num_of„r
, -1);

791 i‡(
£Œ
 != 0)

792 
Êag
 = 
TRUE
;

795 i‡(
√w_of„r
 < 
cur_ask
)

797 
	`¥t_commít6
();

799 
√w_of„r
 = 
œ°_of„r
;

804 i‡(
œ°_of„r
 + 
œ°_°‹e_öc
 < 
cur_ask
)

805 
œ°_°‹e_öc
 = 0;

807 i‡(
√w_of„r
 =
cur_ask
)

809 
Êag
 = 
TRUE
;

810 *
¥i˚
 = 
√w_of„r
;

813 
lo›_Êag
 = 
FALSE
;

816 !
Êag
 && 
lo›_Êag
);

817 i‡(!
Êag
)

819 
x1
 = (
œ°_of„r
 - 
√w_of„r
Ë* 100 / (œ°_of„∏- 
cur_ask
);

820 i‡(
x1
 < 
mö_≥r
)

822 
Êag
 = 
	`haggÀ_ösu…s
(
°‹e_num
);

823 i‡(
Êag
Ë
£Œ
 = 2;

825 i‡(
x1
 > 
max_≥r
)

827 
x1
 = x1 * 75 / 100;

828 i‡(
x1
 < 
max_≥r
) x1 = max_per;

830 
x2
 = 
x1
 + 
	`øndöt
(5) - 3;

831 
x3
 = ((
√w_of„r
 - 
cur_ask
Ë* 
x2
 / 100) + 1;

833 i‡(
x3
 < 0)

834 
x3
 = 0;

835 
cur_ask
 +
x3
;

836 i‡(
cur_ask
 > 
föÆ_ask
)

838 
cur_ask
 = 
föÆ_ask
;

839 
commít
 = "Final Offer";

842 
œ°_°‹e_öc
 = 
föÆ_ask
 - 
√w_of„r
;

843 
föÆ_Êag
++;

844 i‡(
föÆ_Êag
 > 3)

846 i‡(
	`ö¸ó£_ösu…s
(
°‹e_num
))

847 
£Œ
 = 2;

849 
£Œ
 = 1;

850 
Êag
 = 
TRUE
;

853 i‡(
√w_of„r
 <
cur_ask
)

855 
Êag
 = 
TRUE
;

856 *
¥i˚
 = 
√w_of„r
;

858 i‡(!
Êag
)

860 
œ°_of„r
 = 
√w_of„r
;

861 
num_of„r
++;

862 
	`îa£_löe
 (1, 0);

863 (Ë
	`•rötf
(
out_vÆ
, "You∏œ° bid %ld", 
œ°_of„r
);

864 
	`put_buf„r
(
out_vÆ
, 1, 39);

865 
	`¥t_commít3
(
cur_ask
, 
œ°_of„r
, 
föÆ_Êag
);

869 i‡(
cur_ask
 - 
œ°_of„r
 > 
œ°_°‹e_öc
)

870 
œ°_°‹e_öc
 = 
cur_ask
 - 
œ°_of„r
;

874 !
Êag
);

878 i‡((
£Œ
 =0Ë&& (!
did¡_haggÀ
))

879 
	`upd©eb¨gaö
(
°‹e_num
, *
¥i˚
, 
föÆ_ask
);

881 (
£Œ
);

882 
	}
}

886 
	$°‹e_purcha£
(
°‹e_num
, 
cur_t›
)

887 
°‹e_num
;

888 *
cur_t›
;

890 
öt32
 
¥i˚
;

891 
i
, 
choi˚
;

892 
bigvty≥
 
out_vÆ
, 
tmp_°r
;

893 
°‹e_ty≥
 *
s_±r
;

894 
öví_ty≥
 
£Œ_obj
;

895 
öví_ªc‹d
 *
r_±r
;

896 
ôem_vÆ
, 
ôem_√w
, 
purcha£
;

898 
purcha£
 = 
FALSE
;

899 
s_±r
 = &
°‹e
[
°‹e_num
];

901 i‡(*
cur_t›
 == 12)

902 
i
 = 
s_±r
->
°‹e_˘r
 - 1 - 12;

903 i‡(
s_±r
->
°‹e_˘r
 > 11)

904 
i
 = 11;

906 
i
 = 
s_±r
->
°‹e_˘r
 - 1;

907 i‡(
s_±r
->
°‹e_˘r
 < 1)

908 
	`msg_¥öt
("Iám currently out of stock.");

910 i‡(
	`gë_°‹e_ôem
(&
ôem_vÆ
,

911 "Which iãmáª you i¡îe°ed in? ", 0, 
i
))

913 
ôem_vÆ
 = iãm_vÆ + *
cur_t›
;

914 
	`èke_⁄e_ôem
(&
£Œ_obj
, &
s_±r
->
°‹e_öví
[
ôem_vÆ
].
sôem
);

915 i‡(
	`öví_check_num
(&
£Œ_obj
))

917 i‡(
s_±r
->
°‹e_öví
[
ôem_vÆ
].
sco°
 > 0)

919 
¥i˚
 = 
s_±r
->
°‹e_öví
[
ôem_vÆ
].
sco°
;

920 
choi˚
 = 0;

923 
choi˚
 = 
	`purcha£_haggÀ
(
°‹e_num
, &
¥i˚
, &
£Œ_obj
);

924 i‡(
choi˚
 == 0)

926 i‡(
py
.
misc
.
au
 >
¥i˚
)

928 
	`¥t_commít1
();

929 
	`de¸ó£_ösu…s
(
°‹e_num
);

930 
py
.
misc
.
au
 -
¥i˚
;

931 
ôem_√w
 = 
	`öví_ˇºy
(&
£Œ_obj
);

932 
i
 = 
s_±r
->
°‹e_˘r
;

933 
	`°‹e_de°roy
(
°‹e_num
, 
ôem_vÆ
, 
TRUE
);

934 
	`objdes
(
tmp_°r
, &
övít‹y
[
ôem_√w
], 
TRUE
);

935 (Ë
	`•rötf
(
out_vÆ
, "You have %s (%c)",

936 
tmp_°r
, 
ôem_√w
+'a');

937 
	`¥t
(
out_vÆ
, 0, 0);

938 
	`check_°ªngth
();

939 i‡(*
cur_t›
 >
s_±r
->
°‹e_˘r
)

941 *
cur_t›
 = 0;

942 
	`di•œy_övít‹y
(
°‹e_num
, *
cur_t›
);

946 
r_±r
 = &
s_±r
->
°‹e_öví
[
ôem_vÆ
];

947 i‡(
i
 =
s_±r
->
°‹e_˘r
)

949 i‡(
r_±r
->
sco°
 < 0)

951 
r_±r
->
sco°
 = 
¥i˚
;

952 
	`di•œy_co°
(
°‹e_num
, 
ôem_vÆ
);

956 
	`di•œy_övít‹y
(
°‹e_num
, 
ôem_vÆ
);

958 
	`°‹e_¥t_gﬁd
();

962 i‡(
	`ö¸ó£_ösu…s
(
°‹e_num
))

963 
purcha£
 = 
TRUE
;

966 
	`¥t_commít1
();

967 
	`msg_¥öt
("Liar! You haveÇotÅhe gold!");

971 i‡(
choi˚
 == 2)

972 
purcha£
 = 
TRUE
;

975 
	`di•œy_comm™ds
();

976 
	`îa£_löe
 (1, 0);

979 
	`¥t
("You cannot carryÅhat many different items.", 0, 0);

981 (
purcha£
);

982 
	}
}

986 
	$°‹e_£Œ
(
°‹e_num
, 
cur_t›
)

987 
°‹e_num
, *
cur_t›
;

989 
ôem_vÆ
, 
ôem_pos
;

990 
öt32
 
¥i˚
;

991 
bigvty≥
 
out_vÆ
, 
tmp_°r
;

992 
öví_ty≥
 
sﬁd_obj
;

993 
£Œ
, 
choi˚
, 
Êag
;

994 
mask
[
INVEN_WIELD
];

995 
cou¡î
, 
fú°_ôem
, 
œ°_ôem
;

997 
£Œ
 = 
FALSE
;

998 
fú°_ôem
 = 
öví_˘r
;

999 
œ°_ôem
 = -1;

1000 
cou¡î
 = 0; cou¡î < 
öví_˘r
; counter++)

1002 #ifde‡
MAC


1003 
Êag
 = 
	`°‹e_buy
(
°‹e_num
, (
övít‹y
[
cou¡î
].
tvÆ
));

1005 
Êag
 = (*
°‹e_buy
[
°‹e_num
])(
övít‹y
[
cou¡î
].
tvÆ
);

1007 
mask
[
cou¡î
] = 
Êag
;

1008 i‡(
Êag
)

1010 i‡(
cou¡î
 < 
fú°_ôem
)

1011 
fú°_ôem
 = 
cou¡î
;

1012 i‡(
cou¡î
 > 
œ°_ôem
)

1013 
œ°_ôem
 = 
cou¡î
;

1016 i‡(
œ°_ôem
 == -1)

1017 
	`msg_¥öt
("You haveÇothingÅo sellÅoÅhis store!");

1018 i‡(
	`gë_ôem
(&
ôem_vÆ
, "Which o√? ", 
fú°_ôem
, 
œ°_ôem
, 
mask
,

1021 
	`èke_⁄e_ôem
(&
sﬁd_obj
, &
övít‹y
[
ôem_vÆ
]);

1022 
	`objdes
(
tmp_°r
, &
sﬁd_obj
, 
TRUE
);

1023 (Ë
	`•rötf
(
out_vÆ
, "Sñlög %†(%c)", 
tmp_°r
, 
ôem_vÆ
+'a');

1024 
	`msg_¥öt
(
out_vÆ
);

1025 i‡(
	`°‹e_check_num
(&
sﬁd_obj
, 
°‹e_num
))

1027 
choi˚
 = 
	`£Œ_haggÀ
(
°‹e_num
, &
¥i˚
, &
sﬁd_obj
);

1028 i‡(
choi˚
 == 0)

1030 
	`¥t_commít1
();

1031 
	`de¸ó£_ösu…s
(
°‹e_num
);

1032 
py
.
misc
.
au
 +
¥i˚
;

1034 
	`idítify
(&
ôem_vÆ
);

1036 
	`èke_⁄e_ôem
(&
sﬁd_obj
, &
övít‹y
[
ôem_vÆ
]);

1038 
	`known2
(&
sﬁd_obj
);

1039 
	`öví_de°roy
(
ôem_vÆ
);

1040 
	`objdes
(
tmp_°r
, &
sﬁd_obj
, 
TRUE
);

1041 (Ë
	`•rötf
(
out_vÆ
, "You'vêsﬁd %s", 
tmp_°r
);

1042 
	`msg_¥öt
(
out_vÆ
);

1043 
	`°‹e_ˇºy
(
°‹e_num
, &
ôem_pos
, &
sﬁd_obj
);

1044 
	`check_°ªngth
();

1045 i‡(
ôem_pos
 >= 0)

1047 i‡(
ôem_pos
 < 12)

1048 i‡(*
cur_t›
 < 12)

1049 
	`di•œy_övít‹y
(
°‹e_num
, 
ôem_pos
);

1052 *
cur_t›
 = 0;

1053 
	`di•œy_övít‹y
(
°‹e_num
, *
cur_t›
);

1055 i‡(*
cur_t›
 > 11)

1056 
	`di•œy_övít‹y
(
°‹e_num
, 
ôem_pos
);

1059 *
cur_t›
 = 12;

1060 
	`di•œy_övít‹y
(
°‹e_num
, *
cur_t›
);

1063 
	`°‹e_¥t_gﬁd
();

1065 i‡(
choi˚
 == 2)

1066 
£Œ
 = 
TRUE
;

1067 i‡(
choi˚
 == 3)

1069 
	`msg_¥öt
("How dare you!");

1070 
	`msg_¥öt
("I willÇot buyÅhat!");

1071 
£Œ
 = 
	`ö¸ó£_ösu…s
(
°‹e_num
);

1074 
	`îa£_löe
 (1, 0);

1075 
	`di•œy_comm™ds
();

1078 
	`msg_¥öt
("I haveÇotÅheÑoom in my storeÅo keep it.");

1080 (
£Œ
);

1081 
	}
}

1085 
	$íãr_°‹e
(
°‹e_num
)

1086 
°‹e_num
;

1088 
cur_t›
, 
tmp_chr
;

1089 
comm™d
;

1090 
exô_Êag
;

1091 
°‹e_ty≥
 *
s_±r
;

1093 
s_±r
 = &
°‹e
[
°‹e_num
];

1094 i‡(
s_±r
->
°‹e_›í
 < 
tu∫
)

1096 
exô_Êag
 = 
FALSE
;

1097 
cur_t›
 = 0;

1098 
	`di•œy_°‹e
(
°‹e_num
, 
cur_t›
);

1101 
	`move_curs‹
 (20, 9);

1103 
msg_Êag
 = 
FALSE
;

1104 i‡(
	`gë_com
(
CNIL
, &
comm™d
))

1106 
comm™d
)

1109 i‡(
cur_t›
 == 0)

1110 i‡(
s_±r
->
°‹e_˘r
 > 12)

1112 
cur_t›
 = 12;

1113 
	`di•œy_övít‹y
(
°‹e_num
, 
cur_t›
);

1116 
	`msg_¥öt
("Entire inventory is shown.");

1119 
cur_t›
 = 0;

1120 
	`di•œy_övít‹y
(
°‹e_num
, 
cur_t›
);

1128 
tmp_chr
 = 
py
.
°©s
.
u£_°©
[
A_CHR
];

1131 
	`öví_comm™d
(
comm™d
);

1132 
comm™d
 = 
doög_öví
;

1134 
comm™d
);

1136 i‡(
tmp_chr
 !
py
.
°©s
.
u£_°©
[
A_CHR
])

1137 
	`di•œy_övít‹y
(
°‹e_num
, 
cur_t›
);

1138 
‰ì_tu∫_Êag
 = 
FALSE
;

1141 
exô_Êag
 = 
	`°‹e_purcha£
(
°‹e_num
, &
cur_t›
);

1144 
exô_Êag
 = 
	`°‹e_£Œ
(
°‹e_num
, &
cur_t›
);

1147 
	`bñl
();

1152 
exô_Êag
 = 
TRUE
;

1154 !
exô_Êag
);

1156 
	`døw_ˇve
();

1159 
	`msg_¥öt
("The doorsáreÜocked.");

1160 
	}
}

	@tables.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

13 #ifde‡
MORIA_HOU


16 
	gdays
[7][29] = { "SUN:XXXXXXXXXXXXXXXXXXXXXXXX",

25 #ifde‡
MAC


26 
°‹e_ty≥
 *
	g°‹e
;

28 
°‹e_ty≥
 
	g°‹e
[
MAX_STORES
];

33 #ifde‡
MACGAME


34 
ow√r_ty≥
 *
	gow√rs
;

36 
ow√r_ty≥
 
	gow√rs
[
MAX_OWNERS
] = {

78 
öt8u
 
	grgﬁd_adj
[
MAX_RACES
][MAX_RACES] = {

90 
öt16u
 
	g°‹e_choi˚
[
MAX_STORES
][
STORE_CHOICES
] = {

111 #i‚de‡
MAC


115 
gíîÆ_°‹e
(), 
¨m‹y
(), 
wóp⁄smôh
(), 
ãm∂e
(),

116 
Æchemi°
(), 
magic_sh›
();

119 (*
	g°‹e_buy
[
MAX_STORES
])() = {

120 
gíîÆ_°‹e
, 
¨m‹y
, 
wóp⁄smôh
, 
ãm∂e
, 
Æchemi°
, 
magic_sh›
};

125 #ifde‡
MACGAME


127 **
	gcﬁ‹s
;

128 **
	gmushrooms
;

129 **
	gwoods
;

130 **
	gmëÆs
;

131 **
	grocks
;

132 **
	gamuÀts
;

133 **
	gsyŒabÀs
;

137 *
	gcﬁ‹s
[
MAX_COLORS
] = {

150 *
	gmushrooms
[
MAX_MUSH
] = {

156 *
	gwoods
[
MAX_WOODS
] = {

163 *
	gmëÆs
[
MAX_METALS
] = {

170 *
	grocks
[
MAX_ROCKS
] = {

178 *
	gamuÀts
[
MAX_AMULETS
] = {

183 *
	gsyŒabÀs
[
MAX_SYLLABLES
] = {

208 
öt8u
 
	gblows_èbÀ
[7][6] = {

222 
öt16u
 
	gn‹mÆ_èbÀ
[
NORMAL_TABLE_SIZE
] = {

	@treasure.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

66 #i‡
deföed
(
MACGAME
Ë|| deföed(
RSRC_PART2
)

67 
åósuª_ty≥
 *
	gobje˘_li°
;

69 
åósuª_ty≥
 
	gobje˘_li°
[
MAX_OBJECTS
] = {

71 {"Pois⁄" ,0x00000001L, 
TV_FOOD
, ',',

73 {"Blöd√ss" ,0x00000002L, 
TV_FOOD
, ',',

75 {"P¨™oü" ,0x00000004L, 
TV_FOOD
, ',',

77 {"C⁄fusi⁄" ,0x00000008L, 
TV_FOOD
, ',',

79 {"HÆlucö©i⁄" ,0x00000010L, 
TV_FOOD
, ',',

81 {"Cuª Pois⁄" ,0x00000020L, 
TV_FOOD
, ',',

83 {"Cuª Blöd√ss" ,0x00000040L, 
TV_FOOD
, ',',

85 {"Cuª P¨™oü" ,0x00000080L, 
TV_FOOD
, ',',

87 {"Cuª C⁄fusi⁄" ,0x00000100L, 
TV_FOOD
, ',',

89 {"Wók√ss" ,0x04000200L, 
TV_FOOD
, ',',

91 {"Unhó…h" ,0x04000400L, 
TV_FOOD
, ',',

93 {"Re°‹êC⁄°ôuti⁄" ,0x00010000L, 
TV_FOOD
, ',',

95 {"Fú°-Aid" ,0x00200000L, 
TV_FOOD
, ',',

97 {"Mö‹ Cuªs" ,0x00400000L, 
TV_FOOD
, ',',

99 {"LighàCuªs" ,0x00800000L, 
TV_FOOD
, ',',

101 {"Re°‹©i⁄" ,0x001F8000L, 
TV_FOOD
, ',',

103 {"Pois⁄" ,0x00000001L, 
TV_FOOD
, ',',

105 {"HÆlucö©i⁄" ,0x00000010L, 
TV_FOOD
, ',',

107 {"Cuª Pois⁄" ,0x00000020L, 
TV_FOOD
, ',',

109 {"Unhó…h" ,0x04000400L, 
TV_FOOD
, ',',

111 {"Maj‹ Cuªs" ,0x02000000L, 
TV_FOOD
, ',',

113 {"& R©i⁄~ o‡Food" ,0x00000000L, 
TV_FOOD
, ',',

115 {"& R©i⁄~ o‡Food" ,0x00000000L, 
TV_FOOD
, ',',

117 {"& R©i⁄~ o‡Food" ,0x00000000L, 
TV_FOOD
, ',',

119 {"& SlimêMﬁd~" ,0x00000000L, 
TV_FOOD
, ',',

121 {"& Põ˚~ o‡Elvish Waybªad" ,0x02000020L, 
TV_FOOD
, ',',

123 {"& Põ˚~ o‡Elvish Waybªad" ,0x02000020L, 
TV_FOOD
, ',',

125 {"& Põ˚~ o‡Elvish Waybªad" ,0x02000020L, 
TV_FOOD
, ',',

127 {"& Daggî (Maö Gauche)" ,0x00000000L, 
TV_SWORD
, '|',

129 {"& Daggî (Mi£ric‹de)" ,0x00000000L, 
TV_SWORD
, '|',

131 {"& Daggî (Stûëto)" ,0x00000000L, 
TV_SWORD
, '|',

133 {"& Daggî (Bodkö)" ,0x00000000L, 
TV_SWORD
, '|',

135 {"& Brokí Daggî" ,0x00000000L, 
TV_SWORD
, '|',

137 {"& Backsw‹d" ,0x00000000L, 
TV_SWORD
, '|',

139 {"& Ba°¨d Sw‹d" ,0x00000000L, 
TV_SWORD
, '|',

141 {"& Thru°ög Sw‹d (Bûbo)" ,0x00000000L, 
TV_SWORD
, '|',

143 {"& Thru°ög Sw‹d (Ba£œrd)" ,0x00000000L, 
TV_SWORD
, '|',

145 {"& Brﬂdsw‹d" ,0x00000000L, 
TV_SWORD
, '|',

147 {"& Two-H™ded Sw‹d (Cœym‹e)",0x00000000L, 
TV_SWORD
, '|',

149 {"& Cuéass" ,0x00000000L, 
TV_SWORD
, '|',

151 {"& Two-H™ded Sw‹d (E•ad⁄)" ,0x00000000L, 
TV_SWORD
, '|',

153 {"& Executi⁄î'†Sw‹d" ,0x00000000L, 
TV_SWORD
, '|',

155 {"& Two-H™ded Sw‹d (Fœmbîge)",0x00000000L, 
TV_SWORD
, '|',

157 {"& Foû" ,0x00000000L, 
TV_SWORD
, '|',

159 {"& K©™a" ,0x00000000L, 
TV_SWORD
, '|',

161 {"& L⁄gsw‹d" ,0x00000000L, 
TV_SWORD
, '|',

163 {"& Two-H™ded Sw‹d (No-Dachi)",0x00000000L, 
TV_SWORD
, '|',

165 {"& R≠õr" ,0x00000000L, 
TV_SWORD
, '|',

167 {"& Sabª" ,0x00000000L, 
TV_SWORD
, '|',

169 {"& SmÆ»Sw‹d" ,0x00000000L, 
TV_SWORD
, '|',

171 {"& Two-H™ded Sw‹d (Zweih™dî)",0x00000000L, 
TV_SWORD
, '|',

173 {"& Brokí Sw‹d" ,0x00000000L, 
TV_SWORD
, '|',

175 {"& BÆ»™d Chaö" ,0x00000000L, 
TV_HAFTED
, '\\',

177 {"& C©-o'-Nöe-Taûs" ,0x00000000L, 
TV_HAFTED
, '\\',

179 {"& Woodí Club" ,0x00000000L, 
TV_HAFTED
, '\\',

181 {"& Fœû" ,0x00000000L, 
TV_HAFTED
, '\\',

183 {"& Two-H™ded Gª© Fœû" ,0x00000000L, 
TV_HAFTED
, '\\',

185 {"& M‹nög°¨" ,0x00000000L, 
TV_HAFTED
, '\\',

187 {"& Ma˚" ,0x00000000L, 
TV_HAFTED
, '\\',

189 {"& W¨ Hammî" ,0x00000000L, 
TV_HAFTED
, '\\',

191 {"& Lód-FûÀd Ma˚" ,0x00000000L, 
TV_HAFTED
, '\\',

193 {"& Awl-Pike" ,0x00000000L, 
TV_POLEARM
, '/',

195 {"& Bóked Axe" ,0x00000000L, 
TV_POLEARM
, '/',

197 {"& Fauch¨d" ,0x00000000L, 
TV_POLEARM
, '/',

199 {"& Gœive" ,0x00000000L, 
TV_POLEARM
, '/',

201 {"& HÆbîd" ,0x00000000L, 
TV_POLEARM
, '/',

203 {"& Lu˚∫êHammî" ,0x00000000L, 
TV_POLEARM
, '/',

205 {"& Pike" ,0x00000000L, 
TV_POLEARM
, '/',

207 {"& S≥¨" ,0x00000000L, 
TV_POLEARM
, '/',

209 {"& L™˚" ,0x00000000L, 
TV_POLEARM
, '/',

211 {"& Javñö" ,0x00000000L, 
TV_POLEARM
, '/',

213 {"& B©éêAxê(BÆe°¨ius)" ,0x00000000L, 
TV_POLEARM
, '/',

215 {"& B©éêAxê(Eur›ón)" ,0x00000000L, 
TV_POLEARM
, '/',

217 {"& Brﬂd Axe" ,0x00000000L, 
TV_POLEARM
, '/',

219 {"& Sh‹àBow" ,0x00000000L, 
TV_BOW
, '}',

221 {"& L⁄g Bow" ,0x00000000L, 
TV_BOW
, '}',

223 {"& ComposôêBow" ,0x00000000L, 
TV_BOW
, '}',

225 {"& LighàCrossbow" ,0x00000000L, 
TV_BOW
, '}',

227 {"& Hóvy Crossbow" ,0x00000000L, 
TV_BOW
, '}',

229 {"& Slög" ,0x00000000L, 
TV_BOW
, '}',

231 {"& Aºow~" ,0x00000000L, 
TV_ARROW
, '{',

233 {"& Bﬁt~" ,0x00000000L, 
TV_BOLT
, '{',

235 {"& Rounded PebbÀ~" ,0x00000000L, 
TV_SLING_AMMO
, '{',

237 {"& Ir⁄ ShŸ~" ,0x00000000L, 
TV_SLING_AMMO
, '{',

239 {"& Ir⁄ Spike~" ,0x00000000L, 
TV_SPIKE
, '~',

241 {"& Bøs†L™ã∫~" ,0x00000000L, 
TV_LIGHT
, '~',

243 {"& Woodí T‹ch~" ,0x00000000L, 
TV_LIGHT
, '~',

245 {"& Orcish Pick" ,0x20000000L, 
TV_DIGGING
, '\\',

247 {"& Dw¨ví Pick" ,0x20000000L, 
TV_DIGGING
, '\\',

249 {"& Gnomish Shovñ" ,0x20000000L, 
TV_DIGGING
, '\\',

251 {"& Dw¨ví Shovñ" ,0x20000000L, 
TV_DIGGING
, '\\',

253 {"& Paú o‡So· Lóthî Sh€s" ,0x00000000L, 
TV_BOOTS
, ']',

255 {"& Paú o‡So· Lóthî BoŸs" ,0x00000000L, 
TV_BOOTS
, ']',

257 {"& Paú o‡H¨d Lóthî BoŸs" ,0x00000000L, 
TV_BOOTS
, ']',

259 {"& So· Lóthî C≠" ,0x00000000L, 
TV_HELM
, ']',

261 {"& H¨d Lóthî C≠" ,0x00000000L, 
TV_HELM
, ']',

263 {"& MëÆ C≠" ,0x00000000L, 
TV_HELM
, ']',

265 {"& Ir⁄ Hñm" ,0x00000000L, 
TV_HELM
, ']',

267 {"& Sãñ Hñm" ,0x00000000L, 
TV_HELM
, ']',

269 {"& Sûvî Crown" ,0x00000000L, 
TV_HELM
, ']',

271 {"& Gﬁdí Crown" ,0x00000000L, 
TV_HELM
, ']',

273 {"& Jewñ-En¸u°ed Crown" ,0x00000000L, 
TV_HELM
, ']',

275 {"& Robe" ,0x00000000L, 
TV_SOFT_ARMOR
, '(',

277 {"So· Lóthî Arm‹" ,0x00000000L, 
TV_SOFT_ARMOR
, '(',

279 {"So· Studded Lóthî" ,0x00000000L, 
TV_SOFT_ARMOR
, '(',

281 {"H¨d Lóthî Arm‹" ,0x00000000L, 
TV_SOFT_ARMOR
, '(',

283 {"H¨d Studded Lóthî" ,0x00000000L, 
TV_SOFT_ARMOR
, '(',

285 {"Woví C‹d Arm‹" ,0x00000000L, 
TV_SOFT_ARMOR
, '(',

287 {"So· Lóthî Rög Maû" ,0x00000000L, 
TV_SOFT_ARMOR
, '(',

289 {"H¨d Lóthî Rög Maû" ,0x00000000L, 
TV_SOFT_ARMOR
, '(',

291 {"Lóthî SˇÀ Maû" ,0x00000000L, 
TV_SOFT_ARMOR
, '(',

293 {"MëÆ SˇÀ Maû" ,0x00000000L, 
TV_HARD_ARMOR
, '[',

295 {"Chaö Maû" ,0x00000000L, 
TV_HARD_ARMOR
, '[',

297 {"Ru°y Chaö Maû" ,0x00000000L, 
TV_HARD_ARMOR
, '[',

299 {"DoubÀ Chaö Maû" ,0x00000000L, 
TV_HARD_ARMOR
, '[',

301 {"Augmíãd Chaö Maû" ,0x00000000L, 
TV_HARD_ARMOR
, '[',

303 {"B¨ Chaö Maû" ,0x00000000L, 
TV_HARD_ARMOR
, '[',

305 {"MëÆ Brig™döêArm‹" ,0x00000000L, 
TV_HARD_ARMOR
, '[',

307 {"Lamö©ed Arm‹" ,0x00000000L, 
TV_HARD_ARMOR
, '[',

309 {"P¨tü»Pœã Arm‹" ,0x00000000L, 
TV_HARD_ARMOR
, '[',

311 {"MëÆ Lamñœ∏Arm‹" ,0x00000000L, 
TV_HARD_ARMOR
, '[',

313 {"FuŒ Pœã Arm‹" ,0x00000000L, 
TV_HARD_ARMOR
, '[',

315 {"Ribbed Pœã Arm‹" ,0x00000000L, 
TV_HARD_ARMOR
, '[',

317 {"& Clﬂk" ,0x00000000L, 
TV_CLOAK
, '(',

319 {"& Së o‡Lóthî Gloves" ,0x00000000L, 
TV_GLOVES
, ']',

321 {"& Së o‡Gau¡Àts" ,0x00000000L, 
TV_GLOVES
, ']',

323 {"& SmÆ»Lóthî Shõld" ,0x00000000L, 
TV_SHIELD
, ')',

325 {"& Medium Lóthî Shõld" ,0x00000000L, 
TV_SHIELD
, ')',

327 {"& L¨gêLóthî Shõld" ,0x00000000L, 
TV_SHIELD
, ')',

329 {"& SmÆ»MëÆ Shõld" ,0x00000000L, 
TV_SHIELD
, ')',

331 {"& Medium MëÆ Shõld" ,0x00000000L, 
TV_SHIELD
, ')',

333 {"& L¨gêMëÆ Shõld" ,0x00000000L, 
TV_SHIELD
, ')',

335 {"Såígth" ,0x00000001L, 
TV_RING
, '=',

337 {"Dexãrôy" ,0x00000008L, 
TV_RING
, '=',

339 {"C⁄°ôuti⁄" ,0x00000010L, 
TV_RING
, '=',

341 {"I¡ñligí˚" ,0x00000002L, 
TV_RING
, '=',

343 {"S≥ed" ,0x00001000L, 
TV_RING
, '=',

345 {"Sórchög" ,0x00000040L, 
TV_RING
, '=',

347 {"Tñï‹èti⁄" ,0x80000400L, 
TV_RING
, '=',

349 {"Slow Dige°i⁄" ,0x00000080L, 
TV_RING
, '=',

351 {"Resi° Fúe" ,0x00080000L, 
TV_RING
, '=',

353 {"Resi° Cﬁd" ,0x00200000L, 
TV_RING
, '=',

355 {"Fóthî FÆlög" ,0x04000000L, 
TV_RING
, '=',

357 {"Ad‹nmít" ,0x00000000L, 
TV_RING
, '=',

360 {"& Aºow~" ,0x00000000L, 
TV_ARROW
, '{',

362 {"Wók√ss" ,0x80000001L, 
TV_RING
, '=',

364 {"L‹dly PrŸe˘i⁄ (FIRE)" ,0x00080000L, 
TV_RING
, '=',

366 {"L‹dly PrŸe˘i⁄ (ACID)" ,0x00100000L, 
TV_RING
, '=',

368 {"L‹dly PrŸe˘i⁄ (COLD)" ,0x00200000L, 
TV_RING
, '=',

370 {"WOE" ,0x80000644L, 
TV_RING
, '=',

372 {"Stupidôy" ,0x80000002L, 
TV_RING
, '=',

374 {"In¸ó£ Damage" ,0x00000000L, 
TV_RING
, '=',

376 {"In¸ó£ To-Hô" ,0x00000000L, 
TV_RING
, '=',

378 {"PrŸe˘i⁄" ,0x00000000L, 
TV_RING
, '=',

380 {"Aggøv©êM⁄°î" ,0x80000200L, 
TV_RING
, '=',

382 {"Sì InvisibÀ" ,0x01000000L, 
TV_RING
, '=',

384 {"Su°aö Såígth" ,0x00400000L, 
TV_RING
, '=',

386 {"Su°aö I¡ñligí˚" ,0x00400000L, 
TV_RING
, '=',

388 {"Su°aö Wisdom" ,0x00400000L, 
TV_RING
, '=',

390 {"Su°aö C⁄°ôuti⁄" ,0x00400000L, 
TV_RING
, '=',

392 {"Su°aö Dexãrôy" ,0x00400000L, 
TV_RING
, '=',

394 {"Su°aö Ch¨isma" ,0x00400000L, 
TV_RING
, '=',

396 {"Sœyög" ,0x00000000L, 
TV_RING
, '=',

398 {"Wisdom" ,0x00000004L, 
TV_AMULET
, '"',

400 {"Ch¨isma" ,0x00000020L, 
TV_AMULET
, '"',

402 {"Sórchög" ,0x00000040L, 
TV_AMULET
, '"',

404 {"Tñï‹èti⁄" ,0x80000400L, 
TV_AMULET
, '"',

406 {"Slow Dige°i⁄" ,0x00000080L, 
TV_AMULET
, '"',

408 {"Resi° Acid" ,0x00100000L, 
TV_AMULET
, '"',

410 {"Ad‹nmít" ,0x00000000L, 
TV_AMULET
, '"',

413 {"& Bﬁt~" ,0x00000000L, 
TV_BOLT
, '{',

415 {"thêMagi" ,0x01800040L, 
TV_AMULET
, '"',

417 {"DOOM" ,0x8000007FL, 
TV_AMULET
, '"',

419 {"Ench™àWóp⁄ To-Hô" ,0x00000001L, 
TV_SCROLL1
, '?',

421 {"Ench™àWóp⁄ To-Dam" ,0x00000002L, 
TV_SCROLL1
, '?',

423 {"Ench™àArm‹" ,0x00000004L, 
TV_SCROLL1
, '?',

425 {"Idítify" ,0x00000008L, 
TV_SCROLL1
, '?',

427 {"Idítify" ,0x00000008L, 
TV_SCROLL1
, '?',

429 {"Idítify" ,0x00000008L, 
TV_SCROLL1
, '?',

431 {"Idítify" ,0x00000008L, 
TV_SCROLL1
, '?',

433 {"RemovêCur£" ,0x00000010L, 
TV_SCROLL1
, '?',

435 {"Light" ,0x00000020L, 
TV_SCROLL1
, '?',

437 {"Light" ,0x00000020L, 
TV_SCROLL1
, '?',

439 {"Light" ,0x00000020L, 
TV_SCROLL1
, '?',

441 {"Summ⁄ M⁄°î" ,0x00000040L, 
TV_SCROLL1
, '?',

443 {"Pha£ Do‹" ,0x00000080L, 
TV_SCROLL1
, '?',

445 {"Tñï‹t" ,0x00000100L, 
TV_SCROLL1
, '?',

447 {"Tñï‹àLevñ" ,0x00000200L, 
TV_SCROLL1
, '?',

449 {"M⁄°î C⁄fusi⁄" ,0x00000400L, 
TV_SCROLL1
, '?',

451 {"Magi¯M≠pög" ,0x00000800L, 
TV_SCROLL1
, '?',

453 {"SÀï M⁄°î" ,0x00001000L, 
TV_SCROLL1
, '?',

455 {"Ru√ o‡PrŸe˘i⁄" ,0x00002000L, 
TV_SCROLL1
, '?',

457 {"Tªasuª Dëe˘i⁄" ,0x00004000L, 
TV_SCROLL1
, '?',

459 {"Obje˘ Dëe˘i⁄" ,0x00008000L, 
TV_SCROLL1
, '?',

461 {"Tø∞Dëe˘i⁄" ,0x00010000L, 
TV_SCROLL1
, '?',

463 {"Tø∞Dëe˘i⁄" ,0x00010000L, 
TV_SCROLL1
, '?',

465 {"Tø∞Dëe˘i⁄" ,0x00010000L, 
TV_SCROLL1
, '?',

467 {"Do‹/Sèú Loˇti⁄" ,0x00020000L, 
TV_SCROLL1
, '?',

469 {"Do‹/Sèú Loˇti⁄" ,0x00020000L, 
TV_SCROLL1
, '?',

471 {"Do‹/Sèú Loˇti⁄" ,0x00020000L, 
TV_SCROLL1
, '?',

473 {"Mas†Gíocide" ,0x00040000L, 
TV_SCROLL1
, '?',

475 {"Dëe˘ InvisibÀ" ,0x00080000L, 
TV_SCROLL1
, '?',

477 {"Aggøv©êM⁄°î" ,0x00100000L, 
TV_SCROLL1
, '?',

479 {"Tø∞Cª©i⁄" ,0x00200000L, 
TV_SCROLL1
, '?',

481 {"Tøp/Do‹ De°ru˘i⁄" ,0x00400000L, 
TV_SCROLL1
, '?',

483 {"Do‹ Cª©i⁄" ,0x00800000L, 
TV_SCROLL1
, '?',

485 {"Rech¨gög" ,0x01000000L, 
TV_SCROLL1
, '?',

487 {"Gíocide" ,0x02000000L, 
TV_SCROLL1
, '?',

489 {"D¨k√ss" ,0x04000000L, 
TV_SCROLL1
, '?',

491 {"PrŸe˘i⁄ from Evû" ,0x08000000L, 
TV_SCROLL1
, '?',

493 {"Cª©êFood" ,0x10000000L, 
TV_SCROLL1
, '?',

495 {"Di•ñ Undód" ,0x20000000L, 
TV_SCROLL1
, '?',

497 {"*Ench™àWóp⁄*" ,0x00000001L, 
TV_SCROLL2
, '?',

499 {"Cur£ Wóp⁄" ,0x00000002L, 
TV_SCROLL2
, '?',

501 {"*Ench™àArm‹*" ,0x00000004L, 
TV_SCROLL2
, '?',

503 {"Cur£ Arm‹" ,0x00000008L, 
TV_SCROLL2
, '?',

505 {"Summ⁄ Undód" ,0x00000010L, 
TV_SCROLL2
, '?',

507 {"BÀssög" ,0x00000020L, 
TV_SCROLL2
, '?',

509 {"Hﬁy Ch™t" ,0x00000040L, 
TV_SCROLL2
, '?',

511 {"Hﬁy Pøyî" ,0x00000080L, 
TV_SCROLL2
, '?',

513 {"W‹d-of-ReˇŒ" ,0x00000100L, 
TV_SCROLL2
, '?',

515 {"*De°ru˘i⁄*" ,0x00000200L, 
TV_SCROLL2
, '?',

518 {"SlimêMﬁd Jui˚" ,0x30000000L, 
TV_POTION1
, '!',

520 {"AµÀ Jui˚" ,0x00000000L, 
TV_POTION1
, '!',

522 {"W©î" ,0x00000000L, 
TV_POTION1
, '!',

524 {"Såígth" ,0x00000001L, 
TV_POTION1
, '!',

526 {"Wók√ss" ,0x00000002L, 
TV_POTION1
, '!',

528 {"Re°‹êSåígth" ,0x00000004L, 
TV_POTION1
, '!',

530 {"I¡ñligí˚" ,0x00000008L, 
TV_POTION1
, '!',

532 {"Lo£ I¡ñligí˚" ,0x00000010L, 
TV_POTION1
, '!',

534 {"Re°‹êI¡ñligí˚" ,0x00000020L, 
TV_POTION1
, '!',

536 {"Wisdom" ,0x00000040L, 
TV_POTION1
, '!',

538 {"Lo£ Wisdom" ,0x00000080L, 
TV_POTION1
, '!',

540 {"Re°‹êWisdom" ,0x00000100L, 
TV_POTION1
, '!',

542 {"Ch¨isma" ,0x00000200L, 
TV_POTION1
, '!',

544 {"Uglöess" ,0x00000400L, 
TV_POTION1
, '!',

546 {"Re°‹êCh¨isma" ,0x00000800L, 
TV_POTION1
, '!',

548 {"Cuª LighàWounds" ,0x10001000L, 
TV_POTION1
, '!',

550 {"Cuª LighàWounds" ,0x10001000L, 
TV_POTION1
, '!',

552 {"Cuª LighàWounds" ,0x10001000L, 
TV_POTION1
, '!',

554 {"Cuª Sîiou†Wounds" ,0x30002000L, 
TV_POTION1
, '!',

556 {"Cuª Crôiˇ»Wounds" ,0x70004000L, 
TV_POTION1
, '!',

558 {"Hólög" ,0x70008000L, 
TV_POTION1
, '!',

560 {"C⁄°ôuti⁄" ,0x00010000L, 
TV_POTION1
, '!',

562 {"Gaö Ex≥rõn˚" ,0x00020000L, 
TV_POTION1
, '!',

564 {"SÀï" ,0x00040000L, 
TV_POTION1
, '!',

566 {"Blöd√ss" ,0x00080000L, 
TV_POTION1
, '!',

568 {"C⁄fusi⁄" ,0x00100000L, 
TV_POTION1
, '!',

570 {"Pois⁄" ,0x00200000L, 
TV_POTION1
, '!',

572 {"Ha°êSñf" ,0x00400000L, 
TV_POTION1
, '!',

574 {"Slow√ss" ,0x00800000L, 
TV_POTION1
, '!',

576 {"Dexãrôy" ,0x02000000L, 
TV_POTION1
, '!',

578 {"Re°‹êDexãrôy" ,0x04000000L, 
TV_POTION1
, '!',

580 {"Re°‹êC⁄°ôuti⁄" ,0x68000000L, 
TV_POTION1
, '!',

582 {"Lo£ Ex≥rõn˚" ,0x00000002L, 
TV_POTION2
, '!',

584 {"SÆàW©î" ,0x00000004L, 
TV_POTION2
, '!',

586 {"Invu îabûôy" ,0x00000008L, 
TV_POTION2
, '!',

588 {"Hîoism" ,0x00000010L, 
TV_POTION2
, '!',

590 {"Su≥∏Hîoism" ,0x00000020L, 
TV_POTION2
, '!',

592 {"Bﬁd√ss" ,0x00000040L, 
TV_POTION2
, '!',

594 {"Re°‹êLi„ Levñs" ,0x00000080L, 
TV_POTION2
, '!',

596 {"Resi° Hót" ,0x00000100L, 
TV_POTION2
, '!',

598 {"Resi° Cﬁd" ,0x00000200L, 
TV_POTION2
, '!',

600 {"Dëe˘ InvisibÀ" ,0x00000400L, 
TV_POTION2
, '!',

602 {"Slow Pois⁄" ,0x00000800L, 
TV_POTION2
, '!',

604 {"NeuåÆizêPois⁄" ,0x00001000L, 
TV_POTION2
, '!',

606 {"Re°‹êM™a" ,0x00002000L, 
TV_POTION2
, '!',

608 {"In‰a-Visi⁄" ,0x00004000L, 
TV_POTION2
, '!',

610 {"& Fœsk~ o‡Oû" ,0x00040000L, 
TV_FLASK
, '!',

612 {"Light" ,0x00000001L, 
TV_WAND
, '-',

614 {"Lighäög Bﬁts" ,0x00000002L, 
TV_WAND
, '-',

616 {"Fro° Bﬁts" ,0x00000004L, 
TV_WAND
, '-',

618 {"FúêBﬁts" ,0x00000008L, 
TV_WAND
, '-',

620 {"St⁄e-to-Mud" ,0x00000010L, 
TV_WAND
, '-',

622 {"Pﬁym‹ph" ,0x00000020L, 
TV_WAND
, '-',

624 {"Hó»M⁄°î" ,0x00000040L, 
TV_WAND
, '-',

626 {"Ha°êM⁄°î" ,0x00000080L, 
TV_WAND
, '-',

628 {"Slow M⁄°î" ,0x00000100L, 
TV_WAND
, '-',

630 {"C⁄fu£ M⁄°î" ,0x00000200L, 
TV_WAND
, '-',

632 {"SÀï M⁄°î" ,0x00000400L, 
TV_WAND
, '-',

634 {"Døö Li„" ,0x00000800L, 
TV_WAND
, '-',

636 {"Tøp/Do‹ De°ru˘i⁄" ,0x00001000L, 
TV_WAND
, '-',

638 {"Magi¯Missûe" ,0x00002000L, 
TV_WAND
, '-',

640 {"WÆ»Buûdög" ,0x00004000L, 
TV_WAND
, '-',

642 {"Cl⁄êM⁄°î" ,0x00008000L, 
TV_WAND
, '-',

644 {"Tñï‹àAway" ,0x00010000L, 
TV_WAND
, '-',

646 {"Dißrmög" ,0x00020000L, 
TV_WAND
, '-',

648 {"Lighäög BÆls" ,0x00040000L, 
TV_WAND
, '-',

650 {"Cﬁd BÆls" ,0x00080000L, 
TV_WAND
, '-',

652 {"FúêBÆls" ,0x00100000L, 
TV_WAND
, '-',

654 {"Stökög Cloud" ,0x00200000L, 
TV_WAND
, '-',

656 {"Acid BÆls" ,0x00400000L, 
TV_WAND
, '-',

658 {"W⁄dî" ,0x00800000L, 
TV_WAND
, '-',

660 {"Light" ,0x00000001L, 
TV_STAFF
, '_',

662 {"Do‹/Sèú Loˇti⁄" ,0x00000002L, 
TV_STAFF
, '_',

664 {"Tø∞Loˇti⁄" ,0x00000004L, 
TV_STAFF
, '_',

666 {"Tªasuª Loˇti⁄" ,0x00000008L, 
TV_STAFF
, '_',

668 {"Obje˘ Loˇti⁄" ,0x00000010L, 
TV_STAFF
, '_',

670 {"Tñï‹èti⁄" ,0x00000020L, 
TV_STAFF
, '_',

672 {"E¨thquakes" ,0x00000040L, 
TV_STAFF
, '_',

674 {"Summ⁄ög" ,0x00000080L, 
TV_STAFF
, '_',

676 {"Summ⁄ög" ,0x00000080L, 
TV_STAFF
, '_',

678 {"*De°ru˘i⁄*" ,0x00000200L, 
TV_STAFF
, '_',

680 {"Sèæight" ,0x00000400L, 
TV_STAFF
, '_',

682 {"Ha°êM⁄°îs" ,0x00000800L, 
TV_STAFF
, '_',

684 {"Slow M⁄°îs" ,0x00001000L, 
TV_STAFF
, '_',

686 {"SÀï M⁄°îs" ,0x00002000L, 
TV_STAFF
, '_',

688 {"Cuª LighàWounds" ,0x00004000L, 
TV_STAFF
, '_',

690 {"Dëe˘ InvisibÀ" ,0x00008000L, 
TV_STAFF
, '_',

692 {"S≥ed" ,0x00010000L, 
TV_STAFF
, '_',

694 {"Slow√ss" ,0x00020000L, 
TV_STAFF
, '_',

696 {"Mas†Pﬁym‹ph" ,0x00040000L, 
TV_STAFF
, '_',

698 {"RemovêCur£" ,0x00080000L, 
TV_STAFF
, '_',

700 {"Dëe˘ Evû" ,0x00100000L, 
TV_STAFF
, '_',

702 {"Curög" ,0x00200000L, 
TV_STAFF
, '_',

704 {"Di•ñ Evû" ,0x00400000L, 
TV_STAFF
, '_',

706 {"D¨k√ss" ,0x01000000L, 
TV_STAFF
, '_',

708 {"D¨k√ss" ,0x01000000L, 
TV_STAFF
, '_',

710 {"[Begö√rs-Magick]" ,0x0000007FL, 
TV_MAGIC_BOOK
, '?',

712 {"[Magick I]" ,0x0000FF80L, 
TV_MAGIC_BOOK
, '?',

714 {"[Magick II]" ,0x00FF0000L, 
TV_MAGIC_BOOK
, '?',

716 {"[ThêMages' GuidêtÿPowî]" ,0x7F000000L, 
TV_MAGIC_BOOK
, '?',

718 {"[Begö√r†H™dbook]" ,0x000000FFL, 
TV_PRAYER_BOOK
, '?',

720 {"[W‹d†o‡Wisdom]" ,0x0000FF00L, 
TV_PRAYER_BOOK
, '?',

722 {"[Ch™t†™d BÀssögs]" ,0x01FF0000L, 
TV_PRAYER_BOOK
, '?',

724 {"[Ex‹cism†™d Di•ñlögs]" ,0x7E000000L, 
TV_PRAYER_BOOK
, '?',

726 {"& SmÆ»Woodí Che°" ,0x13800000L, 
TV_CHEST
, '&',

728 {"& L¨gêWoodí Che°" ,0x17800000L, 
TV_CHEST
, '&',

730 {"& SmÆ»Ir⁄ Che°" ,0x17800000L, 
TV_CHEST
, '&',

732 {"& L¨gêIr⁄ Che°" ,0x23800000L, 
TV_CHEST
, '&',

734 {"& SmÆ»Sãñ Che°" ,0x1B800000L, 
TV_CHEST
, '&',

736 {"& L¨gêSãñ Che°" ,0x33800000L, 
TV_CHEST
, '&',

738 {"& R© Skñë⁄" ,0x00000000L, 
TV_MISC
, 's',

740 {"& Gü¡ CítùedêSkñë⁄" ,0x00000000L, 
TV_MISC
, 's',

742 {"somêFûthy Rags" ,0x00000000L, 
TV_SOFT_ARMOR
, '~',

744 {"&Ém±y bŸée" ,0x00000000L, 
TV_MISC
, '!',

746 {"somêsh¨d†o‡pŸãry" ,0x00000000L, 
TV_MISC
, '~',

748 {"& Hum™ Skñë⁄" ,0x00000000L, 
TV_MISC
, 's',

750 {"& Dw¨‡Skñë⁄" ,0x00000000L, 
TV_MISC
, 's',

752 {"& El‡Skñë⁄" ,0x00000000L, 
TV_MISC
, 's',

754 {"& GnomêSkñë⁄" ,0x00000000L, 
TV_MISC
, 's',

756 {"& brokí së o‡ãëh" ,0x00000000L, 
TV_MISC
, 's',

758 {"&Ü¨gêbrokí b⁄e" ,0x00000000L, 
TV_MISC
, 's',

760 {"& brokí stick" ,0x00000000L, 
TV_MISC
, '~',

765 {"& R©i⁄~ o‡Food" ,0x00000000L, 
TV_FOOD
, ',',

767 {"& H¨d Biscuô~" ,0x00000000L, 
TV_FOOD
, ',',

769 {"& Såù~ o‡Bì‡Jîky" ,0x00000000L, 
TV_FOOD
, ',',

771 {"& Pöt~ o‡FöêAÀ" ,0x00000000L, 
TV_FOOD
, ',',

773 {"& Pöt~ o‡FöêWöe" ,0x00000000L, 
TV_FOOD
, ',',

775 {"& Pick" ,0x20000000L, 
TV_DIGGING
, '\\',

777 {"& Shovñ" ,0x20000000L, 
TV_DIGGING
, '\\',

779 {"Idítify" ,0x00000008L, 
TV_SCROLL1
, '?',

781 {"Light" ,0x00000020L, 
TV_SCROLL1
, '?',

783 {"Pha£ Do‹" ,0x00000080L, 
TV_SCROLL1
, '?',

785 {"Magi¯M≠pög" ,0x00000800L, 
TV_SCROLL1
, '?',

787 {"Tªasuª Dëe˘i⁄" ,0x00004000L, 
TV_SCROLL1
, '?',

789 {"Obje˘ Dëe˘i⁄" ,0x00008000L, 
TV_SCROLL1
, '?',

791 {"Dëe˘ InvisibÀ" ,0x00080000L, 
TV_SCROLL1
, '?',

793 {"BÀssög" ,0x00000020L, 
TV_SCROLL2
, '?',

795 {"W‹d-of-ReˇŒ" ,0x00000100L, 
TV_SCROLL2
, '?',

797 {"Cuª LighàWounds" ,0x10001000L, 
TV_POTION1
, '!',

799 {"Hîoism" ,0x00000010L, 
TV_POTION2
, '!',

801 {"Bﬁd√ss" ,0x00000040L, 
TV_POTION2
, '!',

803 {"Slow Pois⁄" ,0x00000800L, 
TV_POTION2
, '!',

805 {"& Bøs†L™ã∫~" ,0x00000000L, 
TV_LIGHT
, '~',

807 {"& Woodí T‹ch~" ,0x00000000L, 
TV_LIGHT
, '~',

809 {"& Fœsk~ o‡Oû" ,0x00040000L, 
TV_FLASK
, '!',

815 {"& o≥¿do‹" ,0x00000000L, 
TV_OPEN_DOOR
, '\'',

817 {"& clo£d do‹" ,0x00000000L, 
TV_CLOSED_DOOR
, '+',

819 #ifde‡
ATARI_ST


820 {"& se¸ë do‹" ,0x00000000L, 
TV_SECRET_DOOR
,

823 {"& se¸ë do‹" ,0x00000000L, 
TV_SECRET_DOOR
, '#',

828 {"™ u∞°aúˇ£" ,0x00000000L, 
TV_UP_STAIR
, '<',

830 {"®dow¿°aúˇ£" ,0x00000000L, 
TV_DOWN_STAIR
, '>',

834 {"GíîÆ St‹e" ,0x00000000L, 
TV_STORE_DOOR
, '1',

836 {"Arm‹y" ,0x00000000L, 
TV_STORE_DOOR
, '2',

838 {"Wóp⁄ Smôhs" ,0x00000000L, 
TV_STORE_DOOR
, '3',

840 {"Tem∂e" ,0x00000000L, 
TV_STORE_DOOR
, '4',

842 {"Alchemy Sh›" ,0x00000000L, 
TV_STORE_DOOR
, '5',

844 {"Magi¯Sh›" ,0x00000000L, 
TV_STORE_DOOR
, '6',

850 {"™ o≥¿pô" ,0x00000000L, 
TV_VIS_TRAP
, ' ',

852 {"™áºowÅøp" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

854 {"®covîedÖô" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

856 {"®å≠ do‹" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

858 {"®ga†å≠" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

860 {"®loo£Ñock" ,0x00000000L, 
TV_INVIS_TRAP
, ';',

862 {"®d¨àå≠" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

864 {"®°øngêru√" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

866 {"somêloo£Ñock" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

868 {"®ga†å≠" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

870 {"®°øngêru√" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

872 {"®bœckíed spŸ" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

874 {"somêc‹rodedÑock" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

876 {"®ga†å≠" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

878 {"®ga†å≠" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

880 {"®ga†å≠" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

882 {"®d¨àå≠" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

884 {"®d¨àå≠" ,0x00000000L, 
TV_INVIS_TRAP
, '^',

887 {"somêrubbÀ" ,0x00000000L, 
TV_RUBBLE
, ':',

890 {"& Pöt~ o‡FöêGødêMush" ,0x00000000L, 
TV_FOOD
, ',',

893 {"®°øngêru√" ,0x00000000L, 
TV_VIS_TRAP
, '^',

896 {"c›≥r" ,0x00000000L, 
TV_GOLD
, '$',

898 {"c›≥r" ,0x00000000L, 
TV_GOLD
, '$',

900 {"c›≥r" ,0x00000000L, 
TV_GOLD
, '$',

902 {"sûvî" ,0x00000000L, 
TV_GOLD
, '$',

904 {"sûvî" ,0x00000000L, 
TV_GOLD
, '$',

906 {"sûvî" ,0x00000000L, 
TV_GOLD
, '$',

908 {"g¨√ts" ,0x00000000L, 
TV_GOLD
, '*',

910 {"g¨√ts" ,0x00000000L, 
TV_GOLD
, '*',

912 {"gﬁd" ,0x00000000L, 
TV_GOLD
, '$',

914 {"gﬁd" ,0x00000000L, 
TV_GOLD
, '$',

916 {"gﬁd" ,0x00000000L, 
TV_GOLD
, '$',

918 {"›Æs" ,0x00000000L, 
TV_GOLD
, '*',

920 {"ßµhúes" ,0x00000000L, 
TV_GOLD
, '*',

922 {"gﬁd" ,0x00000000L, 
TV_GOLD
, '$',

924 {"rubõs" ,0x00000000L, 
TV_GOLD
, '*',

926 {"düm⁄ds" ,0x00000000L, 
TV_GOLD
, '*',

928 {"emîÆds" ,0x00000000L, 
TV_GOLD
, '*',

930 {"môhrû" ,0x00000000L, 
TV_GOLD
, '$',

934 {"nŸhög" ,0x00000000L, 
TV_NOTHING
, ' ',

937 {"&Ñuöed che°" ,0x00000000L, 
TV_CHEST
, '&',

939 {"" ,0x00000000L, 
TV_NOTHING
, ' ',

944 *
	g•ecül_«mes
[
SN_ARRAY_SIZE
] = {

945 
CNIL
, "(R)", "(RA)",

967 #i‚de‡
RSRC_PART2


968 
öt16
 
	gs‹ãd_obje˘s
[
MAX_DUNGEON_OBJ
];

971 
öt8u
 
	gobje˘_idít
[
OBJECT_IDENT_SIZE
];

972 
öt16
 
	gt_Àvñ
[
MAX_OBJ_LEVEL
+1];

973 
öví_ty≥
 
	gt_li°
[
MAX_TALLOC
];

974 
öví_ty≥
 
	gövít‹y
[
INVEN_ARRAY_SIZE
];

978 
öt16
 
	göví_˘r
 = 0;

979 
öt16
 
	göví_weight
 = 0;

980 
öt16
 
	gequù_˘r
 = 0;

981 
öt16
 
	gt˝å
;

	@types.h

9 
	töt32u
;

10 
	töt32
;

11 
	töt16u
;

12 
	töt16
;

13 
	töt8u
;

18 
	#VTYPESIZ
 80

	)

19 
	#BIGVTYPESIZ
 160

	)

20 
	tvty≥
[
VTYPESIZ
];

23 
	tbigvty≥
[
BIGVTYPESIZ
];

24 
	t°©_ty≥
[7];

38 
	s¸ótuª_ty≥


40 *
	m«me
;

41 
öt32u
 
	mcmove
;

42 
öt32u
 
	m•ñls
;

43 
öt16u
 
	mcde„n£
;

44 
öt16u
 
	mmexp
;

45 
öt8u
 
	m¶ìp
;

46 
öt8u
 
	mØf
;

47 
öt8u
 
	mac
;

48 
öt8u
 
	m•ìd
;

49 
öt8u
 
	mcch¨
;

50 
öt8u
 
	mhd
[2];

51 
öt8u
 
	mdamage
[4];

52 
öt8u
 
	mÀvñ
;

53 } 
	t¸ótuª_ty≥
;

55 
	sm_©èck_ty≥


57 
öt8u
 
	m©èck_ty≥
;

58 
öt8u
 
	m©èck_desc
;

59 
öt8u
 
	m©èck_di˚
;

60 
öt8u
 
	m©èck_sides
;

61 } 
	tm_©èck_ty≥
;

63 
	sªˇŒ_ty≥


65 
öt32u
 
	mr_cmove
;

66 
öt32u
 
	mr_•ñls
;

67 
öt16u
 
	mr_kûls
, 
	mr_dóths
;

68 
öt16u
 
	mr_cde„n£
;

69 
öt8u
 
	mr_wake
, 
	mr_ign‹e
;

70 
öt8u
 
	mr_©ècks
[
MAX_MON_NATTACK
];

71 } 
	tªˇŒ_ty≥
;

73 
	sm⁄°î_ty≥


75 
öt16
 
	mhp
;

76 
öt16
 
	mc¶ìp
;

77 
öt16
 
	mc•ìd
;

78 
öt16u
 
	mm±r
;

80 
öt8u
 
	mfy
;

81 
öt8u
 
	mfx
;

82 
öt8u
 
	mcdis
;

83 
öt8u
 
	mml
;

84 
öt8u
 
	m°u¬ed
;

85 
öt8u
 
	mc⁄fu£d
;

86 } 
	tm⁄°î_ty≥
;

88 
	såósuª_ty≥


90 *
	m«me
;

91 
öt32u
 
	mÊags
;

92 
öt8u
 
	mtvÆ
;

93 
öt8u
 
	mtch¨
;

94 
öt16
 
	mp1
;

95 
öt32
 
	mco°
;

96 
öt8u
 
	msubvÆ
;

97 
öt8u
 
	mnumbî
;

98 
öt16u
 
	mweight
;

99 
öt16
 
	mtohô
;

100 
öt16
 
	mtodam
;

101 
öt16
 
	mac
;

102 
öt16
 
	mtﬂc
;

103 
öt8u
 
	mdamage
[2];

104 
öt8u
 
	mÀvñ
;

105 } 
	tåósuª_ty≥
;

113 
	#INSCRIP_SIZE
 13

	)

114 
	söví_ty≥


116 
öt16u
 
	mödex
;

117 
öt8u
 
	m«me2
;

118 
	mös¸ù
[
INSCRIP_SIZE
];

119 
öt32u
 
	mÊags
;

120 
öt8u
 
	mtvÆ
;

121 
öt8u
 
	mtch¨
;

122 
öt16
 
	mp1
;

123 
öt32
 
	mco°
;

124 
öt8u
 
	msubvÆ
;

125 
öt8u
 
	mnumbî
;

126 
öt16u
 
	mweight
;

127 
öt16
 
	mtohô
;

128 
öt16
 
	mtodam
;

129 
öt16
 
	mac
;

130 
öt16
 
	mtﬂc
;

131 
öt8u
 
	mdamage
[2];

132 
öt8u
 
	mÀvñ
;

133 
öt8u
 
	midít
;

134 } 
	töví_ty≥
;

136 
	#PLAYER_NAME_SIZE
 27

	)

138 
	s∂ayî_ty≥


140 
	smisc


142 
	m«me
[
PLAYER_NAME_SIZE
];

143 
öt8u
 
	mmÆe
;

144 
öt32
 
	mau
;

145 
öt32
 
	mmax_exp
;

146 
öt32
 
	mexp
;

147 
öt16u
 
	mexp_‰ac
;

148 
öt16u
 
	mage
;

149 
öt16u
 
	mht
;

150 
öt16u
 
	mwt
;

151 
öt16u
 
	mÀv
;

152 
öt16u
 
	mmax_dlv
;

153 
öt16
 
	m§h
;

154 
öt16
 
	mfos
;

155 
öt16
 
	mbth
;

156 
öt16
 
	mbthb
;

157 
öt16
 
	mm™a
;

158 
öt16
 
	mmhp
;

159 
öt16
 
	m±ohô
;

160 
öt16
 
	m±odam
;

161 
öt16
 
	m∑c
;

162 
öt16
 
	m±ﬂc
;

163 
öt16
 
	mdis_th
;

164 
öt16
 
	mdis_td
;

165 
öt16
 
	mdis_ac
;

166 
öt16
 
	mdis_èc
;

167 
öt16
 
	mdißrm
;

168 
öt16
 
	mßve
;

169 
öt16
 
	msc
;

170 
öt16
 
	m°l
;

171 
öt8u
 
	mp˛ass
;

172 
öt8u
 
	m¥a˚
;

173 
öt8u
 
	mhôdõ
;

174 
öt8u
 
	mexpÁ˘
;

175 
öt16
 
	mcm™a
;

176 
öt16u
 
	mcm™a_‰ac
;

177 
öt16
 
	mchp
;

178 
öt16u
 
	mchp_‰ac
;

179 
	mhi°‹y
[4][60];

180 } 
	mmisc
;

182 
	s°©s


184 
öt8u
 
	mmax_°©
[6];

185 
öt8u
 
	mcur_°©
[6];

186 
öt16
 
	mmod_°©
[6];

187 
öt8u
 
	mu£_°©
[6];

188 } 
	m°©s
;

189 
	sÊags


191 
öt32u
 
	m°©us
;

192 
öt16
 
	mª°
;

193 
öt16
 
	mblöd
;

194 
öt16
 
	m∑ølysis
;

195 
öt16
 
	mc⁄fu£d
;

196 
öt16
 
	mfood
;

197 
öt16
 
	mfood_dige°ed
;

198 
öt16
 
	m¥Ÿe˘i⁄
;

199 
öt16
 
	m•ìd
;

200 
öt16
 
	mÁ°
;

201 
öt16
 
	m¶ow
;

202 
öt16
 
	ma‰aid
;

203 
öt16
 
	mpois⁄ed
;

204 
öt16
 
	mimage
;

205 
öt16
 
	m¥Ÿevû
;

206 
öt16
 
	mövu 
;

207 
öt16
 
	mhîo
;

208 
öt16
 
	mshîo
;

209 
öt16
 
	mbÀs£d
;

210 
öt16
 
	mªsi°_hót
;

211 
öt16
 
	mªsi°_cﬁd
;

212 
öt16
 
	mdëe˘_öv
;

213 
öt16
 
	mw‹d_ªˇŒ
;

214 
öt16
 
	m£e_ö‰a
;

215 
öt16
 
	mtim_ö‰a
;

216 
öt8u
 
	m£e_öv
;

217 
öt8u
 
	mãÀp‹t
;

218 
öt8u
 
	m‰ì_a˘
;

219 
öt8u
 
	m¶ow_dige°
;

220 
öt8u
 
	maggøv©e
;

221 
öt8u
 
	mfúe_ªsi°
;

222 
öt8u
 
	mcﬁd_ªsi°
;

223 
öt8u
 
	macid_ªsi°
;

224 
öt8u
 
	mªgíî©e
;

225 
öt8u
 
	mlght_ªsi°
;

226 
öt8u
 
	mfÁŒ
;

227 
öt8u
 
	msu°aö_°r
;

228 
öt8u
 
	msu°aö_öt
;

229 
öt8u
 
	msu°aö_wis
;

230 
öt8u
 
	msu°aö_c⁄
;

231 
öt8u
 
	msu°aö_dex
;

232 
öt8u
 
	msu°aö_chr
;

233 
öt8u
 
	mc⁄fu£_m⁄°î
;

234 
öt8u
 
	m√w_•ñls
;

235 } 
	mÊags
;

236 } 
	t∂ayî_ty≥
;

238 
	s•ñl_ty≥


240 
öt8u
 
	m¶evñ
;

241 
öt8u
 
	msm™a
;

242 
öt8u
 
	msÁû
;

243 
öt8u
 
	m£xp
;

244 } 
	t•ñl_ty≥
;

246 
	sø˚_ty≥


248 *
	måa˚
;

249 
öt16
 
	m°r_adj
;

250 
öt16
 
	möt_adj
;

251 
öt16
 
	mwis_adj
;

252 
öt16
 
	mdex_adj
;

253 
öt16
 
	mc⁄_adj
;

254 
öt16
 
	mchr_adj
;

255 
öt8u
 
	mb_age
;

256 
öt8u
 
	mm_age
;

257 
öt8u
 
	mm_b_ht
;

258 
öt8u
 
	mm_m_ht
;

259 
öt8u
 
	mm_b_wt
;

260 
öt8u
 
	mm_m_wt
;

261 
öt8u
 
	mf_b_ht
;

262 
öt8u
 
	mf_m_ht
;

263 
öt8u
 
	mf_b_wt
;

264 
öt8u
 
	mf_m_wt
;

265 
öt16
 
	mb_dis
;

266 
öt16
 
	m§h
;

267 
öt16
 
	m°l
;

268 
öt16
 
	mfos
;

269 
öt16
 
	mbth
;

270 
öt16
 
	mbthb
;

271 
öt16
 
	mbßv
;

272 
öt8u
 
	mbhôdõ
;

273 
öt8u
 
	mö‰a
;

274 
öt8u
 
	mb_exp
;

275 
öt8u
 
	mπ˛ass
;

276 } 
	tø˚_ty≥
;

278 
	s˛ass_ty≥


280 *
	mtôÀ
;

281 
öt8u
 
	madj_hd
;

282 
öt8u
 
	mmdis
;

283 
öt8u
 
	mm§h
;

284 
öt8u
 
	mm°l
;

285 
öt8u
 
	mmfos
;

286 
öt8u
 
	mmbth
;

287 
öt8u
 
	mmbthb
;

288 
öt8u
 
	mmßv
;

289 
öt16
 
	mmadj_°r
;

290 
öt16
 
	mmadj_öt
;

291 
öt16
 
	mmadj_wis
;

292 
öt16
 
	mmadj_dex
;

293 
öt16
 
	mmadj_c⁄
;

294 
öt16
 
	mmadj_chr
;

295 
öt8u
 
	m•ñl
;

296 
öt8u
 
	mm_exp
;

297 
öt8u
 
	mfú°_•ñl_Àv
;

298 } 
	t˛ass_ty≥
;

300 
	sbackground_ty≥


302 *
	möfo
;

303 
öt8u
 
	mrﬁl
;

304 
öt8u
 
	mch¨t
;

305 
öt8u
 
	m√xt
;

306 
öt8u
 
	mb⁄us
;

307 } 
	tbackground_ty≥
;

309 
	sˇve_ty≥


311 #ifde‡
AMIGA


313 
	m˝å
 : 8;

314 
	mçå
 : 8;

315 
	mfvÆ
 : 8;

317 
öt8u
 
	m˝å
;

318 
öt8u
 
	mçå
;

319 
öt8u
 
	mfvÆ
;

321 #i‡!
deföed
(
MSDOS
Ë&& !deföed(
ATARIST_MWC
)

322 
	mÃ
 : 1;

324 
	mfm
 : 1;

326 
	m∂
 : 1;

327 
	mé
 : 1;

329 #i‚de‡
__TURBOC__


333 
	mÃ
 : 1;

334 
	mfm
 : 1;

335 
	m∂
 : 1;

336 
	mé
 : 1;

338 
	mÃ
 : 1;

339 
	mfm
 : 1;

340 
	m∂
 : 1;

341 
	mé
 : 1;

344 } 
	tˇve_ty≥
;

346 
	sow√r_ty≥


348 *
	mow√r_«me
;

349 
öt16
 
	mmax_co°
;

350 
öt8u
 
	mmax_öÊ©e
;

351 
öt8u
 
	mmö_öÊ©e
;

352 
öt8u
 
	mhaggÀ_≥r
;

353 
öt8u
 
	mow√r_ø˚
;

354 
öt8u
 
	mösu…_max
;

355 } 
	tow√r_ty≥
;

357 
	söví_ªc‹d


359 
öt32
 
	msco°
;

360 
öví_ty≥
 
	msôem
;

361 } 
	töví_ªc‹d
;

363 
	s°‹e_ty≥


365 
öt32
 
	m°‹e_›í
;

366 
öt16
 
	mösu…_cur
;

367 
öt8u
 
	mow√r
;

368 
öt8u
 
	m°‹e_˘r
;

369 
öt16u
 
	mgood_buy
;

370 
öt16u
 
	mbad_buy
;

371 
öví_ªc‹d
 
	m°‹e_öví
[
STORE_INVEN_MAX
];

372 } 
	t°‹e_ty≥
;

375 
	shigh_sc‹es


377 
öt32
 
	mpoöts
;

378 
öt32
 
	mbúth_d©e
;

379 
öt16
 
	muid
;

380 
öt16
 
	mmhp
;

381 
öt16
 
	mchp
;

382 
öt8u
 
	mdun_Àvñ
;

383 
öt8u
 
	mÀv
;

384 
öt8u
 
	mmax_dlv
;

385 
öt8u
 
	m£x
;

386 
öt8u
 
	mø˚
;

387 
öt8u
 
	m˛ass
;

388 
	m«me
[
PLAYER_NAME_SIZE
];

389 
	mdõd_‰om
[25];

390 } 
	thigh_sc‹es
;

	@unix.c

11 
	~<°dio.h
>

13 
	~<sys/io˘l.h
>

15 
	~<cur£s.h
>

17 
	~"c⁄fig.h
"

18 
	~"c⁄°™t.h
"

19 
	~"ty≥s.h
"

21 #ifde‡
unix


23 #i‡
deföed
(
SYS_V
Ë&& deföed(
löt
)

26 
	#_h_IEEETRAP


	)

27 °ru˘ { 
	m°uff
; } 
	tÂvmach
;

30 
	~<sig«l.h
>

32 #ifde‡
M_XENIX


33 
	~<sys/ty≥s.h
>

34 
	~<sys/£À˘.h
>

36 
	#bzîo
(
addr
,
n
Ë
	`mem£t
((*Ôddr, 0,Ç)

	)

39 #i‚de‡
USG


40 
	~<sys/time.h
>

41 
	~<sys/ªsour˚.h
>

42 
	~<sys/ty≥s.h
>

43 
	~<sys/∑øm.h
>

46 #ifde‡
__löux__


47 
	~<sys/time.h
>

48 
	~<sys/ty≥s.h
>

49 
	~<uni°d.h
>

52 #ifde‡
USG


53 
	~<°rög.h
>

58 
	~<ãrmio.h
>

60 
	~<f˙é.h
>

62 
	~<°rögs.h
>

63 #i‡
deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

66 
	~<sys/waô.h
>

73 
	~"exã∫s.h
"

75 
	~<pwd.h
>

76 
	~<sys/î∫o.h
>

78 #ifde‡
USG


79 
∑sswd
 *
gëpwuid
();

80 
∑sswd
 *
gëpw«m
();

83 #i‡
deföed
(
SYS_V
Ë&& deföed(
löt
)

84 
	ss¸ìn
 { 
	mdumb
; };

91 #ifde‡
löt


92 #ifde‡
Pyømid


96 
	$Io˘l
(
i
, 
l
, 
p
Ël; *p; {  0; 
	}
}

100 
	$Io˘l
(
i
, 
l
, 
p
Ë*p; {  0; 
	}
}

102 
	#io˘l
 
Io˘l


	)

121 
	$check_öput
(
mi¸o£c
)

122 
mi¸o£c
;

124 #i‡
	`deföed
(
USG
Ë&& !deföed(
M_XENIX
Ë&& !deföed(
__löux__
)

125 
¨g
, 
ªsu…
;

127 
timevÆ
 
tbuf
;

128 
ch
;

129 #i‡
	`deföed
(
BSD4_3
Ë|| deföed(
M_XENIX
Ë|| deföed(
__löux__
)

130 
fd_£t
 
smask
;

132 
smask
;

137 #i‡!
	`deföed
(
USG
Ë|| deföed(
M_XENIX
Ë|| deföed(
__löux__
)

138 
tbuf
.
tv_£c
 = 0;

139 
tbuf
.
tv_u£c
 = 
mi¸o£c
;

140 #i‡
	`deföed
(
BSD4_3
Ë|| deföed(
M_XENIX
Ë|| deföed(
__löux__
)

141 
	`FD_ZERO
(&
smask
);

142 
	`FD_SET
(
	`fûío
(
°dö
), &
smask
);

143 i‡(
	`£À˘
(1, &
smask
, (
fd_£t
 *)0, (fd_£à*)0, &
tbuf
) == 1)

145 
smask
 = 1;

146 i‡(
	`£À˘
(1, &
smask
, (*)0, (*)0, &
tbuf
) == 1)

149 
ch
 = 
	`gëch
();

151 i‡(
ch
 == -1)

153 
eof_Êag
++;

161 i‡(
mi¸o£c
 !0 && (
tu∫
 & 0x7F) == 0)

162 (Ë
	`¶ìp
 (1);

165 
¨g
 = 0;

166 
¨g
 = 
	`f˙é
(0, 
F_GETFL
,árg);

167 
¨g
 |
O_NDELAY
;

168 (Ë
	`f˙é
(0, 
F_SETFL
, 
¨g
);

170 
ªsu…
 = 
	`gëch
();

172 
¨g
 = 0;

173 
¨g
 = 
	`f˙é
(0, 
F_GETFL
,árg);

174 
¨g
 &~
O_NDELAY
;

175 (Ë
	`f˙é
(0, 
F_SETFL
, 
¨g
);

176 i‡(
ªsu…
 == -1)

181 
	}
}

192 
	$sy°em_cmd
(
p
)

193 *
p
;

195 
pgΩ
, 
pid
, 
i
, 
mask
;

196 
waô
 
w
;

197 *
	`gëív
();

199 
mask
 = 
	`sig£tmask
(~0);

200 
	`ª°‹e_ãrm
();

202 i‡(
	`io˘l
(0, 
TIOCGPGRP
, (*)&
pgΩ
Ë< 0 ||ÖgΩ !
	`gëpgΩ
(0))

203 
pgΩ
 = -1;

204 
pid
 = 
	`f‹k
();

205 i‡(
pid
 < 0)

207 (Ë
	`sig£tmask
(
mask
);

208 
	`m‹üãrm
();

211 i‡(
pid
 == 0)

213 (Ë
	`sig£tmask
(0);

215 i‡(
pgΩ
 >= 0)

217 
i
 = 
	`gëpid
();

218 (Ë
	`io˘l
(0, 
TIOCSPGRP
, (*)&
i
);

219 (Ë
	`£çgΩ
(
i
, i);

221 
i
 = 2; i < 30; i++)

222 (Ë
	`˛o£
(
i
);

223 (Ë
	`dup2
(1, 2);

224 i‡(
p
 == 0 || *p == 0)

226 
p
 = 
	`gëív
("SHELL");

227 i‡(
p
)

228 
	`exe˛
(
p
,Ö, 0);

229 
	`exe˛
("/bin/sh", "sh", 0);

232 
	`exe˛
("/bö/sh", "sh", "-c", 
p
, 0);

233 
	`_exô
(1);

238 
i
 = 
	`waô3
(&
w
, 
WUNTRACED
, (
rußge
 *)0);

239 i‡(
i
 =
pid
)

241 i‡(
	`WIFSTOPPED
(
w
))

244 (Ë
	`kûl
(
	`gëpid
(), 
SIGSTOP
);

246 i‡(
pgΩ
 >= 0)

247 (Ë
	`io˘l
(0, 
TIOCSPGRP
, (*)&
pid
);

248 (Ë
	`kûÕg
(
pid
, 
SIGCONT
);

255 i‡(
pgΩ
 >= 0)

256 (Ë
	`io˘l
(0, 
TIOCSPGRP
, (*)&
pgΩ
);

257 (Ë
	`sig£tmask
(
mask
);

258 
	`m‹üãrm
();

260 
	}
}

263 #ifde‡
USG


264 
gëuid
();

266 #i‚de‡
SECURE


267 #ifde‡
BSD4_3


268 
uid_t
 
gëuid
();

270 
gëuid
();

276 
	$u£r_«me
(
buf
)

277 *
buf
;

279 *
	`gëlogö
();

280 
∑sswd
 *
pwlöe
;

281 *
p
;

283 
p
 = 
	`gëlogö
();

284 i‡(
p
 &&Ö[0])

285 (Ë
	`°r˝y
(
buf
, 
p
);

288 
pwlöe
 = 
	`gëpwuid
(()
	`gëuid
());

289 i‡(
pwlöe
)

290 (Ë
	`°r˝y
(
buf
, 
pwlöe
->
pw_«me
);

292 i‡(!
buf
[0])

293 (Ë
	`°r˝y
(
buf
, "X");

294 
	}
}

298 
	$tûde
(
fûe
, 
exp
)

299 *
fûe
, *
exp
;

301 *
exp
 = '\0';

302 i‡(
fûe
)

304 i‡(*
fûe
 == '~')

306 
u£r
[128];

307 
∑sswd
 *
pw
 = 
NULL
;

308 
i
 = 0;

310 
u£r
[0] = '\0';

311 
fûe
++;

312 *
fûe
 !'/' && 
i
 < (
u£r
))

313 
u£r
[
i
++] = *
fûe
++;

314 
u£r
[
i
] = '\0';

315 i‡(
i
 == 0)

317 *
logö
 = (*Ë
	`gëlogö
();

319 i‡(
logö
 !
NULL
)

320 (Ë
	`°r˝y
 (
u£r
, 
logö
);

321 i‡((
pw
 = 
	`gëpwuid
(
	`gëuid
())Ë=
NULL
)

324 i‡(
pw
 =
NULL
 && (pw = 
	`gëpw«m
(
u£r
)) == NULL)

326 (Ë
	`°r˝y
 (
exp
, 
pw
->
pw_dú
);

328 (Ë
	`°rˇt
(
exp
, 
fûe
);

332 
	}
}

335 #unde‡
f›í


336 #unde‡
›í


340 
FILE
 *
	$tf›í
(
fûe
, 
mode
)

341 *
fûe
;

342 *
mode
;

344 
buf
[1024];

345 
î∫o
;

347 i‡(
	`tûde
(
fûe
, 
buf
))

348  (
	`f›í
(
buf
, 
mode
));

349 
î∫o
 = 
ENOENT
;

350  
NULL
;

351 
	}
}

355 
	$t›í
(
fûe
, 
Êags
, 
mode
)

356 *
fûe
;

357 
Êags
, 
mode
;

359 
buf
[1024];

360 
î∫o
;

362 i‡(
	`tûde
(
fûe
, 
buf
))

363  (
	`›í
(
buf
, 
Êags
, 
mode
));

364 
î∫o
 = 
ENOENT
;

366 
	}
}

	@variable.c

3 *
	gc›yright
[5] = {

10 
	~<°dio.h
>

12 
	~"c⁄fig.h
"

13 
	~"c⁄°™t.h
"

14 
	~"ty≥s.h
"

17 
öt16
 
	gœ°_°‹e_öc
;

21 
	ghack_m⁄±r
 = -1;

23 
	gwóp⁄_hóvy
 = 
FALSE
;

24 
	g∑ck_hóvy
 = 
FALSE
;

25 
vty≥
 
	gdõd_‰om
;

26 
öt32
 
	gbúth_d©e
;

28 
vty≥
 
	gßvefûe
;

30 
öt16
 
	gtŸÆ_wö√r
 = 
FALSE
;

31 
öt32
 
	gmax_sc‹e
 = 0;

32 
	gch¨a˘î_gíî©ed
 = 0;

33 
	gch¨a˘î_ßved
 = 0;

34 
FILE
 *
	ghighsc‹e_Â
;

35 
öt32u
 
	gøndes_£ed
;

36 
öt32u
 
	gtown_£ed
;

37 
öt16
 
	gcur_height
,
	gcur_width
;

38 
öt16
 
	gdun_Àvñ
 = 0;

39 
öt16
 
	gmissûe_˘r
 = 0;

40 
	gmsg_Êag
;

41 
vty≥
 
	gﬁd_msg
[
MAX_SAVE_MSG
];

42 
öt16
 
	gœ°_msg
 = 0;

43 
	gdóth
 = 
FALSE
;

44 
	gföd_Êag
;

45 
	g‰ì_tu∫_Êag
;

46 
	gcomm™d_cou¡
;

47 
	gdeÁu…_dú
 = 
FALSE
;

48 
öt32
 
	gtu∫
 = -1;

49 
	gwiz¨d
 = 
FALSE
;

50 
	gto_be_wiz¨d
 = 
FALSE
;

51 
öt16
 
	g∑nic_ßve
 = 
FALSE
;

52 
öt16
 
	gnosc‹e
 = 
FALSE
;

54 
	grogue_like_comm™ds
;

57 
	gföd_cut
 = 
TRUE
;

58 
	gföd_examöe
 = 
TRUE
;

59 
	gföd_bound
 = 
FALSE
;

60 
	gföd_¥£lf
 = 
FALSE
;

61 
	g¥om±_ˇºy_Êag
 = 
FALSE
;

62 
	gshow_weight_Êag
 = 
FALSE
;

63 
	ghighlight_£ams
 = 
FALSE
;

64 
	gföd_ign‹e_do‹s
 = 
FALSE
;

65 
	gsound_bìp_Êag
 = 
TRUE
;

66 
	gdi•œy_cou¡s
 = 
TRUE
;

68 
	gdoög_öví
 = 
FALSE
;

69 
	gs¸ìn_ch™ge
 = 
FALSE
;

70 
	gœ°_comm™d
 = ' ';

73 
	g√w_Àvñ_Êag
;

74 
	gãÀp‹t_Êag
;

75 
	g∂ayî_light
;

76 
	geof_Êag
 = 
FALSE
;

77 
	glight_Êag
 = 
FALSE
;

79 
	gwaô_f‹_m‹e
 = 
FALSE
;

80 
	g˛osög_Êag
 = 
FALSE
;

83 
öt16
 
	gmax_∑√l_rows
,
	gmax_∑√l_cﬁs
;

84 
	g∑√l_row
,
	g∑√l_cﬁ
;

85 
	g∑√l_row_mö
,
	g∑√l_row_max
;

86 
	g∑√l_cﬁ_mö
,
	g∑√l_cﬁ_max
;

87 
	g∑√l_cﬁ_¥t
,
	g∑√l_row_¥t
;

89 #ifde‡
MAC


90 
ˇve_ty≥
 (*
ˇve
)[
MAX_WIDTH
];

92 
ˇve_ty≥
 
	gˇve
[
MAX_HEIGHT
][
MAX_WIDTH
];

95 #ifde‡
MAC


96 
ªˇŒ_ty≥
 *
	gc_ªˇŒ
;

98 
ªˇŒ_ty≥
 
	gc_ªˇŒ
[
MAX_CREATURES
];

102 #i‡
deföed
(
©¨i°
Ë&& deföed(
__GNUC__
)

103 
	gexãnded_fûe_«me
[80];

	@wands.c

9 
	~"c⁄fig.h
"

10 
	~"c⁄°™t.h
"

11 
	~"ty≥s.h
"

12 
	~"exã∫s.h
"

14 #ifde‡
USG


15 #i‚de‡
ATARIST_MWC


16 
	~<°rög.h
>

19 
	~<°rögs.h
>

23 
	$aim
()

25 
öt32u
 
i
;

26 
l
, 
idít
;

27 
ôem_vÆ
, 
j
, 
k
, 
ch™˚
, 
dú
;

28 
öví_ty≥
 *
i_±r
;

29 
misc
 *
m_±r
;

31 
‰ì_tu∫_Êag
 = 
TRUE
;

32 i‡(
öví_˘r
 == 0)

33 
	`msg_¥öt
("But youáreÇot carryingánything.");

34 i‡(!
	`föd_ønge
(
TV_WAND
, 
TV_NEVER
, &
j
, &
k
))

35 
	`msg_¥öt
("YouáreÇot carryingány wands.");

36 i‡(
	`gë_ôem
(&
ôem_vÆ
, "Aim which w™d?", 
j
, 
k
, 
CNIL
, CNIL))

38 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

39 
‰ì_tu∫_Êag
 = 
FALSE
;

40 i‡(
	`gë_dú
(
CNIL
, &
dú
))

42 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

44 
	`msg_¥öt
("Youáre confused.");

47 
dú
 = 
	`øndöt
(9);

49 
dú
 == 5);

51 
idít
 = 
FALSE
;

52 
m_±r
 = &
py
.
misc
;

53 
ch™˚
 = 
m_±r
->
ßve
 + 
	`°©_adj
(
A_INT
Ë- ()
i_±r
->
Àvñ


54 + (
˛ass_Àvñ_adj
[
m_±r
->
p˛ass
][
CLA_DEVICE
] * m_±r->
Àv
 / 3);

55 i‡(
py
.
Êags
.
c⁄fu£d
 > 0)

56 
ch™˚
 = chance / 2;

57 i‡((
ch™˚
 < 
USE_DEVICE
Ë&& (
	`øndöt
(USE_DEVICE - chance + 1) == 1))

58 
ch™˚
 = 
USE_DEVICE
;

59 i‡(
ch™˚
 <= 0) chance = 1;

60 i‡(
	`øndöt
(
ch™˚
Ë< 
USE_DEVICE
)

61 
	`msg_¥öt
("You failedÅo useÅhe wandÖroperly.");

62 i‡(
i_±r
->
p1
 > 0)

64 
i
 = 
i_±r
->
Êags
;

65 (
i_±r
->
p1
)--;

66 
i
 != 0)

68 
j
 = 
	`bô_pos
(&
i
) + 1;

69 
k
 = 
ch¨_row
;

70 
l
 = 
ch¨_cﬁ
;

72 
j
)

75 
	`msg_¥öt
("AÜine of blue shimmeringÜightáppears.");

76 
	`light_löe
(
dú
, 
ch¨_row
, 
ch¨_cﬁ
);

77 
idít
 = 
TRUE
;

80 
	`fúe_bﬁt
(
GF_LIGHTNING
, 
dú
, 
k
, 
l
, 
	`damrﬁl
(4, 8),

81 
•ñl_«mes
[8]);

82 
idít
 = 
TRUE
;

85 
	`fúe_bﬁt
(
GF_FROST
, 
dú
, 
k
, 
l
, 
	`damrﬁl
(6, 8),

86 
•ñl_«mes
[14]);

87 
idít
 = 
TRUE
;

90 
	`fúe_bﬁt
(
GF_FIRE
, 
dú
, 
k
, 
l
, 
	`damrﬁl
(9, 8),

91 
•ñl_«mes
[22]);

92 
idít
 = 
TRUE
;

95 
idít
 = 
	`wÆl_to_mud
(
dú
, 
k
, 
l
);

98 
idít
 = 
	`pﬁy_m⁄°î
(
dú
, 
k
, 
l
);

101 
idít
 = 
	`hp_m⁄°î
(
dú
, 
k
, 
l
, -
	`damrﬁl
(4, 6));

104 
idít
 = 
	`•ìd_m⁄°î
(
dú
, 
k
, 
l
, 1);

107 
idít
 = 
	`•ìd_m⁄°î
(
dú
, 
k
, 
l
, -1);

110 
idít
 = 
	`c⁄fu£_m⁄°î
(
dú
, 
k
, 
l
);

113 
idít
 = 
	`¶ìp_m⁄°î
(
dú
, 
k
, 
l
);

116 
idít
 = 
	`døö_li„
(
dú
, 
k
, 
l
);

119 
idít
 = 
	`td_de°roy2
(
dú
, 
k
, 
l
);

122 
	`fúe_bﬁt
(
GF_MAGIC_MISSILE
, 
dú
, 
k
, 
l
, 
	`damrﬁl
(2, 6),

123 
•ñl_«mes
[0]);

124 
idít
 = 
TRUE
;

127 
idít
 = 
	`buûd_wÆl
(
dú
, 
k
, 
l
);

130 
idít
 = 
	`˛⁄e_m⁄°î
(
dú
, 
k
, 
l
);

133 
idít
 = 
	`ãÀp‹t_m⁄°î
(
dú
, 
k
, 
l
);

136 
idít
 = 
	`dißrm_Æl
(
dú
, 
k
, 
l
);

139 
	`fúe_bÆl
(
GF_LIGHTNING
, 
dú
, 
k
, 
l
, 32, "Lightning Ball");

140 
idít
 = 
TRUE
;

143 
	`fúe_bÆl
(
GF_FROST
, 
dú
, 
k
, 
l
, 48, "Cold Ball");

144 
idít
 = 
TRUE
;

147 
	`fúe_bÆl
(
GF_FIRE
, 
dú
, 
k
, 
l
, 72, 
•ñl_«mes
[28]);

148 
idít
 = 
TRUE
;

151 
	`fúe_bÆl
(
GF_POISON_GAS
, 
dú
, 
k
, 
l
, 12, 
•ñl_«mes
[6]);

152 
idít
 = 
TRUE
;

155 
	`fúe_bÆl
(
GF_ACID
, 
dú
, 
k
, 
l
, 60, "Acid Ball");

156 
idít
 = 
TRUE
;

159 
i
 = 1L << (
	`øndöt
(23) - 1);

162 
	`msg_¥öt
("InternalÉrror in wands()");

167 i‡(
idít
)

169 i‡(!
	`known1_p
(
i_±r
))

171 
m_±r
 = &
py
.
misc
;

173 
m_±r
->
exp
 +(
i_±r
->
Àvñ
 +(m_±r->
Àv
 >> 1)) /

174 
m_±r
->
Àv
;

175 
	`¥t_ex≥rõn˚
();

177 
	`idítify
(&
ôem_vÆ
);

178 
i_±r
 = &
övít‹y
[
ôem_vÆ
];

181 i‡(!
	`known1_p
(
i_±r
))

182 
	`ßm∂e
 (
i_±r
);

183 
	`desc_ch¨ges
(
ôem_vÆ
);

187 
	`msg_¥öt
("The wand hasÇo chargesÜeft.");

188 i‡(!
	`known2_p
(
i_±r
))

189 
	`add_ös¸ibe
(
i_±r
, 
ID_EMPTY
);

193 
	}
}

	@wizard.c

9 #ifde‡
__TURBOC__


10 
	~<°dio.h
>

11 
	~<°dlib.h
>

14 
	~"c⁄fig.h
"

15 
	~"c⁄°™t.h
"

16 
	~"ty≥s.h
"

17 
	~"exã∫s.h
"

19 #ifde‡
USG


20 #i‚de‡
ATARIST_MWC


21 
	~<°rög.h
>

24 
	~<°rögs.h
>

27 #ifde‡
ATARIST_TC


29 
	~<°dlib.h
>

32 
©ﬁ
();

35 
	$wiz¨d_light
()

37 
ˇve_ty≥
 *
c_±r
;

38 
k
, 
l
, 
i
, 
j
;

39 
Êag
;

41 i‡(
ˇve
[
ch¨_row
][
ch¨_cﬁ
].
∂
)

42 
Êag
 = 
FALSE
;

44 
Êag
 = 
TRUE
;

45 
i
 = 0; i < 
cur_height
; i++)

46 
j
 = 0; j < 
cur_width
; j++)

47 i‡(
ˇve
[
i
][
j
].
fvÆ
 <
MAX_CAVE_FLOOR
)

48 
k
 = 
i
-1; k <= i+1; k++)

49 
l
 = 
j
-1;Ü <= j+1;Ü++)

51 
c_±r
 = &
ˇve
[
k
][
l
];

52 
c_±r
->
∂
 = 
Êag
;

53 i‡(!
Êag
)

54 
c_±r
->
fm
 = 
FALSE
;

56 
	`¥t_m≠
();

57 
	}
}

61 
	$ch™ge_ch¨a˘î
()

63 
tmp_vÆ
;

64 
öt32
 
tmp_lvÆ
;

65 
öt8u
 *
a_±r
;

66 
vty≥
 
tmp_°r
;

67 
misc
 *
m_±r
;

69 
a_±r
 = 
py
.
°©s
.
max_°©
;

70 
	`¥t
("(3 - 118) Strength = ", 0, 0);

71 i‡(
	`gë_°rög
(
tmp_°r
, 0, 25, 3))

73 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

74 i‡((
tmp_vÆ
 > 2) && (tmp_val < 119))

76 
a_±r
[
A_STR
] = 
tmp_vÆ
;

77 (Ë
	`ªs_°©
(
A_STR
);

83 
	`¥t
("(3 - 118) Intelligence = ", 0, 0);

84 i‡(
	`gë_°rög
(
tmp_°r
, 0, 25, 3))

86 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

87 i‡((
tmp_vÆ
 > 2) && (tmp_val < 119))

89 
a_±r
[
A_INT
] = 
tmp_vÆ
;

90 (Ë
	`ªs_°©
(
A_INT
);

96 
	`¥t
("(3 - 118) Wisdom = ", 0, 0);

97 i‡(
	`gë_°rög
(
tmp_°r
, 0, 25, 3))

99 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

100 i‡((
tmp_vÆ
 > 2) && (tmp_val < 119))

102 
a_±r
[
A_WIS
] = 
tmp_vÆ
;

103 (Ë
	`ªs_°©
(
A_WIS
);

109 
	`¥t
("(3 - 118) Dexterity = ", 0, 0);

110 i‡(
	`gë_°rög
(
tmp_°r
, 0, 25, 3))

112 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

113 i‡((
tmp_vÆ
 > 2) && (tmp_val < 119))

115 
a_±r
[
A_DEX
] = 
tmp_vÆ
;

116 (Ë
	`ªs_°©
(
A_DEX
);

122 
	`¥t
("(3 - 118) Constitution = ", 0, 0);

123 i‡(
	`gë_°rög
(
tmp_°r
, 0, 25, 3))

125 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

126 i‡((
tmp_vÆ
 > 2) && (tmp_val < 119))

128 
a_±r
[
A_CON
] = 
tmp_vÆ
;

129 (Ë
	`ªs_°©
(
A_CON
);

135 
	`¥t
("(3 - 118) Charisma = ", 0, 0);

136 i‡(
	`gë_°rög
(
tmp_°r
, 0, 25, 3))

138 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

139 i‡((
tmp_vÆ
 > 2) && (tmp_val < 119))

141 
a_±r
[
A_CHR
] = 
tmp_vÆ
;

142 (Ë
	`ªs_°©
(
A_CHR
);

148 
m_±r
 = &
py
.
misc
;

149 
	`¥t
("(1 - 32767) HitÖoints = ", 0, 0);

150 i‡(
	`gë_°rög
(
tmp_°r
, 0, 25, 5))

152 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

153 i‡((
tmp_vÆ
 > 0Ë&& (tmp_vÆ <
MAX_SHORT
))

155 
m_±r
->
mhp
 = 
tmp_vÆ
;

156 
m_±r
->
chp
 = 
tmp_vÆ
;

157 
m_±r
->
chp_‰ac
 = 0;

158 
	`¥t_mhp
();

159 
	`¥t_chp
();

165 
	`¥t
("(0 - 32767) Mana = ", 0, 0);

166 i‡(
	`gë_°rög
(
tmp_°r
, 0, 25, 5))

168 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

169 i‡((
tmp_vÆ
 > -1Ë&& (tmp_vÆ <
MAX_SHORT
Ë&& (*
tmp_°r
 != '\0'))

171 
m_±r
->
m™a
 = 
tmp_vÆ
;

172 
m_±r
->
cm™a
 = 
tmp_vÆ
;

173 
m_±r
->
cm™a_‰ac
 = 0;

174 
	`¥t_cm™a
();

180 (Ë
	`•rötf
(
tmp_°r
, "Cuºít=%ld Gﬁd = ", 
m_±r
->
au
);

181 
tmp_vÆ
 = 
	`°æí
(
tmp_°r
);

182 
	`¥t
(
tmp_°r
, 0, 0);

183 i‡(
	`gë_°rög
(
tmp_°r
, 0, 
tmp_vÆ
, 7))

185 
tmp_lvÆ
 = 
	`©ﬁ
(
tmp_°r
);

186 i‡(
tmp_lvÆ
 > -1 && (*
tmp_°r
 != '\0'))

188 
m_±r
->
au
 = 
tmp_lvÆ
;

189 
	`¥t_gﬁd
();

195 (Ë
	`•rötf
(
tmp_°r
, "Cuºít=%d (0-200ËSórchög = ", 
m_±r
->
§h
);

196 
tmp_vÆ
 = 
	`°æí
(
tmp_°r
);

197 
	`¥t
(
tmp_°r
, 0, 0);

198 i‡(
	`gë_°rög
(
tmp_°r
, 0, 
tmp_vÆ
, 3))

200 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

201 i‡((
tmp_vÆ
 > -1Ë&& (tmp_vÆ < 201Ë&& (*
tmp_°r
 != '\0'))

202 
m_±r
->
§h
 = 
tmp_vÆ
;

207 (Ë
	`•rötf
(
tmp_°r
, "Cuºít=%d (-1-18ËSãÆth = ", 
m_±r
->
°l
);

208 
tmp_vÆ
 = 
	`°æí
(
tmp_°r
);

209 
	`¥t
(
tmp_°r
, 0, 0);

210 i‡(
	`gë_°rög
(
tmp_°r
, 0, 
tmp_vÆ
, 3))

212 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

213 i‡((
tmp_vÆ
 > -2Ë&& (tmp_vÆ < 19Ë&& (*
tmp_°r
 != '\0'))

214 
m_±r
->
°l
 = 
tmp_vÆ
;

219 (Ë
	`•rötf
(
tmp_°r
, "Cuºít=%d (0-200ËDißrmög = ", 
m_±r
->
dißrm
);

220 
tmp_vÆ
 = 
	`°æí
(
tmp_°r
);

221 
	`¥t
(
tmp_°r
, 0, 0);

222 i‡(
	`gë_°rög
(
tmp_°r
, 0, 
tmp_vÆ
, 3))

224 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

225 i‡((
tmp_vÆ
 > -1Ë&& (tmp_vÆ < 201Ë&& (*
tmp_°r
 != '\0'))

226 
m_±r
->
dißrm
 = 
tmp_vÆ
;

231 (Ë
	`•rötf
(
tmp_°r
, "Cuºít=%d (0-100ËSavê", 
m_±r
->
ßve
);

232 
tmp_vÆ
 = 
	`°æí
(
tmp_°r
);

233 
	`¥t
(
tmp_°r
, 0, 0);

234 i‡(
	`gë_°rög
(
tmp_°r
, 0, 
tmp_vÆ
, 3))

236 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

237 i‡((
tmp_vÆ
 > -1Ë&& (tmp_vÆ < 201Ë&& (*
tmp_°r
 != '\0'))

238 
m_±r
->
ßve
 = 
tmp_vÆ
;

243 (Ë
	`•rötf
(
tmp_°r
, "Cuºít=%d (0-200ËBa£Åÿhô = ", 
m_±r
->
bth
);

244 
tmp_vÆ
 = 
	`°æí
(
tmp_°r
);

245 
	`¥t
(
tmp_°r
, 0, 0);

246 i‡(
	`gë_°rög
(
tmp_°r
, 0, 
tmp_vÆ
, 3))

248 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

249 i‡((
tmp_vÆ
 > -1Ë&& (tmp_vÆ < 201Ë&& (*
tmp_°r
 != '\0'))

250 
m_±r
->
bth
 = 
tmp_vÆ
;

255 (Ë
	`•rötf
(
tmp_°r
, "Current=%d (0-200) Bows/Throwing = ",

256 
m_±r
->
bthb
);

257 
tmp_vÆ
 = 
	`°æí
(
tmp_°r
);

258 
	`¥t
(
tmp_°r
, 0, 0);

259 i‡(
	`gë_°rög
(
tmp_°r
, 0, 
tmp_vÆ
, 3))

261 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

262 i‡((
tmp_vÆ
 > -1Ë&& (tmp_vÆ < 201Ë&& (*
tmp_°r
 != '\0'))

263 
m_±r
->
bthb
 = 
tmp_vÆ
;

268 (Ë
	`•rötf
(
tmp_°r
, "Cuºít=%d Weighà", 
m_±r
->
wt
);

269 
tmp_vÆ
 = 
	`°æí
(
tmp_°r
);

270 
	`¥t
(
tmp_°r
, 0, 0);

271 i‡(
	`gë_°rög
(
tmp_°r
, 0, 
tmp_vÆ
, 3))

273 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

274 i‡(
tmp_vÆ
 > -1 && (*
tmp_°r
 != '\0'))

275 
m_±r
->
wt
 = 
tmp_vÆ
;

280 
	`gë_com
("A…î s≥ed? (+/-)", 
tmp_°r
))

282 i‡(*
tmp_°r
 == '+')

283 
	`ch™ge_•ìd
(-1);

284 i‡(*
tmp_°r
 == '-')

285 
	`ch™ge_•ìd
(1);

288 
	`¥t_•ìd
();

290 
	}
}

294 
	$wiz¨d_¸óã
()

296 
tmp_vÆ
;

297 
öt32
 
tmp_lvÆ
;

298 
vty≥
 
tmp_°r
;

299 
öví_ty≥
 *
i_±r
;

300 
öví_ty≥
 
f‹ge
;

301 
ˇve_ty≥
 *
c_±r
;

302 
∑âîn
[4];

304 
	`msg_¥öt
("Warning: ThisÑoutine can causeá fatalÉrror.");

305 
i_±r
 = &
f‹ge
;

306 
i_±r
->
ödex
 = 
OBJ_WIZARD
;

307 
i_±r
->
«me2
 = 0;

308 
	`ös¸ibe
(
i_±r
, "wizard item");

309 
i_±r
->
idít
 = 
ID_KNOWN2
|
ID_STOREBOUGHT
;

311 
	`¥t
("Tval : ", 0, 0);

312 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 9, 3))

314 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

315 
i_±r
->
tvÆ
 = 
tmp_vÆ
;

317 
	`¥t
("Tchar : ", 0, 0);

318 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 9, 1))

320 
i_±r
->
tch¨
 = 
tmp_°r
[0];

322 
	`¥t
("Subval : ", 0, 0);

323 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 9, 5))

325 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

326 
i_±r
->
subvÆ
 = 
tmp_vÆ
;

328 
	`¥t
("Weight : ", 0, 0);

329 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 9, 5))

331 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

332 
i_±r
->
weight
 = 
tmp_vÆ
;

334 
	`¥t
("Number : ", 0, 0);

335 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 9, 5))

337 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

338 
i_±r
->
numbî
 = 
tmp_vÆ
;

340 
	`¥t
("Damage (dice): ", 0, 0);

341 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 15, 3))

343 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

344 
i_±r
->
damage
[0] = 
tmp_vÆ
;

346 
	`¥t
("Damage (sides): ", 0, 0);

347 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 16, 3))

349 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

350 
i_±r
->
damage
[1] = 
tmp_vÆ
;

352 
	`¥t
("+To hit: ", 0, 0);

353 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 9, 3))

355 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

356 
i_±r
->
tohô
 = 
tmp_vÆ
;

358 
	`¥t
("+To dam: ", 0, 0);

359 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 9, 3))

361 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

362 
i_±r
->
todam
 = 
tmp_vÆ
;

364 
	`¥t
("AC : ", 0, 0);

365 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 9, 3))

367 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

368 
i_±r
->
ac
 = 
tmp_vÆ
;

370 
	`¥t
("+To AC : ", 0, 0);

371 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 9, 3))

373 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

374 
i_±r
->
tﬂc
 = 
tmp_vÆ
;

376 
	`¥t
("P1 : ", 0, 0);

377 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 9, 5))

379 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

380 
i_±r
->
p1
 = 
tmp_vÆ
;

382 
	`¥t
("Flags (In HEX): ", 0, 0);

383 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 16, 8))

387 (Ë
	`°r˝y
 (
∑âîn
, "%lx");

388 (Ë
	`ssˇnf
(
tmp_°r
, 
∑âîn
, &
tmp_lvÆ
);

389 
i_±r
->
Êags
 = 
tmp_lvÆ
;

391 
	`¥t
("Cost : ", 0, 0);

392 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 9, 8))

394 
tmp_lvÆ
 = 
	`©ﬁ
(
tmp_°r
);

395 
i_±r
->
co°
 = 
tmp_lvÆ
;

397 
	`¥t
("Level : ", 0, 0);

398 i‡(!
	`gë_°rög
(
tmp_°r
, 0, 10, 3))

400 
tmp_vÆ
 = 
	`©oi
(
tmp_°r
);

401 
i_±r
->
Àvñ
 = 
tmp_vÆ
;

403 i‡(
	`gë_check
("Allocate?"))

406 
c_±r
 = &
ˇve
[
ch¨_row
][
ch¨_cﬁ
];

407 i‡(
c_±r
->
çå
 != 0)

408 (Ë
	`dñëe_obje˘
(
ch¨_row
, 
ch¨_cﬁ
);

410 
tmp_vÆ
 = 
	`p›t
();

411 
t_li°
[
tmp_vÆ
] = 
f‹ge
;

412 
c_±r
->
çå
 = 
tmp_vÆ
;

413 
	`msg_¥öt
("Allocated.");

416 
	`msg_¥öt
("Aborted.");

417 
	}
}

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

70 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

75 
__löe
,

76 
__c⁄°
 *
__fun˘i⁄
)

77 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

82 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

86 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/curses.h

37 #i‚de‡
__NCURSES_H


38 
	#__NCURSES_H


	)

40 
	#CURSES
 1

	)

41 
	#CURSES_H
 1

	)

44 
	#NCURSES_VERSION_MAJOR
 5

	)

45 
	#NCURSES_VERSION_MINOR
 9

	)

46 
	#NCURSES_VERSION_PATCH
 20110716

	)

49 #unde‡
NCURSES_VERSION


50 
	#NCURSES_VERSION
 "5.9"

	)

55 
	#NCURSES_MOUSE_VERSION
 1

	)

60 
	~<ncur£s_dŒ.h
>

65 #i‚de‡
NCURSES_ENABLE_STDBOOL_H


66 
	#NCURSES_ENABLE_STDBOOL_H
 1

	)

73 #ifde‡
NCURSES_NOMACROS


74 #i‚de‡
NCURSES_ATTR_T


75 
	#NCURSES_ATTR_T
 
©å_t


	)

79 #i‚de‡
NCURSES_ATTR_T


80 
	#NCURSES_ATTR_T
 

	)

87 #unde‡
NCURSES_CONST


88 
	#NCURSES_CONST


	)

90 #unde‡
NCURSES_INLINE


91 
	#NCURSES_INLINE
 
ölöe


	)

96 #unde‡
NCURSES_COLOR_T


97 
	#NCURSES_COLOR_T
 

	)

102 #i‚de‡
NCURSES_OPAQUE


103 
	#NCURSES_OPAQUE
 0

	)

109 #i‚de‡
NCURSES_REENTRANT


110 
	#NCURSES_REENTRANT
 0

	)

116 #unde‡
NCURSES_INTEROP_FUNCS


117 
	#NCURSES_INTEROP_FUNCS
 0

	)

122 #unde‡
NCURSES_SIZE_T


123 
	#NCURSES_SIZE_T
 

	)

128 #unde‡
NCURSES_TPARM_VARARGS


129 
	#NCURSES_TPARM_VARARGS
 1

	)

136 #unde‡
NCURSES_CH_T


137 
	#NCURSES_CH_T
 
cch¨_t


	)

139 #i‡0 && 
deföed
(
_LP64
)

140 
	tchty≥
;

141 
	tmmask_t
;

143 
	tchty≥
;

144 
	tmmask_t
;

150 
	~<°dio.h
>

156 #unde‡
NCURSES_WIDECHAR


157 #i‡
deföed
(
_XOPEN_SOURCE_EXTENDED
Ë|| deföed(
_XPG5
)

158 
	#NCURSES_WIDECHAR


	)

161 
	~<°d¨g.h
>

162 #ifde‡
NCURSES_WIDECHAR


163 
	~<°ddef.h
>

178 #unde‡
TRUE


179 
	#TRUE
 1

	)

181 #unde‡
FALSE


182 
	#FALSE
 0

	)

184 
	tNCURSES_BOOL
;

186 #i‡
deföed
(
__˝lu•lus
)

189 
	#NCURSES_BOOL
 
boﬁ


	)

193 #i‡
NCURSES_ENABLE_STDBOOL_H


194 
	~<°dboﬁ.h
>

196 
	#NCURSES_BOOL
 
boﬁ


	)

199 #unde‡
boﬁ


200 
	#boﬁ
 
NCURSES_BOOL


	)

205 #ifde‡
__˝lu•lus


207 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë
°©ic_ˇ°
<ty≥>(vÆue)

	)

209 
	#NCURSES_CAST
(
ty≥
,
vÆue
Ë—y≥)(vÆue)

	)

216 
	#WA_ATTRIBUTES
 
A_ATTRIBUTES


	)

217 
	#WA_NORMAL
 
A_NORMAL


	)

218 
	#WA_STANDOUT
 
A_STANDOUT


	)

219 
	#WA_UNDERLINE
 
A_UNDERLINE


	)

220 
	#WA_REVERSE
 
A_REVERSE


	)

221 
	#WA_BLINK
 
A_BLINK


	)

222 
	#WA_DIM
 
A_DIM


	)

223 
	#WA_BOLD
 
A_BOLD


	)

224 
	#WA_ALTCHARSET
 
A_ALTCHARSET


	)

225 
	#WA_INVIS
 
A_INVIS


	)

226 
	#WA_PROTECT
 
A_PROTECT


	)

227 
	#WA_HORIZONTAL
 
A_HORIZONTAL


	)

228 
	#WA_LEFT
 
A_LEFT


	)

229 
	#WA_LOW
 
A_LOW


	)

230 
	#WA_RIGHT
 
A_RIGHT


	)

231 
	#WA_TOP
 
A_TOP


	)

232 
	#WA_VERTICAL
 
A_VERTICAL


	)

235 
	#COLOR_BLACK
 0

	)

236 
	#COLOR_RED
 1

	)

237 
	#COLOR_GREEN
 2

	)

238 
	#COLOR_YELLOW
 3

	)

239 
	#COLOR_BLUE
 4

	)

240 
	#COLOR_MAGENTA
 5

	)

241 
	#COLOR_CYAN
 6

	)

242 
	#COLOR_WHITE
 7

	)

246 #i‡0 || 
NCURSES_REENTRANT


247 
NCURSES_WRAPPED_VAR
(
chty≥
*, 
acs_m≠
);

248 
	#acs_m≠
 
	`NCURSES_PUBLIC_VAR
(
	`acs_m≠
())

	)

250 
NCURSES_EXPORT_VAR
(
chty≥
Ë
acs_m≠
[];

253 
	#NCURSES_ACS
(
c
Ë(
acs_m≠
[
	`NCURSES_CAST
(,c)])

	)

256 
	#ACS_ULCORNER
 
	`NCURSES_ACS
('l'Ë

	)

257 
	#ACS_LLCORNER
 
	`NCURSES_ACS
('m'Ë

	)

258 
	#ACS_URCORNER
 
	`NCURSES_ACS
('k'Ë

	)

259 
	#ACS_LRCORNER
 
	`NCURSES_ACS
('j'Ë

	)

260 
	#ACS_LTEE
 
	`NCURSES_ACS
('t'Ë

	)

261 
	#ACS_RTEE
 
	`NCURSES_ACS
('u'Ë

	)

262 
	#ACS_BTEE
 
	`NCURSES_ACS
('v'Ë

	)

263 
	#ACS_TTEE
 
	`NCURSES_ACS
('w'Ë

	)

264 
	#ACS_HLINE
 
	`NCURSES_ACS
('q'Ë

	)

265 
	#ACS_VLINE
 
	`NCURSES_ACS
('x'Ë

	)

266 
	#ACS_PLUS
 
	`NCURSES_ACS
('n'Ë

	)

267 
	#ACS_S1
 
	`NCURSES_ACS
('o'Ë

	)

268 
	#ACS_S9
 
	`NCURSES_ACS
('s'Ë

	)

269 
	#ACS_DIAMOND
 
	`NCURSES_ACS
('`'Ë

	)

270 
	#ACS_CKBOARD
 
	`NCURSES_ACS
('a'Ë

	)

271 
	#ACS_DEGREE
 
	`NCURSES_ACS
('f'Ë

	)

272 
	#ACS_PLMINUS
 
	`NCURSES_ACS
('g'Ë

	)

273 
	#ACS_BULLET
 
	`NCURSES_ACS
('~'Ë

	)

275 
	#ACS_LARROW
 
	`NCURSES_ACS
(','Ë

	)

276 
	#ACS_RARROW
 
	`NCURSES_ACS
('+'Ë

	)

277 
	#ACS_DARROW
 
	`NCURSES_ACS
('.'Ë

	)

278 
	#ACS_UARROW
 
	`NCURSES_ACS
('-'Ë

	)

279 
	#ACS_BOARD
 
	`NCURSES_ACS
('h'Ë

	)

280 
	#ACS_LANTERN
 
	`NCURSES_ACS
('i'Ë

	)

281 
	#ACS_BLOCK
 
	`NCURSES_ACS
('0'Ë

	)

287 
	#ACS_S3
 
	`NCURSES_ACS
('p'Ë

	)

288 
	#ACS_S7
 
	`NCURSES_ACS
('r'Ë

	)

289 
	#ACS_LEQUAL
 
	`NCURSES_ACS
('y'Ë

	)

290 
	#ACS_GEQUAL
 
	`NCURSES_ACS
('z'Ë

	)

291 
	#ACS_PI
 
	`NCURSES_ACS
('{'Ë

	)

292 
	#ACS_NEQUAL
 
	`NCURSES_ACS
('|'Ë

	)

293 
	#ACS_STERLING
 
	`NCURSES_ACS
('}'Ë

	)

301 
	#ACS_BSSB
 
ACS_ULCORNER


	)

302 
	#ACS_SSBB
 
ACS_LLCORNER


	)

303 
	#ACS_BBSS
 
ACS_URCORNER


	)

304 
	#ACS_SBBS
 
ACS_LRCORNER


	)

305 
	#ACS_SBSS
 
ACS_RTEE


	)

306 
	#ACS_SSSB
 
ACS_LTEE


	)

307 
	#ACS_SSBS
 
ACS_BTEE


	)

308 
	#ACS_BSSS
 
ACS_TTEE


	)

309 
	#ACS_BSBS
 
ACS_HLINE


	)

310 
	#ACS_SBSB
 
ACS_VLINE


	)

311 
	#ACS_SSSS
 
ACS_PLUS


	)

313 #unde‡
ERR


314 
	#ERR
 (-1)

	)

316 #unde‡
OK


317 
	#OK
 (0)

	)

320 
	#_SUBWIN
 0x01

	)

321 
	#_ENDLINE
 0x02

	)

322 
	#_FULLWIN
 0x04

	)

323 
	#_SCROLLWIN
 0x08

	)

324 
	#_ISPAD
 0x10

	)

325 
	#_HASMOVED
 0x20

	)

326 
	#_WRAPPED
 0x40

	)

332 
	#_NOCHANGE
 -1

	)

338 
	#_NEWINDEX
 -1

	)

340 
s¸ìn
 
	tSCREEN
;

341 
_wö_°
 
	tWINDOW
;

343 
chty≥
 
	t©å_t
;

345 #ifde‡
NCURSES_WIDECHAR


348 #ifde‡
mbÀn


349 #unde‡
mbÀn


351 
	~<libutf8.h
>

355 
	~<wch¨.h
>

359 
	twch¨_t1
;

363 
	twöt_t1
;

372 
	#CCHARW_MAX
 5

	)

375 
©å_t
 
	g©å
;

376 
wch¨_t
 
	gch¨s
[
CCHARW_MAX
];

378 #unde‡
NCURSES_EXT_COLORS


379 
	#NCURSES_EXT_COLORS
 20110716

	)

380 
	gext_cﬁ‹
;

383 
	tcch¨_t
;

387 #i‡!
NCURSES_OPAQUE


388 
	gld©
;

390 
	s_wö_°


392 
NCURSES_SIZE_T
 
	g_cury
, 
	g_curx
;

395 
NCURSES_SIZE_T
 
	g_maxy
, 
	g_maxx
;

396 
NCURSES_SIZE_T
 
	g_begy
, 
	g_begx
;

398 
	g_Êags
;

401 
©å_t
 
	g_©ås
;

402 
chty≥
 
	g_bkgd
;

405 
boﬁ
 
	g_nŸimeout
;

406 
boﬁ
 
	g_˛ór
;

407 
boﬁ
 
	g_Àaveok
;

408 
boﬁ
 
	g_s¸ﬁl
;

409 
boﬁ
 
	g_idlok
;

410 
boﬁ
 
	g_idcok
;

411 
boﬁ
 
	g_immed
;

412 
boﬁ
 
	g_sync
;

413 
boﬁ
 
	g_u£_key∑d
;

414 
	g_dñay
;

416 
ld©
 *
	g_löe
;

419 
NCURSES_SIZE_T
 
	g_ªgt›
;

420 
NCURSES_SIZE_T
 
	g_ªgbŸtom
;

423 
	g_∑rx
;

424 
	g_∑ry
;

425 
WINDOW
 *
	g_∑ª¡
;

428 
	spd©


430 
NCURSES_SIZE_T
 
	g_∑d_y
, 
	g_∑d_x
;

431 
NCURSES_SIZE_T
 
	g_∑d_t›
, 
	g_∑d_À·
;

432 
NCURSES_SIZE_T
 
	g_∑d_bŸtom
, 
	g_∑d_right
;

433 } 
	g_∑d
;

435 
NCURSES_SIZE_T
 
	g_yoff£t
;

437 #ifde‡
NCURSES_WIDECHAR


438 
cch¨_t
 
	g_bkg∫d
;

440 
	g_cﬁ‹
;

450 #ifde‡
NCURSES_WGETCH_EVENTS


451 #i‡!
deföed
(
__BEOS__
Ë|| deföed(
__HAIKU__
)

453 
	#NCURSES_EVENT_VERSION
 1

	)

459 
	#_NC_EVENT_TIMEOUT_MSEC
 1

	)

460 
	#_NC_EVENT_FILE
 2

	)

461 
	#_NC_EVENT_FILE_READABLE
 2

	)

463 
	#_NC_EVENT_FILE_WRITABLE
 4

	)

464 
	#_NC_EVENT_FILE_EXCEPTION
 8

	)

469 
	gty≥
;

472 
	gtimeout_m£c
;

475 
	gÊags
;

476 
	gfd
;

477 
	gªsu…
;

478 } 
	g„v
;

479 } 
	gd©a
;

480 } 
	t_nc_evít
;

484 
	gcou¡
;

485 
	gªsu…_Êags
;

486 
_nc_evít
 *
	gevíts
[1];

487 } 
	t_nc_evíéi°
;

489 
NCURSES_EXPORT
(Ë
wgëch_evíts
 (
WINDOW
 *, 
_nc_evíéi°
 *);

490 
NCURSES_EXPORT
(Ë
wgën°r_evíts
 (
WINDOW
 *,*,,
_nc_evíéi°
 *);

502 #i‡!(
deföed
(
__GNUC__
Ë|| deföed(
__GNUG__
Ë|| deföed(
__©åibuã__
))

503 
	#__©åibuã__
(
p
Ë

	)

514 #i‚de‡
GCC_PRINTFLIKE


515 #i‡
deföed
(
GCC_PRINTF
Ë&& !deföed(
¥ötf
)

516 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,fmt,v¨)))

	)

518 
	#GCC_PRINTFLIKE
(
fmt
,
v¨
Ë

	)

522 #i‚de‡
GCC_SCANFLIKE


523 #i‡
deföed
(
GCC_SCANF
Ë&& !deföed(
sˇnf
)

524 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë
	`__©åibuã__
((
	`f‹m©
(
sˇnf
,fmt,v¨)))

	)

526 
	#GCC_SCANFLIKE
(
fmt
,
v¨
Ë

	)

530 #i‚def 
GCC_NORETURN


531 
	#GCC_NORETURN


	)

534 #i‚def 
GCC_UNUSED


535 
	#GCC_UNUSED


	)

542 (*
	gNCURSES_OUTC
)();

551 
NCURSES_EXPORT
(Ë
addch
 (c⁄° 
chty≥
);

552 
NCURSES_EXPORT
(Ë
addchn°r
 (c⁄° 
chty≥
 *, );

553 
NCURSES_EXPORT
(Ë
addch°r
 (c⁄° 
chty≥
 *);

554 
NCURSES_EXPORT
(Ë
addn°r
 (const *, );

555 
NCURSES_EXPORT
(Ë
add°r
 (const *);

556 
NCURSES_EXPORT
(Ë
©åoff
 (
NCURSES_ATTR_T
);

557 
NCURSES_EXPORT
(Ë
©å⁄
 (
NCURSES_ATTR_T
);

558 
NCURSES_EXPORT
(Ë
©å£t
 (
NCURSES_ATTR_T
);

559 
NCURSES_EXPORT
(Ë
©å_gë
 (
©å_t
 *, *, *);

560 
NCURSES_EXPORT
(Ë
©å_off
 (
©å_t
, *);

561 
NCURSES_EXPORT
(Ë
©å_⁄
 (
©å_t
, *);

562 
NCURSES_EXPORT
(Ë
©å_£t
 (
©å_t
, , *);

563 
NCURSES_EXPORT
(Ë
baudøã
 ();

564 
NCURSES_EXPORT
(Ë
bìp
 ();

565 
NCURSES_EXPORT
(Ë
bkgd
 (
chty≥
);

566 
NCURSES_EXPORT
(Ë
bkgd£t
 (
chty≥
);

567 
NCURSES_EXPORT
(Ë
b‹dî
 (
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

568 
NCURSES_EXPORT
(Ë
box
 (
WINDOW
 *, 
chty≥
, chtype);

569 
NCURSES_EXPORT
(
boﬁ
Ë
ˇn_ch™ge_cﬁ‹
 ();

570 
NCURSES_EXPORT
(Ë
cbªak
 ();

571 
NCURSES_EXPORT
(Ë
chg©
 (, 
©å_t
, , const *);

572 
NCURSES_EXPORT
(Ë
˛ór
 ();

573 
NCURSES_EXPORT
(Ë
˛órok
 (
WINDOW
 *,
boﬁ
);

574 
NCURSES_EXPORT
(Ë
˛πobŸ
 ();

575 
NCURSES_EXPORT
(Ë
˛π€ﬁ
 ();

576 
NCURSES_EXPORT
(Ë
cﬁ‹_c⁄ã¡
 (,*,*,*);

577 
NCURSES_EXPORT
(Ë
cﬁ‹_£t
 (,*);

578 
NCURSES_EXPORT
(Ë
COLOR_PAIR
 ();

579 
NCURSES_EXPORT
(Ë
c›ywö
 (c⁄° 
WINDOW
*,WINDOW*,,,,,,,);

580 
NCURSES_EXPORT
(Ë
curs_£t
 ();

581 
NCURSES_EXPORT
(Ë
def_¥og_mode
 ();

582 
NCURSES_EXPORT
(Ë
def_shñl_mode
 ();

583 
NCURSES_EXPORT
(Ë
dñay_ouçut
 ();

584 
NCURSES_EXPORT
(Ë
dñch
 ();

585 
NCURSES_EXPORT
(Ë
dñs¸ìn
 (
SCREEN
 *);

586 
NCURSES_EXPORT
(Ë
dñwö
 (
WINDOW
 *);

587 
NCURSES_EXPORT
(Ë
dñëñn
 ();

588 
NCURSES_EXPORT
(
WINDOW
 *Ë
dîwö
 (WINDOW *,,,,);

589 
NCURSES_EXPORT
(Ë
doupd©e
 ();

590 
NCURSES_EXPORT
(
WINDOW
 *Ë
dupwö
 (WINDOW *);

591 
NCURSES_EXPORT
(Ë
echo
 ();

592 
NCURSES_EXPORT
(Ë
echoch¨
 (c⁄° 
chty≥
);

593 
NCURSES_EXPORT
(Ë
îa£
 ();

594 
NCURSES_EXPORT
(Ë
ídwö
 ();

595 
NCURSES_EXPORT
(Ë
îa£ch¨
 ();

596 
NCURSES_EXPORT
(Ë
fûãr
 ();

597 
NCURSES_EXPORT
(Ë
Êash
 ();

598 
NCURSES_EXPORT
(Ë
Êushöp
 ();

599 
NCURSES_EXPORT
(
chty≥
Ë
gëbkgd
 (
WINDOW
 *);

600 
NCURSES_EXPORT
(Ë
gëch
 ();

601 
NCURSES_EXPORT
(Ë
gën°r
 (*, );

602 
NCURSES_EXPORT
(Ë
gë°r
 (*);

603 
NCURSES_EXPORT
(
WINDOW
 *Ë
gëwö
 (
FILE
 *);

604 
NCURSES_EXPORT
(Ë
hÆfdñay
 ();

605 
NCURSES_EXPORT
(
boﬁ
Ë
has_cﬁ‹s
 ();

606 
NCURSES_EXPORT
(
boﬁ
Ë
has_ic
 ();

607 
NCURSES_EXPORT
(
boﬁ
Ë
has_û
 ();

608 
NCURSES_EXPORT
(Ë
hlöe
 (
chty≥
, );

609 
NCURSES_EXPORT
(Ë
idcok
 (
WINDOW
 *, 
boﬁ
);

610 
NCURSES_EXPORT
(Ë
idlok
 (
WINDOW
 *, 
boﬁ
);

611 
NCURSES_EXPORT
(Ë
immedok
 (
WINDOW
 *, 
boﬁ
);

612 
NCURSES_EXPORT
(
chty≥
Ë
öch
 ();

613 
NCURSES_EXPORT
(Ë
öchn°r
 (
chty≥
 *, );

614 
NCURSES_EXPORT
(Ë
öch°r
 (
chty≥
 *);

615 
NCURSES_EXPORT
(
WINDOW
 *Ë
öôs¸
 ();

616 
NCURSES_EXPORT
(Ë
öô_cﬁ‹
 (,,,);

617 
NCURSES_EXPORT
(Ë
öô_∑ú
 (,,);

618 
NCURSES_EXPORT
(Ë
ön°r
 (*, );

619 
NCURSES_EXPORT
(Ë
ösch
 (
chty≥
);

620 
NCURSES_EXPORT
(Ë
ösdñ 
 ();

621 
NCURSES_EXPORT
(Ë
ö£π 
 ();

622 
NCURSES_EXPORT
(Ë
ö¢°r
 (const *, );

623 
NCURSES_EXPORT
(Ë
ös°r
 (const *);

624 
NCURSES_EXPORT
(Ë
ö°r
 (*);

625 
NCURSES_EXPORT
(Ë
öåÊush
 (
WINDOW
 *,
boﬁ
);

626 
NCURSES_EXPORT
(
boﬁ
Ë
i£ndwö
 ();

627 
NCURSES_EXPORT
(
boﬁ
Ë
is_löëouched
 (
WINDOW
 *,);

628 
NCURSES_EXPORT
(
boﬁ
Ë
is_wötouched
 (
WINDOW
 *);

629 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key«me
 ();

630 
NCURSES_EXPORT
(Ë
key∑d
 (
WINDOW
 *,
boﬁ
);

631 
NCURSES_EXPORT
(Ë
kûlch¨
 ();

632 
NCURSES_EXPORT
(Ë
Àaveok
 (
WINDOW
 *,
boﬁ
);

633 
NCURSES_EXPORT
(*Ë
l⁄g«me
 ();

634 
NCURSES_EXPORT
(Ë
mëa
 (
WINDOW
 *,
boﬁ
);

635 
NCURSES_EXPORT
(Ë
move
 (, );

636 
NCURSES_EXPORT
(Ë
mvaddch
 (, , c⁄° 
chty≥
);

637 
NCURSES_EXPORT
(Ë
mvaddchn°r
 (, , c⁄° 
chty≥
 *, );

638 
NCURSES_EXPORT
(Ë
mvaddch°r
 (, , c⁄° 
chty≥
 *);

639 
NCURSES_EXPORT
(Ë
mvaddn°r
 (, , const *, );

640 
NCURSES_EXPORT
(Ë
mvadd°r
 (, , const *);

641 
NCURSES_EXPORT
(Ë
mvchg©
 (, , , 
©å_t
, , const *);

642 
NCURSES_EXPORT
(Ë
mvcur
 (,,,);

643 
NCURSES_EXPORT
(Ë
mvdñch
 (, );

644 
NCURSES_EXPORT
(Ë
mvdîwö
 (
WINDOW
 *, , );

645 
NCURSES_EXPORT
(Ë
mvgëch
 (, );

646 
NCURSES_EXPORT
(Ë
mvgën°r
 (, , *, );

647 
NCURSES_EXPORT
(Ë
mvgë°r
 (, , *);

648 
NCURSES_EXPORT
(Ë
mvhlöe
 (, , 
chty≥
, );

649 
NCURSES_EXPORT
(
chty≥
Ë
mvöch
 (, );

650 
NCURSES_EXPORT
(Ë
mvöchn°r
 (, , 
chty≥
 *, );

651 
NCURSES_EXPORT
(Ë
mvöch°r
 (, , 
chty≥
 *);

652 
NCURSES_EXPORT
(Ë
mvön°r
 (, , *, );

653 
NCURSES_EXPORT
(Ë
mvösch
 (, , 
chty≥
);

654 
NCURSES_EXPORT
(Ë
mvö¢°r
 (, , const *, );

655 
NCURSES_EXPORT
(Ë
mvös°r
 (, , const *);

656 
NCURSES_EXPORT
(Ë
mvö°r
 (, , *);

657 
NCURSES_EXPORT
(Ë
mv¥ötw
 (,, const *,...)

658 
GCC_PRINTFLIKE
(3,4);

659 
NCURSES_EXPORT
(Ë
mvsˇnw
 (,, 
NCURSES_CONST
 *,...)

660 
GCC_SCANFLIKE
(3,4);

661 
NCURSES_EXPORT
(Ë
mvvlöe
 (, , 
chty≥
, );

662 
NCURSES_EXPORT
(Ë
mvwaddch
 (
WINDOW
 *, , , c⁄° 
chty≥
);

663 
NCURSES_EXPORT
(Ë
mvwaddchn°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *, );

664 
NCURSES_EXPORT
(Ë
mvwaddch°r
 (
WINDOW
 *, , , c⁄° 
chty≥
 *);

665 
NCURSES_EXPORT
(Ë
mvwaddn°r
 (
WINDOW
 *, , , const *, );

666 
NCURSES_EXPORT
(Ë
mvwadd°r
 (
WINDOW
 *, , , const *);

667 
NCURSES_EXPORT
(Ë
mvwchg©
 (
WINDOW
 *, , , , 
©å_t
, , const *);

668 
NCURSES_EXPORT
(Ë
mvwdñch
 (
WINDOW
 *, , );

669 
NCURSES_EXPORT
(Ë
mvwgëch
 (
WINDOW
 *, , );

670 
NCURSES_EXPORT
(Ë
mvwgën°r
 (
WINDOW
 *, , , *, );

671 
NCURSES_EXPORT
(Ë
mvwgë°r
 (
WINDOW
 *, , , *);

672 
NCURSES_EXPORT
(Ë
mvwhlöe
 (
WINDOW
 *, , , 
chty≥
, );

673 
NCURSES_EXPORT
(Ë
mvwö
 (
WINDOW
 *,,);

674 
NCURSES_EXPORT
(
chty≥
Ë
mvwöch
 (
WINDOW
 *, , );

675 
NCURSES_EXPORT
(Ë
mvwöchn°r
 (
WINDOW
 *, , , 
chty≥
 *, );

676 
NCURSES_EXPORT
(Ë
mvwöch°r
 (
WINDOW
 *, , , 
chty≥
 *);

677 
NCURSES_EXPORT
(Ë
mvwön°r
 (
WINDOW
 *, , , *, );

678 
NCURSES_EXPORT
(Ë
mvwösch
 (
WINDOW
 *, , , 
chty≥
);

679 
NCURSES_EXPORT
(Ë
mvwö¢°r
 (
WINDOW
 *, , , const *, );

680 
NCURSES_EXPORT
(Ë
mvwös°r
 (
WINDOW
 *, , , const *);

681 
NCURSES_EXPORT
(Ë
mvwö°r
 (
WINDOW
 *, , , *);

682 
NCURSES_EXPORT
(Ë
mvw¥ötw
 (
WINDOW
*,,, const *,...)

683 
GCC_PRINTFLIKE
(4,5);

684 
NCURSES_EXPORT
(Ë
mvwsˇnw
 (
WINDOW
 *,,, 
NCURSES_CONST
 *,...)

685 
GCC_SCANFLIKE
(4,5);

686 
NCURSES_EXPORT
(Ë
mvwvlöe
 (
WINDOW
 *,, , 
chty≥
, );

687 
NCURSES_EXPORT
(Ë
«pms
 ();

688 
NCURSES_EXPORT
(
WINDOW
 *Ë
√w∑d
 (,);

689 
NCURSES_EXPORT
(
SCREEN
 *Ë
√wãrm
 (
NCURSES_CONST
 *,
FILE
 *,FILE *);

690 
NCURSES_EXPORT
(
WINDOW
 *Ë
√wwö
 (,,,);

691 
NCURSES_EXPORT
(Ë
∆
 ();

692 
NCURSES_EXPORT
(Ë
nocbªak
 ();

693 
NCURSES_EXPORT
(Ë
nodñay
 (
WINDOW
 *,
boﬁ
);

694 
NCURSES_EXPORT
(Ë
n€cho
 ();

695 
NCURSES_EXPORT
(Ë
n⁄l
 ();

696 
NCURSES_EXPORT
(Ë
noqiÊush
 ();

697 
NCURSES_EXPORT
(Ë
n‹aw
 ();

698 
NCURSES_EXPORT
(Ë
nŸimeout
 (
WINDOW
 *,
boﬁ
);

699 
NCURSES_EXPORT
(Ë
ovîœy
 (c⁄° 
WINDOW
*,WINDOW *);

700 
NCURSES_EXPORT
(Ë
ovîwrôe
 (c⁄° 
WINDOW
*,WINDOW *);

701 
NCURSES_EXPORT
(Ë
∑ú_c⁄ã¡
 (,*,*);

702 
NCURSES_EXPORT
(Ë
PAIR_NUMBER
 ();

703 
NCURSES_EXPORT
(Ë
≥choch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

704 
NCURSES_EXPORT
(Ë
≤ouåe‰esh
 (
WINDOW
*,,,,,,);

705 
NCURSES_EXPORT
(Ë
¥e‰esh
 (
WINDOW
 *,,,,,,);

706 
NCURSES_EXPORT
(Ë
¥ötw
 (const *,...)

707 
GCC_PRINTFLIKE
(1,2);

708 
NCURSES_EXPORT
(Ë
putwö
 (
WINDOW
 *, 
FILE
 *);

709 
NCURSES_EXPORT
(Ë
qiÊush
 ();

710 
NCURSES_EXPORT
(Ë
øw
 ();

711 
NCURSES_EXPORT
(Ë
ªdøwwö
 (
WINDOW
 *);

712 
NCURSES_EXPORT
(Ë
ª‰esh
 ();

713 
NCURSES_EXPORT
(Ë
ª£ây
 ();

714 
NCURSES_EXPORT
(Ë
ª£t_¥og_mode
 ();

715 
NCURSES_EXPORT
(Ë
ª£t_shñl_mode
 ();

716 
NCURSES_EXPORT
(Ë
rùofÊöe
 (, (*)(
WINDOW
 *, ));

717 
NCURSES_EXPORT
(Ë
ßvëty
 ();

718 
NCURSES_EXPORT
(Ë
sˇnw
 (
NCURSES_CONST
 *,...)

719 
GCC_SCANFLIKE
(1,2);

720 
NCURSES_EXPORT
(Ë
s¸_dump
 (const *);

721 
NCURSES_EXPORT
(Ë
s¸_öô
 (const *);

722 
NCURSES_EXPORT
(Ë
s¸l
 ();

723 
NCURSES_EXPORT
(Ë
s¸ﬁl
 (
WINDOW
 *);

724 
NCURSES_EXPORT
(Ë
s¸ﬁlok
 (
WINDOW
 *,
boﬁ
);

725 
NCURSES_EXPORT
(Ë
s¸_ª°‹e
 (const *);

726 
NCURSES_EXPORT
(Ë
s¸_£t
 (const *);

727 
NCURSES_EXPORT
(Ë
£ts¸ªg
 (,);

728 
NCURSES_EXPORT
(
SCREEN
 *Ë
£t_ãrm
 (SCREEN *);

729 
NCURSES_EXPORT
(Ë
¶k_©åoff
 (c⁄° 
chty≥
);

730 
NCURSES_EXPORT
(Ë
¶k_©å_off
 (c⁄° 
©å_t
, *);

731 
NCURSES_EXPORT
(Ë
¶k_©å⁄
 (c⁄° 
chty≥
);

732 
NCURSES_EXPORT
(Ë
¶k_©å_⁄
 (
©å_t
,*);

733 
NCURSES_EXPORT
(Ë
¶k_©å£t
 (c⁄° 
chty≥
);

734 
NCURSES_EXPORT
(
©å_t
Ë
¶k_©å
 ();

735 
NCURSES_EXPORT
(Ë
¶k_©å_£t
 (c⁄° 
©å_t
,,*);

736 
NCURSES_EXPORT
(Ë
¶k_˛ór
 ();

737 
NCURSES_EXPORT
(Ë
¶k_cﬁ‹
 ();

738 
NCURSES_EXPORT
(Ë
¶k_öô
 ();

739 
NCURSES_EXPORT
(*Ë
¶k_œbñ
 ();

740 
NCURSES_EXPORT
(Ë
¶k_nouåe‰esh
 ();

741 
NCURSES_EXPORT
(Ë
¶k_ª‰esh
 ();

742 
NCURSES_EXPORT
(Ë
¶k_ª°‹e
 ();

743 
NCURSES_EXPORT
(Ë
¶k_£t
 (,const *,);

744 
NCURSES_EXPORT
(Ë
¶k_touch
 ();

745 
NCURSES_EXPORT
(Ë
°™dout
 ();

746 
NCURSES_EXPORT
(Ë
°™díd
 ();

747 
NCURSES_EXPORT
(Ë
°¨t_cﬁ‹
 ();

748 
NCURSES_EXPORT
(
WINDOW
 *Ë
sub∑d
 (WINDOW *, , , , );

749 
NCURSES_EXPORT
(
WINDOW
 *Ë
subwö
 (WINDOW *, , , , );

750 
NCURSES_EXPORT
(Ë
syncok
 (
WINDOW
 *, 
boﬁ
);

751 
NCURSES_EXPORT
(
chty≥
Ë
ãrm©ås
 ();

752 
NCURSES_EXPORT
(*Ë
ãrm«me
 ();

753 
NCURSES_EXPORT
(Ë
timeout
 ();

754 
NCURSES_EXPORT
(Ë
touchlöe
 (
WINDOW
 *, , );

755 
NCURSES_EXPORT
(Ë
touchwö
 (
WINDOW
 *);

756 
NCURSES_EXPORT
(Ë
ty≥ahód
 ();

757 
NCURSES_EXPORT
(Ë
ungëch
 ();

758 
NCURSES_EXPORT
(Ë
u¡ouchwö
 (
WINDOW
 *);

759 
NCURSES_EXPORT
(Ë
u£_ív
 (
boﬁ
);

760 
NCURSES_EXPORT
(Ë
vid©å
 (
chty≥
);

761 
NCURSES_EXPORT
(Ë
vidputs
 (
chty≥
, 
NCURSES_OUTC
);

762 
NCURSES_EXPORT
(Ë
vlöe
 (
chty≥
, );

763 
NCURSES_EXPORT
(Ë
vw¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

764 
NCURSES_EXPORT
(Ë
vw_¥ötw
 (
WINDOW
 *, c⁄° *,
va_li°
);

765 
NCURSES_EXPORT
(Ë
vwsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

766 
NCURSES_EXPORT
(Ë
vw_sˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,
va_li°
);

767 
NCURSES_EXPORT
(Ë
waddch
 (
WINDOW
 *, c⁄° 
chty≥
);

768 
NCURSES_EXPORT
(Ë
waddchn°r
 (
WINDOW
 *,c⁄° 
chty≥
 *,);

769 
NCURSES_EXPORT
(Ë
waddch°r
 (
WINDOW
 *,c⁄° 
chty≥
 *);

770 
NCURSES_EXPORT
(Ë
waddn°r
 (
WINDOW
 *,const *,);

771 
NCURSES_EXPORT
(Ë
wadd°r
 (
WINDOW
 *,const *);

772 
NCURSES_EXPORT
(Ë
w©å⁄
 (
WINDOW
 *, );

773 
NCURSES_EXPORT
(Ë
w©åoff
 (
WINDOW
 *, );

774 
NCURSES_EXPORT
(Ë
w©å£t
 (
WINDOW
 *, );

775 
NCURSES_EXPORT
(Ë
w©å_gë
 (
WINDOW
 *, 
©å_t
 *, *, *);

776 
NCURSES_EXPORT
(Ë
w©å_⁄
 (
WINDOW
 *, 
©å_t
, *);

777 
NCURSES_EXPORT
(Ë
w©å_off
 (
WINDOW
 *, 
©å_t
, *);

778 
NCURSES_EXPORT
(Ë
w©å_£t
 (
WINDOW
 *, 
©å_t
, , *);

779 
NCURSES_EXPORT
(Ë
wbkgd
 (
WINDOW
 *, 
chty≥
);

780 
NCURSES_EXPORT
(Ë
wbkgd£t
 (
WINDOW
 *,
chty≥
);

781 
NCURSES_EXPORT
(Ë
wb‹dî
 (
WINDOW
 *,
chty≥
,chtype,chtype,chtype,chtype,chtype,chtype,chtype);

782 
NCURSES_EXPORT
(Ë
wchg©
 (
WINDOW
 *, , 
©å_t
, , const *);

783 
NCURSES_EXPORT
(Ë
w˛ór
 (
WINDOW
 *);

784 
NCURSES_EXPORT
(Ë
w˛πobŸ
 (
WINDOW
 *);

785 
NCURSES_EXPORT
(Ë
w˛π€ﬁ
 (
WINDOW
 *);

786 
NCURSES_EXPORT
(Ë
wcﬁ‹_£t
 (
WINDOW
*,,*);

787 
NCURSES_EXPORT
(Ë
wcursyncup
 (
WINDOW
 *);

788 
NCURSES_EXPORT
(Ë
wdñch
 (
WINDOW
 *);

789 
NCURSES_EXPORT
(Ë
wdñëñn
 (
WINDOW
 *);

790 
NCURSES_EXPORT
(Ë
wechoch¨
 (
WINDOW
 *, c⁄° 
chty≥
);

791 
NCURSES_EXPORT
(Ë
wîa£
 (
WINDOW
 *);

792 
NCURSES_EXPORT
(Ë
wgëch
 (
WINDOW
 *);

793 
NCURSES_EXPORT
(Ë
wgën°r
 (
WINDOW
 *,*,);

794 
NCURSES_EXPORT
(Ë
wgë°r
 (
WINDOW
 *, *);

795 
NCURSES_EXPORT
(Ë
whlöe
 (
WINDOW
 *, 
chty≥
, );

796 
NCURSES_EXPORT
(
chty≥
Ë
wöch
 (
WINDOW
 *);

797 
NCURSES_EXPORT
(Ë
wöchn°r
 (
WINDOW
 *, 
chty≥
 *, );

798 
NCURSES_EXPORT
(Ë
wöch°r
 (
WINDOW
 *, 
chty≥
 *);

799 
NCURSES_EXPORT
(Ë
wön°r
 (
WINDOW
 *, *, );

800 
NCURSES_EXPORT
(Ë
wösch
 (
WINDOW
 *, 
chty≥
);

801 
NCURSES_EXPORT
(Ë
wösdñ 
 (
WINDOW
 *,);

802 
NCURSES_EXPORT
(Ë
wö£π 
 (
WINDOW
 *);

803 
NCURSES_EXPORT
(Ë
wö¢°r
 (
WINDOW
 *, const *,);

804 
NCURSES_EXPORT
(Ë
wös°r
 (
WINDOW
 *, const *);

805 
NCURSES_EXPORT
(Ë
wö°r
 (
WINDOW
 *, *);

806 
NCURSES_EXPORT
(Ë
wmove
 (
WINDOW
 *,,);

807 
NCURSES_EXPORT
(Ë
wnouåe‰esh
 (
WINDOW
 *);

808 
NCURSES_EXPORT
(Ë
w¥ötw
 (
WINDOW
 *, const *,...)

809 
GCC_PRINTFLIKE
(2,3);

810 
NCURSES_EXPORT
(Ë
wªdøw 
 (
WINDOW
 *,,);

811 
NCURSES_EXPORT
(Ë
wª‰esh
 (
WINDOW
 *);

812 
NCURSES_EXPORT
(Ë
wsˇnw
 (
WINDOW
 *, 
NCURSES_CONST
 *,...)

813 
GCC_SCANFLIKE
(2,3);

814 
NCURSES_EXPORT
(Ë
ws¸l
 (
WINDOW
 *,);

815 
NCURSES_EXPORT
(Ë
w£ts¸ªg
 (
WINDOW
 *,,);

816 
NCURSES_EXPORT
(Ë
w°™dout
 (
WINDOW
 *);

817 
NCURSES_EXPORT
(Ë
w°™díd
 (
WINDOW
 *);

818 
NCURSES_EXPORT
(Ë
wsyncdown
 (
WINDOW
 *);

819 
NCURSES_EXPORT
(Ë
wsyncup
 (
WINDOW
 *);

820 
NCURSES_EXPORT
(Ë
wtimeout
 (
WINDOW
 *,);

821 
NCURSES_EXPORT
(Ë
wtouch 
 (
WINDOW
 *,,,);

822 
NCURSES_EXPORT
(Ë
wvlöe
 (
WINDOW
 *,
chty≥
,);

827 
NCURSES_EXPORT
(Ë
tigëÊag
 (
NCURSES_CONST
 *);

828 
NCURSES_EXPORT
(Ë
tigënum
 (
NCURSES_CONST
 *);

829 
NCURSES_EXPORT
(*Ë
tigë°r
 (
NCURSES_CONST
 *);

830 
NCURSES_EXPORT
(Ë
puç
 (const *);

832 #i‡
NCURSES_TPARM_VARARGS


833 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ...);

835 
NCURSES_EXPORT
(*Ë
ç¨m
 (
NCURSES_CONST
 *, ,,,,,,,,);

836 
NCURSES_EXPORT
(*Ë
ç¨m_v¨¨gs
 (
NCURSES_CONST
 *, ...);

839 
NCURSES_EXPORT
(*Ë
tù¨m
 (const *, ...);

844 
NCURSES_EXPORT
(Ë
gë©ås
 (c⁄° 
WINDOW
 *);

845 
NCURSES_EXPORT
(Ë
gëcurx
 (c⁄° 
WINDOW
 *);

846 
NCURSES_EXPORT
(Ë
gëcury
 (c⁄° 
WINDOW
 *);

847 
NCURSES_EXPORT
(Ë
gëbegx
 (c⁄° 
WINDOW
 *);

848 
NCURSES_EXPORT
(Ë
gëbegy
 (c⁄° 
WINDOW
 *);

849 
NCURSES_EXPORT
(Ë
gëmaxx
 (c⁄° 
WINDOW
 *);

850 
NCURSES_EXPORT
(Ë
gëmaxy
 (c⁄° 
WINDOW
 *);

851 
NCURSES_EXPORT
(Ë
gë∑rx
 (c⁄° 
WINDOW
 *);

852 
NCURSES_EXPORT
(Ë
gë∑ry
 (c⁄° 
WINDOW
 *);

857 #i‚de‡
NCURSES_WIDECHAR


858 
	#vid_©å
(
a
,
∑ú
,
›ts
Ë
	`vid©å
◊)

	)

865 #unde‡
NCURSES_EXT_FUNCS


866 
	#NCURSES_EXT_FUNCS
 20110716

	)

867 (*
	gNCURSES_WINDOW_CB
)(
	tWINDOW
 *, *);

868 (*
	gNCURSES_SCREEN_CB
)(
	tSCREEN
 *, *);

869 
NCURSES_EXPORT
(
boﬁ
Ë
is_ãrm_ªsized
 (, );

870 
NCURSES_EXPORT
(*Ë
keybound
 (, );

871 
NCURSES_EXPORT
(c⁄° *Ë
cur£s_vîsi⁄
 ();

872 
NCURSES_EXPORT
(Ë
assume_deÁu…_cﬁ‹s
 (, );

873 
NCURSES_EXPORT
(Ë
deföe_key
 (const *, );

874 
NCURSES_EXPORT
(Ë
gë_escdñay
 ();

875 
NCURSES_EXPORT
(Ë
key_deföed
 (const *);

876 
NCURSES_EXPORT
(Ë
keyok
 (, 
boﬁ
);

877 
NCURSES_EXPORT
(Ë
ªsize_ãrm
 (, );

878 
NCURSES_EXPORT
(Ë
ªsizëîm
 (, );

879 
NCURSES_EXPORT
(Ë
£t_escdñay
 ();

880 
NCURSES_EXPORT
(Ë
£t_èbsize
 ();

881 
NCURSES_EXPORT
(Ë
u£_deÁu…_cﬁ‹s
 ();

882 
NCURSES_EXPORT
(Ë
u£_exãnded_«mes
 (
boﬁ
);

883 
NCURSES_EXPORT
(Ë
u£_Àgacy_codög
 ();

884 
NCURSES_EXPORT
(Ë
u£_s¸ìn
 (
SCREEN
 *, 
NCURSES_SCREEN_CB
, *);

885 
NCURSES_EXPORT
(Ë
u£_wödow
 (
WINDOW
 *, 
NCURSES_WINDOW_CB
, *);

886 
NCURSES_EXPORT
(Ë
wªsize
 (
WINDOW
 *, , );

887 
NCURSES_EXPORT
(Ë
nofûãr
();

893 
NCURSES_EXPORT
(
WINDOW
 *Ë
wgë∑ª¡
 (const WINDOW *);

894 
NCURSES_EXPORT
(
boﬁ
Ë
is_˛óªd
 (c⁄° 
WINDOW
 *);

895 
NCURSES_EXPORT
(
boﬁ
Ë
is_idcok
 (c⁄° 
WINDOW
 *);

896 
NCURSES_EXPORT
(
boﬁ
Ë
is_idlok
 (c⁄° 
WINDOW
 *);

897 
NCURSES_EXPORT
(
boﬁ
Ë
is_immedok
 (c⁄° 
WINDOW
 *);

898 
NCURSES_EXPORT
(
boﬁ
Ë
is_key∑d
 (c⁄° 
WINDOW
 *);

899 
NCURSES_EXPORT
(
boﬁ
Ë
is_Àaveok
 (c⁄° 
WINDOW
 *);

900 
NCURSES_EXPORT
(
boﬁ
Ë
is_nodñay
 (c⁄° 
WINDOW
 *);

901 
NCURSES_EXPORT
(
boﬁ
Ë
is_nŸimeout
 (c⁄° 
WINDOW
 *);

902 
NCURSES_EXPORT
(
boﬁ
Ë
is_∑d
 (c⁄° 
WINDOW
 *);

903 
NCURSES_EXPORT
(
boﬁ
Ë
is_s¸ﬁlok
 (c⁄° 
WINDOW
 *);

904 
NCURSES_EXPORT
(
boﬁ
Ë
is_subwö
 (c⁄° 
WINDOW
 *);

905 
NCURSES_EXPORT
(
boﬁ
Ë
is_syncok
 (c⁄° 
WINDOW
 *);

906 
NCURSES_EXPORT
(Ë
wgës¸ªg
 (c⁄° 
WINDOW
 *, *, *);

909 
	#cur£s_vîsi⁄
(Ë
NCURSES_VERSION


	)

917 #unde‡
NCURSES_SP_FUNCS


918 
	#NCURSES_SP_FUNCS
 20110716

	)

919 
	#NCURSES_SP_NAME
(
«me
Ë«me##
_•


	)

922 
	#NCURSES_SP_OUTC
 
	`NCURSES_SP_NAME
(
NCURSES_OUTC
)

	)

923 (*
	gNCURSES_SP_OUTC
)(
	tSCREEN
*, );

925 
NCURSES_EXPORT
(
SCREEN
 *Ë
√w_¥es¸
 ();

927 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
baudøã
Ë(
SCREEN
*);

928 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
bìp
Ë(
SCREEN
*);

929 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
ˇn_ch™ge_cﬁ‹
Ë(
SCREEN
*);

930 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cbªak
Ë(
SCREEN
*);

931 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
curs_£t
Ë(
SCREEN
*, );

932 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
cﬁ‹_c⁄ã¡
Ë(
SCREEN
*, , *, *, *);

933 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_¥og_mode
Ë(
SCREEN
*);

934 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
def_shñl_mode
Ë(
SCREEN
*);

935 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
dñay_ouçut
Ë(
SCREEN
*, );

936 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
doupd©e
Ë(
SCREEN
*);

937 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
echo
Ë(
SCREEN
*);

938 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ídwö
Ë(
SCREEN
*);

939 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
îa£ch¨
Ë(
SCREEN
*);

940 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
fûãr
Ë(
SCREEN
*);

941 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êash
Ë(
SCREEN
*);

942 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
Êushöp
Ë(
SCREEN
*);

943 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
gëwö
Ë(
SCREEN
*, 
FILE
 *);

944 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
hÆfdñay
Ë(
SCREEN
*, );

945 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_cﬁ‹s
Ë(
SCREEN
*);

946 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_ic
Ë(
SCREEN
*);

947 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_û
Ë(
SCREEN
*);

948 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_cﬁ‹
Ë(
SCREEN
*, , , , );

949 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öô_∑ú
Ë(
SCREEN
*, , , );

950 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
öåÊush
Ë(
SCREEN
*, 
WINDOW
*, 
boﬁ
);

951 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
i£ndwö
Ë(
SCREEN
*);

952 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
key«me
Ë(
SCREEN
*, );

953 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
kûlch¨
Ë(
SCREEN
*);

954 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
l⁄g«me
Ë(
SCREEN
*);

955 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mvcur
Ë(
SCREEN
*, , , , );

956 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
«pms
Ë(
SCREEN
*, );

957 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√w∑d
Ë(
SCREEN
*, , );

958 
NCURSES_EXPORT
(
SCREEN
 *Ë
NCURSES_SP_NAME
(
√wãrm
Ë(SCREEN*, 
NCURSES_CONST
 *, 
FILE
 *, FILE *);

959 
NCURSES_EXPORT
(
WINDOW
 *Ë
NCURSES_SP_NAME
(
√wwö
Ë(
SCREEN
*, , , , );

960 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∆
Ë(
SCREEN
*);

961 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nocbªak
Ë(
SCREEN
*);

962 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n€cho
Ë(
SCREEN
*);

963 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n⁄l
Ë(
SCREEN
*);

964 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
noqiÊush
Ë(
SCREEN
*);

965 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
n‹aw
Ë(
SCREEN
*);

966 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
∑ú_c⁄ã¡
Ë(
SCREEN
*, , *, *);

967 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
qiÊush
Ë(
SCREEN
*);

968 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
øw
Ë(
SCREEN
*);

969 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_¥og_mode
Ë(
SCREEN
*);

970 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£t_shñl_mode
Ë(
SCREEN
*);

971 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ª£ây
Ë(
SCREEN
*);

972 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
rùofÊöe
Ë(
SCREEN
*, , (*)(
WINDOW
 *, ));

973 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ßvëty
Ë(
SCREEN
*);

974 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_öô
Ë(
SCREEN
*, const *);

975 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_ª°‹e
Ë(
SCREEN
*, const *);

976 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
s¸_£t
Ë(
SCREEN
*, const *);

977 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©åoff
Ë(
SCREEN
*, c⁄° 
chty≥
);

978 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å⁄
Ë(
SCREEN
*, c⁄° 
chty≥
);

979 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å£t
Ë(
SCREEN
*, c⁄° 
chty≥
);

980 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
¶k_©å
Ë(
SCREEN
*);

981 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_©å_£t
Ë(
SCREEN
*, c⁄° 
©å_t
, , *);

982 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_˛ór
Ë(
SCREEN
*);

983 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_cﬁ‹
Ë(
SCREEN
*, );

984 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_öô
Ë(
SCREEN
*, );

985 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
¶k_œbñ
Ë(
SCREEN
*, );

986 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_nouåe‰esh
Ë(
SCREEN
*);

987 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª‰esh
Ë(
SCREEN
*);

988 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_ª°‹e
Ë(
SCREEN
*);

989 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_£t
Ë(
SCREEN
*, , const *, );

990 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
¶k_touch
Ë(
SCREEN
*);

991 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
°¨t_cﬁ‹
Ë(
SCREEN
*);

992 
NCURSES_EXPORT
(
chty≥
Ë
NCURSES_SP_NAME
(
ãrm©ås
Ë(
SCREEN
*);

993 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
ãrm«me
Ë(
SCREEN
*);

994 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ty≥ahód
Ë(
SCREEN
*, );

995 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëch
Ë(
SCREEN
*, );

996 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_ív
Ë(
SCREEN
*, 
boﬁ
);

997 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid©å
Ë(
SCREEN
*, 
chty≥
);

998 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vidputs
Ë(
SCREEN
*, 
chty≥
, 
NCURSES_SP_OUTC
);

1000 
NCURSES_EXPORT
(*Ë
NCURSES_SP_NAME
(
keybound
Ë(
SCREEN
*, , );

1001 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
assume_deÁu…_cﬁ‹s
Ë(
SCREEN
*, , );

1002 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
deföe_key
Ë(
SCREEN
*, const *, );

1003 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gë_escdñay
Ë(
SCREEN
*);

1004 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
is_ãrm_ªsized
Ë(
SCREEN
*, , );

1005 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
key_deföed
Ë(
SCREEN
*, const *);

1006 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
keyok
Ë(
SCREEN
*, , 
boﬁ
);

1007 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
nofûãr
Ë(
SCREEN
*);

1008 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsize_ãrm
Ë(
SCREEN
*, , );

1009 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ªsizëîm
Ë(
SCREEN
*, , );

1010 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_escdñay
Ë(
SCREEN
*, );

1011 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
£t_èbsize
Ë(
SCREEN
*, );

1012 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_deÁu…_cﬁ‹s
Ë(
SCREEN
*);

1013 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
u£_Àgacy_codög
Ë(
SCREEN
*, );

1016 #unde‡
NCURSES_SP_FUNCS


1017 
	#NCURSES_SP_FUNCS
 0

	)

1018 
	#NCURSES_SP_NAME
(
«me
Ë
	)
name

1019 
	#NCURSES_SP_OUTC
 
NCURSES_OUTC


	)

1024 
	#NCURSES_ATTR_SHIFT
 8

	)

1025 
	#NCURSES_BITS
(
mask
,
shi·
Ë((maskË<< ((shi·Ë+ 
NCURSES_ATTR_SHIFT
))

	)

1027 
	#A_NORMAL
 (1UL - 1UL)

	)

1028 
	#A_ATTRIBUTES
 
	`NCURSES_BITS
(~(1UL - 1UL),0)

	)

1029 
	#A_CHARTEXT
 (
	`NCURSES_BITS
(1UL,0Ë- 1UL)

	)

1030 
	#A_COLOR
 
	`NCURSES_BITS
(((1ULË<< 8Ë- 1UL,0)

	)

1031 
	#A_STANDOUT
 
	`NCURSES_BITS
(1UL,8)

	)

1032 
	#A_UNDERLINE
 
	`NCURSES_BITS
(1UL,9)

	)

1033 
	#A_REVERSE
 
	`NCURSES_BITS
(1UL,10)

	)

1034 
	#A_BLINK
 
	`NCURSES_BITS
(1UL,11)

	)

1035 
	#A_DIM
 
	`NCURSES_BITS
(1UL,12)

	)

1036 
	#A_BOLD
 
	`NCURSES_BITS
(1UL,13)

	)

1037 
	#A_ALTCHARSET
 
	`NCURSES_BITS
(1UL,14)

	)

1038 
	#A_INVIS
 
	`NCURSES_BITS
(1UL,15)

	)

1039 
	#A_PROTECT
 
	`NCURSES_BITS
(1UL,16)

	)

1040 
	#A_HORIZONTAL
 
	`NCURSES_BITS
(1UL,17)

	)

1041 
	#A_LEFT
 
	`NCURSES_BITS
(1UL,18)

	)

1042 
	#A_LOW
 
	`NCURSES_BITS
(1UL,19)

	)

1043 
	#A_RIGHT
 
	`NCURSES_BITS
(1UL,20)

	)

1044 
	#A_TOP
 
	`NCURSES_BITS
(1UL,21)

	)

1045 
	#A_VERTICAL
 
	`NCURSES_BITS
(1UL,22)

	)

1057 
	#gëyx
(
wö
,
y
,
x
Ë(y = 
	`gëcury
(wö), x = 
	`gëcurx
(wö))

	)

1058 
	#gëbegyx
(
wö
,
y
,
x
Ë(y = 
	`gëbegy
(wö), x = 
	`gëbegx
(wö))

	)

1059 
	#gëmaxyx
(
wö
,
y
,
x
Ë(y = 
	`gëmaxy
(wö), x = 
	`gëmaxx
(wö))

	)

1060 
	#gë∑ryx
(
wö
,
y
,
x
Ë(y = 
	`gë∑ry
(wö), x = 
	`gë∑rx
(wö))

	)

1062 
	#gësyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1063 i‡(
	`is_Àaveok
(
√ws¸
)) \

1064 (
y
Ë(
x
) = -1; \

1066 
	`gëyx
(
√ws¸
,(
y
), (
x
)); \

1068 } 0)

	)

1070 
	#£tsyx
(
y
,
x
Ëdÿ{ i‡(
√ws¸
) { \

1071 i‡((
y
Ë=-1 && (
x
) == -1) \

1072 
	`Àaveok
(
√ws¸
, 
TRUE
); \

1074 
	`Àaveok
(
√ws¸
, 
FALSE
); \

1075 
	`wmove
(
√ws¸
, (
y
), (
x
)); \

1078 } 0)

	)

1080 #i‚de‡
NCURSES_NOMACROS


1086 
	#wgë°r
(
w
, 
s
Ë
	`wgën°r
(w, s, -1)

	)

1087 
	#gën°r
(
s
, 
n
Ë
	`wgën°r
(
°ds¸
, s,Ç)

	)

1089 
	#£âîm
(
ãrm
Ë
	`£tu±îm
—îm, 1, (*)0)

	)

1091 
	#fixãrm
(Ë
	`ª£t_¥og_mode
()

	)

1092 
	#ª£âîm
(Ë
	`ª£t_shñl_mode
()

	)

1093 
	#ßvëîm
(Ë
	`def_¥og_mode
()

	)

1094 
	#¸mode
(Ë
	`cbªak
()

	)

1095 
	#no¸mode
(Ë
	`nocbªak
()

	)

1096 
	#gëtmode
()

	)

1099 #i‡!
NCURSES_OPAQUE


1100 
	#gë©ås
(
wö
Ë
	`NCURSES_CAST
(, (wöË? (wö)->
_©ås
 : 
A_NORMAL
)

	)

1101 
	#gëcurx
(
wö
Ë((wöË? (wö)->
_curx
 : 
ERR
)

	)

1102 
	#gëcury
(
wö
Ë((wöË? (wö)->
_cury
 : 
ERR
)

	)

1103 
	#gëbegx
(
wö
Ë((wöË? (wö)->
_begx
 : 
ERR
)

	)

1104 
	#gëbegy
(
wö
Ë((wöË? (wö)->
_begy
 : 
ERR
)

	)

1105 
	#gëmaxx
(
wö
Ë((wöË? ((wö)->
_maxx
 + 1Ë: 
ERR
)

	)

1106 
	#gëmaxy
(
wö
Ë((wöË? ((wö)->
_maxy
 + 1Ë: 
ERR
)

	)

1107 
	#gë∑rx
(
wö
Ë((wöË? (wö)->
_∑rx
 : 
ERR
)

	)

1108 
	#gë∑ry
(
wö
Ë((wöË? (wö)->
_∑ry
 : 
ERR
)

	)

1111 
	#w°™dout
(
wö
Ë(
	`w©å£t
(wö,
A_STANDOUT
))

	)

1112 
	#w°™díd
(
wö
Ë(
	`w©å£t
(wö,
A_NORMAL
))

	)

1114 
	#w©å⁄
(
wö
,
©
Ë
	`w©å_⁄
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1115 
	#w©åoff
(
wö
,
©
Ë
	`w©å_off
(wö, 
	`NCURSES_CAST
(
©å_t
,át), 
NULL
)

	)

1117 #i‡!
NCURSES_OPAQUE


1118 #i‡
deföed
(
NCURSES_WIDECHAR
) && 0

1119 
	#w©å£t
(
wö
,
©
) ((win) \

1120 ? ((
wö
)->
_cﬁ‹
 = 
	`PAIR_NUMBER
(
©
), \

1121 (
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1122 
OK
) \

1123 : 
ERR
)

	)

1125 
	#w©å£t
(
wö
,
©
) ((win) \

1126 ? ((
wö
)->
_©ås
 = 
	`NCURSES_CAST
(
©å_t
, 
©
), \

1127 
OK
) \

1128 : 
ERR
)

	)

1132 
	#s¸ﬁl
(
wö
Ë
	`ws¸l
(wö,1)

	)

1134 
	#touchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 1)

	)

1135 
	#touchlöe
(
wö
, 
s
, 
c
Ë
	`wtouch 
((wö), s, c, 1)

	)

1136 
	#u¡ouchwö
(
wö
Ë
	`wtouch 
((wö), 0, 
	`gëmaxy
(wö), 0)

	)

1138 
	#box
(
wö
, 
v
, 
h
Ë
	`wb‹dî
(wö, v, v, h, h, 0, 0, 0, 0)

	)

1139 
	#b‹dî
(
ls
, 
rs
, 
ts
, 
bs
, 
é
, 
å
, 
bl
, 
br
Ë
	`wb‹dî
(
°ds¸
,Üs,Ñs,Ås, bs,Ål,År, bl, br)

	)

1140 
	#hlöe
(
ch
, 
n
Ë
	`whlöe
(
°ds¸
, ch,Ç)

	)

1141 
	#vlöe
(
ch
, 
n
Ë
	`wvlöe
(
°ds¸
, ch,Ç)

	)

1143 
	#wö°r
(
w
, 
s
Ë
	`wön°r
(w, s, -1)

	)

1144 
	#wöch°r
(
w
, 
s
Ë
	`wöchn°r
(w, s, -1)

	)

1145 
	#wös°r
(
w
, 
s
Ë
	`wö¢°r
(w, s, -1)

	)

1147 #i‡!
NCURSES_OPAQUE


1148 
	#ªdøwwö
(
wö
Ë
	`wªdøw 
(wö, 0, ((wöË? (wö)->
_maxy
+1 : -1))

	)

1151 
	#wadd°r
(
wö
,
°r
Ë
	`waddn°r
(wö,°r,-1)

	)

1152 
	#waddch°r
(
wö
,
°r
Ë
	`waddchn°r
(wö,°r,-1)

	)

1157 
	#COLOR_PAIR
(
n
Ë
	`NCURSES_BITS
“, 0)

	)

1158 
	#PAIR_NUMBER
(
a
Ë(
	`NCURSES_CAST
(,((NCURSES_CAST(,aË& 
A_COLOR
Ë>> 
NCURSES_ATTR_SHIFT
)))

	)

1164 
	#addch
(
ch
Ë
	`waddch
(
°ds¸
,ch)

	)

1165 
	#addchn°r
(
°r
,
n
Ë
	`waddchn°r
(
°ds¸
,°r,n)

	)

1166 
	#addch°r
(
°r
Ë
	`waddch°r
(
°ds¸
,°r)

	)

1167 
	#addn°r
(
°r
,
n
Ë
	`waddn°r
(
°ds¸
,°r,n)

	)

1168 
	#add°r
(
°r
Ë
	`waddn°r
(
°ds¸
,°r,-1)

	)

1169 
	#©åoff
(
©
Ë
	`w©åoff
(
°ds¸
,©)

	)

1170 
	#©å⁄
(
©
Ë
	`w©å⁄
(
°ds¸
,©)

	)

1171 
	#©å£t
(
©
Ë
	`w©å£t
(
°ds¸
,©)

	)

1172 
	#©å_gë
(
≠
,
˝
,
o
Ë
	`w©å_gë
(
°ds¸
,≠,˝,o)

	)

1173 
	#©å_off
(
a
,
o
Ë
	`w©å_off
(
°ds¸
,a,o)

	)

1174 
	#©å_⁄
(
a
,
o
Ë
	`w©å_⁄
(
°ds¸
,a,o)

	)

1175 
	#©å_£t
(
a
,
c
,
o
Ë
	`w©å_£t
(
°ds¸
,a,c,o)

	)

1176 
	#bkgd
(
ch
Ë
	`wbkgd
(
°ds¸
,ch)

	)

1177 
	#bkgd£t
(
ch
Ë
	`wbkgd£t
(
°ds¸
,ch)

	)

1178 
	#chg©
(
n
,
a
,
c
,
o
Ë
	`wchg©
(
°ds¸
,n,a,c,o)

	)

1179 
	#˛ór
(Ë
	`w˛ór
(
°ds¸
)

	)

1180 
	#˛πobŸ
(Ë
	`w˛πobŸ
(
°ds¸
)

	)

1181 
	#˛π€ﬁ
(Ë
	`w˛π€ﬁ
(
°ds¸
)

	)

1182 
	#cﬁ‹_£t
(
c
,
o
Ë
	`wcﬁ‹_£t
(
°ds¸
,c,o)

	)

1183 
	#dñch
(Ë
	`wdñch
(
°ds¸
)

	)

1184 
	#dñëñn
(Ë
	`wösdñ 
(
°ds¸
,-1)

	)

1185 
	#echoch¨
(
c
Ë
	`wechoch¨
(
°ds¸
,c)

	)

1186 
	#îa£
(Ë
	`wîa£
(
°ds¸
)

	)

1187 
	#gëch
(Ë
	`wgëch
(
°ds¸
)

	)

1188 
	#gë°r
(
°r
Ë
	`wgë°r
(
°ds¸
,°r)

	)

1189 
	#öch
(Ë
	`wöch
(
°ds¸
)

	)

1190 
	#öchn°r
(
s
,
n
Ë
	`wöchn°r
(
°ds¸
,s,n)

	)

1191 
	#öch°r
(
s
Ë
	`wöch°r
(
°ds¸
,s)

	)

1192 
	#ön°r
(
s
,
n
Ë
	`wön°r
(
°ds¸
,s,n)

	)

1193 
	#ösch
(
c
Ë
	`wösch
(
°ds¸
,c)

	)

1194 
	#ösdñ 
(
n
Ë
	`wösdñ 
(
°ds¸
,n)

	)

1195 
	#ö£π 
(Ë
	`wösdñ 
(
°ds¸
,1)

	)

1196 
	#ö¢°r
(
s
,
n
Ë
	`wö¢°r
(
°ds¸
,s,n)

	)

1197 
	#ös°r
(
s
Ë
	`wös°r
(
°ds¸
,s)

	)

1198 
	#ö°r
(
s
Ë
	`wö°r
(
°ds¸
,s)

	)

1199 
	#move
(
y
,
x
Ë
	`wmove
(
°ds¸
,y,x)

	)

1200 
	#ª‰esh
(Ë
	`wª‰esh
(
°ds¸
)

	)

1201 
	#s¸l
(
n
Ë
	`ws¸l
(
°ds¸
,n)

	)

1202 
	#£ts¸ªg
(
t
,
b
Ë
	`w£ts¸ªg
(
°ds¸
,t,b)

	)

1203 
	#°™díd
(Ë
	`w°™díd
(
°ds¸
)

	)

1204 
	#°™dout
(Ë
	`w°™dout
(
°ds¸
)

	)

1205 
	#timeout
(
dñay
Ë
	`wtimeout
(
°ds¸
,dñay)

	)

1206 
	#wdñëñn
(
wö
Ë
	`wösdñ 
(wö,-1)

	)

1207 
	#wö£π 
(
wö
Ë
	`wösdñ 
(wö,1)

	)

1213 
	#mvwaddch
(
wö
,
y
,
x
,
ch
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddch
(wö,ch))

	)

1214 
	#mvwaddchn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,n))

	)

1215 
	#mvwaddch°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddchn°r
(wö,°r,-1))

	)

1216 
	#mvwaddn°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,n))

	)

1217 
	#mvwadd°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddn°r
(wö,°r,-1))

	)

1218 
	#mvwdñch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wdñch
(wö))

	)

1219 
	#mvwchg©
(
wö
,
y
,
x
,
n
,
a
,
c
,
o
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wchg©
(wö,n,a,c,o))

	)

1220 
	#mvwgëch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgëch
(wö))

	)

1221 
	#mvwgën°r
(
wö
,
y
,
x
,
°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën°r
(wö,°r,n))

	)

1222 
	#mvwgë°r
(
wö
,
y
,
x
,
°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë°r
(wö,°r))

	)

1223 
	#mvwhlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe
(wö,c,n))

	)

1224 
	#mvwöch
(
wö
,
y
,
x
Ë(
	`wmove
(wö,y,xË=
ERR
 ? 
	`NCURSES_CAST
(
chty≥
, ERRË: 
	`wöch
(wö))

	)

1225 
	#mvwöchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöchn°r
(wö,s,n))

	)

1226 
	#mvwöch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöch°r
(wö,s))

	)

1227 
	#mvwön°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wön°r
(wö,s,n))

	)

1228 
	#mvwösch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wösch
(wö,c))

	)

1229 
	#mvwö¢°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö¢°r
(wö,s,n))

	)

1230 
	#mvwös°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös°r
(wö,s))

	)

1231 
	#mvwö°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö°r
(wö,s))

	)

1232 
	#mvwvlöe
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe
(wö,c,n))

	)

1234 
	#mvaddch
(
y
,
x
,
ch
Ë
	`mvwaddch
(
°ds¸
,y,x,ch)

	)

1235 
	#mvaddchn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddchn°r
(
°ds¸
,y,x,°r,n)

	)

1236 
	#mvaddch°r
(
y
,
x
,
°r
Ë
	`mvwaddch°r
(
°ds¸
,y,x,°r)

	)

1237 
	#mvaddn°r
(
y
,
x
,
°r
,
n
Ë
	`mvwaddn°r
(
°ds¸
,y,x,°r,n)

	)

1238 
	#mvadd°r
(
y
,
x
,
°r
Ë
	`mvwadd°r
(
°ds¸
,y,x,°r)

	)

1239 
	#mvchg©
(
y
,
x
,
n
,
a
,
c
,
o
Ë
	`mvwchg©
(
°ds¸
,y,x,n,a,c,o)

	)

1240 
	#mvdñch
(
y
,
x
Ë
	`mvwdñch
(
°ds¸
,y,x)

	)

1241 
	#mvgëch
(
y
,
x
Ë
	`mvwgëch
(
°ds¸
,y,x)

	)

1242 
	#mvgën°r
(
y
,
x
,
°r
,
n
Ë
	`mvwgën°r
(
°ds¸
,y,x,°r,n)

	)

1243 
	#mvgë°r
(
y
,
x
,
°r
Ë
	`mvwgë°r
(
°ds¸
,y,x,°r)

	)

1244 
	#mvhlöe
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe
(
°ds¸
,y,x,c,n)

	)

1245 
	#mvöch
(
y
,
x
Ë
	`mvwöch
(
°ds¸
,y,x)

	)

1246 
	#mvöchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwöchn°r
(
°ds¸
,y,x,s,n)

	)

1247 
	#mvöch°r
(
y
,
x
,
s
Ë
	`mvwöch°r
(
°ds¸
,y,x,s)

	)

1248 
	#mvön°r
(
y
,
x
,
s
,
n
Ë
	`mvwön°r
(
°ds¸
,y,x,s,n)

	)

1249 
	#mvösch
(
y
,
x
,
c
Ë
	`mvwösch
(
°ds¸
,y,x,c)

	)

1250 
	#mvö¢°r
(
y
,
x
,
s
,
n
Ë
	`mvwö¢°r
(
°ds¸
,y,x,s,n)

	)

1251 
	#mvös°r
(
y
,
x
,
s
Ë
	`mvwös°r
(
°ds¸
,y,x,s)

	)

1252 
	#mvö°r
(
y
,
x
,
s
Ë
	`mvwö°r
(
°ds¸
,y,x,s)

	)

1253 
	#mvvlöe
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe
(
°ds¸
,y,x,c,n)

	)

1258 #i‡!
NCURSES_OPAQUE


1259 
	#gëbkgd
(
wö
Ë((wöË? ((wö)->
_bkgd
Ë: 0)

	)

1262 
	#¶k_©å_off
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©åoff
◊))

	)

1263 
	#¶k_©å_⁄
(
a
,
v
Ë((vË? 
ERR
 : 
	`¶k_©å⁄
◊))

	)

1265 #i‡!
NCURSES_OPAQUE


1266 #i‡
deföed
(
NCURSES_WIDECHAR
) && 0

1267 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
) (((win) \

1268 ? ((
wö
)->
_©ås
 = ((
a
Ë& ~
A_COLOR
), \

1269 (
wö
)->
_cﬁ‹
 = (
p
)) \

1270 : 
OK
), \

1271 
OK
)

	)

1272 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
) (((win) \

1273 ? (()((
a
Ë!(*)0 && (*◊Ë(
wö
)->
_©ås
)), \

1274 ()((
p
Ë!(*)0 && (*’Ë()(
wö
)->
_cﬁ‹
)),
OK
) \

1275 : 
OK
), \

1276 
OK
)

	)

1278 
	#w©å_£t
(
wö
,
a
,
p
,
›ts
) (((win) \

1279 ? ((
wö
)->
_©ås
 = (((
a
Ë& ~
A_COLOR
Ë| (
©å_t
)
	`COLOR_PAIR
(
p
))) \

1280 : 
OK
), \

1281 
OK
)

	)

1282 
	#w©å_gë
(
wö
,
a
,
p
,
›ts
) (((win) \

1283 ? (()((
a
Ë!(*)0 && (*◊Ë(
wö
)->
_©ås
)), \

1284 ()((
p
Ë!(*)0 && (*’Ë()
	`PAIR_NUMBER
((
wö
)->
_©ås
))),
OK
) \

1285 : 
OK
), \

1286 
OK
)

	)

1296 
	#vw_¥ötw
 
vw¥ötw


	)

1297 
	#vw_sˇnw
 
vwsˇnw


	)

1303 
	#vssˇnf
(
a
,
b
,
c
Ë
	`_nc_vssˇnf
◊,b,c)

	)

1304 
NCURSES_EXPORT
(Ë
vssˇnf
(c⁄° *, c⁄° *, 
va_li°
);

1311 #i‡!
NCURSES_OPAQUE


1312 
	#is_˛óªd
(
wö
Ë((wöË? (wö)->
_˛ór
 : 
FALSE
)

	)

1313 
	#is_idcok
(
wö
Ë((wöË? (wö)->
_idcok
 : 
FALSE
)

	)

1314 
	#is_idlok
(
wö
Ë((wöË? (wö)->
_idlok
 : 
FALSE
)

	)

1315 
	#is_immedok
(
wö
Ë((wöË? (wö)->
_immed
 : 
FALSE
)

	)

1316 
	#is_key∑d
(
wö
Ë((wöË? (wö)->
_u£_key∑d
 : 
FALSE
)

	)

1317 
	#is_Àaveok
(
wö
Ë((wöË? (wö)->
_Àaveok
 : 
FALSE
)

	)

1318 
	#is_nodñay
(
wö
Ë((wöË? ((wö)->
_dñay
 =0Ë: 
FALSE
)

	)

1319 
	#is_nŸimeout
(
wö
Ë((wöË? (wö)->
_nŸimeout
 : 
FALSE
)

	)

1320 
	#is_∑d
(
wö
Ë((wöË? ((wö)->
_Êags
 & 
_ISPAD
Ë!0 : 
FALSE
)

	)

1321 
	#is_s¸ﬁlok
(
wö
Ë((wöË? (wö)->
_s¸ﬁl
 : 
FALSE
)

	)

1322 
	#is_subwö
(
wö
Ë((wöË? ((wö)->
_Êags
 & 
_SUBWIN
Ë!0 : 
FALSE
)

	)

1323 
	#is_syncok
(
wö
Ë((wöË? (wö)->
_sync
 : 
FALSE
)

	)

1324 
	#wgë∑ª¡
(
wö
Ë((wöË? (wö)->
_∑ª¡
 : 0)

	)

1325 
	#wgës¸ªg
(
wö
,
t
,
b
Ë((wöË? (*—Ë(wö)->
_ªgt›
, *(bË(wö)->
_ªgbŸtom
, 
OK
Ë: 
ERR
)

	)

1339 #i‡
NCURSES_REENTRANT


1341 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
curs¸
);

1342 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
√ws¸
);

1343 
NCURSES_WRAPPED_VAR
(
WINDOW
 *, 
°ds¸
);

1344 
NCURSES_WRAPPED_VAR
(*, 
âyty≥
);

1345 
NCURSES_WRAPPED_VAR
(, 
COLORS
);

1346 
NCURSES_WRAPPED_VAR
(, 
COLOR_PAIRS
);

1347 
NCURSES_WRAPPED_VAR
(, 
COLS
);

1348 
NCURSES_WRAPPED_VAR
(, 
ESCDELAY
);

1349 
NCURSES_WRAPPED_VAR
(, 
LINES
);

1350 
NCURSES_WRAPPED_VAR
(, 
TABSIZE
);

1352 
	#curs¸
 
	`NCURSES_PUBLIC_VAR
(
	`curs¸
())

	)

1353 
	#√ws¸
 
	`NCURSES_PUBLIC_VAR
(
	`√ws¸
())

	)

1354 
	#°ds¸
 
	`NCURSES_PUBLIC_VAR
(
	`°ds¸
())

	)

1355 
	#âyty≥
 
	`NCURSES_PUBLIC_VAR
(
	`âyty≥
())

	)

1356 
	#COLORS
 
	`NCURSES_PUBLIC_VAR
(
	`COLORS
())

	)

1357 
	#COLOR_PAIRS
 
	`NCURSES_PUBLIC_VAR
(
	`COLOR_PAIRS
())

	)

1358 
	#COLS
 
	`NCURSES_PUBLIC_VAR
(
	`COLS
())

	)

1359 
	#ESCDELAY
 
	`NCURSES_PUBLIC_VAR
(
	`ESCDELAY
())

	)

1360 
	#LINES
 
	`NCURSES_PUBLIC_VAR
(
	`LINES
())

	)

1361 
	#TABSIZE
 
	`NCURSES_PUBLIC_VAR
(
	`TABSIZE
())

	)

1365 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
curs¸
;

1366 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
√ws¸
;

1367 
NCURSES_EXPORT_VAR
(
WINDOW
 *Ë
°ds¸
;

1368 
NCURSES_EXPORT_VAR
(Ë
âyty≥
[];

1369 
NCURSES_EXPORT_VAR
(Ë
COLORS
;

1370 
NCURSES_EXPORT_VAR
(Ë
COLOR_PAIRS
;

1371 
NCURSES_EXPORT_VAR
(Ë
COLS
;

1372 
NCURSES_EXPORT_VAR
(Ë
ESCDELAY
;

1373 
NCURSES_EXPORT_VAR
(Ë
LINES
;

1374 
NCURSES_EXPORT_VAR
(Ë
TABSIZE
;

1390 
	#KEY_CODE_YES
 0400

	)

1391 
	#KEY_MIN
 0401

	)

1392 
	#KEY_BREAK
 0401

	)

1393 
	#KEY_SRESET
 0530

	)

1394 
	#KEY_RESET
 0531

	)

1398 
	#KEY_DOWN
 0402

	)

1399 
	#KEY_UP
 0403

	)

1400 
	#KEY_LEFT
 0404

	)

1401 
	#KEY_RIGHT
 0405

	)

1402 
	#KEY_HOME
 0406

	)

1403 
	#KEY_BACKSPACE
 0407

	)

1404 
	#KEY_F0
 0410

	)

1405 
	#KEY_F
(
n
Ë(
KEY_F0
+“)Ë

	)

1406 
	#KEY_DL
 0510

	)

1407 
	#KEY_IL
 0511

	)

1408 
	#KEY_DC
 0512

	)

1409 
	#KEY_IC
 0513

	)

1410 
	#KEY_EIC
 0514

	)

1411 
	#KEY_CLEAR
 0515

	)

1412 
	#KEY_EOS
 0516

	)

1413 
	#KEY_EOL
 0517

	)

1414 
	#KEY_SF
 0520

	)

1415 
	#KEY_SR
 0521

	)

1416 
	#KEY_NPAGE
 0522

	)

1417 
	#KEY_PPAGE
 0523

	)

1418 
	#KEY_STAB
 0524

	)

1419 
	#KEY_CTAB
 0525

	)

1420 
	#KEY_CATAB
 0526

	)

1421 
	#KEY_ENTER
 0527

	)

1422 
	#KEY_PRINT
 0532

	)

1423 
	#KEY_LL
 0533

	)

1424 
	#KEY_A1
 0534

	)

1425 
	#KEY_A3
 0535

	)

1426 
	#KEY_B2
 0536

	)

1427 
	#KEY_C1
 0537

	)

1428 
	#KEY_C3
 0540

	)

1429 
	#KEY_BTAB
 0541

	)

1430 
	#KEY_BEG
 0542

	)

1431 
	#KEY_CANCEL
 0543

	)

1432 
	#KEY_CLOSE
 0544

	)

1433 
	#KEY_COMMAND
 0545

	)

1434 
	#KEY_COPY
 0546

	)

1435 
	#KEY_CREATE
 0547

	)

1436 
	#KEY_END
 0550

	)

1437 
	#KEY_EXIT
 0551

	)

1438 
	#KEY_FIND
 0552

	)

1439 
	#KEY_HELP
 0553

	)

1440 
	#KEY_MARK
 0554

	)

1441 
	#KEY_MESSAGE
 0555

	)

1442 
	#KEY_MOVE
 0556

	)

1443 
	#KEY_NEXT
 0557

	)

1444 
	#KEY_OPEN
 0560

	)

1445 
	#KEY_OPTIONS
 0561

	)

1446 
	#KEY_PREVIOUS
 0562

	)

1447 
	#KEY_REDO
 0563

	)

1448 
	#KEY_REFERENCE
 0564

	)

1449 
	#KEY_REFRESH
 0565

	)

1450 
	#KEY_REPLACE
 0566

	)

1451 
	#KEY_RESTART
 0567

	)

1452 
	#KEY_RESUME
 0570

	)

1453 
	#KEY_SAVE
 0571

	)

1454 
	#KEY_SBEG
 0572

	)

1455 
	#KEY_SCANCEL
 0573

	)

1456 
	#KEY_SCOMMAND
 0574

	)

1457 
	#KEY_SCOPY
 0575

	)

1458 
	#KEY_SCREATE
 0576

	)

1459 
	#KEY_SDC
 0577

	)

1460 
	#KEY_SDL
 0600

	)

1461 
	#KEY_SELECT
 0601

	)

1462 
	#KEY_SEND
 0602

	)

1463 
	#KEY_SEOL
 0603

	)

1464 
	#KEY_SEXIT
 0604

	)

1465 
	#KEY_SFIND
 0605

	)

1466 
	#KEY_SHELP
 0606

	)

1467 
	#KEY_SHOME
 0607

	)

1468 
	#KEY_SIC
 0610

	)

1469 
	#KEY_SLEFT
 0611

	)

1470 
	#KEY_SMESSAGE
 0612

	)

1471 
	#KEY_SMOVE
 0613

	)

1472 
	#KEY_SNEXT
 0614

	)

1473 
	#KEY_SOPTIONS
 0615

	)

1474 
	#KEY_SPREVIOUS
 0616

	)

1475 
	#KEY_SPRINT
 0617

	)

1476 
	#KEY_SREDO
 0620

	)

1477 
	#KEY_SREPLACE
 0621

	)

1478 
	#KEY_SRIGHT
 0622

	)

1479 
	#KEY_SRSUME
 0623

	)

1480 
	#KEY_SSAVE
 0624

	)

1481 
	#KEY_SSUSPEND
 0625

	)

1482 
	#KEY_SUNDO
 0626

	)

1483 
	#KEY_SUSPEND
 0627

	)

1484 
	#KEY_UNDO
 0630

	)

1485 
	#KEY_MOUSE
 0631

	)

1486 
	#KEY_RESIZE
 0632

	)

1487 
	#KEY_EVENT
 0633

	)

1489 
	#KEY_MAX
 0777

	)

1496 
	#_XOPEN_CURSES
 1

	)

1498 #ifde‡
NCURSES_WIDECHAR


1500 
NCURSES_EXPORT_VAR
(
cch¨_t
 *Ë
_nc_wacs
;

1502 
	#NCURSES_WACS
(
c
Ë(&
_nc_wacs
[()c])

	)

1504 
	#WACS_BSSB
 
	`NCURSES_WACS
('l')

	)

1505 
	#WACS_SSBB
 
	`NCURSES_WACS
('m')

	)

1506 
	#WACS_BBSS
 
	`NCURSES_WACS
('k')

	)

1507 
	#WACS_SBBS
 
	`NCURSES_WACS
('j')

	)

1508 
	#WACS_SBSS
 
	`NCURSES_WACS
('u')

	)

1509 
	#WACS_SSSB
 
	`NCURSES_WACS
('t')

	)

1510 
	#WACS_SSBS
 
	`NCURSES_WACS
('v')

	)

1511 
	#WACS_BSSS
 
	`NCURSES_WACS
('w')

	)

1512 
	#WACS_BSBS
 
	`NCURSES_WACS
('q')

	)

1513 
	#WACS_SBSB
 
	`NCURSES_WACS
('x')

	)

1514 
	#WACS_SSSS
 
	`NCURSES_WACS
('n')

	)

1516 
	#WACS_ULCORNER
 
WACS_BSSB


	)

1517 
	#WACS_LLCORNER
 
WACS_SSBB


	)

1518 
	#WACS_URCORNER
 
WACS_BBSS


	)

1519 
	#WACS_LRCORNER
 
WACS_SBBS


	)

1520 
	#WACS_RTEE
 
WACS_SBSS


	)

1521 
	#WACS_LTEE
 
WACS_SSSB


	)

1522 
	#WACS_BTEE
 
WACS_SSBS


	)

1523 
	#WACS_TTEE
 
WACS_BSSS


	)

1524 
	#WACS_HLINE
 
WACS_BSBS


	)

1525 
	#WACS_VLINE
 
WACS_SBSB


	)

1526 
	#WACS_PLUS
 
WACS_SSSS


	)

1528 
	#WACS_S1
 
	`NCURSES_WACS
('o'Ë

	)

1529 
	#WACS_S9
 
	`NCURSES_WACS
('s'Ë

	)

1530 
	#WACS_DIAMOND
 
	`NCURSES_WACS
('`'Ë

	)

1531 
	#WACS_CKBOARD
 
	`NCURSES_WACS
('a'Ë

	)

1532 
	#WACS_DEGREE
 
	`NCURSES_WACS
('f'Ë

	)

1533 
	#WACS_PLMINUS
 
	`NCURSES_WACS
('g'Ë

	)

1534 
	#WACS_BULLET
 
	`NCURSES_WACS
('~'Ë

	)

1537 
	#WACS_LARROW
 
	`NCURSES_WACS
(','Ë

	)

1538 
	#WACS_RARROW
 
	`NCURSES_WACS
('+'Ë

	)

1539 
	#WACS_DARROW
 
	`NCURSES_WACS
('.'Ë

	)

1540 
	#WACS_UARROW
 
	`NCURSES_WACS
('-'Ë

	)

1541 
	#WACS_BOARD
 
	`NCURSES_WACS
('h'Ë

	)

1542 
	#WACS_LANTERN
 
	`NCURSES_WACS
('i'Ë

	)

1543 
	#WACS_BLOCK
 
	`NCURSES_WACS
('0'Ë

	)

1546 
	#WACS_S3
 
	`NCURSES_WACS
('p'Ë

	)

1547 
	#WACS_S7
 
	`NCURSES_WACS
('r'Ë

	)

1548 
	#WACS_LEQUAL
 
	`NCURSES_WACS
('y'Ë

	)

1549 
	#WACS_GEQUAL
 
	`NCURSES_WACS
('z'Ë

	)

1550 
	#WACS_PI
 
	`NCURSES_WACS
('{'Ë

	)

1551 
	#WACS_NEQUAL
 
	`NCURSES_WACS
('|'Ë

	)

1552 
	#WACS_STERLING
 
	`NCURSES_WACS
('}'Ë

	)

1555 
	#WACS_BDDB
 
	`NCURSES_WACS
('C')

	)

1556 
	#WACS_DDBB
 
	`NCURSES_WACS
('D')

	)

1557 
	#WACS_BBDD
 
	`NCURSES_WACS
('B')

	)

1558 
	#WACS_DBBD
 
	`NCURSES_WACS
('A')

	)

1559 
	#WACS_DBDD
 
	`NCURSES_WACS
('G')

	)

1560 
	#WACS_DDDB
 
	`NCURSES_WACS
('F')

	)

1561 
	#WACS_DDBD
 
	`NCURSES_WACS
('H')

	)

1562 
	#WACS_BDDD
 
	`NCURSES_WACS
('I')

	)

1563 
	#WACS_BDBD
 
	`NCURSES_WACS
('R')

	)

1564 
	#WACS_DBDB
 
	`NCURSES_WACS
('Y')

	)

1565 
	#WACS_DDDD
 
	`NCURSES_WACS
('E')

	)

1567 
	#WACS_D_ULCORNER
 
WACS_BDDB


	)

1568 
	#WACS_D_LLCORNER
 
WACS_DDBB


	)

1569 
	#WACS_D_URCORNER
 
WACS_BBDD


	)

1570 
	#WACS_D_LRCORNER
 
WACS_DBBD


	)

1571 
	#WACS_D_RTEE
 
WACS_DBDD


	)

1572 
	#WACS_D_LTEE
 
WACS_DDDB


	)

1573 
	#WACS_D_BTEE
 
WACS_DDBD


	)

1574 
	#WACS_D_TTEE
 
WACS_BDDD


	)

1575 
	#WACS_D_HLINE
 
WACS_BDBD


	)

1576 
	#WACS_D_VLINE
 
WACS_DBDB


	)

1577 
	#WACS_D_PLUS
 
WACS_DDDD


	)

1580 
	#WACS_BTTB
 
	`NCURSES_WACS
('L')

	)

1581 
	#WACS_TTBB
 
	`NCURSES_WACS
('M')

	)

1582 
	#WACS_BBTT
 
	`NCURSES_WACS
('K')

	)

1583 
	#WACS_TBBT
 
	`NCURSES_WACS
('J')

	)

1584 
	#WACS_TBTT
 
	`NCURSES_WACS
('U')

	)

1585 
	#WACS_TTTB
 
	`NCURSES_WACS
('T')

	)

1586 
	#WACS_TTBT
 
	`NCURSES_WACS
('V')

	)

1587 
	#WACS_BTTT
 
	`NCURSES_WACS
('W')

	)

1588 
	#WACS_BTBT
 
	`NCURSES_WACS
('Q')

	)

1589 
	#WACS_TBTB
 
	`NCURSES_WACS
('X')

	)

1590 
	#WACS_TTTT
 
	`NCURSES_WACS
('N')

	)

1592 
	#WACS_T_ULCORNER
 
WACS_BTTB


	)

1593 
	#WACS_T_LLCORNER
 
WACS_TTBB


	)

1594 
	#WACS_T_URCORNER
 
WACS_BBTT


	)

1595 
	#WACS_T_LRCORNER
 
WACS_TBBT


	)

1596 
	#WACS_T_RTEE
 
WACS_TBTT


	)

1597 
	#WACS_T_LTEE
 
WACS_TTTB


	)

1598 
	#WACS_T_BTEE
 
WACS_TTBT


	)

1599 
	#WACS_T_TTEE
 
WACS_BTTT


	)

1600 
	#WACS_T_HLINE
 
WACS_BTBT


	)

1601 
	#WACS_T_VLINE
 
WACS_TBTB


	)

1602 
	#WACS_T_PLUS
 
WACS_TTTT


	)

1613 
NCURSES_EXPORT
(Ë
add_wch
 (c⁄° 
cch¨_t
 *);

1614 
NCURSES_EXPORT
(Ë
add_wchn°r
 (c⁄° 
cch¨_t
 *, );

1615 
NCURSES_EXPORT
(Ë
add_wch°r
 (c⁄° 
cch¨_t
 *);

1616 
NCURSES_EXPORT
(Ë
addnw°r
 (c⁄° 
wch¨_t
 *, );

1617 
NCURSES_EXPORT
(Ë
addw°r
 (c⁄° 
wch¨_t
 *);

1618 
NCURSES_EXPORT
(Ë
bkg∫d
 (c⁄° 
cch¨_t
 *);

1619 
NCURSES_EXPORT
(Ë
bkg∫d£t
 (c⁄° 
cch¨_t
 *);

1620 
NCURSES_EXPORT
(Ë
b‹dî_£t
 (c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1621 
NCURSES_EXPORT
(Ë
box_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, const cchar_t *);

1622 
NCURSES_EXPORT
(Ë
echo_wch¨
 (c⁄° 
cch¨_t
 *);

1623 
NCURSES_EXPORT
(Ë
îa£wch¨
 (
wch¨_t
*);

1624 
NCURSES_EXPORT
(Ë
gë_wch
 (
wöt_t
 *);

1625 
NCURSES_EXPORT
(Ë
gë_w°r
 (
wöt_t
 *);

1626 
NCURSES_EXPORT
(Ë
gëbkg∫d
 (
cch¨_t
 *);

1627 
NCURSES_EXPORT
(Ë
gëcch¨
 (c⁄° 
cch¨_t
 *, 
wch¨_t
*, 
©å_t
*, *, *);

1628 
NCURSES_EXPORT
(Ë
gën_w°r
 (
wöt_t
 *, );

1629 
NCURSES_EXPORT
(Ë
hlöe_£t
 (c⁄° 
cch¨_t
 *, );

1630 
NCURSES_EXPORT
(Ë
ö_wch
 (
cch¨_t
 *);

1631 
NCURSES_EXPORT
(Ë
ö_wchn°r
 (
cch¨_t
 *, );

1632 
NCURSES_EXPORT
(Ë
ö_wch°r
 (
cch¨_t
 *);

1633 
NCURSES_EXPORT
(Ë
önw°r
 (
wch¨_t
 *, );

1634 
NCURSES_EXPORT
(Ë
ös_nw°r
 (c⁄° 
wch¨_t
 *, );

1635 
NCURSES_EXPORT
(Ë
ös_wch
 (c⁄° 
cch¨_t
 *);

1636 
NCURSES_EXPORT
(Ë
ös_w°r
 (c⁄° 
wch¨_t
 *);

1637 
NCURSES_EXPORT
(Ë
öw°r
 (
wch¨_t
 *);

1638 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
key_«me
 (
wch¨_t
);

1639 
NCURSES_EXPORT
(Ë
kûlwch¨
 (
wch¨_t
 *);

1640 
NCURSES_EXPORT
(Ë
mvadd_wch
 (, , c⁄° 
cch¨_t
 *);

1641 
NCURSES_EXPORT
(Ë
mvadd_wchn°r
 (, , c⁄° 
cch¨_t
 *, );

1642 
NCURSES_EXPORT
(Ë
mvadd_wch°r
 (, , c⁄° 
cch¨_t
 *);

1643 
NCURSES_EXPORT
(Ë
mvaddnw°r
 (, , c⁄° 
wch¨_t
 *, );

1644 
NCURSES_EXPORT
(Ë
mvaddw°r
 (, , c⁄° 
wch¨_t
 *);

1645 
NCURSES_EXPORT
(Ë
mvgë_wch
 (, , 
wöt_t
 *);

1646 
NCURSES_EXPORT
(Ë
mvgë_w°r
 (, , 
wöt_t
 *);

1647 
NCURSES_EXPORT
(Ë
mvgën_w°r
 (, , 
wöt_t
 *, );

1648 
NCURSES_EXPORT
(Ë
mvhlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1649 
NCURSES_EXPORT
(Ë
mvö_wch
 (, , 
cch¨_t
 *);

1650 
NCURSES_EXPORT
(Ë
mvö_wchn°r
 (, , 
cch¨_t
 *, );

1651 
NCURSES_EXPORT
(Ë
mvö_wch°r
 (, , 
cch¨_t
 *);

1652 
NCURSES_EXPORT
(Ë
mvönw°r
 (, , 
wch¨_t
 *, );

1653 
NCURSES_EXPORT
(Ë
mvös_nw°r
 (, , c⁄° 
wch¨_t
 *, );

1654 
NCURSES_EXPORT
(Ë
mvös_wch
 (, , c⁄° 
cch¨_t
 *);

1655 
NCURSES_EXPORT
(Ë
mvös_w°r
 (, , c⁄° 
wch¨_t
 *);

1656 
NCURSES_EXPORT
(Ë
mvöw°r
 (, , 
wch¨_t
 *);

1657 
NCURSES_EXPORT
(Ë
mvvlöe_£t
 (, , c⁄° 
cch¨_t
 *, );

1658 
NCURSES_EXPORT
(Ë
mvwadd_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1659 
NCURSES_EXPORT
(Ë
mvwadd_wchn°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1660 
NCURSES_EXPORT
(Ë
mvwadd_wch°r
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1661 
NCURSES_EXPORT
(Ë
mvwaddnw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *, );

1662 
NCURSES_EXPORT
(Ë
mvwaddw°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1663 
NCURSES_EXPORT
(Ë
mvwgë_wch
 (
WINDOW
 *, , , 
wöt_t
 *);

1664 
NCURSES_EXPORT
(Ë
mvwgë_w°r
 (
WINDOW
 *, , , 
wöt_t
 *);

1665 
NCURSES_EXPORT
(Ë
mvwgën_w°r
 (
WINDOW
 *, , , 
wöt_t
 *, );

1666 
NCURSES_EXPORT
(Ë
mvwhlöe_£t
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *, );

1667 
NCURSES_EXPORT
(Ë
mvwö_wch
 (
WINDOW
 *, , , 
cch¨_t
 *);

1668 
NCURSES_EXPORT
(Ë
mvwö_wchn°r
 (
WINDOW
 *, ,, 
cch¨_t
 *,);

1669 
NCURSES_EXPORT
(Ë
mvwö_wch°r
 (
WINDOW
 *, , , 
cch¨_t
 *);

1670 
NCURSES_EXPORT
(Ë
mvwönw°r
 (
WINDOW
 *, , , 
wch¨_t
 *, );

1671 
NCURSES_EXPORT
(Ë
mvwös_nw°r
 (
WINDOW
 *, ,, c⁄° 
wch¨_t
 *,);

1672 
NCURSES_EXPORT
(Ë
mvwös_wch
 (
WINDOW
 *, , , c⁄° 
cch¨_t
 *);

1673 
NCURSES_EXPORT
(Ë
mvwös_w°r
 (
WINDOW
 *, , , c⁄° 
wch¨_t
 *);

1674 
NCURSES_EXPORT
(Ë
mvwöw°r
 (
WINDOW
 *, , , 
wch¨_t
 *);

1675 
NCURSES_EXPORT
(Ë
mvwvlöe_£t
 (
WINDOW
 *, ,, c⁄° 
cch¨_t
 *,);

1676 
NCURSES_EXPORT
(Ë
≥cho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1677 
NCURSES_EXPORT
(Ë
£tcch¨
 (
cch¨_t
 *, c⁄° 
wch¨_t
 *, c⁄° 
©å_t
, , const *);

1678 
NCURSES_EXPORT
(Ë
¶k_w£t
 (, c⁄° 
wch¨_t
 *, );

1679 
NCURSES_EXPORT
(
©å_t
Ë
ãrm_©ås
 ();

1680 
NCURSES_EXPORT
(Ë
ungë_wch
 (c⁄° 
wch¨_t
);

1681 
NCURSES_EXPORT
(Ë
vid_©å
 (
©å_t
, , *);

1682 
NCURSES_EXPORT
(Ë
vid_puts
 (
©å_t
, , *, 
NCURSES_OUTC
);

1683 
NCURSES_EXPORT
(Ë
vlöe_£t
 (c⁄° 
cch¨_t
 *, );

1684 
NCURSES_EXPORT
(Ë
wadd_wch
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1685 
NCURSES_EXPORT
(Ë
wadd_wchn°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *,);

1686 
NCURSES_EXPORT
(Ë
wadd_wch°r
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1687 
NCURSES_EXPORT
(Ë
waddnw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *,);

1688 
NCURSES_EXPORT
(Ë
waddw°r
 (
WINDOW
 *,c⁄° 
wch¨_t
 *);

1689 
NCURSES_EXPORT
(Ë
wbkg∫d
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1690 
NCURSES_EXPORT
(Ë
wbkg∫d£t
 (
WINDOW
 *,c⁄° 
cch¨_t
 *);

1691 
NCURSES_EXPORT
(Ë
wb‹dî_£t
 (
WINDOW
 *,c⁄° 
cch¨_t
*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*,const cchar_t*);

1692 
NCURSES_EXPORT
(Ë
wecho_wch¨
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1693 
NCURSES_EXPORT
(Ë
wgë_wch
 (
WINDOW
 *, 
wöt_t
 *);

1694 
NCURSES_EXPORT
(Ë
wgë_w°r
 (
WINDOW
 *, 
wöt_t
 *);

1695 
NCURSES_EXPORT
(Ë
wgëbkg∫d
 (
WINDOW
 *, 
cch¨_t
 *);

1696 
NCURSES_EXPORT
(Ë
wgën_w°r
 (
WINDOW
 *,
wöt_t
 *, );

1697 
NCURSES_EXPORT
(Ë
whlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1698 
NCURSES_EXPORT
(Ë
wö_wch
 (
WINDOW
 *, 
cch¨_t
 *);

1699 
NCURSES_EXPORT
(Ë
wö_wchn°r
 (
WINDOW
 *, 
cch¨_t
 *, );

1700 
NCURSES_EXPORT
(Ë
wö_wch°r
 (
WINDOW
 *, 
cch¨_t
 *);

1701 
NCURSES_EXPORT
(Ë
wönw°r
 (
WINDOW
 *, 
wch¨_t
 *, );

1702 
NCURSES_EXPORT
(Ë
wös_nw°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *, );

1703 
NCURSES_EXPORT
(Ë
wös_wch
 (
WINDOW
 *, c⁄° 
cch¨_t
 *);

1704 
NCURSES_EXPORT
(Ë
wös_w°r
 (
WINDOW
 *, c⁄° 
wch¨_t
 *);

1705 
NCURSES_EXPORT
(Ë
wöw°r
 (
WINDOW
 *, 
wch¨_t
 *);

1706 
NCURSES_EXPORT
(
wch¨_t
*Ë
wun˘æ
 (
cch¨_t
 *);

1707 
NCURSES_EXPORT
(Ë
wvlöe_£t
 (
WINDOW
 *, c⁄° 
cch¨_t
 *, );

1709 #i‡
NCURSES_SP_FUNCS


1710 
NCURSES_EXPORT
(
©å_t
Ë
NCURSES_SP_NAME
(
ãrm_©ås
Ë(
SCREEN
*);

1711 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungë_wch
Ë(
SCREEN
*, c⁄° 
wch¨_t
);

1712 
NCURSES_EXPORT
(
wch¨_t
*Ë
NCURSES_SP_NAME
(
wun˘æ
Ë(
SCREEN
*, 
cch¨_t
 *);

1713 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid_©å
Ë(
SCREEN
*, 
©å_t
, , *);

1714 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
vid_puts
Ë(
SCREEN
*, 
©å_t
, , *, 
NCURSES_SP_OUTC
);

1717 #i‚de‡
NCURSES_NOMACROS


1722 
	#add_wch
(
c
Ë
	`wadd_wch
(
°ds¸
,c)

	)

1723 
	#add_wchn°r
(
°r
,
n
Ë
	`wadd_wchn°r
(
°ds¸
,°r,n)

	)

1724 
	#add_wch°r
(
°r
Ë
	`wadd_wch°r
(
°ds¸
,°r)

	)

1725 
	#addnw°r
(
w°r
,
n
Ë
	`waddnw°r
(
°ds¸
,w°r,n)

	)

1726 
	#addw°r
(
w°r
Ë
	`waddw°r
(
°ds¸
,w°r)

	)

1727 
	#bkg∫d
(
c
Ë
	`wbkg∫d
(
°ds¸
,c)

	)

1728 
	#bkg∫d£t
(
c
Ë
	`wbkg∫d£t
(
°ds¸
,c)

	)

1729 
	#b‹dî_£t
(
l
,
r
,
t
,
b
,
é
,
å
,
bl
,
br
Ë
	`wb‹dî_£t
(
°ds¸
,l,r,t,b,é,å,bl,br)

	)

1730 
	#box_£t
(
w
,
v
,
h
Ë
	`wb‹dî_£t
(w,v,v,h,h,0,0,0,0)

	)

1731 
	#echo_wch¨
(
c
Ë
	`wecho_wch¨
(
°ds¸
,c)

	)

1732 
	#gë_wch
(
c
Ë
	`wgë_wch
(
°ds¸
,c)

	)

1733 
	#gë_w°r
(
t
Ë
	`wgë_w°r
(
°ds¸
,t)

	)

1734 
	#gëbkg∫d
(
wch
Ë
	`wgëbkg∫d
(
°ds¸
,wch)

	)

1735 
	#gën_w°r
(
t
,
n
Ë
	`wgën_w°r
(
°ds¸
,t,n)

	)

1736 
	#hlöe_£t
(
c
,
n
Ë
	`whlöe_£t
(
°ds¸
,c,n)

	)

1737 
	#ö_wch
(
c
Ë
	`wö_wch
(
°ds¸
,c)

	)

1738 
	#ö_wchn°r
(
c
,
n
Ë
	`wö_wchn°r
(
°ds¸
,c,n)

	)

1739 
	#ö_wch°r
(
c
Ë
	`wö_wch°r
(
°ds¸
,c)

	)

1740 
	#önw°r
(
c
,
n
Ë
	`wönw°r
(
°ds¸
,c,n)

	)

1741 
	#ös_nw°r
(
t
,
n
Ë
	`wös_nw°r
(
°ds¸
,t,n)

	)

1742 
	#ös_wch
(
c
Ë
	`wös_wch
(
°ds¸
,c)

	)

1743 
	#ös_w°r
(
t
Ë
	`wös_w°r
(
°ds¸
,t)

	)

1744 
	#öw°r
(
c
Ë
	`wöw°r
(
°ds¸
,c)

	)

1745 
	#vlöe_£t
(
c
,
n
Ë
	`wvlöe_£t
(
°ds¸
,c,n)

	)

1746 
	#wadd_wch°r
(
wö
,
°r
Ë
	`wadd_wchn°r
(wö,°r,-1)

	)

1747 
	#waddw°r
(
wö
,
w°r
Ë
	`waddnw°r
(wö,w°r,-1)

	)

1748 
	#wgë_w°r
(
w
,
t
Ë
	`wgën_w°r
(w,t,-1)

	)

1749 
	#wö_wch°r
(
w
,
c
Ë
	`wö_wchn°r
(w,c,-1)

	)

1750 
	#wös_w°r
(
w
,
t
Ë
	`wös_nw°r
(w,t,-1)

	)

1752 #i‡!
NCURSES_OPAQUE


1753 
	#wgëbkg∫d
(
wö
,
wch
Ë((wöË? (*(wchË(wö)->
_bkg∫d
Ë: *(wch), 
OK
)

	)

1756 
	#mvadd_wch
(
y
,
x
,
c
Ë
	`mvwadd_wch
(
°ds¸
,y,x,c)

	)

1757 
	#mvadd_wchn°r
(
y
,
x
,
s
,
n
Ë
	`mvwadd_wchn°r
(
°ds¸
,y,x,s,n)

	)

1758 
	#mvadd_wch°r
(
y
,
x
,
s
Ë
	`mvwadd_wch°r
(
°ds¸
,y,x,s)

	)

1759 
	#mvaddnw°r
(
y
,
x
,
w°r
,
n
Ë
	`mvwaddnw°r
(
°ds¸
,y,x,w°r,n)

	)

1760 
	#mvaddw°r
(
y
,
x
,
w°r
Ë
	`mvwaddw°r
(
°ds¸
,y,x,w°r)

	)

1761 
	#mvgë_wch
(
y
,
x
,
c
Ë
	`mvwgë_wch
(
°ds¸
,y,x,c)

	)

1762 
	#mvgë_w°r
(
y
,
x
,
t
Ë
	`mvwgë_w°r
(
°ds¸
,y,x,t)

	)

1763 
	#mvgën_w°r
(
y
,
x
,
t
,
n
Ë
	`mvwgën_w°r
(
°ds¸
,y,x,t,n)

	)

1764 
	#mvhlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwhlöe_£t
(
°ds¸
,y,x,c,n)

	)

1765 
	#mvö_wch
(
y
,
x
,
c
Ë
	`mvwö_wch
(
°ds¸
,y,x,c)

	)

1766 
	#mvö_wchn°r
(
y
,
x
,
c
,
n
Ë
	`mvwö_wchn°r
(
°ds¸
,y,x,c,n)

	)

1767 
	#mvö_wch°r
(
y
,
x
,
c
Ë
	`mvwö_wch°r
(
°ds¸
,y,x,c)

	)

1768 
	#mvönw°r
(
y
,
x
,
c
,
n
Ë
	`mvwönw°r
(
°ds¸
,y,x,c,n)

	)

1769 
	#mvös_nw°r
(
y
,
x
,
t
,
n
Ë
	`mvwös_nw°r
(
°ds¸
,y,x,t,n)

	)

1770 
	#mvös_wch
(
y
,
x
,
c
Ë
	`mvwös_wch
(
°ds¸
,y,x,c)

	)

1771 
	#mvös_w°r
(
y
,
x
,
t
Ë
	`mvwös_w°r
(
°ds¸
,y,x,t)

	)

1772 
	#mvöw°r
(
y
,
x
,
c
Ë
	`mvwöw°r
(
°ds¸
,y,x,c)

	)

1773 
	#mvvlöe_£t
(
y
,
x
,
c
,
n
Ë
	`mvwvlöe_£t
(
°ds¸
,y,x,c,n)

	)

1775 
	#mvwadd_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wch
(wö,c))

	)

1776 
	#mvwadd_wchn°r
(
wö
,
y
,
x
,
s
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wchn°r
(wö,s,n))

	)

1777 
	#mvwadd_wch°r
(
wö
,
y
,
x
,
s
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wadd_wch°r
(wö,s))

	)

1778 
	#mvwaddnw°r
(
wö
,
y
,
x
,
w°r
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddnw°r
(wö,w°r,n))

	)

1779 
	#mvwaddw°r
(
wö
,
y
,
x
,
w°r
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`waddw°r
(wö,w°r))

	)

1780 
	#mvwgë_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë_wch
(wö,c))

	)

1781 
	#mvwgë_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgë_w°r
(wö,t))

	)

1782 
	#mvwgën_w°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wgën_w°r
(wö,t,n))

	)

1783 
	#mvwhlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`whlöe_£t
(wö,c,n))

	)

1784 
	#mvwö_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wch
(wö,c))

	)

1785 
	#mvwö_wchn°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wchn°r
(wö,c,n))

	)

1786 
	#mvwö_wch°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wö_wch°r
(wö,c))

	)

1787 
	#mvwönw°r
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wönw°r
(wö,c,n))

	)

1788 
	#mvwös_nw°r
(
wö
,
y
,
x
,
t
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_nw°r
(wö,t,n))

	)

1789 
	#mvwös_wch
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_wch
(wö,c))

	)

1790 
	#mvwös_w°r
(
wö
,
y
,
x
,
t
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wös_w°r
(wö,t))

	)

1791 
	#mvwöw°r
(
wö
,
y
,
x
,
c
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wöw°r
(wö,c))

	)

1792 
	#mvwvlöe_£t
(
wö
,
y
,
x
,
c
,
n
Ë(
	`wmove
(wö,y,xË=
ERR
 ? ERR : 
	`wvlöe_£t
(wö,c,n))

	)

1796 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1797 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswbuf
(c⁄° 
wch¨_t
 *);

1798 
NCURSES_EXPORT
(c⁄° *Ë
_nc_viswibuf
(c⁄° 
wöt_t
 *);

1811 #i‡
NCURSES_MOUSE_VERSION
 > 1

1812 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 5))

	)

1814 
	#NCURSES_MOUSE_MASK
(
b
,
m
Ë((mË<< (((bË- 1Ë* 6))

	)

1817 
	#NCURSES_BUTTON_RELEASED
 001L

	)

1818 
	#NCURSES_BUTTON_PRESSED
 002L

	)

1819 
	#NCURSES_BUTTON_CLICKED
 004L

	)

1820 
	#NCURSES_DOUBLE_CLICKED
 010L

	)

1821 
	#NCURSES_TRIPLE_CLICKED
 020L

	)

1822 
	#NCURSES_RESERVED_EVENT
 040L

	)

1825 
	#BUTTON1_RELEASED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_RELEASED
)

	)

1826 
	#BUTTON1_PRESSED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_PRESSED
)

	)

1827 
	#BUTTON1_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_BUTTON_CLICKED
)

	)

1828 
	#BUTTON1_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_DOUBLE_CLICKED
)

	)

1829 
	#BUTTON1_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_TRIPLE_CLICKED
)

	)

1831 
	#BUTTON2_RELEASED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_RELEASED
)

	)

1832 
	#BUTTON2_PRESSED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_PRESSED
)

	)

1833 
	#BUTTON2_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_BUTTON_CLICKED
)

	)

1834 
	#BUTTON2_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_DOUBLE_CLICKED
)

	)

1835 
	#BUTTON2_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_TRIPLE_CLICKED
)

	)

1837 
	#BUTTON3_RELEASED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_RELEASED
)

	)

1838 
	#BUTTON3_PRESSED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_PRESSED
)

	)

1839 
	#BUTTON3_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_BUTTON_CLICKED
)

	)

1840 
	#BUTTON3_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_DOUBLE_CLICKED
)

	)

1841 
	#BUTTON3_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_TRIPLE_CLICKED
)

	)

1843 
	#BUTTON4_RELEASED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_RELEASED
)

	)

1844 
	#BUTTON4_PRESSED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_PRESSED
)

	)

1845 
	#BUTTON4_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_BUTTON_CLICKED
)

	)

1846 
	#BUTTON4_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_DOUBLE_CLICKED
)

	)

1847 
	#BUTTON4_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_TRIPLE_CLICKED
)

	)

1853 #i‡
NCURSES_MOUSE_VERSION
 > 1

1855 
	#BUTTON5_RELEASED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_RELEASED
)

	)

1856 
	#BUTTON5_PRESSED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_PRESSED
)

	)

1857 
	#BUTTON5_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_BUTTON_CLICKED
)

	)

1858 
	#BUTTON5_DOUBLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_DOUBLE_CLICKED
)

	)

1859 
	#BUTTON5_TRIPLE_CLICKED
 
	`NCURSES_MOUSE_MASK
(5, 
NCURSES_TRIPLE_CLICKED
)

	)

1861 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(6, 0001L)

	)

1862 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(6, 0002L)

	)

1863 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(6, 0004L)

	)

1864 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(6, 0010L)

	)

1868 
	#BUTTON1_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(1, 
NCURSES_RESERVED_EVENT
)

	)

1869 
	#BUTTON2_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(2, 
NCURSES_RESERVED_EVENT
)

	)

1870 
	#BUTTON3_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(3, 
NCURSES_RESERVED_EVENT
)

	)

1871 
	#BUTTON4_RESERVED_EVENT
 
	`NCURSES_MOUSE_MASK
(4, 
NCURSES_RESERVED_EVENT
)

	)

1873 
	#BUTTON_CTRL
 
	`NCURSES_MOUSE_MASK
(5, 0001L)

	)

1874 
	#BUTTON_SHIFT
 
	`NCURSES_MOUSE_MASK
(5, 0002L)

	)

1875 
	#BUTTON_ALT
 
	`NCURSES_MOUSE_MASK
(5, 0004L)

	)

1876 
	#REPORT_MOUSE_POSITION
 
	`NCURSES_MOUSE_MASK
(5, 0010L)

	)

1880 
	#ALL_MOUSE_EVENTS
 (
REPORT_MOUSE_POSITION
 - 1)

	)

1883 
	#BUTTON_RELEASE
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 001))

	)

1884 
	#BUTTON_PRESS
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 002))

	)

1885 
	#BUTTON_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 004))

	)

1886 
	#BUTTON_DOUBLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 010))

	)

1887 
	#BUTTON_TRIPLE_CLICK
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 020))

	)

1888 
	#BUTTON_RESERVED_EVENT
(
e
, 
x
Ë(”Ë& 
	`NCURSES_MOUSE_MASK
(x, 040))

	)

1892 
	gid
;

1893 
	gx
, 
	gy
, 
	gz
;

1894 
mmask_t
 
	gb°©e
;

1896 
	tMEVENT
;

1898 
NCURSES_EXPORT
(
boﬁ
Ë
has_mou£
();

1899 
NCURSES_EXPORT
(Ë
gëmou£
 (
MEVENT
 *);

1900 
NCURSES_EXPORT
(Ë
ungëmou£
 (
MEVENT
 *);

1901 
NCURSES_EXPORT
(
mmask_t
Ë
mou£mask
 (mmask_t, mmask_t *);

1902 
NCURSES_EXPORT
(
boﬁ
Ë
wí˛o£
 (c⁄° 
WINDOW
 *, , );

1903 
NCURSES_EXPORT
(Ë
mou£öãrvÆ
 ();

1904 
NCURSES_EXPORT
(
boﬁ
Ë
wmou£_åafo
 (c⁄° 
WINDOW
*, *, *, bool);

1905 
NCURSES_EXPORT
(
boﬁ
Ë
mou£_åafo
 (*, *, bool);

1907 #i‡
NCURSES_SP_FUNCS


1908 
NCURSES_EXPORT
(
boﬁ
Ë
NCURSES_SP_NAME
(
has_mou£
Ë(
SCREEN
*);

1909 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
gëmou£
Ë(
SCREEN
*, 
MEVENT
 *);

1910 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
ungëmou£
Ë(
SCREEN
*,
MEVENT
 *);

1911 
NCURSES_EXPORT
(
mmask_t
Ë
NCURSES_SP_NAME
(
mou£mask
Ë(
SCREEN
*, mmask_t, mmask_t *);

1912 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
mou£öãrvÆ
Ë(
SCREEN
*, );

1915 
	#mou£_åafo
(
y
,
x
,
to_s¸ìn
Ë
	`wmou£_åafo
(
°ds¸
,y,x,to_s¸ìn)

	)

1919 
NCURSES_EXPORT
(Ë
m˝röt
 (*, );

1920 
NCURSES_EXPORT
(Ë
has_key
 ();

1922 #i‡
NCURSES_SP_FUNCS


1923 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
has_key
Ë(
SCREEN
*, );

1924 
NCURSES_EXPORT
(Ë
NCURSES_SP_NAME
(
m˝röt
Ë(
SCREEN
*, *, );

1929 
NCURSES_EXPORT
(Ë
_åa˚f
 (c⁄° *, ...Ë
GCC_PRINTFLIKE
(1,2);

1930 
NCURSES_EXPORT
(Ë
_åa˚dump
 (c⁄° *, 
WINDOW
 *);

1931 
NCURSES_EXPORT
(*Ë
_åa˚©å
 (
©å_t
);

1932 
NCURSES_EXPORT
(*Ë
_åa˚©å2
 (, 
chty≥
);

1933 
NCURSES_EXPORT
(*Ë
_nc_åa˚bôs
 ();

1934 
NCURSES_EXPORT
(*Ë
_åa˚ch¨
 ();

1935 
NCURSES_EXPORT
(*Ë
_åa˚chty≥
 (
chty≥
);

1936 
NCURSES_EXPORT
(*Ë
_åa˚chty≥2
 (, 
chty≥
);

1937 #ifde‡
NCURSES_WIDECHAR


1938 
	#_åa˚ch_t
 
_åa˚cch¨_t


	)

1939 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t
 (c⁄° 
cch¨_t
 *);

1940 
	#_åa˚ch_t2
 
_åa˚cch¨_t2


	)

1941 
NCURSES_EXPORT
(*Ë
_åa˚cch¨_t2
 (, c⁄° 
cch¨_t
 *);

1943 
	#_åa˚ch_t
 
_åa˚chty≥


	)

1944 
	#_åa˚ch_t2
 
_åa˚chty≥2


	)

1946 
NCURSES_EXPORT
(*Ë
_åa˚mou£
 (c⁄° 
MEVENT
 *);

1947 
NCURSES_EXPORT
(Ë
åa˚
 (const );

1950 
	#TRACE_DISABLE
 0x0000

	)

1951 
	#TRACE_TIMES
 0x0001

	)

1952 
	#TRACE_TPUTS
 0x0002

	)

1953 
	#TRACE_UPDATE
 0x0004

	)

1954 
	#TRACE_MOVE
 0x0008

	)

1955 
	#TRACE_CHARPUT
 0x0010

	)

1956 
	#TRACE_ORDINARY
 0x001F

	)

1957 
	#TRACE_CALLS
 0x0020

	)

1958 
	#TRACE_VIRTPUT
 0x0040

	)

1959 
	#TRACE_IEVENT
 0x0080

	)

1960 
	#TRACE_BITS
 0x0100

	)

1961 
	#TRACE_ICALLS
 0x0200

	)

1962 
	#TRACE_CCALLS
 0x0400

	)

1963 
	#TRACE_DATABASE
 0x0800

	)

1964 
	#TRACE_ATTRS
 0x1000

	)

1966 
	#TRACE_SHIFT
 13

	)

1967 
	#TRACE_MAXIMUM
 ((1 << 
TRACE_SHIFT
Ë- 1Ë

	)

1969 #i‡
deföed
(
TRACE
Ë|| deföed(
NCURSES_TEST
)

1970 
NCURSES_EXPORT_VAR
(Ë
_nc_›timize_íabÀ
;

1971 
NCURSES_EXPORT
(c⁄° *Ë
_nc_visbuf
 (const *);

1972 
	#OPTIMIZE_MVCUR
 0x01

	)

1973 
	#OPTIMIZE_HASHMAP
 0x02

	)

1974 
	#OPTIMIZE_SCROLL
 0x04

	)

1975 
	#OPTIMIZE_ALL
 0xf‡

	)

1978 
	~<un˘æ.h
>

1980 #ifde‡
__˝lu•lus


1982 #i‚de‡
NCURSES_NOMACROS


1985 #unde‡
box


1986 #unde‡
˛ór


1987 #unde‡
îa£


1988 #unde‡
move


1989 #unde‡
ª‰esh


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

105 #ifde‡
__USE_ATFILE


106 
	#AT_FDCWD
 -100

	)

109 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

110 
	#AT_REMOVEDIR
 0x200

	)

112 
	#AT_SYMLINK_FOLLOW
 0x400

	)

113 
	#AT_NO_AUTOMOUNT
 0x800

	)

115 
	#AT_EMPTY_PATH
 0x1000

	)

116 
	#AT_EACCESS
 0x200

	)

125 
f˙é
 (
__fd
, 
__cmd
, ...);

133 #i‚de‡
__USE_FILE_OFFSET64


134 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__REDIRECT


137 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

138 
	`__n⁄nuŒ
 ((1));

140 
	#›í
 
›í64


	)

143 #ifde‡
__USE_LARGEFILE64


144 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

147 #ifde‡
__USE_ATFILE


157 #i‚de‡
__USE_FILE_OFFSET64


158 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

159 
	`__n⁄nuŒ
 ((2));

161 #ifde‡
__REDIRECT


162 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

163 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

165 
	#›í©
 
›í©64


	)

168 #ifde‡
__USE_LARGEFILE64


169 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

170 
	`__n⁄nuŒ
 ((2));

179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

182 #ifde‡
__REDIRECT


183 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

184 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

186 
	#¸ót
 
¸ót64


	)

189 #ifde‡
__USE_LARGEFILE64


190 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

193 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

194 && !
deföed
 
__USE_POSIX
))

203 
	#F_ULOCK
 0

	)

204 
	#F_LOCK
 1

	)

205 
	#F_TLOCK
 2

	)

206 
	#F_TEST
 3

	)

208 #i‚de‡
__USE_FILE_OFFSET64


209 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

211 #ifde‡
__REDIRECT


212 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

214 
	#lockf
 
lockf64


	)

217 #ifde‡
__USE_LARGEFILE64


218 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

222 #ifde‡
__USE_XOPEN2K


225 #i‚de‡
__USE_FILE_OFFSET64


226 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

227 
__advi£
Ë
__THROW
;

229 #ifde‡
__REDIRECT_NTH


230 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

231 
__off64_t
 
__Àn
, 
__advi£
),

232 
posix_Ádvi£64
);

234 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

237 #ifde‡
__USE_LARGEFILE64


238 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

239 
__advi£
Ë
__THROW
;

247 #i‚de‡
__USE_FILE_OFFSET64


248 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

250 #ifde‡
__REDIRECT


251 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

252 
__off64_t
 
__Àn
),

253 
posix_ÁŒoˇã64
);

255 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

258 #ifde‡
__USE_LARGEFILE64


259 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

265 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

266 && 
deföed
 
__va_¨g_∑ck_Àn


267 
	~<bôs/f˙é2.h
>

270 
__END_DECLS


	@/usr/include/memory.h

23 #i‚def 
_MEMORY_H


24 
	#_MEMORY_H
 1

	)

26 
	~<„©uªs.h
>

29 #i‚def 
_STRING_H


30 
	~<°rög.h
>

	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


73 
£çwít
 ();

79 
ídpwít
 ();

85 
∑sswd
 *
gëpwít
 ();

88 #ifdef 
__USE_SVID


95 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

103 
puçwít
 (
__c⁄°
 
∑sswd
 *
__ª°ri˘
 
__p
,

104 
FILE
 *
__ª°ri˘
 
__f
);

111 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

117 
∑sswd
 *
gëpw«m
 (
__c⁄°
 *
__«me
);

119 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


121 #ifde‡
__USE_MISC


124 
	#NSS_BUFLEN_PASSWD
 1024

	)

135 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


140 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

145 
gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

150 
gëpw«m_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

156 #ifdef 
__USE_SVID


164 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

165 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

166 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

167 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

172 #ifde‡
__USE_GNU


181 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

184 
	g__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

172 #ifde‡
__STDC__


174 
	#°dö
 
°dö


	)

175 
	#°dout
 
°dout


	)

176 
	#°dîr
 
°dîr


	)

179 
__BEGIN_NAMESPACE_STD


181 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

183 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

184 
__END_NAMESPACE_STD


186 #ifde‡
__USE_ATFILE


188 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

189 
__c⁄°
 *
__√w
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


197 #i‚de‡
__USE_FILE_OFFSET64


198 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

200 #ifde‡
__REDIRECT


201 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

203 
	#tmpfûe
 
tmpfûe64


	)

207 #ifde‡
__USE_LARGEFILE64


208 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

212 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

213 
__END_NAMESPACE_STD


215 #ifde‡
__USE_MISC


218 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

222 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


230 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

231 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

235 
__BEGIN_NAMESPACE_STD


240 
	`f˛o£
 (
FILE
 *
__°ªam
);

245 
	`fÊush
 (
FILE
 *
__°ªam
);

246 
__END_NAMESPACE_STD


248 #ifde‡
__USE_MISC


255 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

258 #ifde‡
__USE_GNU


265 
	`f˛o£Æl
 ();

269 
__BEGIN_NAMESPACE_STD


270 #i‚de‡
__USE_FILE_OFFSET64


275 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

276 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

281 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

282 
__c⁄°
 *
__ª°ri˘
 
__modes
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

285 #ifde‡
__REDIRECT


286 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

287 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

288 
__wur
;

289 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

292 
__wur
;

294 
	#f›í
 
f›í64


	)

295 
	#‰e›í
 
‰e›í64


	)

298 
__END_NAMESPACE_STD


299 #ifde‡
__USE_LARGEFILE64


300 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

302 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

303 
__c⁄°
 *
__ª°ri˘
 
__modes
,

304 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

307 #ifdef 
__USE_POSIX


309 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

312 #ifdef 
__USE_GNU


315 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

316 
__c⁄°
 *
__ª°ri˘
 
__modes
,

317 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

320 #ifde‡
__USE_XOPEN2K8


322 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

323 
__THROW
 
__wur
;

328 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

332 
__BEGIN_NAMESPACE_STD


335 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

339 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

340 
__modes
, 
size_t
 
__n
Ë
__THROW
;

341 
__END_NAMESPACE_STD


343 #ifdef 
__USE_BSD


346 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

347 
size_t
 
__size
Ë
__THROW
;

350 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

354 
__BEGIN_NAMESPACE_STD


359 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

360 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

367 
	$•rötf
 (*
__ª°ri˘
 
__s
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

374 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

375 
_G_va_li°
 
__¨g
);

380 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

382 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

383 
_G_va_li°
 
__¨g
Ë
__THROW
;

384 
__END_NAMESPACE_STD


386 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


387 
__BEGIN_NAMESPACE_C99


389 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

390 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

391 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

393 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

394 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

395 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

396 
__END_NAMESPACE_C99


399 #ifde‡
__USE_GNU


402 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

403 
_G_va_li°
 
__¨g
)

404 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

405 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

406 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

407 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

408 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

409 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

410 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

413 #ifde‡
__USE_XOPEN2K8


420 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

421 
_G_va_li°
 
__¨g
)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

423 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

424 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

428 
__BEGIN_NAMESPACE_STD


433 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

434 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

441 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

442 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

444 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

445 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

446 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

447 #ifde‡
__REDIRECT


451 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

452 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_fsˇnf
Ë
__wur
;

454 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

455 
__isoc99_sˇnf
Ë
__wur
;

456 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

457 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

458 
__isoc99_ssˇnf
);

460 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

461 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

462 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

463 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

464 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

465 
	#fsˇnf
 
__isoc99_fsˇnf


	)

466 
	#sˇnf
 
__isoc99_sˇnf


	)

467 
	#ssˇnf
 
__isoc99_ssˇnf


	)

471 
__END_NAMESPACE_STD


473 #ifdef 
__USE_ISOC99


474 
__BEGIN_NAMESPACE_C99


479 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

480 
_G_va_li°
 
__¨g
)

481 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

487 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

488 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

491 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

492 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

493 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

495 #i‡!
deföed
 
__USE_GNU
 \

496 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

497 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

498 #ifde‡
__REDIRECT


502 
	`__REDIRECT
 (
vfsˇnf
,

503 (
FILE
 *
__ª°ri˘
 
__s
,

504 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

505 
__isoc99_vfsˇnf
)

506 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

507 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

508 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

509 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

510 
	`__REDIRECT_NTH
 (
vssˇnf
,

511 (
__c⁄°
 *
__ª°ri˘
 
__s
,

512 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

513 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

514 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

516 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

517 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

520 
_G_va_li°
 
__¨g
Ë
__wur
;

521 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

522 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

523 
_G_va_li°
 
__¨g
Ë
__THROW
;

524 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

525 
	#vsˇnf
 
__isoc99_vsˇnf


	)

526 
	#vssˇnf
 
__isoc99_vssˇnf


	)

530 
__END_NAMESPACE_C99


534 
__BEGIN_NAMESPACE_STD


539 
	`fgëc
 (
FILE
 *
__°ªam
);

540 
	`gëc
 (
FILE
 *
__°ªam
);

546 
	`gëch¨
 ();

547 
__END_NAMESPACE_STD


551 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

553 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


558 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

559 
	`gëch¨_u∆ocked
 ();

562 #ifde‡
__USE_MISC


569 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

573 
__BEGIN_NAMESPACE_STD


581 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

582 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

588 
	`putch¨
 (
__c
);

589 
__END_NAMESPACE_STD


593 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

595 #ifde‡
__USE_MISC


602 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

605 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


610 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

611 
	`putch¨_u∆ocked
 (
__c
);

615 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

616 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

618 
	`gëw
 (
FILE
 *
__°ªam
);

621 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

625 
__BEGIN_NAMESPACE_STD


630 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

631 
__wur
;

638 *
	$gës
 (*
__s
Ë
__wur
;

639 
__END_NAMESPACE_STD


641 #ifde‡
__USE_GNU


648 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

649 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

653 #ifdef 
__USE_XOPEN2K8


664 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

665 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

666 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

667 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

668 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

669 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

677 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

678 
size_t
 *
__ª°ri˘
 
__n
,

679 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

683 
__BEGIN_NAMESPACE_STD


688 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

694 
	`puts
 (
__c⁄°
 *
__s
);

701 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

708 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

714 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

715 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

716 
__END_NAMESPACE_STD


718 #ifde‡
__USE_GNU


725 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

726 
FILE
 *
__ª°ri˘
 
__°ªam
);

729 #ifde‡
__USE_MISC


736 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

738 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

739 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

743 
__BEGIN_NAMESPACE_STD


748 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

753 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

758 
	`ªwöd
 (
FILE
 *
__°ªam
);

759 
__END_NAMESPACE_STD


766 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


767 #i‚de‡
__USE_FILE_OFFSET64


772 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

777 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

779 #ifde‡
__REDIRECT


780 
	`__REDIRECT
 (
f£eko
,

781 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

782 
f£eko64
);

783 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

785 
	#f£eko
 
f£eko64


	)

786 
	#·ñlo
 
·ñlo64


	)

791 
__BEGIN_NAMESPACE_STD


792 #i‚de‡
__USE_FILE_OFFSET64


797 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

802 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

804 #ifde‡
__REDIRECT


805 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

806 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

807 
	`__REDIRECT
 (
f£ços
,

808 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

810 
	#fgëpos
 
fgëpos64


	)

811 
	#f£ços
 
f£ços64


	)

814 
__END_NAMESPACE_STD


816 #ifde‡
__USE_LARGEFILE64


817 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

818 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

819 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

820 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

823 
__BEGIN_NAMESPACE_STD


825 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

827 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

829 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
__END_NAMESPACE_STD


832 #ifde‡
__USE_MISC


834 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

835 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 
__BEGIN_NAMESPACE_STD


845 
	`≥º‹
 (
__c⁄°
 *
__s
);

846 
__END_NAMESPACE_STD


852 
	~<bôs/sys_îæi°.h
>

855 #ifdef 
__USE_POSIX


857 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

860 #ifde‡
__USE_MISC


862 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

866 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

867 
deföed
 
__USE_MISC
)

872 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/strings.h

20 #i‚def 
_STRINGS_H


21 
	#_STRINGS_H
 1

	)

26 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


28 
	~<„©uªs.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

33 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

34 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

37 
	g__BEGIN_DECLS


39 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


41 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

42 
__THROW
 
__©åibuã_puª__
;

45 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

48 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

51 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


54 *
	`ödex
 (*
__s
, 
__c
)

55 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

56 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

59 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


60 
__exã∫_Æways_ölöe
 *

61 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
__exã∫_Æways_ölöe
 
__c⁄°
 *

67 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


69  
	`__buûtö_ödex
 (
__s
, 
__c
);

72 
	}
}

74 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

75 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


82 *
	`rödex
 (*
__s
, 
__c
)

83 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

84 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

87 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


88 
__exã∫_Æways_ölöe
 *

89 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
__exã∫_Æways_ölöe
 
__c⁄°
 *

95 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


97  
	`__buûtö_rödex
 (
__s
, 
__c
);

100 
	}
}

102 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


110 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

114 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

115 
__THROW
 
__©åibuã_puª__
;

118 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

119 
__THROW
 
__©åibuã_puª__
;

121 #ifdef 
__USE_XOPEN2K8


125 
	~<xloˇÀ.h
>

129 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

130 
__loˇÀ_t
 
__loc
)

131 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

134 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


	@/usr/include/sys/errno.h

1 
	~<î∫o.h
>

	@/usr/include/sys/file.h

19 #i‚def 
_SYS_FILE_H


20 
	#_SYS_FILE_H
 1

	)

22 
	~<„©uªs.h
>

24 #i‚def 
_FCNTL_H


25 
	~<f˙é.h
>

28 
	g__BEGIN_DECLS


33 #i‚de‡
L_SET


34 
	#L_SET
 0

	)

35 
	#L_INCR
 1

	)

36 
	#L_XTND
 2

	)

41 
	#LOCK_SH
 1

	)

42 
	#LOCK_EX
 2

	)

43 
	#LOCK_UN
 8

	)

46 
	#LOCK_NB
 4

	)

51 
	$Êock
 (
__fd
, 
__›î©i⁄
Ë
__THROW
;

54 
__END_DECLS


	@/usr/include/sys/ioctl.h

19 #i‚def 
_SYS_IOCTL_H


20 
	#_SYS_IOCTL_H
 1

	)

22 
	~<„©uªs.h
>

24 
	g__BEGIN_DECLS


27 
	~<bôs/io˘ls.h
>

30 
	~<bôs/io˘l-ty≥s.h
>

37 
	~<sys/âydeÁu…s.h
>

42 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

44 
__END_DECLS


	@/usr/include/sys/param.h

20 #i‚de‡
_SYS_PARAM_H


21 
	#_SYS_PARAM_H
 1

	)

23 #i‚de‡
ARG_MAX


24 
	#__undef_ARG_MAX


	)

27 
	~<limôs.h
>

28 
	~<löux/limôs.h
>

29 
	~<löux/∑øm.h
>

32 #ifde‡
__undef_ARG_MAX


33 #unde‡
ARG_MAX


34 #unde‡
__undef_ARG_MAX


39 
	#NBBY
 
CHAR_BIT


	)

40 #i‚def 
NGROUPS


41 
	#NGROUPS
 
NGROUPS_MAX


	)

43 
	#MAXSYMLINKS
 20

	)

44 
	#CANBSIZ
 
MAX_CANON


	)

45 
	#MAXPATHLEN
 
PATH_MAX


	)

49 
	#NOFILE
 256

	)

50 
	#NCARGS
 131072

	)

53 
	~<sys/ty≥s.h
>

56 
	#£tbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] |1<<((i)%NBBY))

	)

57 
	#˛rbô
(
a
,
i
Ë(◊)[(i)/
NBBY
] &~(1<<((i)%NBBY)))

	)

58 
	#is£t
(
a
,
i
Ë(◊)[(i)/
NBBY
] & (1<<((i)%NBBY)))

	)

59 
	#is˛r
(
a
,
i
Ë((◊)[(i)/
NBBY
] & (1<<((i)%NBBY))Ë=0)

	)

62 #i‚de‡
howm™y


63 
	#howm™y
(
x
, 
y
Ë(((xË+ ((yË- 1)Ë/ (y))

	)

65 #ifde‡
__GNUC__


66 
	#roundup
(
x
, 
y
Ë(
	`__buûtö_c⁄°™t_p
 (yË&& 
	`powîof2
 (y) \

67 ? (((
x
Ë+ (
y
) - 1) & ~((y) - 1)) \

68 : ((((
x
Ë+ ((
y
Ë- 1)Ë/ (y)Ë* (y)))

	)

70 
	#roundup
(
x
, 
y
Ë((((xË+ ((yË- 1)Ë/ (y)Ë* (y))

	)

72 
	#powîof2
(
x
Ë((((xË- 1Ë& (x)Ë=0)

	)

75 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

76 
	#MAX
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

80 
	#DEV_BSIZE
 512

	)

	@/usr/include/sys/resource.h

19 #i‚def 
_SYS_RESOURCE_H


20 
	#_SYS_RESOURCE_H
 1

	)

22 
	~<„©uªs.h
>

25 
	~<bôs/ªsour˚.h
>

27 #i‚de‡
__id_t_deföed


28 
__id_t
 
	tid_t
;

29 
	#__id_t_deföed


	)

32 
	g__BEGIN_DECLS


38 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


39 
__æimô_ªsour˚
 
	t__æimô_ªsour˚_t
;

40 
__rußge_who
 
	t__rußge_who_t
;

41 
__¥i‹ôy_which
 
	t__¥i‹ôy_which_t
;

43 
	t__æimô_ªsour˚_t
;

44 
	t__rußge_who_t
;

45 
	t__¥i‹ôy_which_t
;

50 #i‚de‡
__USE_FILE_OFFSET64


51 
	$gëæimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

52 
æimô
 *
__æimôs
Ë
__THROW
;

54 #ifde‡
__REDIRECT_NTH


55 
	`__REDIRECT_NTH
 (
gëæimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

56 
æimô
 *
__æimôs
), 
gëæimô64
);

58 
	#gëæimô
 
gëæimô64


	)

61 #ifde‡
__USE_LARGEFILE64


62 
	$gëæimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

63 
æimô64
 *
__æimôs
Ë
__THROW
;

69 #i‚de‡
__USE_FILE_OFFSET64


70 
	$£ålimô
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

71 
__c⁄°
 
æimô
 *
__æimôs
Ë
__THROW
;

73 #ifde‡
__REDIRECT_NTH


74 
	`__REDIRECT_NTH
 (
£ålimô
, (
__æimô_ªsour˚_t
 
__ªsour˚
,

75 
__c⁄°
 
æimô
 *
__æimôs
),

76 
£ålimô64
);

78 
	#£ålimô
 
£ålimô64


	)

81 #ifde‡
__USE_LARGEFILE64


82 
	$£ålimô64
 (
__æimô_ªsour˚_t
 
__ªsour˚
,

83 
__c⁄°
 
æimô64
 *
__æimôs
Ë
__THROW
;

88 
	$gërußge
 (
__rußge_who_t
 
__who
, 
rußge
 *
__ußge
Ë
__THROW
;

94 
	$gë¥i‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
Ë
__THROW
;

98 
	$£çri‹ôy
 (
__¥i‹ôy_which_t
 
__which
, 
id_t
 
__who
, 
__¥io
)

99 
__THROW
;

101 
__END_DECLS


	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


60 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

61 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

62 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

69 #ifde‡
__USE_XOPEN


70 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

71 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

73 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

74 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

76 } 
	tfd_£t
;

79 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

81 #ifde‡
__USE_MISC


83 
__fd_mask
 
	tfd_mask
;

86 
	#NFDBITS
 
__NFDBITS


	)

91 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

92 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

93 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

94 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

97 
__BEGIN_DECLS


107 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

108 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

109 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

110 
timevÆ
 *
__ª°ri˘
 
__timeout
);

112 #ifde‡
__USE_XOPEN2K


119 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

120 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

121 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

122 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

123 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


129 
	~<bôs/£À˘2.h
>

132 
	g__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
 
	`__n⁄nuŒ
 ((1));

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/sys/wait.h

24 #i‚def 
_SYS_WAIT_H


25 
	#_SYS_WAIT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<sig«l.h
>

32 
	~<sys/ªsour˚.h
>

35 #i‡!
deföed
 
_STDLIB_H
 || (!deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K8
)

38 
	~<bôs/waôÊags.h
>

40 #ifdef 
__USE_BSD


45 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


46 
	#__WAIT_INT
(
°©us
) \

47 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

48 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

50 
	#__WAIT_INT
(
°©us
Ë(*(
__c⁄°
 *Ë&(°©us))

	)

58 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


59 
	#__WAIT_STATUS
 *

	)

60 
	#__WAIT_STATUS_DEFN
 *

	)

65 
waô
 *
	m__u±r
;

66 *
	m__ùå
;

67 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

68 
	#__WAIT_STATUS_DEFN
 *

	)

73 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

74 
	#__WAIT_STATUS
 *

	)

75 
	#__WAIT_STATUS_DEFN
 *

	)

80 
	~<bôs/waô°©us.h
>

82 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

83 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

84 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

88 #ifde‡
__WIFCONTINUED


89 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

93 #ifdef 
__USE_BSD


94 
	#WCOREFLAG
 
__WCOREFLAG


	)

95 
	#WCOREDUMP
(
°©us
Ë
	`__WCOREDUMP
 (
	`__WAIT_INT
 (°©us))

	)

96 
	#W_EXITCODE
(
ªt
, 
sig
Ë
	`__W_EXITCODE
 (ªt, sig)

	)

97 
	#W_STOPCODE
(
sig
Ë
	`__W_STOPCODE
 (sig)

	)

101 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


104 
	mP_ALL
,

105 
	mP_PID
,

106 
	mP_PGID


107 } 
	tidty≥_t
;

116 
__pid_t
 
waô
 (
__WAIT_STATUS
 
__°©_loc
);

118 #ifdef 
__USE_BSD


120 
	#WAIT_ANY
 (-1Ë

	)

121 
	#WAIT_MYPGRP
 0

	)

139 
__pid_t
 
waôpid
 (__pid_à
__pid
, *
__°©_loc
, 
__›ti⁄s
);

141 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


142 
	#__√ed_sigöfo_t


	)

143 
	~<bôs/sigöfo.h
>

155 
waôid
 (
idty≥_t
 
__idty≥
, 
__id_t
 
__id
, 
sigöfo_t
 *
__öf›
,

156 
__›ti⁄s
);

159 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


162 
	grußge
;

169 
__pid_t
 
	$waô3
 (
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

170 
rußge
 * 
__ußge
Ë
__THROW
;

173 #ifde‡
__USE_BSD


175 
__pid_t
 
	$waô4
 (
__pid_t
 
__pid
, 
__WAIT_STATUS
 
__°©_loc
, 
__›ti⁄s
,

176 
rußge
 *
__ußge
Ë
__THROW
;

180 
__END_DECLS


	@/usr/include/termio.h

5 
	~<ãrmios.h
>

6 
	~<sys/io˘l.h
>

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


43 
	#_POSIX_V7_ILP32_OFF32
 1

	)

44 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

45 
	#_POSIX_V6_ILP32_OFF32
 1

	)

46 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

47 
	#_XBS5_ILP32_OFF32
 1

	)

48 
	#_XBS5_ILP32_OFFBIG
 1

	)

63 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

64 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

65 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

66 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

67 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

68 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 #ifde‡
__USE_GNU


27 
	~<bôs/uio.h
>

33 
	#O_ACCMODE
 0003

	)

34 
	#O_RDONLY
 00

	)

35 
	#O_WRONLY
 01

	)

36 
	#O_RDWR
 02

	)

37 
	#O_CREAT
 0100

	)

38 
	#O_EXCL
 0200

	)

39 
	#O_NOCTTY
 0400

	)

40 
	#O_TRUNC
 01000

	)

41 
	#O_APPEND
 02000

	)

42 
	#O_NONBLOCK
 04000

	)

43 
	#O_NDELAY
 
O_NONBLOCK


	)

44 
	#O_SYNC
 04010000

	)

45 
	#O_FSYNC
 
O_SYNC


	)

46 
	#O_ASYNC
 020000

	)

48 #ifde‡
__USE_XOPEN2K8


49 
	#O_DIRECTORY
 0200000

	)

50 
	#O_NOFOLLOW
 0400000

	)

51 
	#O_CLOEXEC
 02000000

	)

53 #ifde‡
__USE_GNU


54 
	#O_DIRECT
 040000

	)

55 
	#O_NOATIME
 01000000

	)

56 
	#O_PATH
 010000000

	)

62 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


63 
	#O_DSYNC
 010000

	)

64 
	#O_RSYNC
 
O_SYNC


	)

67 #ifde‡
__USE_LARGEFILE64


68 
	#O_LARGEFILE
 0100000

	)

72 
	#F_DUPFD
 0

	)

73 
	#F_GETFD
 1

	)

74 
	#F_SETFD
 2

	)

75 
	#F_GETFL
 3

	)

76 
	#F_SETFL
 4

	)

77 #i‚de‡
__USE_FILE_OFFSET64


78 
	#F_GETLK
 5

	)

79 
	#F_SETLK
 6

	)

80 
	#F_SETLKW
 7

	)

82 
	#F_GETLK
 
F_GETLK64


	)

83 
	#F_SETLK
 
F_SETLK64


	)

84 
	#F_SETLKW
 
F_SETLKW64


	)

86 
	#F_GETLK64
 12

	)

87 
	#F_SETLK64
 13

	)

88 
	#F_SETLKW64
 14

	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


91 
	#F_SETOWN
 8

	)

92 
	#F_GETOWN
 9

	)

95 #ifde‡
__USE_GNU


96 
	#F_SETSIG
 10

	)

97 
	#F_GETSIG
 11

	)

98 
	#F_SETOWN_EX
 15

	)

99 
	#F_GETOWN_EX
 16

	)

102 #ifde‡
__USE_GNU


103 
	#F_SETLEASE
 1024

	)

104 
	#F_GETLEASE
 1025

	)

105 
	#F_NOTIFY
 1026

	)

106 
	#F_SETPIPE_SZ
 1031

	)

107 
	#F_GETPIPE_SZ
 1032

	)

109 #ifde‡
__USE_XOPEN2K8


110 
	#F_DUPFD_CLOEXEC
 1030

	)

115 
	#FD_CLOEXEC
 1

	)

118 
	#F_RDLCK
 0

	)

119 
	#F_WRLCK
 1

	)

120 
	#F_UNLCK
 2

	)

123 
	#F_EXLCK
 4

	)

124 
	#F_SHLCK
 8

	)

126 #ifde‡
__USE_BSD


128 
	#LOCK_SH
 1

	)

129 
	#LOCK_EX
 2

	)

130 
	#LOCK_NB
 4

	)

132 
	#LOCK_UN
 8

	)

135 #ifde‡
__USE_GNU


136 
	#LOCK_MAND
 32

	)

137 
	#LOCK_READ
 64

	)

138 
	#LOCK_WRITE
 128

	)

139 
	#LOCK_RW
 192

	)

142 #ifde‡
__USE_GNU


144 
	#DN_ACCESS
 0x00000001

	)

145 
	#DN_MODIFY
 0x00000002

	)

146 
	#DN_CREATE
 0x00000004

	)

147 
	#DN_DELETE
 0x00000008

	)

148 
	#DN_RENAME
 0x00000010

	)

149 
	#DN_ATTRIB
 0x00000020

	)

150 
	#DN_MULTISHOT
 0x80000000

	)

153 
	sÊock


155 
	ml_ty≥
;

156 
	ml_whí˚
;

157 #i‚de‡
__USE_FILE_OFFSET64


158 
__off_t
 
	ml_°¨t
;

159 
__off_t
 
	ml_Àn
;

161 
__off64_t
 
	ml_°¨t
;

162 
__off64_t
 
	ml_Àn
;

164 
__pid_t
 
	ml_pid
;

167 #ifde‡
__USE_LARGEFILE64


168 
	sÊock64


170 
	ml_ty≥
;

171 
	ml_whí˚
;

172 
__off64_t
 
	ml_°¨t
;

173 
__off64_t
 
	ml_Àn
;

174 
__pid_t
 
	ml_pid
;

178 #ifde‡
__USE_GNU


180 
	e__pid_ty≥


182 
	mF_OWNER_TID
 = 0,

183 
	mF_OWNER_PID
,

184 
	mF_OWNER_PGRP
,

185 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


189 
	sf_ow√r_ex


191 
__pid_ty≥
 
	mty≥
;

192 
__pid_t
 
	mpid
;

198 #ifdef 
__USE_BSD


199 
	#FAPPEND
 
O_APPEND


	)

200 
	#FFSYNC
 
O_FSYNC


	)

201 
	#FASYNC
 
O_ASYNC


	)

202 
	#FNONBLOCK
 
O_NONBLOCK


	)

203 
	#FNDELAY
 
O_NDELAY


	)

207 #ifde‡
__USE_XOPEN2K


208 
	#POSIX_FADV_NORMAL
 0

	)

209 
	#POSIX_FADV_RANDOM
 1

	)

210 
	#POSIX_FADV_SEQUENTIAL
 2

	)

211 
	#POSIX_FADV_WILLNEED
 3

	)

212 
	#POSIX_FADV_DONTNEED
 4

	)

213 
	#POSIX_FADV_NOREUSE
 5

	)

217 #ifde‡
__USE_GNU


219 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

222 
	#SYNC_FILE_RANGE_WRITE
 2

	)

225 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

230 
	#SPLICE_F_MOVE
 1

	)

231 
	#SPLICE_F_NONBLOCK
 2

	)

234 
	#SPLICE_F_MORE
 4

	)

235 
	#SPLICE_F_GIFT
 8

	)

239 
	sfûe_h™dÀ


241 
	mh™dÀ_byãs
;

242 
	mh™dÀ_ty≥
;

244 
	mf_h™dÀ
[0];

248 
	#MAX_HANDLE_SZ
 128

	)

251 
	g__BEGIN_DECLS


253 #ifde‡
__USE_GNU


256 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

257 
__THROW
;

261 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

262 
__Êags
);

269 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

270 
size_t
 
__cou¡
, 
__Êags
);

276 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

277 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

278 
__Êags
);

284 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

285 
__Êags
);

291 #i‚de‡
__USE_FILE_OFFSET64


292 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

294 #ifde‡
__REDIRECT


295 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

296 
__off64_t
 
__Àn
),

297 
ÁŒoˇã64
);

299 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

302 #ifde‡
__USE_LARGEFILE64


303 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

304 
__off64_t
 
__Àn
);

309 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

310 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

311 
__Êags
Ë
__THROW
;

317 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

318 
__Êags
);

322 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/ioctl-types.h

20 #i‚de‡
_SYS_IOCTL_H


25 
	~<asm/io˘ls.h
>

28 
	swösize


30 
	mws_row
;

31 
	mws_cﬁ
;

32 
	mws_xpixñ
;

33 
	mws_ypixñ
;

36 
	#NCC
 8

	)

37 
	sãrmio


39 
	mc_iÊag
;

40 
	mc_oÊag
;

41 
	mc_cÊag
;

42 
	mc_lÊag
;

43 
	mc_löe
;

44 
	mc_cc
[
NCC
];

48 
	#TIOCM_LE
 0x001

	)

49 
	#TIOCM_DTR
 0x002

	)

50 
	#TIOCM_RTS
 0x004

	)

51 
	#TIOCM_ST
 0x008

	)

52 
	#TIOCM_SR
 0x010

	)

53 
	#TIOCM_CTS
 0x020

	)

54 
	#TIOCM_CAR
 0x040

	)

55 
	#TIOCM_RNG
 0x080

	)

56 
	#TIOCM_DSR
 0x100

	)

57 
	#TIOCM_CD
 
TIOCM_CAR


	)

58 
	#TIOCM_RI
 
TIOCM_RNG


	)

63 
	#N_TTY
 0

	)

64 
	#N_SLIP
 1

	)

65 
	#N_MOUSE
 2

	)

66 
	#N_PPP
 3

	)

67 
	#N_STRIP
 4

	)

68 
	#N_AX25
 5

	)

69 
	#N_X25
 6

	)

70 
	#N_6PACK
 7

	)

71 
	#N_MASC
 8

	)

72 
	#N_R3964
 9

	)

73 
	#N_PROFIBUS_FDL
 10

	)

74 
	#N_IRDA
 11

	)

75 
	#N_SMSBLOCK
 12

	)

76 
	#N_HDLC
 13

	)

77 
	#N_SYNC_PPP
 14

	)

78 
	#N_HCI
 15

	)

	@/usr/include/bits/ioctls.h

19 #i‚de‡
_SYS_IOCTL_H


24 
	~<asm/io˘ls.h
>

27 
	#SIOCADDRT
 0x890B

	)

28 
	#SIOCDELRT
 0x890C

	)

29 
	#SIOCRTMSG
 0x890D

	)

32 
	#SIOCGIFNAME
 0x8910

	)

33 
	#SIOCSIFLINK
 0x8911

	)

34 
	#SIOCGIFCONF
 0x8912

	)

35 
	#SIOCGIFFLAGS
 0x8913

	)

36 
	#SIOCSIFFLAGS
 0x8914

	)

37 
	#SIOCGIFADDR
 0x8915

	)

38 
	#SIOCSIFADDR
 0x8916

	)

39 
	#SIOCGIFDSTADDR
 0x8917

	)

40 
	#SIOCSIFDSTADDR
 0x8918

	)

41 
	#SIOCGIFBRDADDR
 0x8919

	)

42 
	#SIOCSIFBRDADDR
 0x891®

	)

43 
	#SIOCGIFNETMASK
 0x891b

	)

44 
	#SIOCSIFNETMASK
 0x891¯

	)

45 
	#SIOCGIFMETRIC
 0x891d

	)

46 
	#SIOCSIFMETRIC
 0x891ê

	)

47 
	#SIOCGIFMEM
 0x891‡

	)

48 
	#SIOCSIFMEM
 0x8920

	)

49 
	#SIOCGIFMTU
 0x8921

	)

50 
	#SIOCSIFMTU
 0x8922

	)

51 
	#SIOCSIFNAME
 0x8923

	)

52 
	#SIOCSIFHWADDR
 0x8924

	)

53 
	#SIOCGIFENCAP
 0x8925

	)

54 
	#SIOCSIFENCAP
 0x8926

	)

55 
	#SIOCGIFHWADDR
 0x8927

	)

56 
	#SIOCGIFSLAVE
 0x8929

	)

57 
	#SIOCSIFSLAVE
 0x8930

	)

58 
	#SIOCADDMULTI
 0x8931

	)

59 
	#SIOCDELMULTI
 0x8932

	)

60 
	#SIOCGIFINDEX
 0x8933

	)

61 
	#SIOGIFINDEX
 
SIOCGIFINDEX


	)

62 
	#SIOCSIFPFLAGS
 0x8934

	)

63 
	#SIOCGIFPFLAGS
 0x8935

	)

64 
	#SIOCDIFADDR
 0x8936

	)

65 
	#SIOCSIFHWBROADCAST
 0x8937

	)

66 
	#SIOCGIFCOUNT
 0x8938

	)

68 
	#SIOCGIFBR
 0x8940

	)

69 
	#SIOCSIFBR
 0x8941

	)

71 
	#SIOCGIFTXQLEN
 0x8942

	)

72 
	#SIOCSIFTXQLEN
 0x8943

	)

77 
	#SIOCDARP
 0x8953

	)

78 
	#SIOCGARP
 0x8954

	)

79 
	#SIOCSARP
 0x8955

	)

82 
	#SIOCDRARP
 0x8960

	)

83 
	#SIOCGRARP
 0x8961

	)

84 
	#SIOCSRARP
 0x8962

	)

88 
	#SIOCGIFMAP
 0x8970

	)

89 
	#SIOCSIFMAP
 0x8971

	)

93 
	#SIOCADDDLCI
 0x8980

	)

94 
	#SIOCDELDLCI
 0x8981

	)

103 
	#SIOCDEVPRIVATE
 0x89F0

	)

109 
	#SIOCPROTOPRIVATE
 0x89E0

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

193 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_H


20 
	#_BITS_PTHREADTYPES_H
 1

	)

22 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

23 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

24 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

25 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

26 
	#__SIZEOF_PTHREAD_COND_COMPAT_T
 12

	)

27 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

28 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

29 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

30 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

31 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	t±hªad_t
;

41 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

42 
	m__Æign
;

43 } 
	t±hªad_©å_t
;

46 
	s__±hªad_öã∫Æ_¶i°


48 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

49 } 
	t__±hªad_¶i°_t
;

56 
	s__±hªad_muãx_s


58 
	m__lock
;

59 
	m__cou¡
;

60 
	m__ow√r
;

63 
	m__köd
;

64 
	m__nu£rs
;

65 
__exãnsi⁄__
 union

67 
	m__•ös
;

68 
__±hªad_¶i°_t
 
	m__li°
;

70 } 
	m__d©a
;

71 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

72 
	m__Æign
;

73 } 
	t±hªad_muãx_t
;

77 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

78 
	m__Æign
;

79 } 
	t±hªad_muãx©å_t
;

88 
	m__lock
;

89 
	m__fuãx
;

90 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

91 
__exãnsi⁄__
 
	m__wakeup_£q
;

92 
__exãnsi⁄__
 
	m__wokí_£q
;

93 *
	m__muãx
;

94 
	m__nwaôîs
;

95 
	m__brﬂdˇ°_£q
;

96 } 
	m__d©a
;

97 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

98 
__exãnsi⁄__
 
	m__Æign
;

99 } 
	t±hªad_c⁄d_t
;

103 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

104 
	m__Æign
;

105 } 
	t±hªad_c⁄d©å_t
;

109 
	t±hªad_key_t
;

113 
	t±hªad_⁄˚_t
;

116 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


123 
	m__lock
;

124 
	m__ƒ_ªadîs
;

125 
	m__ªadîs_wakeup
;

126 
	m__wrôî_wakeup
;

127 
	m__ƒ_ªadîs_queued
;

128 
	m__ƒ_wrôîs_queued
;

131 
	m__Êags
;

132 
	m__sh¨ed
;

133 
	m__∑d1
;

134 
	m__∑d2
;

135 
	m__wrôî
;

136 } 
	m__d©a
;

137 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

138 
	m__Æign
;

139 } 
	t±hªad_rwlock_t
;

143 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

144 
	m__Æign
;

145 } 
	t±hªad_rwlock©å_t
;

149 #ifde‡
__USE_XOPEN2K


151 vﬁ©ûê
	t±hªad_•ölock_t
;

158 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

159 
	m__Æign
;

160 } 
	t±hªad_b¨rõr_t
;

164 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

165 
	m__Æign
;

166 } 
	t±hªad_b¨rõøâr_t
;

171 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/resource.h

21 #i‚de‡
_SYS_RESOURCE_H


25 
	~<bôs/ty≥s.h
>

33 
	e__æimô_ªsour˚


36 
	mRLIMIT_CPU
 = 0,

37 
	#RLIMIT_CPU
 
RLIMIT_CPU


	)

40 
	mRLIMIT_FSIZE
 = 1,

41 
	#RLIMIT_FSIZE
 
RLIMIT_FSIZE


	)

44 
	mRLIMIT_DATA
 = 2,

45 
	#RLIMIT_DATA
 
RLIMIT_DATA


	)

48 
	mRLIMIT_STACK
 = 3,

49 
	#RLIMIT_STACK
 
RLIMIT_STACK


	)

52 
	mRLIMIT_CORE
 = 4,

53 
	#RLIMIT_CORE
 
RLIMIT_CORE


	)

59 
	m__RLIMIT_RSS
 = 5,

60 
	#RLIMIT_RSS
 
__RLIMIT_RSS


	)

63 
	mRLIMIT_NOFILE
 = 7,

64 
	m__RLIMIT_OFILE
 = 
RLIMIT_NOFILE
,

65 
	#RLIMIT_NOFILE
 
RLIMIT_NOFILE


	)

66 
	#RLIMIT_OFILE
 
__RLIMIT_OFILE


	)

69 
	mRLIMIT_AS
 = 9,

70 
	#RLIMIT_AS
 
RLIMIT_AS


	)

73 
	m__RLIMIT_NPROC
 = 6,

74 
	#RLIMIT_NPROC
 
__RLIMIT_NPROC


	)

77 
	m__RLIMIT_MEMLOCK
 = 8,

78 
	#RLIMIT_MEMLOCK
 
__RLIMIT_MEMLOCK


	)

81 
	m__RLIMIT_LOCKS
 = 10,

82 
	#RLIMIT_LOCKS
 
__RLIMIT_LOCKS


	)

85 
	m__RLIMIT_SIGPENDING
 = 11,

86 
	#RLIMIT_SIGPENDING
 
__RLIMIT_SIGPENDING


	)

89 
	m__RLIMIT_MSGQUEUE
 = 12,

90 
	#RLIMIT_MSGQUEUE
 
__RLIMIT_MSGQUEUE


	)

95 
	m__RLIMIT_NICE
 = 13,

96 
	#RLIMIT_NICE
 
__RLIMIT_NICE


	)

100 
	m__RLIMIT_RTPRIO
 = 14,

101 
	#RLIMIT_RTPRIO
 
__RLIMIT_RTPRIO


	)

106 
	m__RLIMIT_RTTIME
 = 15,

107 
	#RLIMIT_RTTIME
 
__RLIMIT_RTTIME


	)

109 
	m__RLIMIT_NLIMITS
 = 16,

110 
	m__RLIM_NLIMITS
 = 
__RLIMIT_NLIMITS


111 
	#RLIMIT_NLIMITS
 
__RLIMIT_NLIMITS


	)

112 
	#RLIM_NLIMITS
 
__RLIM_NLIMITS


	)

116 #i‚de‡
__USE_FILE_OFFSET64


117 
	#RLIM_INFINITY
 (()(~0UL))

	)

119 
	#RLIM_INFINITY
 0xffffffffffffffffuLL

	)

122 #ifde‡
__USE_LARGEFILE64


123 
	#RLIM64_INFINITY
 0xffffffffffffffffuLL

	)

127 
	#RLIM_SAVED_MAX
 
RLIM_INFINITY


	)

128 
	#RLIM_SAVED_CUR
 
RLIM_INFINITY


	)

132 #i‚de‡
__USE_FILE_OFFSET64


133 
__æim_t
 
	tæim_t
;

135 
__æim64_t
 
	tæim_t
;

137 #ifde‡
__USE_LARGEFILE64


138 
__æim64_t
 
	tæim64_t
;

141 
	sæimô


144 
æim_t
 
	mæim_cur
;

146 
æim_t
 
	mæim_max
;

149 #ifde‡
__USE_LARGEFILE64


150 
	sæimô64


153 
æim64_t
 
	mæim_cur
;

155 
æim64_t
 
	mæim_max
;

160 
	e__rußge_who


163 
	mRUSAGE_SELF
 = 0,

164 
	#RUSAGE_SELF
 
RUSAGE_SELF


	)

167 
	mRUSAGE_CHILDREN
 = -1

168 
	#RUSAGE_CHILDREN
 
RUSAGE_CHILDREN


	)

170 #ifde‡
__USE_GNU


173 
	mRUSAGE_THREAD
 = 1

174 
	#RUSAGE_THREAD
 
RUSAGE_THREAD


	)

176 
	#RUSAGE_LWP
 
RUSAGE_THREAD


	)

180 
	#__√ed_timevÆ


	)

181 
	~<bôs/time.h
>

184 
	srußge


187 
timevÆ
 
	mru_utime
;

189 
timevÆ
 
	mru_°ime
;

191 
	mru_maxrss
;

194 
	mru_ixrss
;

196 
	mru_idrss
;

198 
	mru_i§ss
;

201 
	mru_möÊt
;

203 
	mru_majÊt
;

205 
	mru_nsw≠
;

208 
	mru_öblock
;

210 
	mru_oublock
;

212 
	mru_msg¢d
;

214 
	mru_msgrcv
;

216 
	mru_nsig«ls
;

220 
	mru_nvcsw
;

223 
	mru_nivcsw
;

227 
	#PRIO_MIN
 -20

	)

228 
	#PRIO_MAX
 20

	)

232 
	e__¥i‹ôy_which


234 
	mPRIO_PROCESS
 = 0,

235 
	#PRIO_PROCESS
 
PRIO_PROCESS


	)

236 
	mPRIO_PGRP
 = 1,

237 
	#PRIO_PGRP
 
PRIO_PGRP


	)

238 
	mPRIO_USER
 = 2

239 
	#PRIO_USER
 
PRIO_USER


	)

243 
	g__BEGIN_DECLS


245 #ifde‡
__USE_GNU


247 #i‚de‡
__USE_FILE_OFFSET64


248 
	$¥limô
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

249 
__c⁄°
 
æimô
 *
__√w_limô
,

250 
æimô
 *
__ﬁd_limô
Ë
__THROW
;

252 #ifde‡
__REDIRECT_NTH


253 
	`__REDIRECT_NTH
 (
¥limô
, (
__pid_t
 
__pid
,

254 
__æimô_ªsour˚
 
__ªsour˚
,

255 
__c⁄°
 
æimô
 *
__√w_limô
,

256 
æimô
 *
__ﬁd_limô
), 
¥limô64
);

258 
	#¥limô
 
¥limô64


	)

261 #ifde‡
__USE_LARGEFILE64


262 
	$¥limô64
 (
__pid_t
 
__pid
, 
__æimô_ªsour˚
 
__ªsour˚
,

263 
__c⁄°
 
æimô64
 *
__√w_limô
,

264 
æimô64
 *
__ﬁd_limô
Ë
__THROW
;

268 
__END_DECLS


	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


24 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

25 
	#__FD_ZERO
(
fd•
) \

27 
__d0
, 
__d1
; \

28 
__asm__
 
	`__vﬁ©ûe__
 ("cld;Ñep; stosl" \

29 : "=c" (
__d0
), "=D" (
__d1
) \

30 : "a" (0), "0" ( (
fd_£t
) \

31 /  (
__fd_mask
)), \

32 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

34 } 0)

	)

40 
	#__FD_ZERO
(
£t
) \

42 
__i
; \

43 
fd_£t
 *
__¨r
 = (
£t
); \

44 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

45 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

46 } 0)

	)

50 
	#__FD_SET
(
d
, 
£t
) \

51 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

52 
	#__FD_CLR
(
d
, 
£t
) \

53 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

54 
	#__FD_ISSET
(
d
, 
£t
) \

55 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

20 #i‚de‡
_SYS_SELECT_H


25 
__fdñt_chk
 (
__d
);

26 
	$__fdñt_w¨n
 (
__d
)

27 
	`__w¨«âr
 ("bit outside of fd_set selected");

28 #unde‡
__FD_ELT


29 
	#__FD_ELT
(
d
) \

30 
__exãnsi⁄__
 \

31 ({ 
__d
 = (
d
); \

32 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

33 ? (
__d
 >
__FD_SETSIZE
 \

34 ? 
	`__fdñt_w¨n
 (
__d
Ë: (__d / 
__NFDBITS
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigaction.h

20 #i‚de‡
_SIGNAL_H


25 
	ssiga˘i⁄


28 #ifde‡
__USE_POSIX199309


32 
__sigh™dÀr_t
 
	mß_h™dÀr
;

34 (*
	mß_siga˘i⁄
Ë(, 
	msigöfo_t
 *, *);

36 
	m__siga˘i⁄_h™dÀr
;

37 
	#ß_h™dÀr
 
__siga˘i⁄_h™dÀr
.
ß_h™dÀr


	)

38 
	#ß_siga˘i⁄
 
__siga˘i⁄_h™dÀr
.
ß_siga˘i⁄


	)

40 
__sigh™dÀr_t
 
	mß_h™dÀr
;

44 
__sig£t_t
 
	mß_mask
;

47 
	mß_Êags
;

50 (*
	mß_ª°‹î
) ();

54 
	#SA_NOCLDSTOP
 1

	)

55 
	#SA_NOCLDWAIT
 2

	)

56 
	#SA_SIGINFO
 4

	)

58 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC


59 
	#SA_ONSTACK
 0x08000000

	)

61 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


62 
	#SA_RESTART
 0x10000000

	)

63 
	#SA_NODEFER
 0x40000000

	)

65 
	#SA_RESETHAND
 0x80000000

	)

67 #ifde‡
__USE_MISC


68 
	#SA_INTERRUPT
 0x20000000

	)

71 
	#SA_NOMASK
 
SA_NODEFER


	)

72 
	#SA_ONESHOT
 
SA_RESETHAND


	)

73 
	#SA_STACK
 
SA_ONSTACK


	)

77 
	#SIG_BLOCK
 0

	)

78 
	#SIG_UNBLOCK
 1

	)

79 
	#SIG_SETMASK
 2

	)

	@/usr/include/bits/sigcontext.h

19 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_SYS_UCONTEXT_H


23 #i‚de‡
sigc⁄ãxt_°ru˘


26 
	#sigc⁄ãxt_°ru˘
 
sigc⁄ãxt


	)

28 
	~<asm/sigc⁄ãxt.h
>

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

	@/usr/include/bits/siginfo.h

20 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
__√ed_sigöfo_t
 \

21 && !
deföed
 
	g__√ed_sigevít_t


25 
	~<bôs/w‹dsize.h
>

27 #i‡(!
deföed
 
__have_sigvÆ_t
 \

28 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
 \

29 || 
deföed
 
	g__√ed_sigevít_t
))

30 
	#__have_sigvÆ_t
 1

	)

33 
	usigvÆ


35 
	msivÆ_öt
;

36 *
	msivÆ_±r
;

37 } 
	tsigvÆ_t
;

40 #i‡(!
deföed
 
__have_sigöfo_t
 \

41 && (
deföed
 
	g_SIGNAL_H
 || deföed 
	g__√ed_sigöfo_t
))

42 
	#__have_sigöfo_t
 1

	)

44 
	#__SI_MAX_SIZE
 128

	)

45 #i‡
__WORDSIZE
 == 64

46 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 4)

	)

48 
	#__SI_PAD_SIZE
 ((
__SI_MAX_SIZE
 /  ()Ë- 3)

	)

51 
	ssigöfo


53 
	msi_signo
;

54 
	msi_î∫o
;

56 
	msi_code
;

60 
	m_∑d
[
__SI_PAD_SIZE
];

65 
__pid_t
 
	msi_pid
;

66 
__uid_t
 
	msi_uid
;

67 } 
	m_kûl
;

72 
	msi_tid
;

73 
	msi_ovîrun
;

74 
sigvÆ_t
 
	msi_sigvÆ
;

75 } 
	m_timî
;

80 
__pid_t
 
	msi_pid
;

81 
__uid_t
 
	msi_uid
;

82 
sigvÆ_t
 
	msi_sigvÆ
;

83 } 
	m_π
;

88 
__pid_t
 
	msi_pid
;

89 
__uid_t
 
	msi_uid
;

90 
	msi_°©us
;

91 
__˛ock_t
 
	msi_utime
;

92 
__˛ock_t
 
	msi_°ime
;

93 } 
	m_sigchld
;

98 *
	msi_addr
;

99 } 
	m_sigÁu…
;

104 
	msi_b™d
;

105 
	msi_fd
;

106 } 
	m_sigpﬁl
;

107 } 
	m_sifõlds
;

108 } 
	tsigöfo_t
;

112 
	#si_pid
 
_sifõlds
.
_kûl
.
si_pid


	)

113 
	#si_uid
 
_sifõlds
.
_kûl
.
si_uid


	)

114 
	#si_timîid
 
_sifõlds
.
_timî
.
si_tid


	)

115 
	#si_ovîrun
 
_sifõlds
.
_timî
.
si_ovîrun


	)

116 
	#si_°©us
 
_sifõlds
.
_sigchld
.
si_°©us


	)

117 
	#si_utime
 
_sifõlds
.
_sigchld
.
si_utime


	)

118 
	#si_°ime
 
_sifõlds
.
_sigchld
.
si_°ime


	)

119 
	#si_vÆue
 
_sifõlds
.
_π
.
si_sigvÆ


	)

120 
	#si_öt
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_öt


	)

121 
	#si_±r
 
_sifõlds
.
_π
.
si_sigvÆ
.
sivÆ_±r


	)

122 
	#si_addr
 
_sifõlds
.
_sigÁu…
.
si_addr


	)

123 
	#si_b™d
 
_sifõlds
.
_sigpﬁl
.
si_b™d


	)

124 
	#si_fd
 
_sifõlds
.
_sigpﬁl
.
si_fd


	)

131 
	mSI_ASYNCNL
 = -60,

132 
	#SI_ASYNCNL
 
SI_ASYNCNL


	)

133 
	mSI_TKILL
 = -6,

134 
	#SI_TKILL
 
SI_TKILL


	)

135 
	mSI_SIGIO
,

136 
	#SI_SIGIO
 
SI_SIGIO


	)

137 
	mSI_ASYNCIO
,

138 
	#SI_ASYNCIO
 
SI_ASYNCIO


	)

139 
	mSI_MESGQ
,

140 
	#SI_MESGQ
 
SI_MESGQ


	)

141 
	mSI_TIMER
,

142 
	#SI_TIMER
 
SI_TIMER


	)

143 
	mSI_QUEUE
,

144 
	#SI_QUEUE
 
SI_QUEUE


	)

145 
	mSI_USER
,

146 
	#SI_USER
 
SI_USER


	)

147 
	mSI_KERNEL
 = 0x80

148 
	#SI_KERNEL
 
SI_KERNEL


	)

155 
	mILL_ILLOPC
 = 1,

156 
	#ILL_ILLOPC
 
ILL_ILLOPC


	)

157 
	mILL_ILLOPN
,

158 
	#ILL_ILLOPN
 
ILL_ILLOPN


	)

159 
	mILL_ILLADR
,

160 
	#ILL_ILLADR
 
ILL_ILLADR


	)

161 
	mILL_ILLTRP
,

162 
	#ILL_ILLTRP
 
ILL_ILLTRP


	)

163 
	mILL_PRVOPC
,

164 
	#ILL_PRVOPC
 
ILL_PRVOPC


	)

165 
	mILL_PRVREG
,

166 
	#ILL_PRVREG
 
ILL_PRVREG


	)

167 
	mILL_COPROC
,

168 
	#ILL_COPROC
 
ILL_COPROC


	)

169 
	mILL_BADSTK


170 
	#ILL_BADSTK
 
ILL_BADSTK


	)

176 
	mFPE_INTDIV
 = 1,

177 
	#FPE_INTDIV
 
FPE_INTDIV


	)

178 
	mFPE_INTOVF
,

179 
	#FPE_INTOVF
 
FPE_INTOVF


	)

180 
	mFPE_FLTDIV
,

181 
	#FPE_FLTDIV
 
FPE_FLTDIV


	)

182 
	mFPE_FLTOVF
,

183 
	#FPE_FLTOVF
 
FPE_FLTOVF


	)

184 
	mFPE_FLTUND
,

185 
	#FPE_FLTUND
 
FPE_FLTUND


	)

186 
	mFPE_FLTRES
,

187 
	#FPE_FLTRES
 
FPE_FLTRES


	)

188 
	mFPE_FLTINV
,

189 
	#FPE_FLTINV
 
FPE_FLTINV


	)

190 
	mFPE_FLTSUB


191 
	#FPE_FLTSUB
 
FPE_FLTSUB


	)

197 
	mSEGV_MAPERR
 = 1,

198 
	#SEGV_MAPERR
 
SEGV_MAPERR


	)

199 
	mSEGV_ACCERR


200 
	#SEGV_ACCERR
 
SEGV_ACCERR


	)

206 
	mBUS_ADRALN
 = 1,

207 
	#BUS_ADRALN
 
BUS_ADRALN


	)

208 
	mBUS_ADRERR
,

209 
	#BUS_ADRERR
 
BUS_ADRERR


	)

210 
	mBUS_OBJERR


211 
	#BUS_OBJERR
 
BUS_OBJERR


	)

217 
	mTRAP_BRKPT
 = 1,

218 
	#TRAP_BRKPT
 
TRAP_BRKPT


	)

219 
	mTRAP_TRACE


220 
	#TRAP_TRACE
 
TRAP_TRACE


	)

226 
	mCLD_EXITED
 = 1,

227 
	#CLD_EXITED
 
CLD_EXITED


	)

228 
	mCLD_KILLED
,

229 
	#CLD_KILLED
 
CLD_KILLED


	)

230 
	mCLD_DUMPED
,

231 
	#CLD_DUMPED
 
CLD_DUMPED


	)

232 
	mCLD_TRAPPED
,

233 
	#CLD_TRAPPED
 
CLD_TRAPPED


	)

234 
	mCLD_STOPPED
,

235 
	#CLD_STOPPED
 
CLD_STOPPED


	)

236 
	mCLD_CONTINUED


237 
	#CLD_CONTINUED
 
CLD_CONTINUED


	)

243 
	mPOLL_IN
 = 1,

244 
	#POLL_IN
 
POLL_IN


	)

245 
	mPOLL_OUT
,

246 
	#POLL_OUT
 
POLL_OUT


	)

247 
	mPOLL_MSG
,

248 
	#POLL_MSG
 
POLL_MSG


	)

249 
	mPOLL_ERR
,

250 
	#POLL_ERR
 
POLL_ERR


	)

251 
	mPOLL_PRI
,

252 
	#POLL_PRI
 
POLL_PRI


	)

253 
	mPOLL_HUP


254 
	#POLL_HUP
 
POLL_HUP


	)

257 #unde‡
__√ed_sigöfo_t


261 #i‡(
deföed
 
_SIGNAL_H
 || deföed 
__√ed_sigevít_t
) \

262 && !
deföed
 
	g__have_sigevít_t


263 
	#__have_sigevít_t
 1

	)

266 
	#__SIGEV_MAX_SIZE
 64

	)

267 #i‡
__WORDSIZE
 == 64

268 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 4)

	)

270 
	#__SIGEV_PAD_SIZE
 ((
__SIGEV_MAX_SIZE
 /  ()Ë- 3)

	)

273 
	ssigevít


275 
sigvÆ_t
 
	msigev_vÆue
;

276 
	msigev_signo
;

277 
	msigev_nŸify
;

281 
	m_∑d
[
__SIGEV_PAD_SIZE
];

285 
__pid_t
 
	m_tid
;

289 (*
	m_fun˘i⁄
Ë(
	msigvÆ_t
);

290 *
	m_©åibuã
;

291 } 
	m_sigev_thªad
;

292 } 
	m_sigev_un
;

293 } 
	tsigevít_t
;

296 
	#sigev_nŸify_fun˘i⁄
 
_sigev_un
.
_sigev_thªad
.
_fun˘i⁄


	)

297 
	#sigev_nŸify_©åibuãs
 
_sigev_un
.
_sigev_thªad
.
_©åibuã


	)

302 
	mSIGEV_SIGNAL
 = 0,

303 
	#SIGEV_SIGNAL
 
SIGEV_SIGNAL


	)

304 
	mSIGEV_NONE
,

305 
	#SIGEV_NONE
 
SIGEV_NONE


	)

306 
	mSIGEV_THREAD
,

307 
	#SIGEV_THREAD
 
SIGEV_THREAD


	)

309 
	mSIGEV_THREAD_ID
 = 4

310 
	#SIGEV_THREAD_ID
 
SIGEV_THREAD_ID


	)

	@/usr/include/bits/signum.h

20 #ifdef 
_SIGNAL_H


23 
	#SIG_ERR
 ((
__sigh™dÀr_t
Ë-1Ë

	)

24 
	#SIG_DFL
 ((
__sigh™dÀr_t
Ë0Ë

	)

25 
	#SIG_IGN
 ((
__sigh™dÀr_t
Ë1Ë

	)

27 #ifde‡
__USE_UNIX98


28 
	#SIG_HOLD
 ((
__sigh™dÀr_t
Ë2Ë

	)

33 
	#SIGHUP
 1

	)

34 
	#SIGINT
 2

	)

35 
	#SIGQUIT
 3

	)

36 
	#SIGILL
 4

	)

37 
	#SIGTRAP
 5

	)

38 
	#SIGABRT
 6

	)

39 
	#SIGIOT
 6

	)

40 
	#SIGBUS
 7

	)

41 
	#SIGFPE
 8

	)

42 
	#SIGKILL
 9

	)

43 
	#SIGUSR1
 10

	)

44 
	#SIGSEGV
 11

	)

45 
	#SIGUSR2
 12

	)

46 
	#SIGPIPE
 13

	)

47 
	#SIGALRM
 14

	)

48 
	#SIGTERM
 15

	)

49 
	#SIGSTKFLT
 16

	)

50 
	#SIGCLD
 
SIGCHLD


	)

51 
	#SIGCHLD
 17

	)

52 
	#SIGCONT
 18

	)

53 
	#SIGSTOP
 19

	)

54 
	#SIGTSTP
 20

	)

55 
	#SIGTTIN
 21

	)

56 
	#SIGTTOU
 22

	)

57 
	#SIGURG
 23

	)

58 
	#SIGXCPU
 24

	)

59 
	#SIGXFSZ
 25

	)

60 
	#SIGVTALRM
 26

	)

61 
	#SIGPROF
 27

	)

62 
	#SIGWINCH
 28

	)

63 
	#SIGPOLL
 
SIGIO


	)

64 
	#SIGIO
 29

	)

65 
	#SIGPWR
 30

	)

66 
	#SIGSYS
 31

	)

67 
	#SIGUNUSED
 31

	)

69 
	#_NSIG
 65

	)

72 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

73 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

77 
	#__SIGRTMIN
 32

	)

78 
	#__SIGRTMAX
 (
_NSIG
 - 1)

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/sigstack.h

20 #i‚de‡
_SIGNAL_H


26 
	ssig°ack


28 *
	mss_•
;

29 
	mss_⁄°ack
;

36 
	mSS_ONSTACK
 = 1,

37 
	#SS_ONSTACK
 
SS_ONSTACK


	)

38 
	mSS_DISABLE


39 
	#SS_DISABLE
 
SS_DISABLE


	)

43 
	#MINSIGSTKSZ
 2048

	)

46 
	#SIGSTKSZ
 8192

	)

50 
	ssigÆt°ack


52 *
	mss_•
;

53 
	mss_Êags
;

54 
size_t
 
	mss_size
;

55 } 
	t°ack_t
;

	@/usr/include/bits/sigthread.h

20 #i‚de‡
_BITS_SIGTHREAD_H


21 
	#_BITS_SIGTHREAD_H
 1

	)

23 #i‡!
deföed
 
_SIGNAL_H
 && !deföed 
_PTHREAD_H


31 
	$±hªad_sigmask
 (
__how
,

32 
__c⁄°
 
__sig£t_t
 *
__ª°ri˘
 
__√wmask
,

33 
__sig£t_t
 *
__ª°ri˘
 
__ﬁdmask
)
__THROW
;

36 
	$±hªad_kûl
 (
±hªad_t
 
__thªadid
, 
__signo
Ë
__THROW
;

38 #ifde‡
__USE_GNU


40 
	$±hªad_sigqueue
 (
±hªad_t
 
__thªadid
, 
__signo
,

41 c⁄° 
sigvÆ
 
__vÆue
Ë
__THROW
;

	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_LINUX_OLD
 1

	)

28 
	#_STAT_VER_KERNEL
 1

	)

29 
	#_STAT_VER_SVR4
 2

	)

30 
	#_STAT_VER_LINUX
 3

	)

31 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

39 
	s°©


41 
__dev_t
 
	m°_dev
;

42 
	m__∑d1
;

43 #i‚de‡
__USE_FILE_OFFSET64


44 
__öo_t
 
	m°_öo
;

46 
__öo_t
 
	m__°_öo
;

48 
__mode_t
 
	m°_mode
;

49 
__∆ök_t
 
	m°_∆ök
;

50 
__uid_t
 
	m°_uid
;

51 
__gid_t
 
	m°_gid
;

52 
__dev_t
 
	m°_rdev
;

53 
	m__∑d2
;

54 #i‚de‡
__USE_FILE_OFFSET64


55 
__off_t
 
	m°_size
;

57 
__off64_t
 
	m°_size
;

59 
__blksize_t
 
	m°_blksize
;

61 #i‚de‡
__USE_FILE_OFFSET64


62 
__blk˙t_t
 
	m°_blocks
;

64 
__blk˙t64_t
 
	m°_blocks
;

66 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


73 
time•ec
 
	m°_©im
;

74 
time•ec
 
	m°_mtim
;

75 
time•ec
 
	m°_˘im
;

76 
	#°_©ime
 
°_©im
.
tv_£c


	)

77 
	#°_mtime
 
°_mtim
.
tv_£c


	)

78 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

80 
__time_t
 
	m°_©ime
;

81 
	m°_©imí£c
;

82 
__time_t
 
	m°_mtime
;

83 
	m°_mtimí£c
;

84 
__time_t
 
	m°_˘ime
;

85 
	m°_˘imí£c
;

87 #i‚de‡
__USE_FILE_OFFSET64


88 
	m__unu£d4
;

89 
	m__unu£d5
;

91 
__öo64_t
 
	m°_öo
;

95 #ifde‡
__USE_LARGEFILE64


96 
	s°©64


98 
__dev_t
 
	m°_dev
;

99 
	m__∑d1
;

101 
__öo_t
 
	m__°_öo
;

102 
__mode_t
 
	m°_mode
;

103 
__∆ök_t
 
	m°_∆ök
;

104 
__uid_t
 
	m°_uid
;

105 
__gid_t
 
	m°_gid
;

106 
__dev_t
 
	m°_rdev
;

107 
	m__∑d2
;

108 
__off64_t
 
	m°_size
;

109 
__blksize_t
 
	m°_blksize
;

111 
__blk˙t64_t
 
	m°_blocks
;

112 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


119 
time•ec
 
	m°_©im
;

120 
time•ec
 
	m°_mtim
;

121 
time•ec
 
	m°_˘im
;

123 
__time_t
 
	m°_©ime
;

124 
	m°_©imí£c
;

125 
__time_t
 
	m°_mtime
;

126 
	m°_mtimí£c
;

127 
__time_t
 
	m°_˘ime
;

128 
	m°_˘imí£c
;

130 
__öo64_t
 
	m°_öo
;

135 
	#_STATBUF_ST_BLKSIZE


	)

136 
	#_STATBUF_ST_RDEV


	)

138 
	#_STATBUF_ST_NSEC


	)

142 
	#__S_IFMT
 0170000

	)

145 
	#__S_IFDIR
 0040000

	)

146 
	#__S_IFCHR
 0020000

	)

147 
	#__S_IFBLK
 0060000

	)

148 
	#__S_IFREG
 0100000

	)

149 
	#__S_IFIFO
 0010000

	)

150 
	#__S_IFLNK
 0120000

	)

151 
	#__S_IFSOCK
 0140000

	)

155 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

156 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

157 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

161 
	#__S_ISUID
 04000

	)

162 
	#__S_ISGID
 02000

	)

163 
	#__S_ISVTX
 01000

	)

164 
	#__S_IREAD
 0400

	)

165 
	#__S_IWRITE
 0200

	)

166 
	#__S_IEXEC
 0100

	)

168 #ifde‡
__USE_ATFILE


169 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

170 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

21 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

31 #i‡!
deföed
 
__NO_STRING_INLINES
 && deföed 
__USE_STRING_INLINES
 \

32 && 
deföed
 
	g__GNUC__
 && __GNUC__ >2 && !
__BOUNDED_POINTERS__


34 #i‚de‡
__STRING_INLINE


35 #i‚de‡
__exã∫_ölöe


36 
	#__STRING_INLINE
 
ölöe


	)

38 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

43 
	#__STRING_SMALL_GET16
(
§c
, 
idx
) \

44 ((((
__c⁄°
 *Ë(
§c
))[
idx
 + 1] << 8) \

45 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

46 
	#__STRING_SMALL_GET32
(
§c
, 
idx
) \

47 (((((
__c⁄°
 *Ë(
§c
))[
idx
 + 3] << 8 \

48 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 2]) << 8 \

49 | ((
__c⁄°
 *Ë(
§c
))[
idx
 + 1]) << 8 \

50 | ((
__c⁄°
 *Ë(
§c
))[
idx
])

	)

54 
	#_HAVE_STRING_ARCH_mem˝y
 1

	)

55 
	#mem˝y
(
de°
, 
§c
, 
n
) \

56 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

57 ? 
	`__mem˝y_c
 ((
de°
), (
§c
), (
n
)) \

58 : 
	`__mem˝y_g
 ((
de°
), (
§c
), (
n
))))

	)

59 
	#__mem˝y_c
(
de°
, 
§c
, 
n
) \

60 ((
n
) == 0 \

61 ? (
de°
) \

62 : (((
n
) % 4 == 0) \

63 ? 
	`__mem˝y_by4
 (
de°
, 
§c
, 
n
) \

64 : (((
n
) % 2 == 0) \

65 ? 
	`__mem˝y_by2
 (
de°
, 
§c
, 
n
) \

66 : 
	`__mem˝y_g
 (
de°
, 
§c
, 
n
))))

	)

68 
__STRING_INLINE
 *
__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

69 
size_t
 
__n
);

71 
__STRING_INLINE
 *

72 
	$__mem˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

74 
__d0
, 
__d1
;

75 *
__tmp
 = 
__de°
;

76 
__asm__
 
__vﬁ©ûe__


84 : "=&r" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

85 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 4)

87  
__de°
;

88 
	}
}

90 
__STRING_INLINE
 *
__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

91 
size_t
 
__n
);

93 
__STRING_INLINE
 *

94 
	$__mem˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

96 
__d0
, 
__d1
;

97 *
__tmp
 = 
__de°
;

98 
__asm__
 
__vﬁ©ûe__


111 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

112 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
 / 2)

114  
__de°
;

115 
	}
}

117 
__STRING_INLINE
 *
__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
,

118 
size_t
 
__n
);

120 
__STRING_INLINE
 *

121 
	$__mem˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

123 
__d0
, 
__d1
, 
__d2
;

124 *
__tmp
 = 
__de°
;

125 
__asm__
 
__vﬁ©ûe__


136 : "=&c" (
__d0
), "=&D" (
__d1
), "=&S" (
__d2
),

137 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

138 : "0" (
__n
), "1" (
__tmp
), "2" (
__§c
),

139 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
)

141  
__de°
;

142 
	}
}

144 
	#_HAVE_STRING_ARCH_memmove
 1

	)

145 #i‚de‡
_FORCE_INLINES


148 
	#memmove
(
de°
, 
§c
, 
n
Ë
	`__memmove_g
 (de°, src,Ç)

	)

150 
__STRING_INLINE
 *
	$__memmove_g
 (*, 
__c⁄°
 *, 
size_t
)

151 
	`__asm__
 ("memmove");

153 
__STRING_INLINE
 *

154 
	$__memmove_g
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

156 
__d0
, 
__d1
, 
__d2
;

157 *
__tmp
 = 
__de°
;

158 i‡(
__de°
 < 
__§c
)

159 
__asm__
 
__vﬁ©ûe__


162 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

163 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

164 : "0" (
__n
), "1" (
__§c
), "2" (
__tmp
),

165 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

167 
__asm__
 
__vﬁ©ûe__


171 : "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
),

172 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__de°
)

173 : "0" (
__n
), "1" (__¿- 1 + (
__c⁄°
 *Ë
__§c
),

174 "2" (
__n
 - 1 + (*Ë
__tmp
),

175 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__§c
));

176  
__de°
;

177 
	}
}

181 
	#_HAVE_STRING_ARCH_memcmp
 1

	)

182 #i‚de‡
_FORCE_INLINES


183 #i‚de‡
__PIC__


185 
__STRING_INLINE
 

186 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

188 
__d0
, 
__d1
, 
__d2
;

189 
__ªs
;

190 
__asm__
 
__vﬁ©ûe__


198 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

199 : "0" (0), "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

200 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

201 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

203  
__ªs
;

204 
	}
}

209 
	#_HAVE_STRING_ARCH_mem£t
 1

	)

210 
	#_USE_STRING_ARCH_mem£t
 1

	)

211 
	#mem£t
(
s
, 
c
, 
n
) \

212 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

213 ? ((
n
) == 1 \

214 ? 
	`__mem£t_c1
 ((
s
), (
c
)) \

215 : 
	`__mem£t_gc
 ((
s
), (
c
), (
n
))) \

216 : (
	`__buûtö_c⁄°™t_p
 (
c
) \

217 ? (
	`__buûtö_c⁄°™t_p
 (
n
) \

218 ? 
	`__mem£t_c˙
 ((
s
), (
c
), (
n
)) \

219 : 
	`mem£t
 ((
s
), (
c
), (
n
))) \

220 : (
	`__buûtö_c⁄°™t_p
 (
n
) \

221 ? 
	`__mem£t_g˙
 ((
s
), (
c
), (
n
)) \

222 : 
	`mem£t
 ((
s
), (
c
), (
n
))))))

	)

224 
	#__mem£t_c1
(
s
, 
c
Ë({ *
__s
 = (s); \

225 *((*Ë
__s
Ë(Ë(
c
); \

226 
__s
; })

	)

228 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

229 ({ *
__s
 = (
s
); \

231 
__ui
; \

232 
__usi
; \

233 
__uc
; \

234 } *
__u
 = 
__s
; \

235 
__c
 = ((Ë((Ë(
c
))) * 0x01010101; \

241 i‡((
n
) == 3 || (n) >= 5) \

242 
__asm__
 
	`__vﬁ©ûe__
 ("" : "Ù" (
__c
) : "0" (__c)); \

245 
n
) \

248 
__u
->
__ui
 = 
__c
; \

249 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

251 
__u
->
__ui
 = 
__c
; \

252 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

254 
__u
->
__ui
 = 
__c
; \

255 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

257 
__u
->
__usi
 = (Ë
__c
; \

258 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

259 
__u
->
__uc
 = (Ë
__c
; \

263 
__u
->
__ui
 = 
__c
; \

264 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

266 
__u
->
__ui
 = 
__c
; \

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

269 
__u
->
__ui
 = 
__c
; \

270 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

272 
__u
->
__usi
 = (Ë
__c
; \

276 
__u
->
__ui
 = 
__c
; \

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

279 
__u
->
__ui
 = 
__c
; \

280 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

282 
__u
->
__ui
 = 
__c
; \

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

285 
__u
->
__uc
 = (Ë
__c
; \

289 
__u
->
__ui
 = 
__c
; \

290 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

292 
__u
->
__ui
 = 
__c
; \

293 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

295 
__u
->
__ui
 = 
__c
; \

296 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

298 
__u
->
__ui
 = 
__c
; \

303 
__s
; })

	)

305 
	#__mem£t_c˙
(
s
, 
c
, 
n
) \

306 (((
n
) % 4 == 0) \

307 ? 
	`__mem£t_c˙_by4
 (
s
, ((Ë((Ë(
c
))) * 0x01010101,\

308 
n
) \

309 : (((
n
) % 2 == 0) \

310 ? 
	`__mem£t_c˙_by2
 (
s
, \

311 ((Ë((Ë(
c
))) * 0x01010101,\

312 
n
) \

313 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

315 
__STRING_INLINE
 *
__mem£t_c˙_by4
 (*
__s
, 
__c
,

316 
size_t
 
__n
);

318 
__STRING_INLINE
 *

319 
	$__mem£t_c˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

321 *
__tmp
 = 
__s
;

322 
__d0
;

323 #ifde‡
__i686__


324 
__asm__
 
__vﬁ©ûe__


327 : "=&a" (
__c
), "=&D" (
__tmp
), "=&c" (
__d0
),

328 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

329 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

332 
__asm__
 
__vﬁ©ûe__


338 : "=&r" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

339 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

340 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

343  
__s
;

344 
	}
}

346 
__STRING_INLINE
 *
__mem£t_c˙_by2
 (*
__s
, 
__c
,

347 
size_t
 
__n
);

349 
__STRING_INLINE
 *

350 
	$__mem£t_c˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

352 
__d0
, 
__d1
;

353 *
__tmp
 = 
__s
;

354 #ifde‡
__i686__


355 
__asm__
 
__vﬁ©ûe__


359 : "=&a" (
__d0
), "=&D" (
__tmp
), "=&c" (
__d1
),

360 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

361 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

364 
__asm__
 
__vﬁ©ûe__


370 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

371 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

372 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

375  
__s
;

376 
	}
}

378 
	#__mem£t_g˙
(
s
, 
c
, 
n
) \

379 (((
n
) % 4 == 0) \

380 ? 
	`__mem£t_g˙_by4
 (
s
, 
c
, 
n
) \

381 : (((
n
) % 2 == 0) \

382 ? 
	`__mem£t_g˙_by2
 (
s
, 
c
, 
n
) \

383 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

385 
__STRING_INLINE
 *
__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
);

387 
__STRING_INLINE
 *

388 
	$__mem£t_g˙_by4
 (*
__s
, 
__c
, 
size_t
 
__n
)

390 *
__tmp
 = 
__s
;

391 
__d0
;

392 
__asm__
 
__vﬁ©ûe__


402 : "=&q" (
__c
), "=&r" (
__tmp
), "=&r" (
__d0
),

403 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

404 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

406  
__s
;

407 
	}
}

409 
__STRING_INLINE
 *
__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
);

411 
__STRING_INLINE
 *

412 
	$__mem£t_g˙_by2
 (*
__s
, 
__c
, 
size_t
 
__n
)

414 
__d0
, 
__d1
;

415 *
__tmp
 = 
__s
;

416 
__asm__
 
__vﬁ©ûe__


427 : "=&q" (
__d0
), "=&r" (
__tmp
), "=&r" (
__d1
),

428 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

429 : "0" ((Ë
__c
), "1" (
__tmp
), "2" (
__n
 / 4)

431  
__s
;

432 
	}
}

436 
	#_HAVE_STRING_ARCH_memchr
 1

	)

437 #i‚de‡
_FORCE_INLINES


438 
__STRING_INLINE
 *

439 
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

441 
__d0
;

442 #ifde‡
__i686__


443 
__d1
;

445 *
__ªs
;

446 i‡(
__n
 == 0)

447  
NULL
;

448 #ifde‡
__i686__


449 
__asm__
 
__vﬁ©ûe__


453 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

454 : "a" (
__c
), "0" (
__s
), "1" (
__n
), "2" (1),

455 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

458 
__asm__
 
__vﬁ©ûe__


464 : "=D" (
__ªs
), "=&c" (
__d0
)

465 : "a" (
__c
), "0" (
__s
), "1" (
__n
),

466 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

469  
__ªs
 - 1;

470 
	}
}

473 
	#_HAVE_STRING_ARCH_memrchr
 1

	)

474 #i‚de‡
_FORCE_INLINES


475 
__STRING_INLINE
 *
__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
);

477 
__STRING_INLINE
 *

478 
	$__memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

480 
__d0
;

481 #ifde‡
__i686__


482 
__d1
;

484 *
__ªs
;

485 i‡(
__n
 == 0)

486  
NULL
;

487 #ifde‡
__i686__


488 
__asm__
 
__vﬁ©ûe__


494 : "=D" (
__ªs
), "=&c" (
__d0
), "=&r" (
__d1
)

495 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n), "2" (-1),

496 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

499 
__asm__
 
__vﬁ©ûe__


506 : "=D" (
__ªs
), "=&c" (
__d0
)

507 : "a" (
__c
), "0" (
__s
 + 
__n
 - 1), "1" (__n),

508 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s
)

511  
__ªs
;

512 
	}
}

513 #ifde‡
__USE_GNU


514 
	#memrchr
(
s
, 
c
, 
n
Ë
	`__memrchr
 ((s), (c), (n))

	)

519 
	#_HAVE_STRING_ARCH_øwmemchr
 1

	)

520 
__STRING_INLINE
 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

522 #i‚de‡
_FORCE_INLINES


523 
__STRING_INLINE
 *

524 
	$__øwmemchr
 (c⁄° *
__s
, 
__c
)

526 
__d0
;

527 *
__ªs
;

528 
__asm__
 
__vﬁ©ûe__


531 : "=D" (
__ªs
), "=&c" (
__d0
)

532 : "a" (
__c
), "0" (
__s
), "1" (0xffffffff),

533 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

535  
__ªs
 - 1;

536 
	}
}

537 #ifde‡
__USE_GNU


538 
__STRING_INLINE
 *

539 
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

541  
	`__øwmemchr
 (
__s
, 
__c
);

542 
	}
}

548 
	#_HAVE_STRING_ARCH_°æí
 1

	)

549 
	#°æí
(
°r
) \

550 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
°r
) \

551 ? 
	`__buûtö_°æí
 (
°r
) \

552 : 
	`__°æí_g
 (
°r
)))

	)

553 
__STRING_INLINE
 
size_t
 
__°æí_g
 (
__c⁄°
 *
__°r
);

555 
__STRING_INLINE
 
size_t


556 
	$__°æí_g
 (
__c⁄°
 *
__°r
)

558 
__dummy
;

559 
__c⁄°
 *
__tmp
 = 
__°r
;

560 
__asm__
 
__vﬁ©ûe__


566 : "Ù" (
__tmp
), "=&q" (
__dummy
)

567 : "0" (
__°r
),

568 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__°r
)

570  
__tmp
 - 
__°r
 - 1;

571 
	}
}

575 
	#_HAVE_STRING_ARCH_°r˝y
 1

	)

576 
	#°r˝y
(
de°
, 
§c
) \

577 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

578 ? ( ((
§c
)[0]Ë=1 && 
	`°æí
 (src) + 1 <= 8 \

579 ? 
	`__°r˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

580 : (*Ë
	`mem˝y
 ((*Ë(
de°
), \

581 (
__c⁄°
 *Ë(
§c
), \

582 
	`°æí
 (
§c
) + 1)) \

583 : 
	`__°r˝y_g
 ((
de°
), (
§c
))))

	)

585 
	#__°r˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

586 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

588 
__ui
; \

589 
__usi
; \

590 
__uc
; \

591 
__c
; \

592 } *
__u
 = (*Ë
__de°
; \

593 
§˛í
) \

596 
__u
->
__uc
 = '\0'; \

599 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

602 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

603 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

604 
__u
->
__uc
 = '\0'; \

607 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

610 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

611 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

612 
__u
->
__uc
 = '\0'; \

615 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

616 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

617 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

620 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

621 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

622 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

623 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

624 
__u
->
__uc
 = '\0'; \

627 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

628 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

629 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

632 (*Ë
__de°
; }))

	)

634 
__STRING_INLINE
 *
__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

636 
__STRING_INLINE
 *

637 
	$__°r˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

639 *
__tmp
 = 
__de°
;

640 
__dummy
;

641 
__asm__
 
__vﬁ©ûe__


650 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
),

651 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

652 : "0" (
__§c
), "1" (
__tmp
),

653 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

655  
__de°
;

656 
	}
}

659 #ifde‡
__USE_GNU


660 
	#_HAVE_STRING_ARCH_°p˝y
 1

	)

662 
	#__°p˝y
(
de°
, 
§c
) \

663 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

664 ? (
	`°æí
 (
§c
) + 1 <= 8 \

665 ? 
	`__°p˝y_a_smÆl
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

666 : 
	`__°p˝y_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1)) \

667 : 
	`__°p˝y_g
 ((
de°
), (
§c
))))

	)

668 
	#__°p˝y_c
(
de°
, 
§c
, 
§˛í
) \

669 ((
§˛í
) % 4 == 0 \

670 ? 
	`__memp˝y_by4
 (
de°
, 
§c
, 
§˛í
) - 1 \

671 : ((
§˛í
) % 2 == 0 \

672 ? 
	`__memp˝y_by2
 (
de°
, 
§c
, 
§˛í
) - 1 \

673 : 
	`__memp˝y_byn
 (
de°
, 
§c
, 
§˛í
Ë- 1))

	)

676 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 ((de°), (§c))

	)

678 
	#__°p˝y_a_smÆl
(
de°
, 
§c
, 
§˛í
) \

679 (
	`__exãnsi⁄__
 ({ union { \

680 
__ui
; \

681 
__usi
; \

682 
__uc
; \

683 
__c
; \

684 } *
__u
 = (*Ë(
de°
); \

685 
§˛í
) \

688 
__u
->
__uc
 = '\0'; \

691 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

692 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

695 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 0); \

696 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

697 
__u
->
__uc
 = '\0'; \

700 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

701 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

704 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

705 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

706 
__u
->
__uc
 = '\0'; \

709 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

710 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

711 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

712 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1); \

715 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

716 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

717 
__u
->
__usi
 = 
	`__STRING_SMALL_GET16
 (
§c
, 4); \

718 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

719 
__u
->
__uc
 = '\0'; \

722 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 0); \

723 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

724 
__u
->
__ui
 = 
	`__STRING_SMALL_GET32
 (
§c
, 4); \

725 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3); \

728 (*Ë
__u
; }))

	)

730 
__STRING_INLINE
 *
__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
,

731 
size_t
 
__§˛í
);

733 
__STRING_INLINE
 *

734 
	$__memp˝y_by4
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

736 *
__tmp
 = 
__de°
;

737 
__d0
, 
__d1
;

738 
__asm__
 
__vﬁ©ûe__


746 : "=&r" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
)

747 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4)

749  
__tmp
;

750 
	}
}

752 
__STRING_INLINE
 *
__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
,

753 
size_t
 
__§˛í
);

755 
__STRING_INLINE
 *

756 
	$__memp˝y_by2
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

758 *
__tmp
 = 
__de°
;

759 
__d0
, 
__d1
;

760 
__asm__
 
__vﬁ©ûe__


773 : "=&q" (
__d0
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__d1
),

774 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

775 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

776 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

778  
__tmp
 + 2;

779 
	}
}

781 
__STRING_INLINE
 *
__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
,

782 
size_t
 
__§˛í
);

784 
__STRING_INLINE
 *

785 
	$__memp˝y_byn
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__§˛í
)

787 
__d0
, 
__d1
;

788 *
__tmp
 = 
__de°
;

789 
__asm__
 
__vﬁ©ûe__


800 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

801 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

802 : "0" (
__tmp
), "1" (
__§˛í
), "2" (
__§c
),

803 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

805  
__tmp
;

806 
	}
}

808 
__STRING_INLINE
 *
__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

810 
__STRING_INLINE
 *

811 
	$__°p˝y_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

813 *
__tmp
 = 
__de°
;

814 
__dummy
;

815 
__asm__
 
__vﬁ©ûe__


824 : "=&r" (
__§c
), "Ù" (
__tmp
), "=&q" (
__dummy
),

825 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

826 : "0" (
__§c
), "1" (
__tmp
),

827 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

829  
__tmp
 - 1;

830 
	}
}

835 
	#_HAVE_STRING_ARCH_°∫˝y
 1

	)

836 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

837 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

838 ? ((
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

839 ? (*Ë
	`mem˝y
 ((*Ë(
de°
), \

840 (
__c⁄°
 *Ë(
§c
), 
n
) \

841 : 
	`__°∫˝y_cg
 ((
de°
), (
§c
), 
	`°æí
 (§cË+ 1, 
n
))) \

842 : 
	`__°∫˝y_gg
 ((
de°
), (
§c
), 
n
)))

	)

843 
	#__°∫˝y_cg
(
de°
, 
§c
, 
§˛í
, 
n
) \

844 (((
§˛í
) % 4 == 0) \

845 ? 
	`__°∫˝y_by4
 (
de°
, 
§c
, 
§˛í
, 
n
) \

846 : (((
§˛í
) % 2 == 0) \

847 ? 
	`__°∫˝y_by2
 (
de°
, 
§c
, 
§˛í
, 
n
) \

848 : 
	`__°∫˝y_byn
 (
de°
, 
§c
, 
§˛í
, 
n
)))

	)

850 
__STRING_INLINE
 *
__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[],

851 
size_t
 
__§˛í
, size_à
__n
);

853 
__STRING_INLINE
 *

854 
	$__°∫˝y_by4
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

856 *
__tmp
 = 
__de°
;

857 
__dummy1
, 
__dummy2
;

858 
__asm__
 
__vﬁ©ûe__


866 : "=&r" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

867 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

868 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 4),

869 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

871 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

872  
__de°
;

873 
	}
}

875 
__STRING_INLINE
 *
__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[],

876 
size_t
 
__§˛í
, size_à
__n
);

878 
__STRING_INLINE
 *

879 
	$__°∫˝y_by2
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

881 *
__tmp
 = 
__de°
;

882 
__dummy1
, 
__dummy2
;

883 
__asm__
 
__vﬁ©ûe__


896 : "=&q" (
__dummy1
), "Ù" (
__tmp
), "=&r" (
__§c
), "=&r" (
__dummy2
),

897 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

898 : "1" (
__tmp
), "2" (
__§c
), "3" (
__§˛í
 / 2),

899 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

901 (Ë
	`mem£t
 (
__tmp
 + 2, '\0', 
__n
 - 
__§˛í
);

902  
__de°
;

903 
	}
}

905 
__STRING_INLINE
 *
__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[],

906 
size_t
 
__§˛í
, size_à
__n
);

908 
__STRING_INLINE
 *

909 
	$__°∫˝y_byn
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
, size_à
__n
)

911 
__d0
, 
__d1
;

912 *
__tmp
 = 
__de°
;

913 
__asm__
 
__vﬁ©ûe__


924 : "=D" (
__tmp
), "=&c" (
__d0
), "=&S" (
__d1
),

925 "=m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__de°
)

926 : "1" (
__§˛í
), "0" (
__tmp
),"2" (
__§c
),

927 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

929 (Ë
	`mem£t
 (
__tmp
, '\0', 
__n
 - 
__§˛í
);

930  
__de°
;

931 
	}
}

933 
__STRING_INLINE
 *
__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
,

934 
size_t
 
__n
);

936 
__STRING_INLINE
 *

937 
	$__°∫˝y_gg
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

939 *
__tmp
 = 
__de°
;

940 
__dummy
;

941 i‡(
__n
 > 0)

942 
__asm__
 
__vﬁ©ûe__


958 : "=&r" (
__§c
), "=&r" (
__tmp
), "=&q" (
__dummy
), "=&r" (
__n
)

959 : "0" (
__§c
), "1" (
__tmp
), "3" (
__n
)

962  
__de°
;

963 
	}
}

967 
	#_HAVE_STRING_ARCH_°rˇt
 1

	)

968 
	#°rˇt
(
de°
, 
§c
) \

969 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

970 ? 
	`__°rˇt_c
 ((
de°
), (
§c
), 
	`°æí
 (src) + 1) \

971 : 
	`__°rˇt_g
 ((
de°
), (
§c
))))

	)

973 
__STRING_INLINE
 *
__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[],

974 
size_t
 
__§˛í
);

976 
__STRING_INLINE
 *

977 
	$__°rˇt_c
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__§˛í
)

979 #ifde‡
__i686__


980 
__d0
;

981 *
__tmp
;

982 
__asm__
 
__vﬁ©ûe__


984 : "=D" (
__tmp
), "=&c" (
__d0
),

985 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

986 : "0" (
__de°
), "1" (0xffffffff), "a" (0),

987 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

989 --
__tmp
;

991 *
__tmp
 = 
__de°
 - 1;

992 
__asm__
 
__vﬁ©ûe__


997 : "Ù" (
__tmp
),

998 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

999 : "0" (
__tmp
),

1000 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__§˛í
]; } *)
__§c
)

1003 (Ë
	`mem˝y
 (
__tmp
, 
__§c
, 
__§˛í
);

1004  
__de°
;

1005 
	}
}

1007 
__STRING_INLINE
 *
__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
);

1009 
__STRING_INLINE
 *

1010 
	$__°rˇt_g
 (*
__de°
, 
__c⁄°
 *
__§c
)

1012 *
__tmp
 = 
__de°
 - 1;

1013 
__dummy
;

1014 
__asm__
 
__vﬁ©ûe__


1026 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
),

1027 "=m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__de°
)

1028 : "1" (
__tmp
), "2" (
__§c
),

1029 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__§c
)

1031  
__de°
;

1032 
	}
}

1036 
	#_HAVE_STRING_ARCH_°∫ˇt
 1

	)

1037 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

1038 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

1039 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

1040 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

1041 ? 
	`°rˇt
 (
__de°
, (
§c
)) \

1042 : (*(*)
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

1043 (
__c⁄°
 *Ë(
§c
), \

1044 (
n
)Ë0, 
__de°
)) \

1045 : 
	`__°∫ˇt_g
 (
__de°
, (
§c
), (
n
)); }))

	)

1047 
__STRING_INLINE
 *
__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[],

1048 
size_t
 
__n
);

1050 
__STRING_INLINE
 *

1051 
	$__°∫ˇt_g
 (*
__de°
, 
__c⁄°
 
__§c
[], 
size_t
 
__n
)

1053 *
__tmp
 = 
__de°
;

1054 
__dummy
;

1055 #ifde‡
__i686__


1056 
__asm__
 
__vﬁ©ûe__


1070 : "=&a" (
__dummy
), "=&D" (
__tmp
), "=&S" (
__§c
), "=&c" (
__n
)

1071 : "g" (
__n
), "0" (0), "1" (
__tmp
), "2" (
__§c
), "3" (0xffffffff)

1074 --
__tmp
;

1075 
__asm__
 
__vﬁ©ûe__


1092 : "=&q" (
__dummy
), "=&r" (
__tmp
), "=&r" (
__§c
), "=&r" (
__n
)

1093 : "1" (
__tmp
), "2" (
__§c
), "3" (
__n
)

1096  
__de°
;

1097 
	}
}

1101 
	#_HAVE_STRING_ARCH_°rcmp
 1

	)

1102 
	#°rcmp
(
s1
, 
s2
) \

1103 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

1104 && ( ((
s1
)[0]Ë!1 || 
	`°æí
 (s1) >= 4) \

1105 && ( ((
s2
)[0]Ë!1 || 
	`°æí
 (s2) >= 4) \

1106 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

1107 (
	`°æí
 (
s1
Ë< såÀ¿(
s2
) \

1108 ? 
	`°æí
 (
s1
Ë: såÀ¿(
s2
)) + 1) \

1109 : (
	`__buûtö_c⁄°™t_p
 (
s1
) &&  ((s1)[0]) == 1 \

1110 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (
s1
) < 4 \

1111 ? (
	`__buûtö_c⁄°™t_p
 (
s2
) &&  ((s2)[0]) == 1 \

1112 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1113 (
__c⁄°
 *Ë(
s2
), \

1114 
	`°æí
 (
s1
)) \

1115 : 
	`__°rcmp_cg
 ((
__c⁄°
 *Ë(
s1
), \

1116 (
__c⁄°
 *Ë(
s2
), \

1117 
	`°æí
 (
s1
))) \

1118 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&&  ((
s1
)[0]) == 1 \

1119 &&  ((
s2
)[0]Ë=1 && 
	`°æí
 (s2) < 4 \

1120 ? (
	`__buûtö_c⁄°™t_p
 (
s1
) \

1121 ? 
	`__°rcmp_cc
 ((
__c⁄°
 *Ë(
s1
), \

1122 (
__c⁄°
 *Ë(
s2
), \

1123 
	`°æí
 (
s2
)) \

1124 : 
	`__°rcmp_gc
 ((
__c⁄°
 *Ë(
s1
), \

1125 (
__c⁄°
 *Ë(
s2
), \

1126 
	`°æí
 (
s2
))) \

1127 : 
	`__°rcmp_gg
 ((
s1
), (
s2
))))))

	)

1129 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

1130 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = (
s1
)[0] - (
s2
)[0]; \

1131 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

1133 
__ªsu…
 = (
s1
)[1] - (
s2
)[1]; \

1134 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

1136 
__ªsu…
 = (
s1
)[2] - (
s2
)[2]; \

1137 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

1138 
__ªsu…
 = (
s1
)[3] - (
s2
)[3]; \

1141 
__ªsu…
; }))

	)

1143 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

1144 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = (
s2
); \

1145 
__ªsu…
 = (
s1
)[0] - 
__s2
[0]; \

1146 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

1148 
__ªsu…
 = (
s1
)[1] - 
__s2
[1]; \

1149 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

1151 
__ªsu…
 = (
s1
)[2] - 
__s2
[2]; \

1152 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

1153 
__ªsu…
 = (
s1
)[3] - 
__s2
[3]; \

1156 
__ªsu…
; }))

	)

1158 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

1159 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = (
s1
); \

1160 
__ªsu…
 = 
__s1
[0] - (
s2
)[0]; \

1161 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

1163 
__ªsu…
 = 
__s1
[1] - (
s2
)[1]; \

1164 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

1166 
__ªsu…
 = 
__s1
[2] - (
s2
)[2]; \

1167 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

1168 
__ªsu…
 = 
__s1
[3] - (
s2
)[3]; \

1171 
__ªsu…
; }))

	)

1173 
__STRING_INLINE
 
__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
);

1175 
__STRING_INLINE
 

1176 
	$__°rcmp_gg
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

1178 
__ªs
;

1179 
__asm__
 
__vﬁ©ûe__


1195 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
)

1196 : "1" (
__s1
), "2" (
__s2
),

1197 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s1
),

1198 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s2
)

1200  
__ªs
;

1201 
	}
}

1205 
	#_HAVE_STRING_ARCH_°∫cmp
 1

	)

1206 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

1207 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`°æí
 (s1Ë< ((
size_t
Ë(
n
)) \

1208 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1209 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`°æí
 (s2Ë< ((
size_t
Ë(
n
))\

1210 ? 
	`°rcmp
 ((
s1
), (
s2
)) \

1211 : 
	`__°∫cmp_g
 ((
s1
), (
s2
), (
n
)))))

	)

1213 
__STRING_INLINE
 
__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

1214 
size_t
 
__n
);

1216 
__STRING_INLINE
 

1217 
	$__°∫cmp_g
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

1219 
__ªs
;

1220 
__asm__
 
__vﬁ©ûe__


1239 : "=q" (
__ªs
), "=&r" (
__s1
), "=&r" (
__s2
), "=&r" (
__n
)

1240 : "1" (
__s1
), "2" (
__s2
), "3" (
__n
),

1241 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s1
),

1242 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__n
]; } *)
__s2
)

1244  
__ªs
;

1245 
	}
}

1249 
	#_HAVE_STRING_ARCH_°rchr
 1

	)

1250 
	#_USE_STRING_ARCH_°rchr
 1

	)

1251 
	#°rchr
(
s
, 
c
) \

1252 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1253 ? ((
c
) == '\0' \

1254 ? (*Ë
	`__øwmemchr
 ((
s
), (
c
)) \

1255 : 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1256 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1258 
__STRING_INLINE
 *
__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1260 
__STRING_INLINE
 *

1261 
	$__°rchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1263 
__d0
;

1264 *
__ªs
;

1265 
__asm__
 
__vﬁ©ûe__


1275 : "Ù" (
__ªs
), "=&a" (
__d0
)

1276 : "0" (
__s
), "1" (
__c
),

1277 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1279  
__ªs
;

1280 
	}
}

1282 
__STRING_INLINE
 *
__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1284 
__STRING_INLINE
 *

1285 
	$__°rchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1287 
__d0
;

1288 *
__ªs
;

1289 
__asm__
 
__vﬁ©ûe__


1300 : "Ù" (
__ªs
), "=&a" (
__d0
)

1301 : "0" (
__s
), "1" (
__c
),

1302 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1304  
__ªs
;

1305 
	}
}

1309 
	#_HAVE_STRING_ARCH_°rch∫ul
 1

	)

1310 
	#__°rch∫ul
(
s
, 
c
) \

1311 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1312 ? ((
c
) == '\0' \

1313 ? (*Ë
	`__øwmemchr
 ((
s
), 
c
) \

1314 : 
	`__°rch∫ul_c
 ((
s
), ((
c
) & 0xff) << 8)) \

1315 : 
	`__°rch∫ul_g
 ((
s
), 
c
)))

	)

1317 
__STRING_INLINE
 *
__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
);

1319 
__STRING_INLINE
 *

1320 
	$__°rch∫ul_c
 (
__c⁄°
 *
__s
, 
__c
)

1322 
__d0
;

1323 *
__ªs
;

1324 
__asm__
 
__vﬁ©ûe__


1334 : "Ù" (
__ªs
), "=&a" (
__d0
)

1335 : "0" (
__s
), "1" (
__c
),

1336 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1338  
__ªs
;

1339 
	}
}

1341 
__STRING_INLINE
 *
__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
);

1343 
__STRING_INLINE
 *

1344 
	$__°rch∫ul_g
 (
__c⁄°
 *
__s
, 
__c
)

1346 
__d0
;

1347 *
__ªs
;

1348 
__asm__
 
__vﬁ©ûe__


1359 : "Ù" (
__ªs
), "=&a" (
__d0
)

1360 : "0" (
__s
), "1" (
__c
),

1361 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1363  
__ªs
;

1364 
	}
}

1365 #ifde‡
__USE_GNU


1366 
	#°rch∫ul
(
s
, 
c
Ë
	`__°rch∫ul
 ((s), (c))

	)

1370 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1372 
	#_HAVE_STRING_ARCH_ödex
 1

	)

1373 
	#ödex
(
s
, 
c
) \

1374 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1375 ? 
	`__°rchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1376 : 
	`__°rchr_g
 ((
s
), (
c
))))

	)

1381 
	#_HAVE_STRING_ARCH_°ºchr
 1

	)

1382 
	#°ºchr
(
s
, 
c
) \

1383 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1384 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1385 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1387 #ifde‡
__i686__


1388 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1390 
__STRING_INLINE
 *

1391 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1393 
__d0
, 
__d1
;

1394 *
__ªs
;

1395 
__asm__
 
__vﬁ©ûe__


1403 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1404 : "0" (1), "1" (
__s
), "2" (
__c
),

1405 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1407  
__ªs
 - 1;

1408 
	}
}

1410 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1412 
__STRING_INLINE
 *

1413 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1415 
__d0
, 
__d1
;

1416 *
__ªs
;

1417 
__asm__
 
__vﬁ©ûe__


1426 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1427 : "0" (1), "1" (
__s
), "2" (
__c
),

1428 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1430  
__ªs
 - 1;

1431 
	}
}

1433 
__STRING_INLINE
 *
__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
);

1435 
__STRING_INLINE
 *

1436 
	$__°ºchr_c
 (
__c⁄°
 *
__s
, 
__c
)

1438 
__d0
, 
__d1
;

1439 *
__ªs
;

1440 
__asm__
 
__vﬁ©ûe__


1450 : "=d" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1451 : "0" (0), "1" (
__s
), "2" (
__c
),

1452 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1454  
__ªs
;

1455 
	}
}

1457 
__STRING_INLINE
 *
__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
);

1459 
__STRING_INLINE
 *

1460 
	$__°ºchr_g
 (
__c⁄°
 *
__s
, 
__c
)

1462 
__d0
, 
__d1
;

1463 *
__ªs
;

1464 
__asm__
 
__vﬁ©ûe__


1475 : "Ù" (
__ªs
), "=&S" (
__d0
), "=&a" (
__d1
)

1476 : "0" (0), "1" (
__s
), "2" (
__c
),

1477 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1479  
__ªs
;

1480 
	}
}

1484 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1486 
	#_HAVE_STRING_ARCH_rödex
 1

	)

1487 
	#rödex
(
s
, 
c
) \

1488 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) \

1489 ? 
	`__°ºchr_c
 ((
s
), ((
c
) & 0xff) << 8) \

1490 : 
	`__°ºchr_g
 ((
s
), (
c
))))

	)

1496 
	#_HAVE_STRING_ARCH_°rc•n
 1

	)

1497 
	#°rc•n
(
s
, 
ªje˘
) \

1498 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
) &&  ((reject)[0]) == 1 \

1499 ? ((
ªje˘
)[0] == '\0' \

1500 ? 
	`°æí
 (
s
) \

1501 : ((
ªje˘
)[1] == '\0' \

1502 ? 
	`__°rc•n_c1
 ((
s
), (((
ªje˘
)[0] << 8) & 0xff00)) \

1503 : 
	`__°rc•n_cg
 ((
s
), (
ªje˘
), 
	`°æí
 (reject)))) \

1504 : 
	`__°rc•n_g
 ((
s
), (
ªje˘
))))

	)

1506 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

1508 #i‚de‡
_FORCE_INLINES


1509 
__STRING_INLINE
 
size_t


1510 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

1512 
__d0
;

1513 *
__ªs
;

1514 
__asm__
 
__vﬁ©ûe__


1523 : "Ù" (
__ªs
), "=&a" (
__d0
)

1524 : "0" (
__s
), "1" (
__ªje˘
),

1525 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1527  (
__ªs
 - 1Ë- 
__s
;

1528 
	}
}

1531 
__STRING_INLINE
 
size_t
 
__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[],

1532 
size_t
 
__ªje˘_Àn
);

1534 
__STRING_INLINE
 
size_t


1535 
	$__°rc•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ªje˘
[], 
size_t
 
__ªje˘_Àn
)

1537 
__d0
, 
__d1
, 
__d2
;

1538 
__c⁄°
 *
__ªs
;

1539 
__asm__
 
__vﬁ©ûe__


1550 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1551 : "0" (
__s
), "d" (
__ªje˘
), "g" (
__ªje˘_Àn
)

1553  (
__ªs
 - 1Ë- 
__s
;

1554 
	}
}

1556 
__STRING_INLINE
 
size_t
 
__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
);

1557 #ifde‡
__PIC__


1559 
__STRING_INLINE
 
size_t


1560 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1562 
__d0
, 
__d1
, 
__d2
;

1563 
__c⁄°
 *
__ªs
;

1564 
__asm__
 
__vﬁ©ûe__


1581 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1582 : "r" (
__ªje˘
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1584  (
__ªs
 - 1Ë- 
__s
;

1585 
	}
}

1587 
__STRING_INLINE
 
size_t


1588 
	$__°rc•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

1590 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1591 
__c⁄°
 *
__ªs
;

1592 
__asm__
 
__vﬁ©ûe__


1606 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1607 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ªje˘
), "b" (__reject)

1610  (
__ªs
 - 1Ë- 
__s
;

1611 
	}
}

1617 
	#_HAVE_STRING_ARCH_°r•n
 1

	)

1618 
	#°r•n
(
s
, 
ac˚±
) \

1619 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1620 ? ((
ac˚±
)[0] == '\0' \

1621 ? ((Ë(
s
), 0) \

1622 : ((
ac˚±
)[1] == '\0' \

1623 ? 
	`__°r•n_c1
 ((
s
), (((
ac˚±
)[0] << 8 ) & 0xff00)) \

1624 : 
	`__°r•n_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1625 : 
	`__°r•n_g
 ((
s
), (
ac˚±
))))

	)

1627 #i‚de‡
_FORCE_INLINES


1628 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1630 
__STRING_INLINE
 
size_t


1631 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1633 
__d0
;

1634 *
__ªs
;

1636 
__asm__
 
__vﬁ©ûe__


1642 : "Ù" (
__ªs
), "=&q" (
__d0
)

1643 : "0" (
__s
), "1" (
__ac˚±
),

1644 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
)

1646  (
__ªs
 - 1Ë- 
__s
;

1647 
	}
}

1650 
__STRING_INLINE
 
size_t
 
__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1651 
size_t
 
__ac˚±_Àn
);

1653 
__STRING_INLINE
 
size_t


1654 
	$__°r•n_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1656 
__d0
, 
__d1
, 
__d2
;

1657 
__c⁄°
 *
__ªs
;

1658 
__asm__
 
__vﬁ©ûe__


1669 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1670 : "0" (
__s
), "g" (
__ac˚±
), "g" (
__ac˚±_Àn
),

1673 "m" ( *(°ru˘ { 
__x
[0xfffffff]; } *)
__s
),

1674 "m" ( *(°ru˘ { 
__exãnsi⁄__
 
__x
[
__ac˚±_Àn
]; } *)
__ac˚±
)

1676  (
__ªs
 - 1Ë- 
__s
;

1677 
	}
}

1679 
__STRING_INLINE
 
size_t
 
__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1680 #ifde‡
__PIC__


1682 
__STRING_INLINE
 
size_t


1683 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1685 
__d0
, 
__d1
, 
__d2
;

1686 
__c⁄°
 *
__ªs
;

1687 
__asm__
 
__vﬁ©ûe__


1703 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1704 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (__accept)

1706  (
__ªs
 - 1Ë- 
__s
;

1707 
	}
}

1709 
__STRING_INLINE
 
size_t


1710 
	$__°r•n_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1712 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1713 
__c⁄°
 *
__ªs
;

1714 
__asm__
 
__vﬁ©ûe__


1728 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1729 : "0" (
__s
), "1" (0), "2" (0xffffffff), "3" (
__ac˚±
), "b" (__accept)

1731  (
__ªs
 - 1Ë- 
__s
;

1732 
	}
}

1737 
	#_HAVE_STRING_ARCH_°Ωbrk
 1

	)

1738 
	#°Ωbrk
(
s
, 
ac˚±
) \

1739 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
) &&  ((accept)[0]) == 1 \

1740 ? ((
ac˚±
)[0] == '\0' \

1741 ? ((Ë(
s
), (*) 0) \

1742 : ((
ac˚±
)[1] == '\0' \

1743 ? 
	`°rchr
 ((
s
), (
ac˚±
)[0]) \

1744 : 
	`__°Ωbrk_cg
 ((
s
), (
ac˚±
), 
	`°æí
 (accept)))) \

1745 : 
	`__°Ωbrk_g
 ((
s
), (
ac˚±
))))

	)

1747 
__STRING_INLINE
 *
__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[],

1748 
size_t
 
__ac˚±_Àn
);

1750 
__STRING_INLINE
 *

1751 
	$__°Ωbrk_cg
 (
__c⁄°
 *
__s
, __c⁄° 
__ac˚±
[], 
size_t
 
__ac˚±_Àn
)

1753 
__d0
, 
__d1
, 
__d2
;

1754 *
__ªs
;

1755 
__asm__
 
__vﬁ©ûe__


1770 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1771 : "0" (
__s
), "d" (
__ac˚±
), "g" (
__ac˚±_Àn
)

1773  
__ªs
;

1774 
	}
}

1776 
__STRING_INLINE
 *
__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
);

1777 #ifde‡
__PIC__


1779 
__STRING_INLINE
 *

1780 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1782 
__d0
, 
__d1
, 
__d2
;

1783 *
__ªs
;

1784 
__asm__
 
__vﬁ©ûe__


1805 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&D" (
__d2
)

1806 : "d" (
__ac˚±
), "0" (
__s
), "1" (0), "2" (0xffffffff)

1808  
__ªs
;

1809 
	}
}

1811 
__STRING_INLINE
 *

1812 
	$__°Ωbrk_g
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

1814 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1815 *
__ªs
;

1816 
__asm__
 
__vﬁ©ûe__


1835 : "=S" (
__ªs
), "=&a" (
__d0
), "=&c" (
__d1
), "=&d" (
__d2
), "=&D" (
__d3
)

1836 : "0" (
__s
), "1" (0), "2" (0xffffffff), "b" (
__ac˚±
)

1838  
__ªs
;

1839 
	}
}

1844 
	#_HAVE_STRING_ARCH_°r°r
 1

	)

1845 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1846 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
) &&  ((needle)[0]) == 1 \

1847 ? ((
√edÀ
)[0] == '\0' \

1848 ? (
hay°ack
) \

1849 : ((
√edÀ
)[1] == '\0' \

1850 ? 
	`°rchr
 ((
hay°ack
), (
√edÀ
)[0]) \

1851 : 
	`__°r°r_cg
 ((
hay°ack
), (
√edÀ
), \

1852 
	`°æí
 (
√edÀ
)))) \

1853 : 
	`__°r°r_g
 ((
hay°ack
), (
√edÀ
))))

	)

1857 
__STRING_INLINE
 *
__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1858 
size_t
 
__√edÀ_Àn
);

1860 
__STRING_INLINE
 *

1861 
	$__°r°r_cg
 (
__c⁄°
 *
__hay°ack
, __c⁄° 
__√edÀ
[],

1862 
size_t
 
__√edÀ_Àn
)

1864 
__d0
, 
__d1
, 
__d2
;

1865 *
__ªs
;

1866 
__asm__
 
__vﬁ©ûe__


1879 : "=&a" (
__ªs
), "=&S" (
__d0
), "=&D" (
__d1
), "=&c" (
__d2
)

1880 : "g" (
__√edÀ_Àn
), "1" (
__hay°ack
), "d" (
__√edÀ
)

1882  
__ªs
;

1883 
	}
}

1885 
__STRING_INLINE
 *
__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
);

1886 #ifde‡
__PIC__


1888 
__STRING_INLINE
 *

1889 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1891 
__d0
, 
__d1
, 
__d2
;

1892 *
__ªs
;

1893 
__asm__
 
__vﬁ©ûe__


1912 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
)

1913 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1914 "d" (
__√edÀ
)

1916  
__ªs
;

1917 
	}
}

1919 
__STRING_INLINE
 *

1920 
	$__°r°r_g
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

1922 
__d0
, 
__d1
, 
__d2
, 
__d3
;

1923 *
__ªs
;

1924 
__asm__
 
__vﬁ©ûe__


1941 : "=&a" (
__ªs
), "=&c" (
__d0
), "=&S" (
__d1
), "=&D" (
__d2
), "=&d" (
__d3
)

1942 : "0" (0), "1" (0xffffffff), "2" (
__hay°ack
), "3" (
__√edÀ
),

1943 "b" (
__√edÀ
)

1945  
__ªs
;

1946 
	}
}

1952 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1953 #ifde‡
__i686__


1954 
	#_HAVE_STRING_ARCH_ffs
 1

	)

1955 
	#ffs
(
w‹d
Ë(
	`__buûtö_c⁄°™t_p
 (word) \

1956 ? 
	`__buûtö_ffs
 (
w‹d
) \

1957 : ({ 
__˙t
, 
__tmp
; \

1958 
__asm__
 
__vﬁ©ûe__
 \

1961 : "=&r" (
__˙t
), "Ù" (
__tmp
) \

1962 : "rm" (
w‹d
), "1" (-1)); \

1963 
__˙t
 + 1; }))

	)

1965 #i‚de‡
ff¶


1966 
	#ff¶
(
w‹d
Ë
	`ffs
(w‹d)

	)

1971 #i‚de‡
_FORCE_INLINES


1972 #unde‡
__STRING_INLINE


	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


25 #i‚de‡
_STRUCT_TIMEVAL


26 
	#_STRUCT_TIMEVAL
 1

	)

27 
	~<bôs/ty≥s.h
>

31 
	stimevÆ


33 
__time_t
 
	mtv_£c
;

34 
__su£c⁄ds_t
 
	mtv_u£c
;

39 #i‚de‡
__√ed_timevÆ


40 #i‚de‡
_BITS_TIME_H


41 
	#_BITS_TIME_H
 1

	)

49 
	#CLOCKS_PER_SEC
 1000000l

	)

51 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
deföed
 
__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡!
__GNUC_PREREQ
 (4, 1)

315 #ifde‡
__GNUC_RH_RELEASE__


316 #w¨nög 
_FORTIFY_SOURCE
 
suµ‹ãd
 
⁄ly
 
wôh
 
GCC
 4.1 
™d
 
œãr


318 
	#__USE_FORTIFY_LEVEL
 0

	)

319 #ñi‡
_FORTIFY_SOURCE
 > 1

320 
	#__USE_FORTIFY_LEVEL
 2

	)

322 
	#__USE_FORTIFY_LEVEL
 1

	)

325 
	#__USE_FORTIFY_LEVEL
 0

	)

329 
	#__STDC_IEC_559__
 1

	)

330 
	#__STDC_IEC_559_COMPLEX__
 1

	)

333 
	#__STDC_ISO_10646__
 200009L

	)

341 #unde‡
__GNU_LIBRARY__


342 
	#__GNU_LIBRARY__
 6

	)

346 
	#__GLIBC__
 2

	)

347 
	#__GLIBC_MINOR__
 14

	)

349 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

350 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

353 #i‡
deföed
 
__GNUC__
 \

354 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

355 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

356 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

357 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

361 #i‚de‡
__ASSEMBLER__


362 #i‚de‡
_SYS_CDEFS_H


363 
	~<sys/cdefs.h
>

368 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


369 
	#__USE_LARGEFILE
 1

	)

370 
	#__USE_LARGEFILE64
 1

	)

376 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

377 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

378 && 
deföed
 
	g__exã∫_ölöe


379 
	#__USE_EXTERN_INLINES
 1

	)

387 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/linux/limits.h

1 #i‚de‡
_LINUX_LIMITS_H


2 
	#_LINUX_LIMITS_H


	)

4 
	#NR_OPEN
 1024

	)

6 
	#NGROUPS_MAX
 65536

	)

7 
	#ARG_MAX
 131072

	)

8 
	#LINK_MAX
 127

	)

9 
	#MAX_CANON
 255

	)

10 
	#MAX_INPUT
 255

	)

11 
	#NAME_MAX
 255

	)

12 
	#PATH_MAX
 4096

	)

13 
	#PIPE_BUF
 4096

	)

14 
	#XATTR_NAME_MAX
 255

	)

15 
	#XATTR_SIZE_MAX
 65536

	)

16 
	#XATTR_LIST_MAX
 65536

	)

18 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/param.h

1 #i‚de‡
_LINUX_PARAM_H


2 
	#_LINUX_PARAM_H


	)

4 
	~<asm/∑øm.h
>

	@/usr/include/ncurses_dll.h

30 #i‚de‡
NCURSES_DLL_H_ö˛


31 
	#NCURSES_DLL_H_ö˛
 1

	)

37 
	#NCURSES_PUBLIC_VAR
(
«me
Ë
_nc_
##
	)
name

38 
	#NCURSES_WRAPPED_VAR
(
ty≥
,
«me
Ëty≥ 
	`NCURSES_PUBLIC_VAR
“ame)()

	)

44 #unde‡
NCURSES_DLL


45 
	#NCURSES_STATIC


	)

47 #i‡
deföed
(
__CYGWIN__
Ë|| deföed(
__MINGW32__
)

48 #i‡
deföed
(
NCURSES_DLL
)

49 #i‡
deföed
(
NCURSES_STATIC
)

50 #unde‡
NCURSES_STATIC


53 #unde‡
NCURSES_IMPEXP


54 #unde‡
NCURSES_API


55 #unde‡
NCURSES_EXPORT


56 #unde‡
NCURSES_EXPORT_VAR


57 #i‡
deföed
(
NCURSES_DLL
)

59 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒexp‹t
)

	)

60 #ñi‡
deföed
(
NCURSES_STATIC
)

62 
	#NCURSES_IMPEXP


	)

65 
	#NCURSES_IMPEXP
 
	`__de˛•ec
(
dŒimp‹t
)

	)

67 
	#NCURSES_API
 
__cde˛


	)

68 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

69 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

73 #i‡!
deföed
(
NCURSES_IMPEXP
)

74 
	#NCURSES_IMPEXP


	)

76 #i‡!
deföed
(
NCURSES_API
)

77 
	#NCURSES_API


	)

79 #i‡!
deföed
(
NCURSES_EXPORT
)

80 
	#NCURSES_EXPORT
(
ty≥
Ë
NCURSES_IMPEXP
Åy≥ 
NCURSES_API


	)

82 #i‡!
deföed
(
NCURSES_EXPORT_VAR
)

83 
	#NCURSES_EXPORT_VAR
(
ty≥
Ë
NCURSES_IMPEXP
 
	)
type

	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__BEGIN_DECLS


32 
__exãnsi⁄__


33 
	$gnu_dev_maj‹
 (
__dev
)

34 
__THROW
 
__©åibuã_c⁄°__
;

35 
__exãnsi⁄__


36 
	$gnu_dev_mö‹
 (
__dev
)

37 
__THROW
 
__©åibuã_c⁄°__
;

38 
__exãnsi⁄__


39 
	$gnu_dev_makedev
 (
__maj‹
,

40 
__mö‹
)

41 
__THROW
 
__©åibuã_c⁄°__
;

43 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

47  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

53  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

54 
	}
}

56 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

57 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

59  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

60 | (((Ë(
__mö‹
 & ~0xff)) << 12)

61 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

62 
	}
}

64 
	g__END_DECLS


67 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

68 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

69 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/sys/ttydefaults.h

40 #i‚de‡
_SYS_TTYDEFAULTS_H_


41 
	#_SYS_TTYDEFAULTS_H_


	)

46 
	#TTYDEF_IFLAG
 (
BRKINT
 | 
ISTRIP
 | 
ICRNL
 | 
IMAXBEL
 | 
IXON
 | 
IXANY
)

	)

47 
	#TTYDEF_OFLAG
 (
OPOST
 | 
ONLCR
 | 
XTABS
)

	)

48 
	#TTYDEF_LFLAG
 (
ECHO
 | 
ICANON
 | 
ISIG
 | 
IEXTEN
 | 
ECHOE
|
ECHOKE
|
ECHOCTL
)

	)

49 
	#TTYDEF_CFLAG
 (
CREAD
 | 
CS7
 | 
PARENB
 | 
HUPCL
)

	)

50 
	#TTYDEF_SPEED
 (
B9600
)

	)

55 
	#CTRL
(
x
Ë(x&037)

	)

56 
	#CEOF
 
	`CTRL
('d')

	)

57 #ifde‡
_POSIX_VDISABLE


58 
	#CEOL
 
_POSIX_VDISABLE


	)

60 
	#CEOL
 '\0'

	)

62 
	#CERASE
 0177

	)

63 
	#CINTR
 
	`CTRL
('c')

	)

64 #ifde‡
_POSIX_VDISABLE


65 
	#CSTATUS
 
_POSIX_VDISABLE


	)

67 
	#CSTATUS
 '\0'

	)

69 
	#CKILL
 
	`CTRL
('u')

	)

70 
	#CMIN
 1

	)

71 
	#CQUIT
 034

	)

72 
	#CSUSP
 
	`CTRL
('z')

	)

73 
	#CTIME
 0

	)

74 
	#CDSUSP
 
	`CTRL
('y')

	)

75 
	#CSTART
 
	`CTRL
('q')

	)

76 
	#CSTOP
 
	`CTRL
('s')

	)

77 
	#CLNEXT
 
	`CTRL
('v')

	)

78 
	#CDISCARD
 
	`CTRL
('o')

	)

79 
	#CWERASE
 
	`CTRL
('w')

	)

80 
	#CREPRINT
 
	`CTRL
('r')

	)

81 
	#CEOT
 
CEOF


	)

83 
	#CBRK
 
CEOL


	)

84 
	#CRPRNT
 
CREPRINT


	)

85 
	#CFLUSH
 
CDISCARD


	)

93 #ifde‡
TTYDEFCHARS


94 
cc_t
 
	gâydefch¨s
[
NCCS
] = {

95 
CEOF
, 
CEOL
, CEOL, 
CERASE
, 
CWERASE
, 
CKILL
, 
CREPRINT
,

96 
_POSIX_VDISABLE
, 
CINTR
, 
CQUIT
, 
CSUSP
, 
CDSUSP
, 
CSTART
, 
CSTOP
, 
CLNEXT
,

97 
CDISCARD
, 
CMIN
, 
CTIME
, 
CSTATUS
, 
_POSIX_VDISABLE


99 #unde‡
TTYDEFCHARS


	@/usr/include/sys/ucontext.h

19 #i‚de‡
_SYS_UCONTEXT_H


20 
	#_SYS_UCONTEXT_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sig«l.h
>

27 
	~<bôs/sigc⁄ãxt.h
>

31 
	tgªg_t
;

34 
	#NGREG
 19

	)

37 
gªg_t
 
	tgªg£t_t
[
NGREG
];

39 #ifde‡
__USE_GNU


43 
	mREG_GS
 = 0,

44 
	#REG_GS
 
REG_GS


	)

45 
	mREG_FS
,

46 
	#REG_FS
 
REG_FS


	)

47 
	mREG_ES
,

48 
	#REG_ES
 
REG_ES


	)

49 
	mREG_DS
,

50 
	#REG_DS
 
REG_DS


	)

51 
	mREG_EDI
,

52 
	#REG_EDI
 
REG_EDI


	)

53 
	mREG_ESI
,

54 
	#REG_ESI
 
REG_ESI


	)

55 
	mREG_EBP
,

56 
	#REG_EBP
 
REG_EBP


	)

57 
	mREG_ESP
,

58 
	#REG_ESP
 
REG_ESP


	)

59 
	mREG_EBX
,

60 
	#REG_EBX
 
REG_EBX


	)

61 
	mREG_EDX
,

62 
	#REG_EDX
 
REG_EDX


	)

63 
	mREG_ECX
,

64 
	#REG_ECX
 
REG_ECX


	)

65 
	mREG_EAX
,

66 
	#REG_EAX
 
REG_EAX


	)

67 
	mREG_TRAPNO
,

68 
	#REG_TRAPNO
 
REG_TRAPNO


	)

69 
	mREG_ERR
,

70 
	#REG_ERR
 
REG_ERR


	)

71 
	mREG_EIP
,

72 
	#REG_EIP
 
REG_EIP


	)

73 
	mREG_CS
,

74 
	#REG_CS
 
REG_CS


	)

75 
	mREG_EFL
,

76 
	#REG_EFL
 
REG_EFL


	)

77 
	mREG_UESP
,

78 
	#REG_UESP
 
REG_UESP


	)

79 
	mREG_SS


80 
	#REG_SS
 
REG_SS


	)

85 
	s_libc_Âªg


87 
	msignifiˇnd
[4];

88 
	mexp⁄ít
;

91 
	s_libc_Â°©e


93 
	mcw
;

94 
	msw
;

95 
	mèg
;

96 
	mùoff
;

97 
	mcs£l
;

98 
	md©aoff
;

99 
	md©a£l
;

100 
_libc_Âªg
 
	m_°
[8];

101 
	m°©us
;

105 
_libc_Â°©e
 *
	tÂªg£t_t
;

110 
gªg£t_t
 
	mgªgs
;

113 
Âªg£t_t
 
	mÂªgs
;

114 
	mﬁdmask
;

115 
	m¸2
;

116 } 
	tmc⁄ãxt_t
;

119 
	suc⁄ãxt


121 
	muc_Êags
;

122 
uc⁄ãxt
 *
	muc_lök
;

123 
°ack_t
 
	muc_°ack
;

124 
mc⁄ãxt_t
 
	muc_mc⁄ãxt
;

125 
__sig£t_t
 
	muc_sigmask
;

126 
_libc_Â°©e
 
	m__Âªgs_mem
;

127 } 
	tuc⁄ãxt_t
;

	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 
__c⁄°
 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #ifde‡
__USE_UNIX98


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/unctrl.h

44 #i‚de‡
NCURSES_UNCTRL_H_ö˛


45 
	#NCURSES_UNCTRL_H_ö˛
 1

	)

47 #unde‡
NCURSES_VERSION


48 
	#NCURSES_VERSION
 "5.9"

	)

50 #ifde‡
__˝lu•lus


54 
	~<cur£s.h
>

56 #unde‡
un˘æ


57 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
un˘æ
 (
chty≥
);

60 
NCURSES_EXPORT
(
NCURSES_CONST
 *Ë
NCURSES_SP_NAME
(
un˘æ
Ë(
SCREEN
*, 
chty≥
);

63 #ifde‡
__˝lu•lus


	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/ioctls.h

1 
	~<asm-gíîic/io˘ls.h
>

	@/usr/include/asm/param.h

1 
	~<asm-gíîic/∑øm.h
>

	@/usr/include/asm/sigcontext.h

1 #i‚de‡
_ASM_X86_SIGCONTEXT_H


2 
	#_ASM_X86_SIGCONTEXT_H


	)

5 
	~<löux/ty≥s.h
>

7 
	#FP_XSTATE_MAGIC1
 0x46505853U

	)

8 
	#FP_XSTATE_MAGIC2
 0x46505845U

	)

9 
	#FP_XSTATE_MAGIC2_SIZE
 (
FP_XSTATE_MAGIC2
)

	)

23 
	s_Âx_sw_byãs
 {

24 
__u32
 
	mmagic1
;

25 
__u32
 
	mexãnded_size
;

28 
__u64
 
	mx°©e_bv
;

33 
__u32
 
	mx°©e_size
;

38 
__u32
 
	m∑ddög
[7];

41 #ifde‡
__i386__


56 
	s_Âªg
 {

57 
	msignifiˇnd
[4];

58 
	mexp⁄ít
;

61 
	s_Âxªg
 {

62 
	msignifiˇnd
[4];

63 
	mexp⁄ít
;

64 
	m∑ddög
[3];

67 
	s_xmmªg
 {

68 
	mñemít
[4];

71 
	s_Â°©e
 {

73 
	mcw
;

74 
	msw
;

75 
	mèg
;

76 
	mùoff
;

77 
	mcs£l
;

78 
	md©aoff
;

79 
	md©a£l
;

80 
_Âªg
 
	m_°
[8];

81 
	m°©us
;

82 
	mmagic
;

85 
	m_fx§_ív
[6];

86 
	mmxc§
;

87 
	mª£rved
;

88 
_Âxªg
 
	m_fx§_°
[8];

89 
_xmmªg
 
	m_xmm
[8];

90 
	m∑ddög1
[44];

93 
	m∑ddög2
[12];

94 
_Âx_sw_byãs
 
	msw_ª£rved
;

99 
	#X86_FXSR_MAGIC
 0x0000

	)

104 
	ssigc⁄ãxt
 {

105 
	mgs
, 
	m__gsh
;

106 
	mfs
, 
	m__fsh
;

107 
	mes
, 
	m__esh
;

108 
	mds
, 
	m__dsh
;

109 
	medi
;

110 
	mesi
;

111 
	mebp
;

112 
	me•
;

113 
	mebx
;

114 
	medx
;

115 
	mecx
;

116 
	móx
;

117 
	må≠no
;

118 
	mîr
;

119 
	meù
;

120 
	mcs
, 
	m__csh
;

121 
	meÊags
;

122 
	me•_©_sig«l
;

123 
	mss
, 
	m__ssh
;

124 
_Â°©e
 *
	mÂ°©e
;

125 
	mﬁdmask
;

126 
	m¸2
;

134 
	s_Â°©e
 {

135 
__u16
 
	mcwd
;

136 
__u16
 
	mswd
;

137 
__u16
 
	mtwd
;

139 
__u16
 
	mf›
;

140 
__u64
 
	mrù
;

141 
__u64
 
	mrdp
;

142 
__u32
 
	mmxc§
;

143 
__u32
 
	mmxc§_mask
;

144 
__u32
 
	m°_•a˚
[32];

145 
__u32
 
	mxmm_•a˚
[64];

146 
__u32
 
	mª£rved2
[12];

148 
__u32
 
	mª£rved3
[12];

149 
_Âx_sw_byãs
 
	msw_ª£rved
;

157 
	ssigc⁄ãxt
 {

158 
	mr8
;

159 
	mr9
;

160 
	mr10
;

161 
	mr11
;

162 
	mr12
;

163 
	mr13
;

164 
	mr14
;

165 
	mr15
;

166 
	mrdi
;

167 
	mrsi
;

168 
	mrbp
;

169 
	mrbx
;

170 
	mrdx
;

171 
	møx
;

172 
	mrcx
;

173 
	mr•
;

174 
	mrù
;

175 
	meÊags
;

176 
	mcs
;

177 
	mgs
;

178 
	mfs
;

179 
	m__∑d0
;

180 
	mîr
;

181 
	må≠no
;

182 
	mﬁdmask
;

183 
	m¸2
;

184 
_Â°©e
 *
	mÂ°©e
;

185 
	mª£rved1
[8];

190 
	s_xßve_hdr
 {

191 
__u64
 
	mx°©e_bv
;

192 
__u64
 
	mª£rved1
[2];

193 
__u64
 
	mª£rved2
[5];

196 
	s_ymmh_°©e
 {

198 
__u32
 
	mymmh_•a˚
[64];

207 
	s_x°©e
 {

208 
_Â°©e
 
	mÂ°©e
;

209 
_xßve_hdr
 
	mx°©e_hdr
;

210 
_ymmh_°©e
 
	mymmh
;

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

29 
	#__bsw≠_c⁄°™t_16
(
x
) \

30 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

32 #ifde‡
__GNUC__


33 #i‡
__GNUC__
 >= 2

34 
	#__bsw≠_16
(
x
) \

35 (
__exãnsi⁄__
 \

36 ({ 
__v
, 
__x
 = (Ë(
x
); \

37 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

38 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

40 
	`__asm__
 ("rorw $8, %w0" \

41 : "Ù" (
__v
) \

42 : "0" (
__x
) \

44 
__v
; }))

	)

47 
	#__bsw≠_16
(
x
) \

48 (
__exãnsi⁄__
 \

49 ({ 
__x
 = (Ë(
x
); \

50 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

53 
__ölöe
 

54 
	$__bsw≠_16
 (
__bsx
)

56  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

57 
	}
}

61 
	#__bsw≠_c⁄°™t_32
(
x
) \

62 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

63 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

65 #ifde‡
__GNUC__


66 #i‡
__GNUC__
 >= 2

69 #i‡!
deföed
 
__i486__
 && !deföed 
__≥¡ium__
 && !deföed 
__≥¡ium¥o__
 \

70 && !
deföed
 
	g__≥¡ium4__
 && !deföed 
	g__k8__
 && !deföed 
	g__©hl⁄__
 \

71 && !
deföed
 
	g__k6__
 && !deföed 
	g__noc⁄a__
 && !deföed 
	g__c‹e2__
 \

72 && !
deföed
 
	g__geode__
 && !deföed 
	g__amdÁm10__


73 
	#__bsw≠_32
(
x
) \

74 (
__exãnsi⁄__
 \

75 ({ 
__v
, 
__x
 = (
x
); \

76 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

77 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

79 
	`__asm__
 ("rorw $8, %w0;" \

82 : "Ù" (
__v
) \

83 : "0" (
__x
) \

85 
__v
; }))

	)

87 
	#__bsw≠_32
(
x
) \

88 (
__exãnsi⁄__
 \

89 ({ 
__v
, 
__x
 = (
x
); \

90 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

91 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

93 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

94 
__v
; }))

	)

97 
	#__bsw≠_32
(
x
) \

98 (
__exãnsi⁄__
 \

99 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

102 
__ölöe
 

103 
	$__bsw≠_32
 (
__bsx
)

105  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

106 
	}
}

110 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

112 
	#__bsw≠_c⁄°™t_64
(
x
) \

113 ((((
x
) & 0xff00000000000000ull) >> 56) \

114 | (((
x
) & 0x00ff000000000000ull) >> 40) \

115 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

116 | (((
x
) & 0x000000ff00000000ull) >> 8) \

117 | (((
x
) & 0x00000000ff000000ull) << 8) \

118 | (((
x
) & 0x0000000000ff0000ull) << 24) \

119 | (((
x
) & 0x000000000000ff00ull) << 40) \

120 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

122 
	#__bsw≠_64
(
x
) \

123 (
__exãnsi⁄__
 \

124 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

125 
__l
[2]; } 
__w
, 
__r
; \

126 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

127 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

130 
__w
.
__Œ
 = (
x
); \

131 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

132 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

134 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/posix1_lim.h

25 #i‚def 
_BITS_POSIX1_LIM_H


26 
	#_BITS_POSIX1_LIM_H
 1

	)

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 
	#_POSIX_TZNAME_MAX
 6

	)

140 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


142 
	#_POSIX_QLIMIT
 1

	)

146 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

149 
	#_POSIX_UIO_MAXIOV
 16

	)

153 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

157 
	~<bôs/loˇl_lim.h
>

160 #i‚def 
SSIZE_MAX


161 
	#SSIZE_MAX
 
LONG_MAX


	)

168 #i‚def 
NGROUPS_MAX


169 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix2_lim.h

23 #i‚def 
_BITS_POSIX2_LIM_H


24 
	#_BITS_POSIX2_LIM_H
 1

	)

28 
	#_POSIX2_BC_BASE_MAX
 99

	)

31 
	#_POSIX2_BC_DIM_MAX
 2048

	)

34 
	#_POSIX2_BC_SCALE_MAX
 99

	)

37 
	#_POSIX2_BC_STRING_MAX
 1000

	)

41 
	#_POSIX2_COLL_WEIGHTS_MAX
 2

	)

45 
	#_POSIX2_EXPR_NEST_MAX
 32

	)

48 
	#_POSIX2_LINE_MAX
 2048

	)

52 
	#_POSIX2_RE_DUP_MAX
 255

	)

56 
	#_POSIX2_CHARCLASS_NAME_MAX
 14

	)

63 #i‚def 
BC_BASE_MAX


64 
	#BC_BASE_MAX
 
_POSIX2_BC_BASE_MAX


	)

66 #i‚def 
BC_DIM_MAX


67 
	#BC_DIM_MAX
 
_POSIX2_BC_DIM_MAX


	)

69 #i‚def 
BC_SCALE_MAX


70 
	#BC_SCALE_MAX
 
_POSIX2_BC_SCALE_MAX


	)

72 #i‚def 
BC_STRING_MAX


73 
	#BC_STRING_MAX
 
_POSIX2_BC_STRING_MAX


	)

75 #i‚def 
COLL_WEIGHTS_MAX


76 
	#COLL_WEIGHTS_MAX
 255

	)

78 #i‚def 
EXPR_NEST_MAX


79 
	#EXPR_NEST_MAX
 
_POSIX2_EXPR_NEST_MAX


	)

81 #i‚def 
LINE_MAX


82 
	#LINE_MAX
 
_POSIX2_LINE_MAX


	)

84 #i‚def 
CHARCLASS_NAME_MAX


85 
	#CHARCLASS_NAME_MAX
 2048

	)

89 
	#RE_DUP_MAX
 (0x7fff)

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/termios.h

20 #i‚de‡
_TERMIOS_H


24 
	tcc_t
;

25 
	t•ìd_t
;

26 
	ttcÊag_t
;

28 
	#NCCS
 32

	)

29 
	sãrmios


31 
tcÊag_t
 
	mc_iÊag
;

32 
tcÊag_t
 
	mc_oÊag
;

33 
tcÊag_t
 
	mc_cÊag
;

34 
tcÊag_t
 
	mc_lÊag
;

35 
cc_t
 
	mc_löe
;

36 
cc_t
 
	mc_cc
[
NCCS
];

37 
•ìd_t
 
	mc_i•ìd
;

38 
•ìd_t
 
	mc_o•ìd
;

39 
	#_HAVE_STRUCT_TERMIOS_C_ISPEED
 1

	)

40 
	#_HAVE_STRUCT_TERMIOS_C_OSPEED
 1

	)

44 
	#VINTR
 0

	)

45 
	#VQUIT
 1

	)

46 
	#VERASE
 2

	)

47 
	#VKILL
 3

	)

48 
	#VEOF
 4

	)

49 
	#VTIME
 5

	)

50 
	#VMIN
 6

	)

51 
	#VSWTC
 7

	)

52 
	#VSTART
 8

	)

53 
	#VSTOP
 9

	)

54 
	#VSUSP
 10

	)

55 
	#VEOL
 11

	)

56 
	#VREPRINT
 12

	)

57 
	#VDISCARD
 13

	)

58 
	#VWERASE
 14

	)

59 
	#VLNEXT
 15

	)

60 
	#VEOL2
 16

	)

63 
	#IGNBRK
 0000001

	)

64 
	#BRKINT
 0000002

	)

65 
	#IGNPAR
 0000004

	)

66 
	#PARMRK
 0000010

	)

67 
	#INPCK
 0000020

	)

68 
	#ISTRIP
 0000040

	)

69 
	#INLCR
 0000100

	)

70 
	#IGNCR
 0000200

	)

71 
	#ICRNL
 0000400

	)

72 
	#IUCLC
 0001000

	)

73 
	#IXON
 0002000

	)

74 
	#IXANY
 0004000

	)

75 
	#IXOFF
 0010000

	)

76 
	#IMAXBEL
 0020000

	)

77 
	#IUTF8
 0040000

	)

80 
	#OPOST
 0000001

	)

81 
	#OLCUC
 0000002

	)

82 
	#ONLCR
 0000004

	)

83 
	#OCRNL
 0000010

	)

84 
	#ONOCR
 0000020

	)

85 
	#ONLRET
 0000040

	)

86 
	#OFILL
 0000100

	)

87 
	#OFDEL
 0000200

	)

88 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


89 
	#NLDLY
 0000400

	)

90 
	#NL0
 0000000

	)

91 
	#NL1
 0000400

	)

92 
	#CRDLY
 0003000

	)

93 
	#CR0
 0000000

	)

94 
	#CR1
 0001000

	)

95 
	#CR2
 0002000

	)

96 
	#CR3
 0003000

	)

97 
	#TABDLY
 0014000

	)

98 
	#TAB0
 0000000

	)

99 
	#TAB1
 0004000

	)

100 
	#TAB2
 0010000

	)

101 
	#TAB3
 0014000

	)

102 
	#BSDLY
 0020000

	)

103 
	#BS0
 0000000

	)

104 
	#BS1
 0020000

	)

105 
	#FFDLY
 0100000

	)

106 
	#FF0
 0000000

	)

107 
	#FF1
 0100000

	)

110 
	#VTDLY
 0040000

	)

111 
	#VT0
 0000000

	)

112 
	#VT1
 0040000

	)

114 #ifde‡
__USE_MISC


115 
	#XTABS
 0014000

	)

119 #ifde‡
__USE_MISC


120 
	#CBAUD
 0010017

	)

122 
	#B0
 0000000

	)

123 
	#B50
 0000001

	)

124 
	#B75
 0000002

	)

125 
	#B110
 0000003

	)

126 
	#B134
 0000004

	)

127 
	#B150
 0000005

	)

128 
	#B200
 0000006

	)

129 
	#B300
 0000007

	)

130 
	#B600
 0000010

	)

131 
	#B1200
 0000011

	)

132 
	#B1800
 0000012

	)

133 
	#B2400
 0000013

	)

134 
	#B4800
 0000014

	)

135 
	#B9600
 0000015

	)

136 
	#B19200
 0000016

	)

137 
	#B38400
 0000017

	)

138 #ifde‡
__USE_MISC


139 
	#EXTA
 
B19200


	)

140 
	#EXTB
 
B38400


	)

142 
	#CSIZE
 0000060

	)

143 
	#CS5
 0000000

	)

144 
	#CS6
 0000020

	)

145 
	#CS7
 0000040

	)

146 
	#CS8
 0000060

	)

147 
	#CSTOPB
 0000100

	)

148 
	#CREAD
 0000200

	)

149 
	#PARENB
 0000400

	)

150 
	#PARODD
 0001000

	)

151 
	#HUPCL
 0002000

	)

152 
	#CLOCAL
 0004000

	)

153 #ifde‡
__USE_MISC


154 
	#CBAUDEX
 0010000

	)

156 
	#B57600
 0010001

	)

157 
	#B115200
 0010002

	)

158 
	#B230400
 0010003

	)

159 
	#B460800
 0010004

	)

160 
	#B500000
 0010005

	)

161 
	#B576000
 0010006

	)

162 
	#B921600
 0010007

	)

163 
	#B1000000
 0010010

	)

164 
	#B1152000
 0010011

	)

165 
	#B1500000
 0010012

	)

166 
	#B2000000
 0010013

	)

167 
	#B2500000
 0010014

	)

168 
	#B3000000
 0010015

	)

169 
	#B3500000
 0010016

	)

170 
	#B4000000
 0010017

	)

171 
	#__MAX_BAUD
 
B4000000


	)

172 #ifde‡
__USE_MISC


173 
	#CIBAUD
 002003600000

	)

174 
	#CMSPAR
 010000000000

	)

175 
	#CRTSCTS
 020000000000

	)

179 
	#ISIG
 0000001

	)

180 
	#ICANON
 0000002

	)

181 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


182 
	#XCASE
 0000004

	)

184 
	#ECHO
 0000010

	)

185 
	#ECHOE
 0000020

	)

186 
	#ECHOK
 0000040

	)

187 
	#ECHONL
 0000100

	)

188 
	#NOFLSH
 0000200

	)

189 
	#TOSTOP
 0000400

	)

190 #ifde‡
__USE_MISC


191 
	#ECHOCTL
 0001000

	)

192 
	#ECHOPRT
 0002000

	)

193 
	#ECHOKE
 0004000

	)

194 
	#FLUSHO
 0010000

	)

195 
	#PENDIN
 0040000

	)

197 
	#IEXTEN
 0100000

	)

198 #ifde‡
__USE_BSD


199 
	#EXTPROC
 0200000

	)

203 
	#TCOOFF
 0

	)

204 
	#TCOON
 1

	)

205 
	#TCIOFF
 2

	)

206 
	#TCION
 3

	)

209 
	#TCIFLUSH
 0

	)

210 
	#TCOFLUSH
 1

	)

211 
	#TCIOFLUSH
 2

	)

214 
	#TCSANOW
 0

	)

215 
	#TCSADRAIN
 1

	)

216 
	#TCSAFLUSH
 2

	)

219 
	#_IOT_ãrmios
 \

220 
	`_IOT
 (
	`_IOTS
 (
cÊag_t
), 4, _IOTS (
cc_t
), 
NCCS
, _IOTS (
•ìd_t
), 2)

	)

	@/usr/include/bits/timex.h

19 #i‚def 
_BITS_TIMEX_H


20 
	#_BITS_TIMEX_H
 1

	)

24 
	stimex


26 
	mmodes
;

27 
	moff£t
;

28 
	m‰eq
;

29 
	mmaxîr‹
;

30 
	me°îr‹
;

31 
	m°©us
;

32 
	mc⁄°™t
;

33 
	m¥ecisi⁄
;

34 
	mtﬁî™˚
;

35 
timevÆ
 
	mtime
;

36 
	mtick
;

38 
	mµs‰eq
;

39 
	mjôãr
;

40 
	mshi·
;

41 
	m°abû
;

42 
	mjô˙t
;

43 
	mˇl˙t
;

44 
	mîr˙t
;

45 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647»- 1l)

	)

24 
	#__WCHAR_MAX
 (2147483647l)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/bits/wordsize.h

19 
	#__WORDSIZE
 32

	)

	@/usr/include/bits/xopen_lim.h

30 #i‚de‡
_XOPEN_LIM_H


31 
	#_XOPEN_LIM_H
 1

	)

33 
	#__√ed_IOV_MAX


	)

34 
	~<bôs/°dio_lim.h
>

66 
	#_XOPEN_IOV_MAX
 
_POSIX_UIO_MAXIOV


	)

71 
	#NL_ARGMAX
 
_POSIX_ARG_MAX


	)

74 
	#NL_LANGMAX
 
_POSIX2_LINE_MAX


	)

77 
	#NL_MSGMAX
 
INT_MAX


	)

81 
	#NL_NMAX
 
INT_MAX


	)

84 
	#NL_SETMAX
 
INT_MAX


	)

87 
	#NL_TEXTMAX
 
INT_MAX


	)

90 
	#NZERO
 20

	)

94 #ifde‡
INT_MAX


95 #i‡
INT_MAX
 == 32767

96 
	#WORD_BIT
 16

	)

98 #i‡
INT_MAX
 == 2147483647

99 
	#WORD_BIT
 32

	)

102 
	#WORD_BIT
 64

	)

105 #ñi‡
deföed
 
__INT_MAX__


106 #i‡
__INT_MAX__
 == 32767

107 
	#WORD_BIT
 16

	)

109 #i‡
__INT_MAX__
 == 2147483647

110 
	#WORD_BIT
 32

	)

113 
	#WORD_BIT
 64

	)

117 
	#WORD_BIT
 32

	)

121 #ifde‡
LONG_MAX


122 #i‡
LONG_MAX
 == 2147483647

123 
	#LONG_BIT
 32

	)

126 
	#LONG_BIT
 64

	)

128 #ñi‡
deföed
 
__LONG_MAX__


129 #i‡
__LONG_MAX__
 == 2147483647

130 
	#LONG_BIT
 32

	)

133 
	#LONG_BIT
 64

	)

136 
	~<bôs/w‹dsize.h
>

137 #i‡
__WORDSIZE
 == 64

138 
	#LONG_BIT
 64

	)

140 
	#LONG_BIT
 32

	)

	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


46 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

47 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

48 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

50 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

51 
	#__THROW
 
	`throw
 ()

	)

52 
	#__NTH
(
f˘
Ëf˘ 
	`throw
 ()

	)

54 
	#__THROW


	)

55 
	#__NTH
(
f˘
Ë
	)
fct

61 
	#__ölöe


	)

63 
	#__THROW


	)

64 
	#__NTH
(
f˘
Ë
	)
fct

66 
	#__c⁄°
 c⁄°

	)

67 
	#__sig√d
 sig√d

	)

68 
	#__vﬁ©ûe
 vﬁ©ûe

	)

74 
	#__P
(
¨gs
Ë
	)
args

75 
	#__PMT
(
¨gs
Ë
	)
args

80 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

81 
	#__STRING
(
x
Ë#x

	)

84 
	#__±r_t
 *

	)

85 
	#__l⁄g_doubÀ_t
 

	)

89 #ifdef 
__˝lu•lus


90 
	#__BEGIN_DECLS
 "C" {

	)

91 
	#__END_DECLS
 }

	)

93 
	#__BEGIN_DECLS


	)

94 
	#__END_DECLS


	)

103 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


104 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

105 
	#__END_NAMESPACE_STD
 }

	)

106 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

107 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

108 
	#__END_NAMESPACE_C99
 }

	)

109 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

114 
	#__BEGIN_NAMESPACE_STD


	)

115 
	#__END_NAMESPACE_STD


	)

116 
	#__USING_NAMESPACE_STD
(
«me
)

	)

117 
	#__BEGIN_NAMESPACE_C99


	)

118 
	#__END_NAMESPACE_C99


	)

119 
	#__USING_NAMESPACE_C99
(
«me
)

	)

124 #i‚de‡
__BOUNDED_POINTERS__


125 
	#__bounded


	)

126 
	#__unbounded


	)

127 
	#__±rvÆue


	)

132 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

133 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

135 #i‡
__GNUC_PREREQ
 (4,3) \

136 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

137 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

138 && 
__GNUC_RH_RELEASE__
 >= 31)

139 
	#__w¨nde˛
(
«me
, 
msg
) \

140 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

141 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

142 
	#__îr‹de˛
(
«me
, 
msg
) \

143 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

145 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

146 
	#__w¨«âr
(
msg
)

	)

147 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

151 #i‡
__GNUC_PREREQ
 (2,97)

153 
	#__Êex¨r
 []

	)

155 #ifde‡
__GNUC__


156 
	#__Êex¨r
 [0]

	)

158 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

159 
	#__Êex¨r
 []

	)

162 
	#__Êex¨r
 [1]

	)

178 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

180 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

181 #ifde‡
__˝lu•lus


182 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

183 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

185 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

186 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

188 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

189 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

202 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

203 
	#__©åibuã__
(
xyz
Ë

	)

209 #i‡
__GNUC_PREREQ
 (2,96)

210 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

212 
	#__©åibuã_mÆloc__


	)

218 #i‡
__GNUC_PREREQ
 (2,96)

219 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

221 
	#__©åibuã_puª__


	)

225 #i‡
__GNUC_PREREQ
 (2,5)

226 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

228 
	#__©åibuã_c⁄°__


	)

234 #i‡
__GNUC_PREREQ
 (3,1)

235 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

236 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

238 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

239 
	#__©åibuã_noölöe__


	)

243 #i‡
__GNUC_PREREQ
 (3,2)

244 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

246 
	#__©åibuã_dïªˇãd__


	)

255 #i‡
__GNUC_PREREQ
 (2,8)

256 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

258 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

265 #i‡
__GNUC_PREREQ
 (2,97)

266 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

267 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

269 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

274 #i‡
__GNUC_PREREQ
 (3,3)

275 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

277 
	#__n⁄nuŒ
(
∑øms
)

	)

282 #i‡
__GNUC_PREREQ
 (3,4)

283 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

284 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

285 #i‡
__USE_FORTIFY_LEVEL
 > 0

286 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

289 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

291 #i‚de‡
__wur


292 
	#__wur


	)

296 #i‡
__GNUC_PREREQ
 (3,2)

297 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

299 
	#__Æways_ölöe
 
__ölöe


	)

304 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

305 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

306 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

307 && 
__GNUC_RH_RELEASE__
 >= 31)

308 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


309 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

310 #i‡
__GNUC_PREREQ
 (4,3) \

311 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

312 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

313 && 
__GNUC_RH_RELEASE__
 >= 31)

314 
	#__exã∫_Æways_ölöe
 \

315 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

317 
	#__exã∫_Æways_ölöe
 \

318 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

321 
	#__exã∫_ölöe
 
__ölöe


	)

322 #i‡
__GNUC_PREREQ
 (4,3)

323 
	#__exã∫_Æways_ölöe
 \

324 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

326 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

333 #i‡
__GNUC_PREREQ
 (4,3) \

334 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

335 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

336 && 
__GNUC_RH_RELEASE__
 >= 31)

337 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

338 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

345 #i‡!
__GNUC_PREREQ
 (2,8)

346 
	#__exãnsi⁄__


	)

350 #i‡!
__GNUC_PREREQ
 (2,92)

351 
	#__ª°ri˘


	)

357 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


358 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

360 #ifde‡
__GNUC__


361 
	#__ª°ri˘_¨r


	)

363 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

364 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

367 
	#__ª°ri˘_¨r


	)

372 
	~<bôs/w‹dsize.h
>

374 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


375 
	#__LDBL_COMPAT
 1

	)

376 #ifde‡
__REDIRECT


377 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

378 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

379 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

380 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

381 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

382 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

383 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

384 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

385 
	#__LDBL_REDIR_DECL
(
«me
) \

386 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

387 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

388 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

389 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

390 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

393 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


394 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

395 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

396 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

397 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

398 
	#__LDBL_REDIR_DECL
(
«me
)

	)

399 #ifde‡
__REDIRECT


400 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

401 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

402 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/ioctls.h

1 #i‚de‡
__ASM_GENERIC_IOCTLS_H


2 
	#__ASM_GENERIC_IOCTLS_H


	)

4 
	~<löux/io˘l.h
>

19 
	#TCGETS
 0x5401

	)

20 
	#TCSETS
 0x5402

	)

21 
	#TCSETSW
 0x5403

	)

22 
	#TCSETSF
 0x5404

	)

23 
	#TCGETA
 0x5405

	)

24 
	#TCSETA
 0x5406

	)

25 
	#TCSETAW
 0x5407

	)

26 
	#TCSETAF
 0x5408

	)

27 
	#TCSBRK
 0x5409

	)

28 
	#TCXONC
 0x540A

	)

29 
	#TCFLSH
 0x540B

	)

30 
	#TIOCEXCL
 0x540C

	)

31 
	#TIOCNXCL
 0x540D

	)

32 
	#TIOCSCTTY
 0x540E

	)

33 
	#TIOCGPGRP
 0x540F

	)

34 
	#TIOCSPGRP
 0x5410

	)

35 
	#TIOCOUTQ
 0x5411

	)

36 
	#TIOCSTI
 0x5412

	)

37 
	#TIOCGWINSZ
 0x5413

	)

38 
	#TIOCSWINSZ
 0x5414

	)

39 
	#TIOCMGET
 0x5415

	)

40 
	#TIOCMBIS
 0x5416

	)

41 
	#TIOCMBIC
 0x5417

	)

42 
	#TIOCMSET
 0x5418

	)

43 
	#TIOCGSOFTCAR
 0x5419

	)

44 
	#TIOCSSOFTCAR
 0x541A

	)

45 
	#FIONREAD
 0x541B

	)

46 
	#TIOCINQ
 
FIONREAD


	)

47 
	#TIOCLINUX
 0x541C

	)

48 
	#TIOCCONS
 0x541D

	)

49 
	#TIOCGSERIAL
 0x541E

	)

50 
	#TIOCSSERIAL
 0x541F

	)

51 
	#TIOCPKT
 0x5420

	)

52 
	#FIONBIO
 0x5421

	)

53 
	#TIOCNOTTY
 0x5422

	)

54 
	#TIOCSETD
 0x5423

	)

55 
	#TIOCGETD
 0x5424

	)

56 
	#TCSBRKP
 0x5425

	)

57 
	#TIOCSBRK
 0x5427

	)

58 
	#TIOCCBRK
 0x5428

	)

59 
	#TIOCGSID
 0x5429

	)

60 
	#TCGETS2
 
	`_IOR
('T', 0x2A, 
ãrmios2
)

	)

61 
	#TCSETS2
 
	`_IOW
('T', 0x2B, 
ãrmios2
)

	)

62 
	#TCSETSW2
 
	`_IOW
('T', 0x2C, 
ãrmios2
)

	)

63 
	#TCSETSF2
 
	`_IOW
('T', 0x2D, 
ãrmios2
)

	)

64 
	#TIOCGRS485
 0x542E

	)

65 #i‚de‡
TIOCSRS485


66 
	#TIOCSRS485
 0x542F

	)

68 
	#TIOCGPTN
 
	`_IOR
('T', 0x30, Ë

	)

69 
	#TIOCSPTLCK
 
	`_IOW
('T', 0x31, Ë

	)

70 
	#TIOCGDEV
 
	`_IOR
('T', 0x32, Ë

	)

71 
	#TCGETX
 0x5432

	)

72 
	#TCSETX
 0x5433

	)

73 
	#TCSETXF
 0x5434

	)

74 
	#TCSETXW
 0x5435

	)

75 
	#TIOCSIG
 
	`_IOW
('T', 0x36, Ë

	)

76 
	#TIOCVHANGUP
 0x5437

	)

78 
	#FIONCLEX
 0x5450

	)

79 
	#FIOCLEX
 0x5451

	)

80 
	#FIOASYNC
 0x5452

	)

81 
	#TIOCSERCONFIG
 0x5453

	)

82 
	#TIOCSERGWILD
 0x5454

	)

83 
	#TIOCSERSWILD
 0x5455

	)

84 
	#TIOCGLCKTRMIOS
 0x5456

	)

85 
	#TIOCSLCKTRMIOS
 0x5457

	)

86 
	#TIOCSERGSTRUCT
 0x5458

	)

87 
	#TIOCSERGETLSR
 0x5459

	)

88 
	#TIOCSERGETMULTI
 0x545A

	)

89 
	#TIOCSERSETMULTI
 0x545B

	)

91 
	#TIOCMIWAIT
 0x545C

	)

92 
	#TIOCGICOUNT
 0x545D

	)

98 #i‚de‡
FIOQSIZE


99 
	#FIOQSIZE
 0x5460

	)

103 
	#TIOCPKT_DATA
 0

	)

104 
	#TIOCPKT_FLUSHREAD
 1

	)

105 
	#TIOCPKT_FLUSHWRITE
 2

	)

106 
	#TIOCPKT_STOP
 4

	)

107 
	#TIOCPKT_START
 8

	)

108 
	#TIOCPKT_NOSTOP
 16

	)

109 
	#TIOCPKT_DOSTOP
 32

	)

110 
	#TIOCPKT_IOCTL
 64

	)

112 
	#TIOCSER_TEMT
 0x01

	)

	@/usr/include/asm-generic/param.h

1 #i‚de‡
__ASM_GENERIC_PARAM_H


2 
	#__ASM_GENERIC_PARAM_H


	)

4 #i‚de‡
HZ


5 
	#HZ
 100

	)

8 #i‚de‡
EXEC_PAGESIZE


9 
	#EXEC_PAGESIZE
 4096

	)

12 #i‚de‡
NOGROUP


13 
	#NOGROUP
 (-1)

	)

16 
	#MAXHOSTNAMELEN
 64

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/bits/local_lim.h

25 #i‚de‡
NR_OPEN


26 
	#__undef_NR_OPEN


	)

28 #i‚de‡
LINK_MAX


29 
	#__undef_LINK_MAX


	)

31 #i‚de‡
OPEN_MAX


32 
	#__undef_OPEN_MAX


	)

34 #i‚de‡
ARG_MAX


35 
	#__undef_ARG_MAX


	)

39 
	~<löux/limôs.h
>

42 #ifde‡
__undef_NR_OPEN


43 #unde‡
NR_OPEN


44 #unde‡
__undef_NR_OPEN


47 #ifde‡
__undef_LINK_MAX


48 #unde‡
LINK_MAX


49 #unde‡
__undef_LINK_MAX


52 #ifde‡
__undef_OPEN_MAX


53 #unde‡
OPEN_MAX


54 #unde‡
__undef_OPEN_MAX


57 #ifde‡
__undef_ARG_MAX


58 #unde‡
ARG_MAX


59 #unde‡
__undef_ARG_MAX


63 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

65 
	#PTHREAD_KEYS_MAX
 1024

	)

68 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

70 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

73 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

75 #unde‡
PTHREAD_THREADS_MAX


79 
	#AIO_PRIO_DELTA_MAX
 20

	)

82 
	#PTHREAD_STACK_MIN
 16384

	)

85 
	#DELAYTIMER_MAX
 2147483647

	)

88 
	#TTY_NAME_MAX
 32

	)

91 
	#LOGIN_NAME_MAX
 256

	)

94 
	#HOST_NAME_MAX
 64

	)

97 
	#MQ_PRIO_MAX
 32768

	)

100 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

	@/usr/include/asm/ioctl.h

1 
	~<asm-gíîic/io˘l.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~"posix_ty≥s_32.h
"

4 
	~"posix_ty≥s_64.h
"

	@/usr/include/bits/setjmp.h

21 #i‚de‡
_BITS_SETJMP_H


22 
	#_BITS_SETJMP_H
 1

	)

24 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


28 #i‚def 
_ASM


29 
	t__jmp_buf
[6];

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/asm-generic/ioctl.h

1 #i‚de‡
_ASM_GENERIC_IOCTL_H


2 
	#_ASM_GENERIC_IOCTL_H


	)

22 
	#_IOC_NRBITS
 8

	)

23 
	#_IOC_TYPEBITS
 8

	)

30 #i‚de‡
_IOC_SIZEBITS


31 
	#_IOC_SIZEBITS
 14

	)

34 #i‚de‡
_IOC_DIRBITS


35 
	#_IOC_DIRBITS
 2

	)

38 
	#_IOC_NRMASK
 ((1 << 
_IOC_NRBITS
)-1)

	)

39 
	#_IOC_TYPEMASK
 ((1 << 
_IOC_TYPEBITS
)-1)

	)

40 
	#_IOC_SIZEMASK
 ((1 << 
_IOC_SIZEBITS
)-1)

	)

41 
	#_IOC_DIRMASK
 ((1 << 
_IOC_DIRBITS
)-1)

	)

43 
	#_IOC_NRSHIFT
 0

	)

44 
	#_IOC_TYPESHIFT
 (
_IOC_NRSHIFT
+
_IOC_NRBITS
)

	)

45 
	#_IOC_SIZESHIFT
 (
_IOC_TYPESHIFT
+
_IOC_TYPEBITS
)

	)

46 
	#_IOC_DIRSHIFT
 (
_IOC_SIZESHIFT
+
_IOC_SIZEBITS
)

	)

53 #i‚de‡
_IOC_NONE


54 
	#_IOC_NONE
 0U

	)

57 #i‚de‡
_IOC_WRITE


58 
	#_IOC_WRITE
 1U

	)

61 #i‚de‡
_IOC_READ


62 
	#_IOC_READ
 2U

	)

65 
	#_IOC
(
dú
,
ty≥
,
ƒ
,
size
) \

66 (((
dú
Ë<< 
_IOC_DIRSHIFT
) | \

67 ((
ty≥
Ë<< 
_IOC_TYPESHIFT
) | \

68 ((
ƒ
Ë<< 
_IOC_NRSHIFT
) | \

69 ((
size
Ë<< 
_IOC_SIZESHIFT
))

	)

71 
	#_IOC_TYPECHECK
(
t
Ë(—))

	)

74 
	#_IO
(
ty≥
,
ƒ
Ë
	`_IOC
(
_IOC_NONE
,—y≥),“r),0)

	)

75 
	#_IOR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

76 
	#_IOW
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

77 
	#_IOWR
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(
	`_IOC_TYPECHECK
(size)))

	)

78 
	#_IOR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
,—y≥),“r),(size))

	)

79 
	#_IOW_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_WRITE
,—y≥),“r),(size))

	)

80 
	#_IOWR_BAD
(
ty≥
,
ƒ
,
size
Ë
	`_IOC
(
_IOC_READ
|
_IOC_WRITE
,—y≥),“r),(size))

	)

83 
	#_IOC_DIR
(
ƒ
Ë((“rË>> 
_IOC_DIRSHIFT
Ë& 
_IOC_DIRMASK
)

	)

84 
	#_IOC_TYPE
(
ƒ
Ë((“rË>> 
_IOC_TYPESHIFT
Ë& 
_IOC_TYPEMASK
)

	)

85 
	#_IOC_NR
(
ƒ
Ë((“rË>> 
_IOC_NRSHIFT
Ë& 
_IOC_NRMASK
)

	)

86 
	#_IOC_SIZE
(
ƒ
Ë((“rË>> 
_IOC_SIZESHIFT
Ë& 
_IOC_SIZEMASK
)

	)

90 
	#IOC_IN
 (
_IOC_WRITE
 << 
_IOC_DIRSHIFT
)

	)

91 
	#IOC_OUT
 (
_IOC_READ
 << 
_IOC_DIRSHIFT
)

	)

92 
	#IOC_INOUT
 ((
_IOC_WRITE
|
_IOC_READ
Ë<< 
_IOC_DIRSHIFT
)

	)

93 
	#IOCSIZE_MASK
 (
_IOC_SIZEMASK
 << 
_IOC_SIZESHIFT
)

	)

94 
	#IOCSIZE_SHIFT
 (
_IOC_SIZESHIFT
)

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_GNU


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

97 
__END_DECLS


101 #i‡!
deföed
 
__deföed_sched∑øm
 \

102 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

103 
	#__deföed_sched∑øm
 1

	)

105 
	s__sched_∑øm


107 
__sched_¥i‹ôy
;

109 #unde‡
__√ed_sched∑øm


113 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


114 
	#__˝u_£t_t_deföed


	)

116 
	#__CPU_SETSIZE
 1024

	)

117 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

120 
	t__˝u_mask
;

123 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

124 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

129 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

130 } 
	t˝u_£t_t
;

133 #i‡
	`__GNUC_PREREQ
 (2, 91)

134 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

137 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

139 
size_t
 
__i
; \

140 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

141 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

142 
__i
 = 0; __ò< 
__imax
; ++__i) \

143 
__bôs
[
__i
] = 0; \

144 
	}
} 0)

	)

146 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 |
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 &~
	`__CPUMASK
 (
__˝u
)) \

159 : 0; }))

	)

160 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

161 (
__exãnsi⁄__
 \

162 ({ 
size_t
 
__˝u
 = (
˝u
); \

163 
__˝u
 < 8 * (
£tsize
) \

164 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

165 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

166 : 0; }))

	)

168 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

169 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

171 #i‡
__GNUC_PREREQ
 (2, 91)

172 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

173 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

175 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

176 (
__exãnsi⁄__
 \

177 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

178 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

179 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

180 
size_t
 
__i
; \

181 
__i
 = 0; __ò< 
__imax
; ++__i) \

182 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

184 
__i
 =
__imax
; }))

	)

187 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

188 (
__exãnsi⁄__
 \

189 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

190 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

191 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

192 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

193 
size_t
 
__i
; \

194 
__i
 = 0; __ò< 
__imax
; ++__i) \

195 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

196 
__de°
; }))

	)

198 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

199 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

200 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

201 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

203 
__BEGIN_DECLS


205 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

206 
__THROW
;

207 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

208 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

210 
__END_DECLS


	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
168
3720
config.h
constant.h
create.c
creature.c
death.c
desc.c
dungeon.c
eat.c
externs.h
files.c
generate.c
help.c
io.c
magic.c
main.c
misc1.c
misc2.c
misc3.c
misc4.c
monsters.c
moria1.c
moria2.c
moria3.c
moria4.c
player.c
potions.c
prayer.c
recall.c
rnd.c
save.c
scrolls.c
sets.c
signals.c
spells.c
staffs.c
store1.c
store2.c
tables.c
treasure.c
types.h
unix.c
variable.c
wands.c
wizard.c
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/curses.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/memory.h
/usr/include/pwd.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/sys/errno.h
/usr/include/sys/file.h
/usr/include/sys/ioctl.h
/usr/include/sys/param.h
/usr/include/sys/resource.h
/usr/include/sys/select.h
/usr/include/sys/stat.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/sys/wait.h
/usr/include/termio.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/ioctl-types.h
/usr/include/bits/ioctls.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/resource.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigaction.h
/usr/include/bits/sigcontext.h
/usr/include/bits/siginfo.h
/usr/include/bits/signum.h
/usr/include/bits/sigset.h
/usr/include/bits/sigstack.h
/usr/include/bits/sigthread.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/limits.h
/usr/include/linux/limits.h
/usr/include/linux/param.h
/usr/include/ncurses_dll.h
/usr/include/sys/sysmacros.h
/usr/include/sys/ttydefaults.h
/usr/include/sys/ucontext.h
/usr/include/termios.h
/usr/include/unctrl.h
/usr/include/wchar.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/asm/ioctls.h
/usr/include/asm/param.h
/usr/include/asm/sigcontext.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix2_lim.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/termios.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/bits/wordsize.h
/usr/include/bits/xopen_lim.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/sys/cdefs.h
/usr/include/wctype.h
/usr/include/asm-generic/ioctls.h
/usr/include/asm-generic/param.h
/usr/include/asm/errno.h
/usr/include/bits/libc-lock.h
/usr/include/bits/local_lim.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/linux/types.h
/usr/include/asm-generic/errno.h
/usr/include/asm/types.h
/usr/include/linux/ioctl.h
/usr/include/linux/posix_types.h
/usr/include/pthread.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/types.h
/usr/include/asm/ioctl.h
/usr/include/asm/posix_types.h
/usr/include/bits/setjmp.h
/usr/include/linux/stddef.h
/usr/include/sched.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm-generic/ioctl.h
/usr/include/bits/sched.h
/usr/include/asm/bitsperlong.h
/usr/include/asm-generic/bitsperlong.h
